Area,Delay,Score,Current Run,Episode,Verilog
N/A,N/A,-1,2.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,3.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);

	wire [99:0] mux_out;
	
	mux2to1 mux0 (
		.x(a[0]),
		.y(b[0]),
		.sel(sel),
		.out(mux_out[0])
	);
	
	mux2to1 mux1 (
		.x(a[1]),
		.y(b[1]),
		.sel(sel),
		.out(mux_out[1])
	);
	
	mux2to1 mux2 (
		.x(a[2]),
		.y(b[2]),
		.sel(sel),
		.out(mux_out[2])
	);
	
	mux2to1 mux3 (
		.x(a[3]),
		.y(b[3]),
		.sel(sel),
		.out(mux_out[3])
	);
	
	mux2to1 mux4 (
		.x(a[4]),
		.y(b[4]),
		.sel(sel),
		.out(mux_out[4])
	);
	
	mux2to1 mux5 (
		.x(a[5]),
		.y(b[5]),
		.sel(sel),
		.out(mux_out[5])
	);
	
	mux2to1 mux6 (
		.x(a[6]),
		.y(b[6]),
		.sel(sel),
		.out(mux_out[6])
	);
	
	mux2to1 mux7 (
		.x(a[7]),
		.y(b[7]),
		.sel(sel),
		.out(mux_out[7])
	);
	
	mux2to1 mux8 (
		.x(a[8]),
		.y(b[8]),
		.sel(sel),
		.out(mux_out[8])
	);
	
	mux2to1 mux9 (
		.x(a[9]),
		.y(b[9]),
		.sel(sel),
		.out(mux_out[9])
	);
	
	mux2to1 mux10 (
		.x(a[10]),
		.y(b[10]),
		.sel(sel),
		.out(mux_out[10])
	);
	
	mux2to1 mux11 (
		.x(a[11]),
		.y(b[11]),
		.sel(sel),
		.out(mux_out[11])
	);
	
	mux2to1 mux12 (
		.x(a[12]),
		.y(b[12]),
		.sel(sel),
		.out(mux_out[12])
	);
	
	mux2to1 mux13 (
		.x(a[13]),
		.y(b[13]),
		.sel(sel),
		.out(mux_out[13])
	);
	
	mux2to1 mux14 (
		.x(a[14]),
		.y(b[14]),
		.sel(sel),
		.out(mux_out[14])
	);
	
	mux2to1 mux15 (
		.x(a[15]),
		.y(b[15]),
		.sel(sel),
		.out(mux_out[15])
	);
	
	mux2to1 mux16 (
		.x(a[16]),
		.y(b[16]),
		.sel(sel),
		.out(mux_out[16])
	);
	
	mux2to1 mux17 (
		.x(a[17]),
		.y(b[17]),
		.sel(sel),
		.out(mux_out[17])
	);
	
	mux2to1 mux18 (
		.x(a[18]),
		.y(b[18]),
		.sel(sel),
		.out(mux_out[18])
	);
	
	mux2to1 mux19 (
		.x(a[19]),
		.y(b[19]),
		.sel(sel),
		.out(mux_out[19])
	);
	
	mux2to1 mux20 (
		.x(a[20]),
		.y(b[20]),
		.sel(sel),
		.out(mux_out[20])
	);
	
	mux2to1 mux21 (
		.x(a[21]),
		.y(b[21]),
		.sel(sel),
		.out(mux_out[21])
	);
	
	mux2to1 mux22 (
		.x(a[22]),
		.y(b[22]),
		.sel(sel),
		.out(mux_out[22])
	);
	
	mux2to1 mux23 (
		.x(a[23]),
		.y(b[23]),
		.sel(sel),
		.out(mux_out[23])
	);
	
	mux2to1 mux24 (
		.x(a[24]),
		.y(b[24]),
		.sel(sel),
		.out(mux_out[24])
	);
	
	mux2to1 mux25 (
		.x(a[25]),
		.y(b[25]),
		.sel(sel),
		.out(mux_out[25])
	);
	
	mux2to1 mux26 (
		.x(a[26]),
		.y(b[26]),
		.sel(sel),
		.out(mux_out[26])
	);
	
	mux2to1 mux27 (
		.x(a[27]),
		.y(b[27]),
		.sel(sel),
		.out(mux_out[27])
	);
	
	mux2to1 mux28 (
		.x(a[28]),
		.y(b[28]),
		.sel(sel),
		.out(mux_out[28])
	);
	
	mux2to1 mux29 (
		.x(a[29]),
		.y(b[29]),
		.sel(sel),
		.out(mux_out[29])
	);
	
	mux2to1 mux30 (
		.x(a[30]),
		.y(b[30]),
		.sel(sel),
		.out(mux_out[30])
	);
	
	mux2to1 mux31 (
		.x(a[31]),
		.y(b[31]),
		.sel(sel),
		.out(mux_out[31])
	);

endmodule"
N/A,N/A,-1,4.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);				
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,5.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,6.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
); 
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,7.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);

wire [99:0] mux_out;

mux2 mux0 (
	.a(a),
	.b(b),
	.sel(sel),
	.out(mux_out)
);

mux2 mux1 (
	.a(mux_out),
	.b(b),
	.sel(sel),
	.out(out)
);

endmodule"
N/A,N/A,-1,8.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);	
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,9.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);		
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,10.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);			
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,11.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);     
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,12.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);    
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,13.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,14.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);

	wire [99:0] mux_out;
	
	mux2to1 mux0 (
		.x(a[0]),
		.y(b[0]),
		.sel(sel),
		.out(mux_out[0])
	);
	
	mux2to1 mux1 (
		.x(a[1]),
		.y(b[1]),
		.sel(sel),
		.out(mux_out[1])
	);
	
	mux2to1 mux2 (
		.x(a[2]),
		.y(b[2]),
		.sel(sel),
		.out(mux_out[2])
	);
	
	mux2to1 mux3 (
		.x(a[3]),
		.y(b[3]),
		.sel(sel),
		.out(mux_out[3])
	);
	
	mux2to1 mux4 (
		.x(a[4]),
		.y(b[4]),
		.sel(sel),
		.out(mux_out[4])
	);
	
	mux2to1 mux5 (
		.x(a[5]),
		.y(b[5]),
		.sel(sel),
		.out(mux_out[5])
	);
	
	mux2to1 mux6 (
		.x(a[6]),
		.y(b[6]),
		.sel(sel),
		.out(mux_out[6])
	);
	
	mux2to1 mux7 (
		.x(a[7]),
		.y(b[7]),
		.sel(sel),
		.out(mux_out[7])
	);
	
	mux2to1 mux8 (
		.x(a[8]),
		.y(b[8]),
		.sel(sel),
		.out(mux_out[8])
	);
	
	mux2to1 mux9 (
		.x(a[9]),
		.y(b[9]),
		.sel(sel),
		.out(mux_out[9])
	);
	
	mux2to1 mux10 (
		.x(a[10]),
		.y(b[10]),
		.sel(sel),
		.out(mux_out[10])
	);
	
	mux2to1 mux11 (
		.x(a[11]),
		.y(b[11]),
		.sel(sel),
		.out(mux_out[11])
	);
	
	mux2to1 mux12 (
		.x(a[12]),
		.y(b[12]),
		.sel(sel),
		.out(mux_out[12])
	);
	
	mux2to1 mux13 (
		.x(a[13]),
		.y(b[13]),
		.sel(sel),
		.out(mux_out[13])
	);
	
	mux2to1 mux14 (
		.x(a[14]),
		.y(b[14]),
		.sel(sel),
		.out(mux_out[14])
	);
	
	mux2to1 mux15 (
		.x(a[15]),
		.y(b[15]),
		.sel(sel),
		.out(mux_out[15])
	);
	
	mux2to1 mux16 (
		.x(a[16]),
		.y(b[16]),
		.sel(sel),
		.out(mux_out[16])
	);
	
	mux2to1 mux17 (
		.x(a[17]),
		.y(b[17]),
		.sel(sel),
		.out(mux_out[17])
	);
	
	mux2to1 mux18 (
		.x(a[18]),
		.y(b[18]),
		.sel(sel),
		.out(mux_out[18])
	);
	
	mux2to1 mux19 (
		.x(a[19]),
		.y(b[19]),
		.sel(sel),
		.out(mux_out[19])
	);
	
	mux2to1 mux20 (
		.x(a[20]),
		.y(b[20]),
		.sel(sel),
		.out(mux_out[20])
	);
	
	mux2to1 mux21 (
		.x(a[21]),
		.y(b[21]),
		.sel(sel),
		.out(mux_out[21])
	);
	
	mux2to1 mux22 (
		.x(a[22]),
		.y(b[22]),
		.sel(sel),
		.out(mux_out[22])
	);
	
	mux2to1 mux23 (
		.x(a[23]),
		.y(b[23]),
		.sel(sel),
		.out(mux_out[23])
	);
	
	mux2to1 mux24 (
		.x(a[24]),
		.y(b[24]),
		.sel(sel),
		.out(mux_out[24])
	);
	
	mux2to1 mux25 (
		.x(a[25]),
		.y(b[25]),
		.sel(sel),
		.out(mux_out[25])
	);
	
	mux2to1 mux26 (
		.x(a[26]),
		.y(b[26]),
		.sel(sel),
		.out(mux_out[26])
	);
	
	mux2to1 mux27 (
		.x(a[27]),
		.y(b[27]),
		.sel(sel),
		.out(mux_out[27])
	);
	
	mux2to1 mux28 (
		.x(a[28]),
		.y(b[28]),
		.sel(sel),
		.out(mux_out[28])
	);
	
	mux2to1 mux29 (
		.x(a[29]),
		.y(b[29]),
		.sel(sel),
		.out(mux_out[29])
	);
	
	mux2to1 mux30 (
		.x(a[30]),
		.y(b[30]),
		.sel(sel),
		.out(mux_out[30])
	);
	
	mux2to1 mux31 (
		.x(a[31]),
		.y(b[31]),
		.sel(sel),
		.out(mux_out[31])
	);

endmodule"
N/A,N/A,-1,15.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);module top_module (
	input clk,
	input reset,
	input [7:0] d,
	output [7:0] q
);
	always @(posedge clk)
		if (reset)
			q <= 8'd0;
		else
			q <= d;
endmodule"
N/A,N/A,-1,16.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);				
	
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,17.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
	assign out = sel? b : a;
endmodule"
N/A,N/A,-1,18.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
		
	assign out = sel? b : a;
	
endmodule"
N/A,N/A,-1,19.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);

	wire [99:0] mux_out;
	
	mux2to1 mux0 (
		.x(a[0]),
		.y(b[0]),
		.sel(sel),
		.out(mux_out[0])
	);
	
	mux2to1 mux1 (
		.x(a[1]),
		.y(b[1]),
		.sel(sel),
		.out(mux_out[1])
	);
	
	mux2to1 mux2 (
		.x(a[2]),
		.y(b[2]),
		.sel(sel),
		.out(mux_out[2])
	);
	
	mux2to1 mux3 (
		.x(a[3]),
		.y(b[3]),
		.sel(sel),
		.out(mux_out[3])
	);
	
	mux2to1 mux4 (
		.x(a[4]),
		.y(b[4]),
		.sel(sel),
		.out(mux_out[4])
	);
	
	mux2to1 mux5 (
		.x(a[5]),
		.y(b[5]),
		.sel(sel),
		.out(mux_out[5])
	);
	
	mux2to1 mux6 (
		.x(a[6]),
		.y(b[6]),
		.sel(sel),
		.out(mux_out[6])
	);
	
	mux2to1 mux7 (
		.x(a[7]),
		.y(b[7]),
		.sel(sel),
		.out(mux_out[7])
	);
	
	mux2to1 mux8 (
		.x(a[8]),
		.y(b[8]),
		.sel(sel),
		.out(mux_out[8])
	);
	
	mux2to1 mux9 (
		.x(a[9]),
		.y(b[9]),
		.sel(sel),
		.out(mux_out[9])
	);
	
	mux2to1 mux10 (
		.x(a[10]),
		.y(b[10]),
		.sel(sel),
		.out(mux_out[10])
	);
	
	mux2to1 mux11 (
		.x(a[11]),
		.y(b[11]),
		.sel(sel),
		.out(mux_out[11])
	);
	
	mux2to1 mux12 (
		.x(a[12]),
		.y(b[12]),
		.sel(sel),
		.out(mux_out[12])
	);
	
	mux2to1 mux13 (
		.x(a[13]),
		.y(b[13]),
		.sel(sel),
		.out(mux_out[13])
	);
	
	mux2to1 mux14 (
		.x(a[14]),
		.y(b[14]),
		.sel(sel),
		.out(mux_out[14])
	);
	
	mux2to1 mux15 (
		.x(a[15]),
		.y(b[15]),
		.sel(sel),
		.out(mux_out[15])
	);
	
	mux2to1 mux16 (
		.x(a[16]),
		.y(b[16]),
		.sel(sel),
		.out(mux_out[16])
	);
	
	mux2to1 mux17 (
		.x(a[17]),
		.y(b[17]),
		.sel(sel),
		.out(mux_out[17])
	);
	
	mux2to1 mux18 (
		.x(a[18]),
		.y(b[18]),
		.sel(sel),
		.out(mux_out[18])
	);
	
	mux2to1 mux19 (
		.x(a[19]),
		.y(b[19]),
		.sel(sel),
		.out(mux_out[19])
	);
	
	mux2to1 mux20 (
		.x(a[20]),
		.y(b[20]),
		.sel(sel),
		.out(mux_out[20])
	);
	
	mux2to1 mux21 (
		.x(a[21]),
		.y(b[21]),
		.sel(sel),
		.out(mux_out[21])
	);
	
	mux2to1 mux22 (
		.x(a[22]),
		.y(b[22]),
		.sel(sel),
		.out(mux_out[22])
	);
	
	mux2to1 mux23 (
		.x(a[23]),
		.y(b[23]),
		.sel(sel),
		.out(mux_out[23])
	);
	
	mux2to1 mux24 (
		.x(a[24]),
		.y(b[24]),
		.sel(sel),
		.out(mux_out[24])
	);
	
	mux2to1 mux25 (
		.x(a[25]),
		.y(b[25]),
		.sel(sel),
		.out(mux_out[25])
	);
	
	mux2to1 mux26 (
		.x(a[26]),
		.y(b[26]),
		.sel(sel),
		.out(mux_out[26])
	);
	
	mux2to1 mux27 (
		.x(a[27]),
		.y(b[27]),
		.sel(sel),
		.out(mux_out[27])
	);
	
	mux2to1 mux28 (
		.x(a[28]),
		.y(b[28]),
		.sel(sel),
		.out(mux_out[28])
	);
	
	mux2to1 mux29 (
		.x(a[29]),
		.y(b[29]),
		.sel(sel),
		.out(mux_out[29])
	);
	
	mux2to1 mux30 (
		.x(a[30]),
		.y(b[30]),
		.sel(sel),
		.out(mux_out[30])
	);
	
	mux2to1 mux31 (
		.x(a[31]),
		.y(b[31]),
		.sel(sel),
		.out(mux_out[31])
	);

endmodule"
N/A,N/A,-1,20.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
endmodule"
N/A,N/A,-1,21.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);				 
	
	assign out = (sel)? b : a;
	
endmodule"
N/A,N/A,-1,22.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);
wire [99:0] mux_out;

mux2 mux0 (
	.a(a),
	.b(b),
	.sel(sel),
	.out(mux_out)
);

mux2 mux1 (
	.a(mux_out),
	.b(b),
	.sel(sel),
	.out(out)
);

endmodule"
N/A,N/A,-1,23.0,1,"Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);

	mux2to1 #(100) mux0 (a[0:99], b[0:99], sel, out[0:99]);

endmodule"
