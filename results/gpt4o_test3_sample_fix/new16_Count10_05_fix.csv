Area,Delay,Score,Current Run,Episode,Verilog,Time,Tokens
N/A,N/A,-1,0,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end

endmodule",1.849047,73
N/A,N/A,-1,1,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else begin
            if (q == 4'b1001) begin
                q <= 4'b0000;
            end
            else begin
                q <= q + 1;
            end
        end
    end
endmodule",1.658054,151
N/A,N/A,-1,2,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.323125,220
N/A,N/A,-1,3,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset)
            q <= 4'd0;
        else if (q == 4'd9)
            q <= 4'd0;
        else
            q <= q + 4'd1;
    end

endmodule",1.48905,278
N/A,N/A,-1,4,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 0;
        end
        else if (q == 9) begin
            q <= 0;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.478062,342
N/A,N/A,-1,5,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.631605,410
N/A,N/A,-1,6,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",2.221087,478
N/A,N/A,-1,7,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Wrap around to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end

endmodule",2.366066,571
N/A,N/A,-1,8,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",2.121048,639
N/A,N/A,-1,9,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 4'd1;
        end
    end
endmodule",2.105135,706
N/A,N/A,-1,10,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.476059,771
N/A,N/A,-1,11,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0; // Reset the counter to 0
        end
        else begin
            if (q == 4'd9) begin
                q <= 4'd0; // Wrap around to 0 after counting to 9
            end
            else begin
                q <= q + 4'd1; // Increment the counter
            end
        end
    end
endmodule",1.915054,874
N/A,N/A,-1,12,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end
endmodule",4.064074,949
N/A,N/A,-1,13,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.829056,1022
N/A,N/A,-1,14,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;  // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000;  // Reset to 0 when the counter reaches 9
        end else begin
            q <= q + 1;    // Increment the counter
        end
    end

endmodule",7.048065,1119
N/A,N/A,-1,15,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.830077,1188
N/A,N/A,-1,16,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end
endmodule",3.897067,1260
N/A,N/A,-0.1,17,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    reg [3:0] counter;

    always @(posedge clk) begin
        if (reset) begin
            counter <= 4'b0000;
        end else if (counter == 4'b1001) begin
            counter <= 4'b0000;
        end else begin
            counter <= counter + 1;
        end
    end

    assign q = counter;
endmodule",2.202046,1344
N/A,N/A,-1,18,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end
endmodule",2.53106,1415
N/A,N/A,-1,19,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
    
endmodule",4.020121,1488
N/A,N/A,-1,20,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Wrap around to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment counter
        end
    end
endmodule",2.061054,1584
N/A,N/A,-1,21,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the count to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the count to 0 when it reaches 9
        end
        else begin
            q <= q + 4'b0001; // Increment the counter
        end
    end
endmodule",4.135065,1686
N/A,N/A,-1,22,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.811061,1752
N/A,N/A,-1,23,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else begin
            if (q == 4'b1001) begin
                q <= 4'b0000; // Reset count to 0 after reaching 9
            end else begin
                q <= q + 1;
            end
        end
    end
endmodule",2.72106,1837
N/A,N/A,-1,24,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1'b1;
        end
    end

endmodule",2.209071,1908
N/A,N/A,-1,25,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",2.382051,1977
N/A,N/A,-1,26,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1'b1; // Increment the counter
        end
    end
endmodule",2.201067,2073
N/A,N/A,-1,27,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else begin
            if (q == 4'd9) begin
                q <= 4'd0;
            end else begin
                q <= q + 4'd1;
            end
        end
    end

endmodule",1.415051,2147
N/A,N/A,-1,28,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end
endmodule",1.624056,2222
N/A,N/A,-1,29,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1'b1;
        end
    end
endmodule",1.586062,2293
N/A,N/A,-1,30,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 0;
        end
        else begin
            if (q == 9) begin
                q <= 0;
            end
            else begin
                q <= q + 1;
            end
        end
    end
endmodule",2.454076,2363
N/A,N/A,-1,31,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 4'b0001;
        end
    end
endmodule",1.580061,2435
N/A,N/A,-1,32,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.601062,2508
N/A,N/A,-1,33,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end

endmodule",1.727068,2583
N/A,N/A,-1,34,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 4'b0001;
        end
    end
endmodule",2.238063,2662
N/A,N/A,-1,35,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.681071,2728
N/A,N/A,-1,36,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end
endmodule",1.783072,2800
N/A,N/A,-1,37,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1'b1;
        end
    end
endmodule",1.939061,2871
N/A,N/A,-1,38,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 4'd1;
        end
    end

endmodule",1.846101,2939
N/A,N/A,-1,39,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.845134,3008
N/A,N/A,-1,40,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end
endmodule",1.690069,3085
N/A,N/A,-1,41,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset)
            q <= 4'b0000;
        else if (q == 4'b1001)
            q <= 4'b0000;
        else
            q <= q + 1;
    end
endmodule",2.010058,3144
N/A,N/A,-1,42,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end

endmodule",2.078073,3217
N/A,N/A,-1,43,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",2.602097,3286
N/A,N/A,-1,44,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 1;
        end
    end

endmodule",1.529056,3356
N/A,N/A,-1,45,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end
endmodule",1.781076,3428
N/A,N/A,-1,46,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;     // Reset the counter to 0
        end
        else if (q == 4'd9) begin
            q <= 4'd0;     // Reset counter when it reaches 9
        end
        else begin
            q <= q + 1;    // Increment counter
        end
    end
endmodule",2.325058,3522
N/A,N/A,-1,47,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset counter to 0 after reaching 9
        end else begin
            q <= q + 1;   // Increment counter
        end
    end
endmodule",1.799053,3614
N/A,N/A,-1,48,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1'b1;
        end
    end

endmodule",1.453111,3685
N/A,N/A,-1,49,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.795058,3758
N/A,N/A,-1,50,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // If q is 9, reset it to 0
        end
        else begin
            q <= q + 1'b1; // Increment the counter
        end
    end
endmodule",1.87906,3862
N/A,N/A,-1,51,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",2.859068,3935
N/A,N/A,-1,52,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 4'd1;
        end
    end
endmodule",2.002066,4003
N/A,N/A,-1,53,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end
endmodule",2.442071,4081
N/A,N/A,-1,54,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.526071,4147
N/A,N/A,-1,55,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 4'd1;
        end
    end
endmodule",1.597049,4215
N/A,N/A,-1,56,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) 
            q <= 4'b0000;
        else if (q == 4'b1001)
            q <= 4'b0000;
        else 
            q <= q + 1'b1;
    end
endmodule",1.601065,4277
N/A,N/A,-1,57,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.992074,4346
N/A,N/A,-1,58,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else begin
            if (q == 4'b1001) // Check if the counter reached 9
                q <= 4'b0000; // Reset to 0 if 9 is reached
            else
                q <= q + 1; // Increment the counter
        end
    end
endmodule",1.833059,4446
N/A,N/A,-1,59,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",2.312073,4519
N/A,N/A,-1,60,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0; // Reset the counter to 0
        end else if (q == 4'd9) begin
            q <= 4'd0; // Go back to 0 after reaching 9
        end else begin
            q <= q + 4'd1; // Increment the counter by 1
        end
    end
endmodule",2.329064,4613
N/A,N/A,-1,61,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.525056,4682
N/A,N/A,-1,62,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end
endmodule",2.055059,4757
N/A,N/A,-1,63,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset)
            q <= 4'd0;
        else if (q == 4'd9)
            q <= 4'd0;
        else
            q <= q + 4'd1;
    end
endmodule",1.163071,4815
N/A,N/A,-1,64,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin // If count is 9
            q <= 4'b0000;            // Reset to 0
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.554059,4900
N/A,N/A,-1,65,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end
endmodule",2.31406,4975
N/A,N/A,-1,66,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;   // Reset counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;   // Reset counter to 0 when it reaches 9
        end
        else begin
            q <= q + 1'b1;  // Increment counter
        end
    end
endmodule",4.314077,5076
N/A,N/A,-1,67,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset counter to 0 after reaching 9
        end else begin
            q <= q + 4'b0001; // Increment counter
        end
    end
endmodule",3.16106,5171
N/A,N/A,-1,68,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end
        else begin
            q <= q + 1'b1; // Increment the counter
        end
    end
endmodule",2.232066,5271
N/A,N/A,-1,69,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;  // Reset counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;  // Reset counter after reaching 9
        end
        else begin
            q <= q + 1;  // Increment counter
        end
    end
endmodule",3.000075,5365
N/A,N/A,-1,70,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end

endmodule",2.194008,5437
N/A,N/A,-1,71,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end

endmodule",2.62406,5506
N/A,N/A,-1,72,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;  // Reset counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;  // Reset to 0 after counting to 9
        end
        else begin
            q <= q + 4'b0001;  // Increment counter
        end
    end
endmodule",2.738073,5607
N/A,N/A,-1,73,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // Wrap around to 0 after reaching 9
        end
        else begin
            q <= q + 1; // Increment counter
        end
    end
endmodule",2.452061,5703
N/A,N/A,-1,74,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end
endmodule",12.674066,5775
N/A,N/A,-1,75,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter after counting to 9
        end
        else begin
            q <= q + 1; // Increment the counter
        end
    end

endmodule",1.884136,5871
N/A,N/A,-1,76,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end

endmodule",1.973056,5943
N/A,N/A,-1,77,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter after reaching 9
        end
        else begin
            q <= q + 1'b1; // Increment the counter
        end
    end
endmodule",2.43306,6040
N/A,N/A,-1,78,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1'b1;
        end
    end
endmodule",2.089135,6115
N/A,N/A,-1,79,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0; // Reset the counter to 0
        end
        else if (q == 4'd9) begin
            q <= 4'd0; // Reset the counter when it reaches 9
        end
        else begin
            q <= q + 4'd1; // Increment the counter
        end
    end
endmodule",4.210058,6210
N/A,N/A,-0.1,80,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'd0;
        end else if (count == 4'd9) begin
            count <= 4'd0;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;

endmodule",1.901082,6291
N/A,N/A,-1,81,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.683062,6362
N/A,N/A,-1,82,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter when it reaches 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",2.678072,6457
N/A,N/A,-1,83,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else begin
            if (q == 4'b1001) begin
                q <= 4'b0000; // Reset the counter to 0 after it reaches 9
            end else begin
                q <= q + 1; // Increment the counter
            end
        end
    end
endmodule",1.961072,6563
N/A,N/A,-1,84,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 4'd1;
        end
    end

endmodule",2.463057,6635
N/A,N/A,-1,85,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0; // Reset counter to 0
        end
        else if (q == 4'd9) begin
            q <= 4'd0; // Reset counter to 0 after reaching 9
        end
        else begin
            q <= q + 1; // Increment counter
        end
    end
endmodule",2.02412,6730
N/A,N/A,-0.1,86,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    reg [3:0] counter;

    always @(posedge clk) begin
        if (reset) begin
            counter <= 4'd0;
        end else begin
            if (counter == 4'd9) begin
                counter <= 4'd0;
            end else begin
                counter <= counter + 1;
            end
        end
    end

    assign q = counter;
endmodule",1.741074,6817
N/A,N/A,-0.1,87,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end
        else if (count == 4'b1001) begin
            count <= 4'b0000;
        end
        else begin
            count <= count + 1;
        end
    end

    assign q = count;

endmodule",1.960067,6905
N/A,N/A,-1,88,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset counter to 0 upon reaching 9
        end else begin
            q <= q + 1'b1; // Otherwise, increment counter
        end
    end
endmodule",1.91307,7000
N/A,N/A,-1,89,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0; // Reset the counter to 0
        end else if (q == 4'd9) begin
            q <= 4'd0; // Wrap around to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",2.058065,7095
N/A,N/A,-1,90,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.916111,7168
N/A,N/A,-1,91,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end else if (q == 4'd9) begin
            q <= 4'd0;
        end else begin
            q <= q + 4'd1;
        end
    end
endmodule",1.939055,7236
N/A,N/A,-1,92,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else begin
            if (q == 4'b1001) begin
                q <= 4'b0000;
            end else begin
                q <= q + 1;
            end
        end
    end

endmodule",1.746057,7311
N/A,N/A,-1,93,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",2.157058,7384
N/A,N/A,-1,94,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1'b1;
        end
    end
endmodule",3.771071,7455
N/A,N/A,-1,95,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset counter after reaching 9
        end
        else begin
            q <= q + 1; // Increment counter
        end
    end

endmodule",2.431119,7548
N/A,N/A,-1,96,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset to 0 after reaching 9
        end else begin
            q <= q + 1'b1; // Increment the counter
        end
    end

endmodule",1.716119,7642
N/A,N/A,-1,97,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
  
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'd0;
        end
        else if (q == 4'd9) begin
            q <= 4'd0;
        end
        else begin
            q <= q + 1'b1;
        end
    end

endmodule",2.265059,7714
N/A,N/A,-1,98,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",1.551054,7783
N/A,N/A,-1,99,0,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",1.489061,7856
