Area,Delay,Score,Current Run,Episode,Verilog
N/A,N/A,-0.1,0,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,1,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,2,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,3,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,4,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,5,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,6,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & x[1] & ~x[2]);
endmodule"
N/A,N/A,-0.1,7,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,8,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,9,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,10,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,11,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,12,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2]) | 
               (x[4] & ~x[3] & x[1]);
endmodule"
N/A,N/A,-0.1,13,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,14,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,15,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & x[1]);
endmodule"
N/A,N/A,-0.1,16,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,17,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,18,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,19,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2]) | 
               (x[4] & ~x[3] & x[1]);
endmodule"
N/A,N/A,-0.1,20,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2] & x[1]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,21,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,22,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,23,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,24,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,25,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,26,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2]) | 
               (x[4] & ~x[3] & x[1]);
endmodule"
N/A,N/A,-0.1,27,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,28,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,29,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,30,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,31,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,32,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2]) | 
               (x[4] & ~x[3] & x[1]);
endmodule"
N/A,N/A,-0.1,33,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,34,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,35,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,36,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & ~x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,37,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,38,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2] & x[1]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,39,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,40,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,41,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,42,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[4] & ~x[3] & ~x[1]) | 
               (~x[4] & x[3] & x[2]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & ~x[3] & ~x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,43,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,44,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,45,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,46,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (x[4] & x[3] & x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,47,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule"
N/A,N/A,-0.1,48,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | 
               (x[4] & x[3] & ~x[2]) | 
               (~x[4] & x[3] & x[2]) | 
               (~x[4] & ~x[3] & ~x[2] & ~x[1]) | 
               (~x[4] & ~x[3] & x[2] & x[1]);
endmodule"
N/A,N/A,-0.1,49,0,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (~x[3] & ~x[4] & ~x[1] & ~x[2]) | 
               (~x[3] & ~x[4] & x[1] & ~x[2])  | 
               (x[3] & x[4] & ~x[1] & ~x[2])   | 
               (x[3] & x[4] & ~x[1] & x[2])    | 
               (x[3] & x[4] & x[1] & ~x[2])    | 
               (x[3] & ~x[4] & ~x[1] & ~x[2])  | 
               (x[3] & ~x[4] & x[1] & ~x[2]);
endmodule"
