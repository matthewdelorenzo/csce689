Area,Delay,Score,Current Run,Episode,Verilog,Time,Tokens
4.256,74.12,0.1,2.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
    assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012155454000000177,18
4.256,74.12,0.1,3.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012040416000000054,16
4.256,74.12,0.1,4.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.011982106000000048,15
4.256,74.12,0.1,5.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012690060999999808,15
4.256,74.12,0.1,6.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.011768811000000046,14
4.256,74.12,0.1,7.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.016563814999999593,16
4.256,74.12,0.1,8.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a ^ b;
assign cout = a & b;
endmodule",0.01191205499999981,14
4.256,74.12,0.1,9.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01214376599999989,14
4.256,74.12,0.1,10.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.012484205999999887,13
4.256,74.12,0.1,11.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
      assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012313155000000187,18
4.256,74.12,0.1,12.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012472915999999667,13
4.256,74.12,0.1,13.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.01214269599999973,12
4.256,74.12,0.1,14.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012732504999999783,12
4.256,74.12,0.1,15.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01212639400000004,15
4.256,74.12,0.1,16.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a ^ b;
assign cout = a & b;
endmodule",0.011908265000000195,13
4.256,74.12,0.1,17.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
    
   assign sum = a ^ b;
assign cout = a & b;

endmodule",0.011756413000000077,16
4.256,74.12,0.1,18.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.012602843999999891,11
N/A,N/A,-1,19.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
;     // Sum is the XOR of the two input bits
    assign sum = a ^ b;
    
    // Carry-out is the AND of the two input bits
    assign cout = a & b;
endmodule",0.010433864999999987,44
4.256,74.12,0.1,20.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.011560178999999948,16
4.256,74.12,0.1,21.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012392166999999787,10
4.256,74.12,0.1,22.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012529642000000063,11
4.256,74.12,0.1,23.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.012593772000000225,9
4.256,74.12,0.1,24.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
  assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012101074999999906,16
4.256,74.12,0.1,25.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.011734727999999972,14
4.256,74.12,0.1,26.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a ^ b;
assign cout = a & b;

endmodule",0.012343813000000203,12
4.256,74.12,0.1,27.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012622609000000118,10
4.256,74.12,0.1,28.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.012657721000000066,8
4.256,74.12,0.1,29.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

    assign cout = a & b;
endmodule",0.012700527000000239,10
4.256,74.12,0.1,30.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.013078233999999966,7
4.256,74.12,0.1,31.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012740852999999941,10
4.256,74.12,0.1,32.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
   assign sum = a ^ b;
    assign cout = a & b;

endmodule",0.011583550000000109,17
4.256,74.12,0.1,33.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.011939963000000109,13
4.256,74.12,0.1,34.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a^ b;
assign cout = a & b;

endmodule",0.012026980000000353,11
4.256,74.12,0.1,35.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
    
   assign sum = a ^ b;
   assign cout = a & b;

endmodule",0.012098924000000011,16
4.256,74.12,0.1,36.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b; 
endmodule",0.012547045999999895,7
4.256,74.12,0.1,37.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
 assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012088619000000023,15
N/A,N/A,-1,38.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
;      // Compute the sum using XOR
    assign sum = a ^ b;
    
    // Compute the carry-out using AND
    assign cout = a & b;
endmodule",0.010534643999999815,36
4.256,74.12,0.1,39.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.011455847999999769,15
4.256,74.12,0.1,40.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.013109674999999932,5
4.256,74.12,0.1,41.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;  
endmodule",0.012997784999999595,9
4.256,74.12,0.1,42.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.011788103999999855,16
4.256,74.12,0.1,43.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a^ b;
assign cout = a & b;

endmodule",0.012394703000000007,10
4.256,74.12,0.1,44.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a &b;
endmodule",0.013600078000000515,10
4.256,74.12,0.1,45.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
	assign cout = a & b;
endmodule",0.01295529700000042,9
4.256,74.12,0.1,46.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.013399269000000658,3
4.256,74.12,0.1,47.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
  assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01237859100000005,15
4.256,74.12,0.1,48.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;
endmodule",0.013794046000000115,3
4.256,74.12,0.1,49.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;

endmodule",0.013068902999999743,7
4.256,74.12,0.1,50.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012114110999999816,12
4.256,74.12,0.1,51.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a ^ b;
assign cout = a & b;

endmodule",0.012325288999999628,10
4.256,74.12,0.1,52.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
	assign cout = a & b;
endmodule",0.01313636799999962,8
4.256,74.12,0.1,53.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
    
   assign sum = a ^ b;
   assign cout = a & b;

endmodule",0.011995151000000703,15
4.256,74.12,0.1,54.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
    
   assign sum = a ^ b;
   assign cout = a & b;

endmodule",0.013119496999999924,1
4.256,74.12,0.1,55.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012309758999999865,15
4.256,74.12,0.1,56.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012296362999999921,17
N/A,N/A,-1,57.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
;      // Compute the sum using XOR
    assign sum = a ^ b;
    
    // Compute the carry-out using AND
    assign cout = a & b;
endmodule",0.01049274599999972,36
N/A,N/A,-1,58.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.011553997000000038,1
4.256,74.12,0.1,59.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;  
endmodule",0.012604013000000691,7
4.256,74.12,0.1,60.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012466508999999348,11
4.256,74.12,0.1,61.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a^ b;    
assign cout = a & b;

endmodule",0.012433763000000653,10
N/A,N/A,-1,62.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.0031219050000004245,0
4.256,74.12,0.1,63.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012558000000000291,14
4.256,74.12,0.1,64.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
 assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012406057000000636,14
N/A,N/A,-1,65.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.0031012779999999296,0
4.256,74.12,0.1,66.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;
endmodule",0.012746136999999713,5
4.256,74.12,0.1,67.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01281375000000029,10
4.256,74.12,0.1,68.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a ^ b;
assign cout = a & b;
endmodule",0.012322353000000064,15
4.256,74.12,0.1,69.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
   assign sum = a ^ b;
   assign cout = a & b;

endmodule",0.012255237999999835,16
4.256,74.12,0.1,70.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
    
   assign sum = a ^ b;
   assign cout = a & b;

endmodule",0.012056156999999956,14
N/A,N/A,-1,71.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;endmodule",0.012471511000000213,1
4.256,74.12,0.1,72.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
	assign cout = a & b;
endmodule",0.012612030000000551,7
4.256,74.12,0.1,73.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a^b;
   assign cout = a & b;
endmodule",0.012334091999999686,11
4.256,74.12,0.1,74.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;
endmodule",0.013044741999999943,4
4.256,74.12,0.1,75.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
  assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01241066600000007,14
4.256,74.12,0.1,76.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01200731399999988,15
N/A,N/A,-1,77.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a^ b;;

assign cout = a & b;

endmodule",0.010985546999999762,10
N/A,N/A,-1,78.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.002953822999999467,0
N/A,N/A,-1,79.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
;      // Compute the sum using XOR
    assign sum = a ^ b;
    
    // Compute the carry-out using AND
    assign cout = a & b;
endmodule",0.010209008000000352,36
4.256,74.12,0.1,80.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
	assign cout = a & b;
endmodule",0.012920455000000608,6
N/A,N/A,-1,81.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.003300271000000521,0
4.256,74.12,0.1,82.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
   assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.01233768799999968,13
4.256,74.12,0.1,83.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;
endmodule",0.01372645500000047,3
4.256,74.12,0.1,84.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;

    assign cout = a & b;
endmodule",0.012934773000000455,10
4.256,74.12,0.1,85.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;endmodule",0.004613359000000372,0
4.256,74.12,0.1,86.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a ^ b;
assign cout = a & b;
endmodule",0.014460043000000589,8
4.256,74.12,0.1,87.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
	assign cout = a & b;
endmodule",0.013626955999999524,5
4.256,74.12,0.1,88.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
    
   assign sum = a ^ b;
   assign cout = a & b;

endmodule",0.012178709999999704,13
N/A,N/A,-1,89.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.003220193999999843,0
4.256,74.12,0.1,90.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
 assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012372168999999822,13
N/A,N/A,-1,91.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;endmodule",0.0032338940000000704,0
4.256,74.12,0.1,92.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;
endmodule",0.013264136000000093,3
4.256,74.12,0.1,93.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;

	assign cout = a & b;
endmodule",0.012689963999999776,8
4.256,74.12,0.1,94.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;
	assign cout = a & b;
endmodule",0.013529011000000146,4
4.256,74.12,0.1,95.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
assign sum = a^ b;
 assign cout = a & b;
endmodule",0.012742070000000716,8
N/A,N/A,-1,96.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.0034373290000004886,0
4.256,74.12,0.1,97.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
  assign sum = a ^ b;
    assign cout = a & b;
endmodule",0.012237030999999732,13
N/A,N/A,-1,98.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
;      // Compute the sum using XOR
    assign sum = a ^ b;
    
    // Compute the carry-out using AND
    assign cout = a & b;
endmodule",0.010559796999999982,36
N/A,N/A,-1,99.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   assign sum = a ^ b;
   assign cout = a & b;;
endmodule",0.0029960149999999075,0
4.256,74.12,0.1,100.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );
   
	assign sum = a ^ b;

	assign cout = a & b;
endmodule",0.013163565000000155,2
4.256,74.12,0.1,101.0,1,"// Create a half adder. A half adder adds two bits (with no carry-in) and produces a sum and carry-out.

module top_module( 
    input a, b,
    output cout, sum );

	assign sum = a ^ b;

	assign cout = a & b;

endmodule",0.013389291000000192,9
