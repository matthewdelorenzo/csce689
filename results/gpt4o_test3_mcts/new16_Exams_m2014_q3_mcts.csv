Area,Delay,Score,Current Run,Episode,Verilog,Time,Tokens
N/A,N/A,-1,2.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]);

endmodule",0.010548301000000038,41
N/A,N/A,-1,3.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (~x[4] & x[3]) | (x[4] & ~x[3]) | (x[3] & x[2] & ~x[1]) | (~x[3] & x[2] & x[1]);

endmodule",0.01105615800000015,59
N/A,N/A,-1,4.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]);

endmodule",0.010816048000000134,51
N/A,N/A,-1,5.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2] & x[1]);

endmodule",0.011152866999999844,52
N/A,N/A,-1,6.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


    assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule",0.01512859699999991,57
N/A,N/A,-1,7.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


     assign f = (~x[4] & x[3]) | (x[4] & ~x[3]) | (x[1] & x[2] & x[3]);
endmodule",0.01057100100000019,44
N/A,N/A,-1,8.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (`x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2] & x[1]);

endmodule",0.010174565000000246,89
N/A,N/A,-1,9.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[1]);
endmodule",0.010489157999999943,57
N/A,N/A,-1,10.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (x[4] & x[3] & ~x[2] & ~x[1]);

endmodule",0.010761631000000271,74
N/A,N/A,-1,11.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[1] & x[2] & ~x[3]) | (x[1] & x[4] & ~x[3]);

endmodule",0.010652091999999946,60
N/A,N/A,-1,12.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]);

endmodule",0.010776912999999944,48
N/A,N/A,-1,13.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]);

endmodule",0.010536410000000274,50
N/A,N/A,-1,14.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]); 
endmodule",0.010275816999999687,57
N/A,N/A,-1,15.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]); 
endmodule",0.010161424999999724,57
N/A,N/A,-1,16.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule",0.010869366999999741,46
N/A,N/A,-1,17.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2] & x[1]) | (~x[4] & x[3] & ~x[2] & ~x[1]);

endmodule",0.010375939999999861,72
N/A,N/A,-1,18.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]);

endmodule",0.010600135999999871,55
N/A,N/A,-1,19.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[3] & ~x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & x[4]);

endmodule",0.01085011300000005,57
N/A,N/A,-1,20.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]);

endmodule",0.010902606000000148,48
N/A,N/A,-1,21.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]);

endmodule",0.010227459999999855,54
N/A,N/A,-1,22.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[3]) | (x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & ~x[2] & ~x[4]);

endmodule",0.010440859000000025,52
N/A,N/A,-1,23.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = (x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]); 
endmodule",0.010297131000000181,43
N/A,N/A,-1,24.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule",0.011140311000000125,46
N/A,N/A,-1,25.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule",0.01091716300000023,45
N/A,N/A,-1,26.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[2] & x[3]) | (x[3] & x[4]) | (~x[1] & x[3] & ~x[4]) | (x[1] & x[2] & ~x[3]);

endmodule",0.010775949000000118,52
N/A,N/A,-1,27.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (x[3] & ~x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]);

endmodule",0.010736446000000122,58
N/A,N/A,-1,28.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2]) | (x[4] & x[2] & ~x[1]);

endmodule",0.010123730000000108,64
N/A,N/A,-1,29.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2]) | (x[4] & x[2] & ~x[1]);

endmodule",0.01012591599999979,50
N/A,N/A,-1,30.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2]) | (x[4] & x[2] & ~x[1]);

endmodule",0.009476736999999957,51
N/A,N/A,-1,31.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & x[2] & ~x[1]);

endmodule",0.010847434999999628,46
N/A,N/A,-1,32.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] &    x[4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule",0.011218325000000196,46
N/A,N/A,-1,33.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[3]) | (x[3] & x[4]) | (~x[1] & x[2] & x[3]);

endmodule",0.010587546000000003,33
N/A,N/A,-1,34.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = ((x[3] & x[4]) | (x[1] & x[3]) | (x[1] & x[4] & ~x[2])); 

endmodule",0.010669918000000056,39
N/A,N/A,-1,35.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x    [4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3]);

endmodule",0.010770464999999785,39
N/A,N/A,-1,36.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & x[1]) | (x[3] & x[2] & x[1]);

endmodule",0.010389401999999937,62
N/A,N/A,-1,37.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = (x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]);
endmodule",0.010526616000000377,40
N/A,N/A,-1,38.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


;aassign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]);
endmodule",0.010260968999999953,63
N/A,N/A,-1,39.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[2] & x[3]) | (x[3] & x[4]) | (~x[1] & x[2] & ~x[3] & x[4]);

endmodule",0.011148329000000068,49
N/A,N/A,-1,40.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & x[2] & ~x[1]);

endmodule",0.010756405999999608,46
N/A,N/A,-1,41.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[3] & ~x[2]) | (~x[1] & x[4]) | (x[1] & x[2] & ~x[4]);

endmodule",0.010935646000000077,44
N/A,N/A,-1,42.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[1] & x[3]) | (x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule",0.010875861999999792,58
N/A,N/A,-1,43.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

\
assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & x[3] & x[2] & x[1]);

endmodule",0.010148593999999456,76
N/A,N/A,-1,44.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[2] &    x[3]) | (x[1] & x[3] & x[4]) | (~x[1] & x[2] & ~x[3] & x[4]) | (x[1] & ~x[2] & x[3] & ~x[4]);

endmodule",0.011156341000000403,68
N/A,N/A,-1,45.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = ((x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[1] & x[2]); 
endmodule",0.011410392999999353,41
N/A,N/A,-1,46.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]);

endmodule",0.011075523999999781,44
N/A,N/A,-1,47.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]);

endmodule",0.011258382000000289,34
N/A,N/A,-1,48.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (x[4] & x[3]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]);

endmodule",0.010264310000000165,51
N/A,N/A,-1,49.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3]&x[4]) | (x[1]&x[2]&~x[3]) | (~x[1]&x[2]&x[3]&x[4]);

endmodule",0.01128094199999996,44
N/A,N/A,-1,50.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[4]) | (x[1] & ~x[2] & x[3]);

endmodule",0.010794715000000288,53
N/A,N/A,-1,51.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = ((x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]); 
endmodule",0.010794782000000502,40
N/A,N/A,-1,52.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = ((x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]); 
endmodule",0.009712868000000263,73
N/A,N/A,-1,53.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & ~x[4]) | (x[3] & x[4]) | (x[1] & x[3] & ~x[4]);

endmodule",0.010884842000000283,66
N/A,N/A,-1,54.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = ((x[3] & x[4]) | (x[3] & ~x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]));

endmodule",0.010730546000000452,59
N/A,N/A,-1,55.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule",0.011783614000000497,41
N/A,N/A,-1,56.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] &    x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]);

endmodule",0.01082487000000043,35
N/A,N/A,-1,57.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]);

endmodule",0.010115972999999556,52
N/A,N/A,-1,58.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[2] & x[3]) | (x[1] & x[3] & ~x[4]) | (~x[1] & x[3] & x[4]) | (x[1] & x[2] & ~x[3]);

endmodule",0.010948693999999648,55
N/A,N/A,-1,59.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[1] & x[2] & ~x[3]) | (x[1] & x[4] & ~x[3]); 
endmodule",0.010375885000000196,61
N/A,N/A,-1,60.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]); 
endmodule",0.009917114000000282,57
N/A,N/A,-1,61.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (x[1] & x[2] & ~x[4]) | (~x[1] & x[2] & x[3]);
endmodule",0.010917487000000392,43
N/A,N/A,-1,62.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]) | (x[3] & x[2] & ~x[1]);

endmodule",0.01105366200000013,56
N/A,N/A,-1,63.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[2]) | (x[3] & ~x[4]) | (~x[1] & x[3] & x[4]);

endmodule",0.011394643999999232,37
N/A,N/A,-1,64.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[1] &    x[2] & ~x[3]) | (~x[1] & x[2] & x[3]) | (x[3] & x[4]) | (~x[1] & x[3] & ~x[4]);

endmodule",0.011148326999999902,57
N/A,N/A,-1,65.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[1] &    x[2] & ~x[3]) | (~x[1] & x[2] & x[3]) | (x[3] & x[4]) | (~x[1] & x[3] & ~x[4]);

endmodule",0.009755578000000042,73
N/A,N/A,-1,66.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = ((x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4])) | (x[1] & x[3] & x[4]);

endmodule",0.010458395999999759,64
N/A,N/A,-1,67.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (`x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (x[4] & x[3] & ~x[2]) | (~x[4] & x[3] & x[2] & x[1]);

endmodule",0.010787274999999319,89
N/A,N/A,-1,68.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[1] & x[2] & ~x[3]) | (x[1] & ~x[2] & x[3]); 
endmodule",0.010812551999999975,61
N/A,N/A,-1,69.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[2] & x[3]) | (x[3] & x[4]) | (~x[1] & x[3] & ~x[4]) | (x[1] & x[2] & ~x[3]);

endmodule",0.010445378000000005,52
N/A,N/A,-1,70.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) |(x[3] & ~x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3]);
endmodule",0.011121842000000548,53
N/A,N/A,-1,71.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (x[1] & x[2]) | (x[1] & ~x[4]) | (~x[1] & x[2] & x[3]);

endmodule",0.0111591820000001,42
N/A,N/A,-1,72.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[2]) & x[3]) | (x[3] & x[4]) | (~x[1] & x[2] & x[4]);

endmodule",0.011485203000000332,34
N/A,N/A,-1,73.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

\assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (x[4] & x[3] & ~x[2] & ~x[1]);

endmodule",0.010131892999999614,75
N/A,N/A,-1,74.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & x[3] & x[2] & x[1]);

endmodule",0.010131024000000544,75
N/A,N/A,-1,75.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = ((x[3] & x[4]) | (x[3] & ~x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]));

endmodule",0.010776614000000073,58
N/A,N/A,-1,76.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (    (x[1] & x[2] & ~x[3])) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule",0.011849884000000088,41
N/A,N/A,-1,77.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


`assign f = (x[4] & x[3]) | (x[4] & ~x[2]) | (~x[3] & x[2] & x[1]);

endmodule",0.010218909999999859,42
N/A,N/A,-1,78.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[2] & x[3]) | (~x[1] & x[3] & x[4]) | (x[1] & x[2] & ~x[4]);

endmodule",0.010979674999999745,43
N/A,N/A,-1,79.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x    [3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2]) | (x[4] & x[3] & ~x[1]);

endmodule",0.011260551999999535,57
N/A,N/A,-1,80.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2] & ~x[1]);

endmodule",0.010963051000000057,44
N/A,N/A,-1,81.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = (x[3] & x[4]) | (~x[1] & x[2] & x[3]) | (x[1] & x[2] & ~x[3] & ~x[4]); 
endmodule",0.010636770000000517,50
N/A,N/A,-1,82.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3]&x[4]) | (x[3]&x[2]) | (~x[1]&x[2]&x[4]) | (x[1]&x[2]&~x[3]);

endmodule",0.011319582000000494,43
N/A,N/A,-1,83.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = (x[3] & x[4]) | (x[1] & x[3]) | (x[1] & x[2] & ~x[4]); 
endmodule",0.010955052999999992,39
N/A,N/A,-1,84.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[2]) &(x[3] | x[4]) | (x[3] & ~x[4]) | (~x[1] & x[2] & x[3]);
endmodule",0.011660782999999952,46
N/A,N/A,-1,85.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = x[3] & x[4] | x[1] & x[2] & ~x[3] | x[1] & x[2] & x[3] & ~x[4];

endmodule",0.010558339999999333,46
N/A,N/A,-1,86.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[1] & x[2]) | (x[1] & ~x[2] & ~x[3]);

endmodule",0.011597236000000066,28
N/A,N/A,-1,87.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


   assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2] & x[1]) | (~x[4] & x[3] & ~x[2] & ~x[1]);

endmodule",0.01075243500000056,72
N/A,N/A,-1,88.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

\
assign f = (~x[4] & x[3] & x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[2] & ~x[1]);

endmodule",0.010497950999999617,53
N/A,N/A,-1,89.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4]) | (x[3] & ~x[2]) | (~x[1] & x[3] & ~x[4]);

endmodule",0.011677818999999978,27
N/A,N/A,-1,90.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[3] & x[4]) | (x[1] & x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule",0.010975943000000044,41
N/A,N/A,-1,91.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


assign f = (x[4] & x[3]) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (x[3] & x[2] & ~x[1]); 
endmodule",0.010518150000000226,68
N/A,N/A,-1,92.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[1] & x[2]) & (x[3] | x[4]) | (x[1] & ~x[2] & x[3]) | (~x[1] & x[2] & x[3] & x[4]);
endmodule",0.01318432600000019,53
N/A,N/A,-1,93.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[1] & x[2]) | (x[3] & ~x[4]) | (~x[1] & x[3] & x[4]);

endmodule",0.011443895000000204,33
N/A,N/A,-1,94.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[2] & x[3]) | (x[1] & x[3]) | (x[1] & ~x[4]);

endmodule",0.011076996999999977,26
N/A,N/A,-1,95.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


;assassign f = (~x[4] & x[3] & ~x[2]) | (x[4] & x[3]) | (x[4] & ~x[3] & ~x[1]);
endmodule",0.010575166000000635,57
N/A,N/A,-1,96.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = ((x[1] & x[3]) | (x[3] & x[4]) | (x[1] & x[4]) | (x[2] & x[3] & ~x[4]));

endmodule",0.011069905000000269,46
N/A,N/A,-1,97.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


	assign f = (x[4] & x[3]) | (~x[4] & x[3] & x[2]) | (x[4] & ~x[3] & ~x[2]) | (x[4] & x[2] & ~x[1]); 
endmodule",0.01121848300000039,60
N/A,N/A,-1,98.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[4] & x[3`) | (x[4] & ~x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]);

endmodule",0.011233343999999867,42
N/A,N/A,-1,99.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );


 assign f = (x[1] & x[3]) | (~x[1] & x[3] & x[2]) | (x[1] & x[2] & ~x[4]) | (x[3] & x[4]); 
endmodule",0.01082554300000016,54
N/A,N/A,-1,100.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

   assign f = (x[4] & x[3]) | (x[3] & x[2]) | (x[1] & x[4]);
endmodule",0.011509096000000163,32
N/A,N/A,-1,101.0,1,"// Consider the function f shown in the Karnaugh map below.

// Implement this function. d is don't-care, which means you may choose to output whatever value is convenient.

         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'

x_3'x_4'	d		0		d		d
x_3'x_4		0		d		1		0
x_3x_4  	1		1		d		d
x_3x_4'		1		1		0		d


module top_module (
    input [4:1] x, 
    output f );

assign f = (x[3] & x[4)] | (x[1] & x[2]) | (x[1] & ~x[4]) | (~x[1] & x[2] & x[3]);

endmodule",0.01141914200000027,102
