Area,Delay,Score,Current Run,Episode,Verilog,Time,Tokens
N/A,N/A,-1,2.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.010940313000000312,100
N/A,N/A,-1,3.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end
endmodule",0.010200590000000176,68
N/A,N/A,-0.1,4.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.010525154000000203,78
N/A,N/A,-1,5.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.011384755999999996,84
N/A,N/A,-0.1,6.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
// Internal register to hold the counter value
    reg [3:0] count;

    // Always block triggered on the rising edge of the clock
    always @(posedge clk) begin
        if (reset) begin
            // Synchronous reset: set count to 0
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            // If count reaches 9, reset it to 0
            count <= 4'b0000;
        end else begin
            // Otherwise, increment the count
            count <= count + 1;
        end
    end

    // Assign the internal count register to the output
    assign q = count;

endmodule",0.010911137999999987,158
N/A,N/A,-0.1,7.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   // Internal register to hold the counter value
    reg [3:0] count;

    // Always block triggered on the rising edge of the clock
    always @(posedge clk) begin
        if (reset) begin
            // Synchronous reset: set count to 0
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            // If count reaches 9, reset it to 0
            count <= 4'b0000;
        end else begin
            // Otherwise, increment the count
            count <= count + 1;
        end
    end

    // Assign the internal count register to the output
    assign q = count;

endmodule",0.011123925999999784,157
N/A,N/A,-0.1,8.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.01057976500000013,77
N/A,N/A,-1,9.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assignreg [3:0] count;

   always @(posedge clk) begin
       if (reset) begin
           count <= 4'b0000;
       end else if (count == 4'b1001) begin
           count <= 4'b0000;
       end else begin
           count <= count + 1;
       end
   end

   assign q = count;
endmodule",0.010673510999999802,88
N/A,N/A,-1,10.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg q_reg;

    always @(posedge clk) begin
        if (reset) begin
            q_reg <= 4'b0000;
        end else if (q_reg == 4'b1001) begin
            q_reg <= 4'b0000;
        end else begin
            q_reg <= q_reg + 1;
        end
    end

    assign q = q_reg;

endmodule",0.010126884999999586,84
N/A,N/A,-0.1,11.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.010676503999999643,76
N/A,N/A,-1,12.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000; // Reset the counter to 0
    end else if (q == 4'b1001) begin
        q <= 4'b0000; // Reset the counter to 0 after reaching 9
    end else begin
        q <= q + 1; // Increment the counter
    end
end
endmodule",0.010651621000000056,93
N/A,N/A,-1,13.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always@(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end
endmodule",0.010311933999999745,66
N/A,N/A,-1,14.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///always
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",0.010450194000000135,74
N/A,N/A,-1,15.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q_reg;

always @(posedge clk) begin
    if (reset) begin
        q_reg <= 4'b0000;
    end else if (q_reg == 4'b1001) begin
        q_reg <= 4'b0000;
    end else begin
        q_reg <= q_reg + 1;
    end
end

assign q = q_reg;

endmodule",0.010588203000000185,81
N/A,N/A,-1,16.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //////
//    // Counter logic
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.01030653199999998,99
N/A,N/A,-0.1,17.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q
   reg [3:0] count;

   always @(posedge clk) begin
       if (reset) begin
           count <= 4'b0000;
       end else if (count == 4'b1001) begin
           count <= 4'b0000;
       end else begin
           count <= count + 1;
       end
   end

   assign q = count;
endmodule",0.010784211000000266,85
N/A,N/A,-0.1,18.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.010668302999999657,81
N/A,N/A,-1,19.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q];

always @(posedge clk) begin
    if (reset) begin
        q <= 4'd0;
    end else if (q == 4'd9) begin
        q <= 4'd0;
    end else begin
        q <= q + 4'd1;
    end
end

endmodule",0.010673254000000298,67
N/A,N/A,-1,20.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010474653000000167,67
N/A,N/A,-1,21.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign// Counter logic
   always @(posedge clk) begin
       if (reset) begin
           q <= 4'b0000; // Reset the counter to 0
       end else if (q == 4'b1001) begin
           q <= 4'b0000; // Reset the counter to 0 after reaching 9
       end else begin
           q <= q + 1; // Increment the counter
       end
   end
endmodule",0.010424170999999927,103
N/A,N/A,-1,22.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

       always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",0.010214706999999823,73
N/A,N/A,-1,23.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.010827282999999799,81
N/A,N/A,-1,24.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010789767999999977,81
N/A,N/A,-0.1,25.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   //assign//assign q = ...;  // This line is not needed as we will use a register to hold the count value

   reg [3:0] count;

   always @(posedge clk) begin
       if (reset) begin
           count <= 4'b0000;  // Reset the counter to 0
       end else if (count == 4'b1001) begin
           count <= 4'b0000;  // Reset the counter to 0 after reaching 9
       end else begin
           count <= count + 1;  // Increment the counter
       end
   end

   assign q = count;  // Output the current count value
endmodule",0.010868345000000001,152
N/A,N/A,-1,26.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.011045527999999916,90
N/A,N/A,-1,27.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'd0;
    end else if (q == 4'd9) begin
        q <= 4'd0;
    end else begin
        q <= q + 4'd1;
    end
end

endmodule",0.010972594000000058,80
N/A,N/A,-1,28.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///always@(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.010796358999999978,92
N/A,N/A,-0.1,29.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
 reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.010605582999999807,78
N/A,N/A,-1,30.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010772398000000294,67
N/A,N/A,-1,31.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end
endmodule",0.010137748000000002,65
N/A,N/A,-1,32.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always@(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.010529113000000034,92
N/A,N/A,-1,33.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;] always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010650916999999982,73
N/A,N/A,-1,34.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
//    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.01041357300000012,69
N/A,N/A,-1,35.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //////
///// Counter logic
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.010502188000000245,105
N/A,N/A,-1,36.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0;

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010996420999999756,72
N/A,N/A,-1,37.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]
(
reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000; // Reset the counter to 0
    end else if (q == 4'b1001) begin
        q <= 4'b0000; // Reset the counter to 0 after reaching 9
    end else begin
        q <= q + 1; // Increment the counter
    end
end

endmodule",0.011436366999999947,106
N/A,N/A,-1,38.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;

endmodule",0.010357422999999866,86
N/A,N/A,-0.1,39.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.010330249999999985,86
N/A,N/A,-1,40.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;];
(
reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'd0;
    end else if (q == 4'd9) begin
        q <= 4'd0;
    end else begin
        q <= q + 4'd1;
    end
end

endmodule",0.011158841000000308,80
N/A,N/A,-1,41.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010502813,66
N/A,N/A,-1,42.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //a<=0
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.010390918999999776,95
N/A,N/A,-1,43.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   
       always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010436975000000182,69
N/A,N/A,-1,44.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]  
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.01129053599999974,68
N/A,N/A,-1,45.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always@(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.01065908300000018,66
N/A,N/A,-1,46.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010293969000000125,67
N/A,N/A,-1,47.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///always@(posalways @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010726441000000086,75
N/A,N/A,-1,48.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.010738394999999734,79
N/A,N/A,-1,49.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]
(
 qreg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000; // Reset the counter to 0
    end else if (q == 4'b1001) begin
        q <= 4'b0000; // Reset the counter to 0 after reaching 9
    end else begin
        q <= q + 1; // Increment the counter
    end
end

endmodule",0.011269000999999612,106
N/A,N/A,-0.1,50.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   /////
   reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.010677888000000024,86
N/A,N/A,-1,51.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0000;

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.011102949999999723,72
N/A,N/A,-1,52.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.011056200000000516,66
N/A,N/A,-1,53.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;];
(
)always @(posedge clk) begin
    if (reset) begin
        q <= 4'd0;
    end else if (q == 4'd9) begin
        q <= 4'd0;
    end else begin
        q <= q + 4'd1;
    end
end

endmodule",0.010962347000000427,72
N/A,N/A,-1,54.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign qreg [3:0] count;

   always @(posedge clk) begin
       if (reset) begin
           count <= 4'b0000;
       end else if (count == 4'b1001) begin
           count <= 4'b0000;
       end else begin
           count <= count + 1;
       end
   end

   assign q = count;
endmodule",0.010498285999999801,90
N/A,N/A,-1,55.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //////
//
//// Counter logic
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1'b1; // Increment the counter
        end
    end
endmodule",0.010770310999999921,107
N/A,N/A,-1,56.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;`]reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.011084009000000172,81
N/A,N/A,-0.1,57.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
 reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.010515577000000498,83
N/A,N/A,-1,58.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //asynchronous reset is not used in this design

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end

endmodule",0.011147881999999498,104
N/A,N/A,-0.1,59.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.010822060000000633,79
N/A,N/A,-1,60.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:]reg [3:0] count;

   always @(posedge clk) begin
       if (reset) begin
           count <= 4'b0000;
       end else if (count == 4'b1001) begin
           count <= 4'b0000;
       end else begin
           count <= count + 1;
       end
   end

   assign q = count;
endmodule",0.010665181000000246,90
N/A,N/A,-1,61.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;];
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000; // Reset the counter to 0
    end else if (q == 4'b1001) begin
        q <= 4'b0000; // Reset the counter to 0 after reaching 9
    end else begin
        q <= q + 1; // Increment the counter
    end
end
endmodule",0.010737433000000074,98
N/A,N/A,-1,62.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   //assign q = (reset) ? 4'b0000 : (q == 4'b1001) ? 4'b0000 : q + 1;

   always @(posedge clk) begin
       if (reset) begin
           q <= 4'b0000;
       end else if (q == 4'b1001) begin
           q <= 4'b0000;
       end else begin
           q <= q + 1;
       end
   end
endmodule",0.010756111000000068,101
N/A,N/A,-1,63.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end
endmodule",0.010114715000000274,64
N/A,N/A,-1,64.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///assign qreg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.01044950999999994,90
N/A,N/A,-1,65.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0000;

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end

endmodule",0.010809634000000123,96
N/A,N/A,-1,66.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]  
reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010928434999999403,76
N/A,N/A,-1,67.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
//always@(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010437737999999364,66
N/A,N/A,-0.1,68.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///////
    reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.010345875000000504,85
N/A,N/A,-1,69.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always @(posedgeclk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.010649214999999934,96
N/A,N/A,-1,70.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]
(
 q <=4'b0000;
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end
endmodule",0.010783768999999666,78
N/A,N/A,-1,71.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010159969000000046,66
N/A,N/A,-1,72.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.01058562699999932,92
N/A,N/A,-1,73.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0000
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.011485715000000063,70
N/A,N/A,-1,74.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;];
(
);always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000; // Reset the counter to 0
    end else if (q == 4'b1001) begin
        q <= 4'b0000; // Reset the counter to 0 after reaching 9
    end else begin
        q <= q + 1; // Increment the counter
    end
end

endmodule",0.016138156000000237,98
N/A,N/A,-1,75.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:]0reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.010940977999999824,86
N/A,N/A,-1,76.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   assign q = (reset) ? 4'b0000 : (q == 4'b1001) ? 4'b0000 : q + 1;

   always @(posedge clk) begin
       if (reset) begin
           q <= 4'b0000;
       end else if (q == 4'b1001) begin
           q <= 4'b0000;
       end else begin
           q <= q + 1;
       end
   end
endmodule",0.010537203000000162,101
N/A,N/A,-1,77.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   reg [3:]0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.01012133900000034,85
N/A,N/A,-1,78.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]  
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010457055999999909,68
N/A,N/A,-1,79.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0000;
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",0.010670830999999659,74
N/A,N/A,-1,80.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///begin
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.009862007999999811,69
N/A,N/A,-1,81.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //////
/
/// Internal register to hold the counter value
    reg [3:0] count;

    // Always block triggered on the rising edge of the clock
    always @(posedge clk) begin
        if (reset) begin
            // Synchronous reset: set count to 0
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            // If count reaches 9, reset it to 0
            count <= 4'b0000;
        end else begin
            // Otherwise, increment the count
            count <= count + 1;
        end
    end

    // Assign the internal count register to the output
    assign q = count;

endmodule",0.01056926999999952,158
N/A,N/A,-1,82.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]
;
q <= 4'd0;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'd0;
    end else if (q == 4'd9) begin
        q <= 4'd0;
    end else begin
        q <= q + 4'd1;
    end
end

endmodule",0.01032216300000055,72
N/A,N/A,-1,83.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0000;

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010068125000000094,74
N/A,N/A,-1,84.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   assign q = (reset) ? 4'b0000 : (q == 4'b1001) ? 4'b0000 : q + 1;

   always @(posedge clk) begin
       if (reset) begin
           q <= 4'b0000;
       end else if (q == 4'b1001) begin
           q <= 4'b0000;
       end else begin
           q <= q + 1;
       end
   end
endmodule",0.010117688000000236,102
N/A,N/A,-0.1,85.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
 reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (count == 4'b1001) begin
        count <= 4'b0000;
    end else begin
        count <= count + 1;
    end
end

assign q = count;

endmodule",0.009936987999999758,76
N/A,N/A,-1,86.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //
   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.009700501000000195,100
N/A,N/A,-1,87.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;] (
reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'd0;
    end else if (q == 4'd9) begin
        q <= 4'd0;
    end else begin
        q <= q + 4'd1;
    end
end

endmodule",0.01033121700000006,80
N/A,N/A,-1,88.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:]0 regreg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.01052307900000038,90
N/A,N/A,-1,89.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //always@(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010255648000000228,65
N/A,N/A,-1,90.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;]
 q;
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010287324000000098,68
N/A,N/A,-1,91.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.01010944899999977,65
N/A,N/A,-1,92.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //a<=0;
    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000; // Reset the counter to 0
        end else if (q == 4'b1001) begin
            q <= 4'b0000; // Reset the counter to 0 after reaching 9
        end else begin
            q <= q + 1; // Increment the counter
        end
    end
endmodule",0.009789402000000003,95
N/A,N/A,-1,93.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);

      always@(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.009489466000000668,67
N/A,N/A,-1,94.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ////
   //always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010080327999999916,66
N/A,N/A,-1,95.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;];
(
);qalways @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010565493999999731,73
N/A,N/A,-1,96.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000; // Reset the counter to 0
    end else if (q == 4'b1001) begin
        q <= 4'b0000; // Reset the counter to 0 after reaching 9
    end else begin
        q <= q + 1; // Increment the counter
    end
end
endmodule",0.009946410000000405,88
N/A,N/A,-1,97.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   ///always@(posedgeclk) begin
        if (reset) begin
            q <= 4'b0000;
        end else if (q == 4'b1001) begin
            q <= 4'b0000;
        end else begin
            q <= q + 1;
        end
    end
endmodule",0.010167185000000245,71
N/A,N/A,-1,98.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //assign q =4'b0000;   

    always @(posedge clk) begin
        if (reset) begin
            q <= 4'b0000;
        end
        else if (q == 4'b1001) begin
            q <= 4'b0000;
        end
        else begin
            q <= q + 1;
        end
    end
endmodule",0.011244738000000254,74
N/A,N/A,-1,99.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   reg [3:]00] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.009883181000000185,79
N/A,N/A,-1,100.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
reg [3:0 q;`]`reg [3:0] q;

always @(posedge clk) begin
    if (reset) begin
        q <= 4'b0000;
    end else if (q == 4'b1001) begin
        q <= 4'b0000;
    end else begin
        q <= q + 1;
    end
end

endmodule",0.010259459999999443,81
N/A,N/A,-1,101.0,1,"// Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is synchronous, and should reset the counter to 0.

module top_module (
    input clk,
    input reset,        // Synchronous active-high reset
    output [3:0] q);
   //reg [3:]0 reg[reg [3:0] count;

    always @(posedge clk) begin
        if (reset) begin
            count <= 4'b0000;
        end else if (count == 4'b1001) begin
            count <= 4'b0000;
        end else begin
            count <= count + 1;
        end
    end

    assign q = count;
endmodule",0.01040132600000021,226
