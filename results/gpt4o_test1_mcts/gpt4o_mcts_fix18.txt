/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/miniconda3/envs/rltf/lib/python3.10/site-packages/bitsandbytes/libbitsandbytes_cpu.so: undefined symbol: cadam32bit_grad_fp32
[2024-10-22 13:16:00,899] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Using CPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_prompts/Module_name.v
Prompt str:  e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);

********-- EPISODE-1--************
ORIG MODILE:  top_module
--------MCTS-------
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);

Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [96.96, 2.93, 0.09, 0.01, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```
API response time: 0.861760 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  54
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.61137020e+02 4.86049643e+00 1.49298525e-01 1.65887314e-02
 1.65887250e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```
Tokens: ['```', '``', '\n', 'module', 'Certainly']
Probs: [98.83, 1.1, 0.05, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````
API response time: 1.121199 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  55
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  2.0
Iteration TIME (sec):  0.015273748999999892
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [9.81758695e+01 5.95286808e+00 1.82852603e-01 2.03169637e-02
 2.03169559e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [1.92878082e+02 2.14677618e+00 9.75807355e-02 1.95161471e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.82, 3.72, 0.3, 0.14, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````
API response time: 1.771163 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  68
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  3.0
Iteration TIME (sec):  0.011384607000000102
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [7.52940530e+01 6.87377998e+00 2.11139999e-01 2.34600090e-02
 2.34599999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [1.17613221e+02 2.62925312e+00 1.19511505e-01 2.39023011e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [187.00372145   7.26000672   0.58548441   0.27322606   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.95, 3.72, 0.24, 0.07, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````
API response time: 0.924341 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  57
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  4.0
Iteration TIME (sec):  0.010509663000000113
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [6.29449999e+01 7.68511964e+00 2.36061696e-01 2.62290874e-02
 2.62290773e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [9.02569330e+01 3.03599999e+00 1.38000000e-01 2.75999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [114.01592439   8.891656     0.71706903   0.33463221   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [1.87257431e+02 7.26000672e+00 4.68387530e-01 1.36613030e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````
Tokens: ['```', '``', "Here's", 'module', 'Here']
Probs: [99.53, 0.41, 0.03, 0.01, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````
API response time: 0.931275 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  58
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  5.0
Iteration TIME (sec):  0.01155754600000014
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [5.50195011e+01 8.41862677e+00 2.58592631e-01 2.87325257e-02
 2.87325146e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [7.54917561e+01 3.39435118e+00 1.54288690e-01 3.08577380e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [87.48773301 10.26719996  0.828       0.3864      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [1.14171289e+02 8.89165600e+00 5.73655225e-01 1.67316107e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [1.94244212e+02 8.00162031e-01 5.85484413e-02 1.95161471e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.28, 0.67, 0.03, 0.01, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````
API response time: 0.884336 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  59
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  6.0
Iteration TIME (sec):  0.011486222999999907
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [4.94099601e+01 9.09315619e+00 2.79311965e-01 3.10346747e-02
 3.10346628e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [6.60149274e+01 3.71832542e+00 1.69014792e-01 3.38029583e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [73.16971134 11.47907853  0.92573214  0.43200833  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [8.76073330e+01 1.02672000e+01 6.62399998e-01 1.93199999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [1.18449801e+02 9.79994344e-01 7.17069032e-02 2.39023011e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [1.93756308e+02 1.30758186e+00 5.85484413e-02 1.95161471e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````
Tokens: ['```', '``', 'module', "Here's", 'Here']
Probs: [98.52, 1.41, 0.03, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````
API response time: 1.773448 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  72
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  7.0
Iteration TIME (sec):  0.010217018000000078
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [4.51820057e+01 9.72099287e+00 2.98597051e-01 3.31774628e-02
 3.31774501e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [5.93069750e+01 4.01625048e+00 1.82556840e-01 3.65113680e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [63.97998934 12.5747005   1.01408875  0.47324142  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [7.32699990e+01 1.14790785e+01 7.40585712e-01 2.16004166e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [9.09009330e+01 1.13160000e+00 8.27999997e-02 2.75999999e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [1.18151022e+02 1.60145417e+00 7.17069032e-02 2.39023011e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [1.92273081e+02 2.75177674e+00 5.85484413e-02 3.90322942e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.11, 2.28, 0.4, 0.15, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````
API response time: 0.964720 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  8.0
Iteration TIME (sec):  0.010751979000000134
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [4.18529049e+01 1.03106700e+01 3.16709999e-01 3.51900134e-02
 3.51899999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [5.42508805e+01 4.29355236e+00 1.95161471e-01 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [57.47532133 13.58222888  1.09534104  0.51115915  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [6.40678770e+01 1.25747005e+01 8.11271000e-01 2.36620708e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [7.60317665e+01 1.26516726e+00 9.25732139e-02 3.08577380e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [9.06709330e+01 1.84919999e+00 8.27999997e-02 2.75999999e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [1.17242735e+02 3.37022445e+00 7.17069032e-02 4.78046021e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [1.89521304e+02 4.44968154e+00 7.80645884e-01 2.92742206e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````
Tokens: ['```', '``', "Here's", 'module', 'Here']
Probs: [98.95, 0.86, 0.09, 0.05, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````
API response time: 0.907698 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  62
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  9.0
Iteration TIME (sec):  0.01048157999999999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [3.91459256e+01 1.08684004e+01 3.33841652e-01 3.70935311e-02
 3.70935168e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [5.02695248e+01 4.55399998e+00 2.06999999e-01 4.13999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [52.57249183 14.52001344  1.17096883  0.54645212  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [5.75544293e+01 1.35822289e+01 8.76272831e-01 2.55579576e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [6.64881688e+01 1.38592129e+00 1.01408875e-01 3.38029583e-02
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [7.58389057e+01 2.06746844e+00 9.25732139e-02 3.08577380e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [8.99717330e+01 3.89159999e+00 8.27999997e-02 5.51999998e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [1.15557623e+02 5.44972464e+00 9.56092042e-01 3.58534516e-01
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [1.93112275e+02 1.67838865e+00 1.75645324e-01 9.75807355e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  9
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.07, 1.8, 0.07, 0.02, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````
API response time: 0.800773 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  63
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  10.0
Iteration TIME (sec):  0.011657679999999893
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [36.88998095 11.39887454  0.35013608  0.03890402  0.03890401]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [4.70320558e+01 4.80033747e+00 2.18197158e-01 4.36394316e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [48.71184983 15.40079995  1.242       0.5796      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [5.26449804e+01 1.45200134e+01 9.36775060e-01 2.73226059e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [5.97329409e+01 1.49696609e+00 1.09534104e-01 3.65113680e-02
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [6.63191541e+01 2.26479821e+00 1.01408875e-01 3.38029583e-02
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [7.52526087e+01 4.35094106e+00 9.25732139e-02 6.17154760e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [8.86745330e+01 6.29279998e+00 1.10400000e+00 4.13999999e-01
 8.27999997e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [1.17756635e+02 2.05559789e+00 2.15120710e-01 1.19511505e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [1.91394855e+02 3.51290648e+00 1.36613030e-01 3.90322942e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  10
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [94.66, 4.71, 0.5, 0.09, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````
API response time: 1.369784 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  76
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  11.0
Iteration TIME (sec):  0.011685493999999963
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [34.97304342 11.90573616  0.36570521  0.04063393  0.04063391]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [44.33391974  5.03463641  0.22884711  0.04576942  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [45.57255924 16.23386854  1.30918295  0.61095204  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [4.87791248e+01 1.54007999e+01 9.93599997e-01 2.89799999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [5.46412034e+01 1.60032406e+00 1.17096883e-01 3.90322942e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [5.95808102e+01 2.44626165e+00 1.09534104e-01 3.65113680e-02
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [6.58053491e+01 4.76621713e+00 1.01408875e-01 6.76059167e-02
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [74.16487339  7.03556426  1.23430952  0.46286607  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [9.03673330e+01 2.37359999e+00 2.48399999e-01 1.38000000e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [1.16704933e+02 4.30241419e+00 1.67316107e-01 4.78046021e-02
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [1.84739848e+02 9.19210528e+00 9.75807355e-01 1.75645324e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [93.97, 4.68, 0.63, 0.63, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````
API response time: 0.992224 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  77
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  12.0
Iteration TIME (sec):  0.011047937999999924
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [33.31836705 12.39188308  0.38063805  0.04229313  0.04229312]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [42.04117114  5.25850623  0.23902301  0.0478046   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [42.95626014 17.02622496  1.37308266  0.64077191  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [4.56355940e+01 1.62338685e+01 1.04734636e+00 3.05476021e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [5.06317748e+01 1.69739999e+00 1.24200000e-01 4.13999999e-02
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [5.45018024e+01 2.61516371e+00 1.17096883e-01 3.90322942e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [5.91183329e+01 5.14810288e+00 1.09534104e-01 7.30227359e-02
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [64.85210566  7.7070745   1.35211833  0.50704438  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [7.55843293e+01 2.65376547e+00 2.77719642e-01 1.54288690e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [8.95577330e+01 4.96799998e+00 1.93199999e-01 5.51999998e-02
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [1.12629591e+02 1.12579838e+01 1.19511505e+00 2.15120710e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [1.83393234e+02 9.13355684e+00 1.22951727e+00 1.22951727e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [94.68, 4.71, 0.39, 0.11, 0.07]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````
API response time: 1.098954 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  66
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  13.0
Iteration TIME (sec):  0.011794113000000106
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [31.8714217  12.85966481  0.39500677  0.04388966  0.04388964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [40.06204592  5.47322682  0.24878304  0.04975661  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [40.73306339 17.78331199  1.43413806  0.66926443  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [43.01576038 17.02622496  1.09846613  0.32038595  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [4.73714736e+01 1.78921669e+00 1.30918295e-01 4.36394316e-02
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [5.05023998e+01 2.77379999e+00 1.24200000e-01 4.13999999e-02
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [5.40780232e+01 5.50355348e+00 1.17096883e-01 7.80645884e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [58.26031574  8.3245919   1.46045472  0.54767052  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [66.09605453  2.90705442  0.30422663  0.16901479  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [7.49054591e+01 5.55439284e+00 2.16004166e-01 6.17154760e-02
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [8.64205330e+01 1.29996000e+01 1.38000000e+00 2.48399999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [1.11804962e+02 1.11862769e+01 1.50584497e+00 1.50584497e+00
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [1.84778881e+02 9.19210528e+00 7.61129737e-01 2.14677618e-01
 1.36613030e-01]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [94.27, 4.69, 0.49, 0.49, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````
API response time: 0.897885 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  67
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  14.0
Iteration TIME (sec):  0.012224948999999707
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [30.59227886 13.31101769  0.40887085  0.04543011  0.04543009]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [38.33134135  5.67983589  0.25817436  0.05163487  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [38.81398435 18.50945796  1.49269822  0.6965925   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [40.78955973 17.78331199  1.14731045  0.33463221  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [44.65430569  1.8765463   0.13730827  0.04576942  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [4.72502529e+01 2.92384191e+00 1.30918295e-01 4.36394316e-02
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [5.01090998e+01 5.83739998e+00 1.24200000e-01 8.27999997e-02
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [53.29180126  8.89936307  1.56129177  0.58548441  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [59.37999769  3.13997765  0.32860231  0.18255684  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [65.50112246  6.0845325   0.23662071  0.06760592  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [7.22748369e+01 1.45339946e+01 1.54288690e+00 2.77719642e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [8.57857330e+01 1.29168000e+01 1.73879999e+00 1.73879999e+00
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [112.65349323  11.2579838    0.93218974   0.26292531   0.16731611]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [1.83978719e+02 9.15307299e+00 9.56291208e-01 9.56291208e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [96.48, 2.91, 0.51, 0.07, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````
API response time: 0.860781 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  68
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  15.0
Iteration TIME (sec):  0.011533011000000037
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [29.45095456 13.74755995  0.42228     0.04692002  0.04692   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [36.80131296  5.8791887   0.26723585  0.05344717  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [37.13579547 19.20817229  1.54904615  0.7228882   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [38.86788734 18.50945796  1.19415858  0.34829625  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [42.34538224  1.95998869  0.14341381  0.0478046   0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [44.53988213  3.06655127  0.13730827  0.04576942  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [4.68817422e+01 6.15315985e+00 1.30918295e-01 8.72788631e-02
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [49.37942483  9.43919997  1.65599999  0.621       0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [54.31779299  3.3567773   0.35129065  0.19516147  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [58.84449763  6.57204623  0.25557958  0.07302274  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [63.19576071 15.92119338  1.69014792  0.30422663  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [7.17425410e+01 1.44414214e+01 1.94403749e+00 1.94403749e+00
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [86.43893301 12.99959996  1.0764      0.3036      0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [1.12163496e+02 1.12101792e+01 1.17121275e+00 1.17121275e+00
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [1.88291787e+02 5.67919880e+00 9.95323502e-01 1.36613030e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [95.91, 2.9, 0.65, 0.5, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````
API response time: 0.892058 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  69
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  16.0
Iteration TIME (sec):  0.012101431000000051
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [28.42444414 14.17066044  0.43527626  0.04836405  0.04836403]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [35.43610654  6.07199998  0.276       0.0552      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [35.6521988  19.88234724  1.6034151   0.74826038  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [37.18743034 19.20817229  1.23923692  0.3614441   0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [40.35229279  2.0400209   0.14926982  0.04975661  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [42.23673542  3.20290834  0.14341381  0.0478046   0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [44.19203453  6.45348849  0.13730827  0.09153884  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [46.19805776  9.9497904   1.74557726  0.65459147  0.13091829]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [50.33162482  3.56039999  0.3726      0.207       0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [53.82710129  7.02581295  0.27322606  0.07806459  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [56.76943488 17.19685431  1.8255684   0.32860231  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [62.72927988 15.8197845   2.12958638  2.12958638  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [72.29026581 14.53399459  1.20345178  0.33943512  0.21600417]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [8.60617330e+01 1.29444000e+01 1.35240000e+00 1.35240000e+00
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [1.14804700e+02 6.95556961e+00 1.21901735e+00 1.67316107e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.87179367e+02 5.65968266e+00 1.26854956e+00 9.75807355e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.4, 1.09, 0.4, 0.07, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````
API response time: 0.809810 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  70
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  17.0
Iteration TIME (sec):  0.012615768000000305
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [27.49476825 14.5814893   0.44789558  0.04976619  0.04976618]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [34.208213    6.25887432  0.28449429  0.05689886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [34.32842654 20.53439993  1.65599999  0.7728      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [35.70182832 19.88234724  1.28273208  0.37413019  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [38.60937527  2.11702974  0.15490462  0.05163487  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [40.24863319  3.3336927   0.14926982  0.04975661  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [41.90644907  6.7404489   0.14341381  0.0956092   0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [43.54668568 10.4354282   1.83077688  0.68654133  0.13730827]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [47.09024169  3.75299111  0.39275488  0.21819716  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [49.87622482  7.45199997  0.2898      0.0828      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [51.92567096 18.38421056  1.95161471  0.35129065  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [56.34955415 17.08732021  2.30021618  2.30021618  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [63.20928189 15.92119338  1.31831538  0.37183254  0.23662071]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [7.19739740e+01 1.44722791e+01 1.51202916e+00 1.51202916e+00
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [8.80949330e+01 8.03159997e+00 1.40760000e+00 1.93199999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.14123485e+02 6.93166731e+00 1.55364957e+00 1.19511505e+00
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [1.92038887e+02 2.12726003e+00 7.80645884e-01 1.36613030e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  17
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [93.98, 4.68, 1.04, 0.18, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````
API response time: 0.891694 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  71
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  18.0
Iteration TIME (sec):  0.01238894299999993
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [26.64764733 14.98105614  0.46016896  0.0511299   0.05112988]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [33.09613207  6.44032854  0.29274221  0.05854844  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [33.13780325 21.16637497  1.70696572  0.796584    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [34.37626654 20.53439993  1.3248      0.3864      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [37.06854881  2.19133397  0.16034151  0.05344717  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [38.51007744  3.45953641  0.15490462  0.05163487  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [39.93350801  7.01568165  0.14926982  0.09951321  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [41.29368099 10.89944928  1.91218408  0.71706903  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [44.38884304  3.93617029  0.4119248   0.22884711  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [46.66354503  7.85509768  0.30547602  0.08727886  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [48.11154983 19.49939993  2.06999999  0.3726      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [51.54092406 18.26711368  2.45903453  2.45903453  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [56.78160534 17.19685431  1.42394335  0.40162505  0.25557958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [6.29320976e+01 1.58535875e+01 1.65634496e+00 1.65634496e+00
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [7.36788640e+01 8.97960175e+00 1.57374464e+00 2.16004166e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [8.75705330e+01 8.00399997e+00 1.79399999e+00 1.38000000e+00
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [1.17099321e+02 2.60535082e+00 9.56092042e-01 1.67316107e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [1.83412750e+02 9.13355684e+00 2.02967930e+00 3.51290648e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.61, 1.79, 0.31, 0.24, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````
API response time: 0.965571 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  72
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  19.0
Iteration TIME (sec):  0.011943315999999982
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [25.87157886 15.37023929  0.47212339  0.05245817  0.05245815]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [32.08278747  6.61680857  0.30076403  0.06015281  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [32.05948025 21.78002016  1.75645324  0.81967818  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [33.18403357 21.16637497  1.36557258  0.398292    0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [35.69370654  2.26319999  0.1656      0.0552      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [36.97310743  3.58096039  0.16034151  0.05344717  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [38.20821204  7.28051692  0.15490462  0.10326974  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [39.34886788 11.34450649  1.9902643   0.74634911  0.14926982]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [42.09332161  4.11119578  0.43024142  0.23902301  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [43.98607213  8.23849595  0.32038595  0.09153884  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [45.01009545 20.55417226  2.18197158  0.39275488  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [47.75447483 19.37519993  2.60819999  2.60819999  0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [51.93682304 18.38421056  1.52225947  0.42935524  0.27322606]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [5.65321110e+01 1.71238316e+01 1.78905703e+00 1.78905703e+00
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [6.44261884e+01 9.83666088e+00 1.72395088e+00 2.36620708e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [7.32391412e+01 8.94874402e+00 2.00575297e+00 1.54288690e+00
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [8.98613330e+01 3.00839999e+00 1.10400000e+00 1.93199999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [1.11816913e+02 1.11862769e+01 2.48583931e+00 4.30241419e-01
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [1.90497112e+02 3.49339033e+00 6.05000560e-01 4.68387530e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [92.73, 5.93, 0.8, 0.38, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````
API response time: 1.062683 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  73
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  20.0
Iteration TIME (sec):  0.012319571000000362
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [25.15718111 15.74980853  0.48378251  0.05375363  0.05375361]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [31.15442361  6.78870236  0.30857738  0.06171548  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [31.07689889 22.37684354  1.80458416  0.84213927  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [32.10425259 21.78002016  1.40516259  0.40983909  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [34.4571455   2.33285315  0.17069657  0.05689886  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [35.60170654  3.69839999  0.1656      0.0552      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [36.68296565  7.53605097  0.16034151  0.10689434  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [37.64817228 11.77275076  2.06539487  0.77452308  0.15490462]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [40.11180252  4.27906824  0.44780947  0.24878304  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [41.71088479  8.60482838  0.33463221  0.0956092   0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [42.42533484 21.55739774  2.2884711   0.4119248   0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [44.67552648 20.42325397  2.74928419  2.74928419  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [48.12189983 19.49939993  1.61459999  0.4554      0.2898    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [5.17082053e+01 1.83061460e+01 1.91258242e+00 1.91258242e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [5.78769464e+01 1.06248081e+01 1.86207977e+00 2.55579576e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [6.40408347e+01 9.80285792e+00 2.19719229e+00 1.69014792e+00
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [7.51600354e+01 3.36349344e+00 1.23430952e+00 2.16004166e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [8.57949330e+01 1.29168000e+01 2.87039999e+00 4.96799998e-01
 8.27999997e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [1.16155180e+02 4.27851189e+00 7.40971333e-01 5.73655225e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [1.80973232e+02 1.15730752e+01 1.56129177e+00 7.41613590e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [99.28, 0.67, 0.02, 0.01, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````
API response time: 1.046653 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  74
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  21.0
Iteration TIME (sec):  0.012456811999999928
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [24.49671597 16.12044297  0.49516719  0.0550186   0.05501858]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [30.29982086  6.95634988  0.31619772  0.06323954  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [30.17672054 22.95815706  1.85146428  0.86401666  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [31.12034258 22.37684354  1.44366733  0.42106964  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [33.33721388  2.40048609  0.17564532  0.05854844  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [34.36824104  3.81222345  0.17069657  0.05689886  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [35.32202654  7.78319997  0.1656      0.1104      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [36.1446763  12.18595476  2.1378868   0.80170755  0.16034151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [38.37900431  4.44059897  0.46471385  0.25817436  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [39.74692074  8.95618934  0.34829625  0.09951321  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [40.22894213 22.5159676   2.39023011  0.43024142  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [42.10952583 21.42008947  2.88347358  2.88347358  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [45.01979311 20.55417226  1.70193783  0.48003375  0.30547602]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [4.79097248e+01 1.94165999e+01 2.02859999e+00 2.02859999e+00
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [5.29405106e+01 1.13583976e+01 1.99064700e+00 2.73226059e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [5.75300884e+01 1.05882967e+01 2.37323892e+00 1.82556840e+00
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [65.72422199  3.68452246  1.35211833  0.23662071  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [71.75025539 14.44142138  3.20920475  0.55543928  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [8.91345330e+01 4.94039998e+00 8.55599997e-01 6.62399998e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [110.32301887  14.17406453   1.91218408   0.90828744   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [1.93756308e+02 1.30758186e+00 3.90322942e-02 1.95161471e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.56, 0.85, 0.31, 0.19, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````
API response time: 1.034700 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  75
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  22.0
Iteration TIME (sec):  0.012659955999999806
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [23.88373735 16.48274535  0.50629593  0.05625513  0.0562551 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [29.50972511  7.1200511   0.32363869  0.06472774  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [29.34806572 23.52511051  1.89718633  0.88535362  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [30.21894692 22.95815706  1.48117142  0.43200833  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [32.31671504  2.46626501  0.18045842  0.06015281  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [33.25111323  3.92274557  0.17564532  0.05854844  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [34.09797147  8.0227389   0.17069657  0.11379771  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [34.80314654 12.58559996  2.20799999  0.828       0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [36.84712482  4.59645662  0.48102453  0.26723585  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [38.02947594  9.29427692  0.3614441   0.10326974  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [38.33300381 23.4353621   2.48783037  0.44780947  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [39.9290769  22.37255379  3.01168993  3.01168993  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [42.43448872 21.55739774  1.78500746  0.50346364  0.32038595]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [4.48209913e+01 2.04668934e+01 2.13833215e+00 2.13833215e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [4.90533998e+01 1.20474000e+01 2.11139999e+00 2.89799999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [5.26226762e+01 1.13193653e+01 2.53709912e+00 1.95161471e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [59.04531015  3.97973911  1.46045472  0.25557958  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [62.73604047 15.8197845   3.51550767  0.60845325  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [7.45505951e+01 5.52353510e+00 9.56589877e-01 7.40585712e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [84.64493302 16.36679994  2.20799999  1.0488      0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [1.18151022e+02 1.60145417e+00 4.78046021e-02 2.39023011e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [1.92351146e+02 1.65887250e+00 6.05000560e-01 3.70806795e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  22
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.52, 2.29, 0.11, 0.05, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````
API response time: 0.842189 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  76
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  23.0
Iteration TIME (sec):  0.013502373000000123
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [23.31282658 16.83725355  0.51718526  0.05746505  0.05746503]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [28.77642722  7.28007223  0.33091237  0.06618247  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [28.58196088 24.07871826  1.94183212  0.90618832  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [29.38917142 23.52511051  1.51774906  0.44267681  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [31.38179641  2.53033451  0.18514643  0.06171548  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [32.23316948  4.03023795  0.18045842  0.06015281  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [32.98936726  8.25533022  0.17564532  0.11709688  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [33.59655029 12.9729395   2.2759543   0.85348286  0.17069657]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [35.48026654  4.74719998  0.4968      0.276       0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [36.51117118  9.6204906   0.37413019  0.10689434  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [36.67505354 24.3200246   2.58174359  0.46471385  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [38.04690331 23.28609228  3.13466627  3.13466627  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [40.23763387 22.5159676   1.86437948  0.52585062  0.33463221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [42.24683409 21.46585889  2.24270168  2.24270168  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [4.58925817e+01 1.26990746e+01 2.22561101e+00 3.05476021e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [4.87584248e+01 1.20060000e+01 2.69099999e+00 2.06999999e+00
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [54.01111068  4.25452007  1.56129177  0.27322606  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [56.35563938 17.08732021  3.79718227  0.65720462  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [65.19013525  6.05072954  1.04789171  0.811271    0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [70.78595108 18.29863862  2.46861904  1.17259404  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [9.06709330e+01 1.84919999e+00 5.51999998e-02 2.75999999e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [117.29053963   2.03169559   0.74097133   0.45414372   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [1.90321466e+02 4.46919768e+00 2.14677618e-01 9.75807355e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  23
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.72, 1.1, 0.12, 0.05, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````
API response time: 1.212591 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  77
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  24.0
Iteration TIME (sec):  0.013183788000000085
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [22.7793916  17.18444994  0.52785     0.05865002  0.05865   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [28.0934467   7.43665083  0.33802958  0.06760592  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [27.87093063 24.61988062  1.98547424  0.92655465  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [28.62203043 24.07871826  1.55346569  0.45309416  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [30.52115927  2.59282132  0.18971863  0.06323954  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [31.30059184  4.13493689  0.18514643  0.06171548  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [31.97919097  8.48154554  0.18045842  0.12030561  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [32.5037596  13.34904461  2.34193765  0.87822662  0.17564532]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [34.25088715  4.89330174  0.51208972  0.28449429  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [35.15642654  9.93599997  0.3864      0.1104      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [35.20935082 25.17361707  2.6723585   0.48102453  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [36.40099153 24.16511998  3.25299692  3.25299692  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [38.34129658 23.4353621   1.94050769  0.54732268  0.34829625]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [40.05945308 22.4203584   2.3424255   2.3424255   0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [43.25833832 13.31890179  2.33424052  0.32038595  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [4.56161987e+01 1.26554352e+01 2.83656305e+00 2.18197158e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [50.04699982  4.51259998  1.65599999  0.2898      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [51.5465001  18.26711368  4.0593586   0.7025813   0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [58.56457714  6.53553487  1.13185241  0.87627283  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [61.89096651 20.04515429  2.70423667  1.28451242  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [7.58389057e+01 2.06746844e+00 6.17154760e-02 3.08577380e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [90.008533    2.34599999  0.8556      0.5244      0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [1.16047620e+02 5.47362694e+00 2.62925312e-01 1.19511505e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [1.92663404e+02 2.14677618e+00 2.34193765e-01 9.75807355e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  24
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [93.34, 5.97, 0.49, 0.14, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````
API response time: 1.059466 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  78
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  25.0
Iteration TIME (sec):  0.012891441000000281
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [22.27951155 17.52476912  0.53830349  0.05981152  0.0598115 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [27.45529159  7.58999997  0.345       0.069       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [27.20869101 25.149401    2.0281775   0.94648283  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [27.91003845 24.61988062  1.5883794   0.46327732  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [29.72548423  2.65383723  0.19418321  0.06472774  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [30.44210984  4.23704947  0.18971863  0.06323954  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [31.05372994  8.70188211  0.18514643  0.12343095  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [31.50799399 13.71483959  2.40611221  0.90229208  0.18045842]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [33.13746038  5.03516595  0.52693597  0.29274221  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [33.93794343 10.24179434  0.398292    0.11379771  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [33.90154654 25.99919991  2.75999999  0.4968      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [34.94593263 25.01327556  3.36717171  3.36717171  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [36.68299737 24.3200246   2.01376     0.56798359  0.3614441 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [38.17129483 23.33584888  2.43807376  2.43807376  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [41.019891   13.91113922  2.43803471  0.33463221  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [42.99745261 13.27313237  2.97501243  2.2884711   0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [46.82355628  4.75669804  1.74557726  0.30547602  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [47.75964983 19.37519993  4.30559999  0.7452      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [53.57060336  6.98678066  1.21000112  0.93677506  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [55.59498588 21.6512412   2.92090944  1.38743198  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [6.63191541e+01 2.26479821e+00 6.76059167e-02 3.38029583e-02
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [75.28346639  2.62290773  0.95658988  0.58629702  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [8.90517330e+01 6.32039998e+00 3.03599999e-01 1.38000000e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [1.17481758e+02 2.62925312e+00 2.86827613e-01 1.19511505e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [1.82163717e+02 1.16511398e+01 9.56291208e-01 2.73226059e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  25
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [86.47, 11.7, 0.96, 0.58, 0.13]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````
API response time: 0.988428 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  79
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  26.0
Iteration TIME (sec):  0.01290413300000015
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [21.80981606 17.85860424  0.54855781  0.06095089  0.06095087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [26.85727256  7.74031159  0.35183235  0.07036647  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [26.58991659 25.66799991  2.06999999  0.966       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [27.24690305 25.149401    1.622542    0.47324142  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [28.98700782  2.71348147  0.19854742  0.06618247  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [29.6484274   4.3367584   0.19418321  0.06472774  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [30.20179957  8.91677576  0.18971863  0.12647909  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [30.59573614 14.07112852  2.46861904  0.92573214  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [32.12288934  5.17314125  0.54137525  0.30076403  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [32.83438609 10.53871943  0.40983909  0.11709688  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [32.72528653 26.79936185  2.84494287  0.51208972  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [33.64762654 25.83359991  3.47759999  3.47759999  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [35.21698613 25.17361707  2.08443963  0.58791887  0.37413019]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [36.52014892 24.21675486  2.53010872  2.53010872  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [39.08764569 14.47917276  2.53758698  0.34829625  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [40.77217624 13.86333462  3.10729914  2.39023011  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [44.13711122  4.98886699  1.83077688  0.32038595  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [44.6803753  20.42325397  4.53850088  0.78550977  0.13091829]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [49.63817483  7.41059997  1.2834      0.9936      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [50.84949485 23.14615045  3.12258353  1.48322718  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [5.95808102e+01 2.44626165e+00 7.30227359e-02 3.65113680e-02
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [65.83239146  2.87325146  1.04789171  0.64225621  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [7.44811652e+01 7.06642200e+00 3.39435118e-01 1.54288690e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [9.01557330e+01 3.03599999e+00 3.31199999e-01 1.38000000e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [1.11052039e+02 1.42696737e+01 1.17121275e+00 3.34632215e-01
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [168.75612392  22.8338921    1.87355012   1.13193653   0.25370991]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  26
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.01, 1.8, 0.15, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````
API response time: 0.966797 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  80
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  27.0
Iteration TIME (sec):  0.012649179999999927
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [21.36738966 18.18631238  0.55862393  0.06206935  0.06206933]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [26.29535865  7.88775935  0.35853452  0.0717069   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [26.01006028 26.17632648  2.11099407  0.98513057  0.        ]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.56, 2.29, 0.09, 0.04, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````
API response time: 1.004878 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  57
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  28.0
Iteration TIME (sec):  0.010394325000000038
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [20.94969612 18.50821901  0.56851185  0.06316801  0.06316798]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [25.76606291  8.03250095  0.36511368  0.07302274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [26.52382187 12.83748399  2.1512071   1.00389664  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [26.62729159 25.66799991  1.65599999  0.483       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [28.29920384  2.77184258  0.20281775  0.06760592  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [28.91180046  4.43422581  0.19854742  0.06618247  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [29.41417464  9.12661095  0.19418321  0.12945547  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [29.75596078 14.41861612  2.52958177  0.94859317  0.18971863]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [31.1934018   5.30753093  0.55543928  0.30857738  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [31.82880896 10.82750494  0.42106964  0.12030561  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [31.65997324 27.57631584  2.92742206  0.52693597  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [32.47991021 26.62866528  3.58462802  3.58462802  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [33.90890654 25.99919991  2.15279999  0.6072      0.3864    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [35.06046228 25.06672273  2.61891133  2.61891133  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [37.39794174 15.02574768  2.63337846  0.3614441   0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [38.8513018  14.42941615  3.23417948  2.48783037  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [41.8542986   5.21070163  1.91218408  0.33463221  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [42.11410277 21.42008947  4.76001988  0.8238496   0.13730827]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [46.44049904  7.81145825  1.35282238  1.04734636  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [47.11277483 24.55019992  3.31199999  1.57319999  0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [5.45018024e+01 2.61516371e+00 7.80645884e-02 3.90322942e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [59.1426738   3.10346628  1.13185241  0.69371599  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [6.51292899e+01 7.74087746e+00 3.71832542e-01 1.69014792e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [7.54068973e+01 3.39435118e+00 3.70292856e-01 1.54288690e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [8.52061330e+01 1.64771999e+01 1.35240000e+00 3.86399999e-01
 8.27999997e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [102.84159864  27.96569224   2.2946209    1.38633346   0.31072991]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [1.91277758e+02 3.51290648e+00 2.92742206e-01 5.85484413e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  27
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [94.37, 4.7, 0.5, 0.3, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````
API response time: 0.874738 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  81
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  29.0
Iteration TIME (sec):  0.01361494299999988
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [20.5545171  18.82462174  0.5782307   0.06424788  0.06424786]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [25.2663519   8.17468015  0.37157637  0.07431527  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [25.95014832 13.08222888  2.19068208  1.0223183   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [26.04665084 26.17632648  1.68879526  0.49256528  0.07036647]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.09, 1.8, 0.07, 0.03, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````
API response time: 1.066605 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  70
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  30.0
Iteration TIME (sec):  0.010480857000000121
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [20.17990278 19.13579359  0.58778888  0.0653099   0.06530988]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [24.79357238  8.31442839  0.37792856  0.07558571  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [25.41070206 13.32264098  2.22945822  1.04041384  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [26.56110946 12.83748399  1.72096568  0.50194832  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [27.65654159  2.82899999  0.207       0.069       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [28.22571915  4.52959642  0.20281775  0.06760592  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [28.68317009  9.33172895  0.19854742  0.13236495  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [28.97957412 14.7579241   2.58910949  0.97091606  0.19418321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [30.33776459  5.43860082  0.5691559   0.31619772  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [30.9075617  11.10878567  0.43200833  0.12343095  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [30.68924748 28.33197126  3.00764026  0.54137525  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [31.42233545 27.40067052  3.6885518   3.6885518   0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [32.73239889 26.79936185  2.21905544  0.62588743  0.398292  ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [33.75802654 25.88879991  2.70479999  2.70479999  0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [35.90416403 15.55312647  2.72580567  0.37413019  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [37.17154269 14.97411281  3.35626666  2.58174359  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [39.88375141  5.42347021  1.9902643   0.34829625  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [39.93342277 22.37255379  4.97167862  0.86048284  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [43.77553279  8.19272653  1.41885208  1.09846613  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [44.07427209 25.87818291  3.49115452  1.6582984   0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [5.05023998e+01 2.77379999e+00 8.27999997e-02 4.13999999e-02
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [54.10032735  3.31774501  1.21000112  0.74161359  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [5.85098101e+01 8.36110326e+00 4.01625048e-01 1.82556840e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [6.59405609e+01 3.71832542e+00 4.05635500e-01 1.69014792e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [71.25653158 18.42206958  1.51202916  0.43200833  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [78.88573304 32.29199989  2.64959999  1.60079999  0.3588    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [1.16633226e+02 4.30241419e+00 3.58534516e-01 7.17069032e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [1.84173880e+02 9.17258913e+00 9.75807355e-01 5.85484413e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.19, 2.29, 0.4, 0.09, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````
API response time: 0.841521 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  82
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  31.0
Iteration TIME (sec):  0.012807878999999911
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.82413165 19.44198573  0.5971941   0.06635493  0.0663549 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [24.34539226  8.45186627  0.38417574  0.07683515  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [24.90222494 13.55894256  2.26757138  1.05819998  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [25.98665969 13.08222888  1.75254566  0.51115915  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [27.05429868  2.88502523  0.21109941  0.07036647  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [27.58466659  4.62299998  0.207       0.069       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [28.00232569  9.53243425  0.20281775  0.13521183  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [28.25900059 15.08960425  2.64729899  0.99273712  0.19854742]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [29.54671239  5.5665854   0.58254964  0.32363869  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [30.05951059 11.38311799  0.44267681  0.12647909  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [29.79993132 29.06798918  3.0857738   0.55543928  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [30.45866173 28.15151284  3.78962673  3.78962673  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [31.66686129 27.57631584  2.28338921  0.64403285  0.40983909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [32.58659557 26.68556414  2.78804401  2.78804401  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [34.57130654 16.06319994  2.81519999  0.3864      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [35.6865577  15.4996793   3.47406605  2.6723585   0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [38.16054908  5.62820102  2.06539487  0.3614441   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [38.0510497  23.28609228  5.17468717  0.89561893  0.14926982]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [41.51097464  8.55702378  1.48194267  1.14731045  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [41.541985   27.14126722  3.66155376  1.73923803  0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [4.72502529e+01 2.92384191e+00 8.72788631e-02 4.36394316e-02
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [50.12979982  3.51899999  1.2834      0.7866      0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [5.35204190e+01 8.93839537e+00 4.29355236e-01 1.95161471e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [5.92400374e+01 4.01625048e+00 4.38136416e-01 1.82556840e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [62.30336261 20.18036613  1.65634496  0.47324142  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [65.95671508 36.10355344  2.96234285  1.7897488   0.40115059]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [8.95025330e+01 4.96799998e+00 4.13999999e-01 8.27999997e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [112.28300756  11.2340815    1.19511505   0.71706903   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [1.89677434e+02 4.46919768e+00 7.80645884e-01 1.75645324e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  29
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [93.66, 5.99, 0.14, 0.11, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.034652 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  83
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  32.0
Iteration TIME (sec):  0.013824644000000053
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.48567718 19.74342985  0.60645348  0.06738375  0.06738372]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``
Tokens: ['```', '``', '\n', "Here's", 'Sure']
Probs: [99.33, 0.67, 0.0, 0.0, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````
API response time: 0.957415 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  55
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  33.0
Iteration TIME (sec):  0.009816448999999672
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.79327981  9.52017009  0.61557359  0.06839709  0.06839707]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [23.91975251  8.58710472  0.39032294  0.07806459  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [24.42187545 13.79133752  2.30505444  1.07569207  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [25.44648349 13.32264098  1.78356658  0.52020692  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [26.4884157   2.93998303  0.21512071  0.0717069   0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [26.98393221  4.71455343  0.21109941  0.07036647  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [27.36616659  9.72899997  0.207       0.138       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [27.58787202 15.414149    2.70423667  1.01408875  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [28.81252675  5.69169283  0.59564227  0.33091237  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [29.27547235 11.65099271  0.45309416  0.12945547  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [28.98127636 29.7858254   3.16197722  0.5691559   0.12647909]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [96.94, 2.28, 0.65, 0.09, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````
API response time: 0.968648 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  65
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  34.0
Iteration TIME (sec):  0.010791079000000092
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.45710656  9.66645769  0.62456054  0.06939564  0.06939562]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [23.51482724  8.72024607  0.39637482  0.07927496  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [23.96716289 14.02001344  2.34193765  1.09290424  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [24.93731831 13.55894256  1.8140571   0.52909999  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [25.95538112  2.99393217  0.21906821  0.07302274  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [26.41946675  4.80436251  0.21512071  0.0717069   0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [26.77001814  9.92167214  0.21109941  0.14073294  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [26.96079159 15.73199995  2.75999999  1.035       0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [28.12871936  5.81410883  0.60845325  0.33802958  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [28.54779685 11.91284546  0.46327732  0.13236495  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [29.68563806 14.74338213  3.23638686  0.58254964  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [29.5758067  28.88284275  3.88807499  3.88807499  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [30.69593112 28.33197126  2.3459594   0.66168086  0.42106964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [31.52565623 27.45921896  2.86887362  2.86887362  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [33.37251103 16.55756751  2.90184173  0.398292    0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [34.36154654 16.00799994  3.58799999  2.75999999  0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [36.63715379  5.82574153  2.1378868   0.37413019  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [36.40496344 24.16511998  5.37002666  0.92942769  0.15490462]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [39.55618707  8.90643273  1.54245483  1.19415858  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [39.39018865 28.34812906  3.82436817  1.81657488  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [44.53988213  3.06655127  0.09153884  0.04576942  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [46.90113749  3.70935168  1.35282238  0.8291492   0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [4.95915998e+01 9.48059997e+00 4.55399998e-01 2.06999999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [5.41895440e+01 4.29355236e+00 4.68387530e-01 1.95161471e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [55.96618479 21.79728668  1.78905703  0.51115915  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [57.65883613 39.54946125  3.245084    1.96057158  0.43943846]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [74.85917249  5.55439284  0.46286607  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [86.15373301 12.97199996  1.38        0.828       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [1.15653232e+02 5.47362694e+00 9.56092042e-01 2.15120710e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [1.82788234e+02 1.16901721e+01 2.73226059e-01 2.14677618e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  30
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.49, 3.7, 0.64, 0.11, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.985934 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  84
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  35.0
Iteration TIME (sec):  0.01349999699999982
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.13666113  9.81066996  0.63342     0.07038003  0.07038   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [23.128991    8.85138495  0.40233568  0.08046714  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [23.53589382 14.24514335  2.37824893  1.1098495   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [24.45631879 13.79133752  1.84404355  0.53784604  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [25.45214009  3.04692624  0.22294582  0.07431527  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [25.88776747  4.89252331  0.21906821  0.07302274  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [26.20986196 10.11067335  0.21512071  0.14341381  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [26.37315126 16.04355494  2.81465876  1.05549704  0.21109941]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [27.48979159  5.93399998  0.621       0.345       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [27.87005324 12.169065    0.47324142  0.13521183  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [28.88015744 15.08597281  3.30912374  0.59564227  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [28.76309994 29.59610677  3.9840913   3.9840913   0.12647909]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [87.81, 9.26, 2.07, 0.76, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
API response time: 1.454771 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  66
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  36.0
Iteration TIME (sec):  0.011623199999999834
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.83075799  9.95289282  0.64215724  0.07135083  0.0713508 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [22.76079135  8.98060908  0.4082095   0.0816419   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [23.126128   14.46688727  2.41401408  1.1265399   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [24.00099088 14.02001344  1.87355012  0.54645212  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [24.97602065  3.09901422  0.22675714  0.07558571  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [25.38578716  4.97912336  0.22294582  0.07431527  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [25.68222199 10.29620577  0.21906821  0.14604547  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [25.82098991 16.34917393  2.86827613  1.07560355  0.21512071]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [26.89104847  6.05151634  0.63329822  0.35183235  0.14073294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [27.23679159 12.41999996  0.483       0.138       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [28.13443671 15.42119338  3.38029583  0.60845325  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [29.46232736 14.64629052  4.07784745  4.07784745  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [29.80642769 29.06798918  2.40690356  0.67887024  0.43200833]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [30.5589164  28.21166564  2.94748746  2.94748746  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [32.28678597 17.03759641  2.98597051  0.40983909  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [33.16980885 16.50066866  3.69842573  2.84494287  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [35.27786654  6.01679998  2.20799999  0.3864      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [34.94975028 25.01327556  5.55850568  0.96204906  0.16034151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [37.84676794  9.24264204  1.60068102  1.23923692  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [37.5327517  29.50566821  3.98052859  1.89075108  0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [42.23673542  3.20290834  0.0956092   0.0478046   0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [44.2103423   3.89040087  1.41885208  0.86961902  0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [4.63968596e+01 9.99342983e+00 4.80033747e-01 2.18197158e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [5.02125998e+01 4.55399998e+00 4.96799998e-01 2.06999999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [51.18963341 23.30227963  1.91258242  0.54645212  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [51.78563315 42.71830052  3.50509132  2.11765934  0.47464778]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [65.46055891  6.0845325   0.50704438  0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [72.05111834 14.50313685  1.5428869   0.92573214  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [8.87481330e+01 6.32039998e+00 1.10400000e+00 2.48399999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [111.43447587  14.31747834   0.33463221   0.26292531   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [1.86359689e+02 7.22097442e+00 1.24903341e+00 2.14677618e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  31
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [98.05, 1.8, 0.11, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.409035 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  85
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  37.0
Iteration TIME (sec):  0.013599028000000235
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.53833297 10.09320638  0.65077718  0.0723086   0.07230858]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [22.40892563  9.10799997  0.414       0.0828      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [22.73614218 14.68539353  2.44925702  1.14298661  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [23.56913816 14.24514335  1.90259914  0.55492475  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [24.52467428  3.15024107  0.23050544  0.07683515  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [24.91086055  5.06424275  0.22675714  0.07558571  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [25.18407428 10.47845365  0.22294582  0.14863055  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [25.30088104 16.64918379  2.92090944  1.09534104  0.21906821]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [26.32845414  6.16679367  0.64536213  0.35853452  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [26.6433585  12.66596443  0.49256528  0.14073294  0.14073294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [27.44147815 15.74949994  3.44999999  0.621       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [28.66270074 14.9866991   4.16949591  4.16949591  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [28.98760032 29.7858254   2.46634223  0.69563499  0.44267681]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [93.59, 5.98, 0.3, 0.09, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
API response time: 1.047690 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  67
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  38.0
Iteration TIME (sec):  0.01236171999999991
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.25842739 10.23168555  0.65928444  0.07325385  0.07325383]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [22.07222218  9.23363349  0.41971061  0.08394212  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [22.36439995 14.90079995  2.48399999  1.1592      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [23.15881777 14.46688727  1.93121126  0.56326995  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [24.09602739  3.20064812  0.23419377  0.07806459  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [24.46064499  5.14795491  0.23050544  0.07683515  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [24.71277386 10.65758549  0.22675714  0.15117143  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [24.80984379 16.94388249  2.97261096  1.11472911  0.22294582]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [25.79851746  6.27995529  0.65720462  0.36511368  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [26.08575386 12.90724257  0.50194832  0.14341381  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [26.79537485 16.07130346  3.51832345  0.63329822  0.14073294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [27.92239997 15.3197845   4.25917275  4.25917275  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [29.69211083 14.74338213  2.52438175  0.71200511  0.45309416]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [29.67325218 28.94455823  3.02405832  3.02405832  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [31.29745918 17.50446632  3.06779307  0.42106964  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [32.09047649 16.97904797  3.80564868  2.92742206  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [34.05529732  6.20197546  2.2759543   0.398292    0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [33.65130654 25.83359991  5.74079998  0.9936      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [36.33555905  9.56704343  1.65686227  1.28273208  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [35.90847429 30.61947895  4.13078974  1.96212513  0.25817436]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [40.24863319  3.3336927   0.09951321  0.04975661  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [41.92383257  4.06339118  1.48194267  0.90828744  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [43.73434031 10.48119763  0.50346364  0.22884711  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [4.69787187e+01 4.80033747e+00 5.23673179e-01 2.18197158e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [47.42844983 24.71579991  2.02859999  0.5796      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [47.35889254 45.6677842   3.74710024  2.26387306  0.50741982]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [58.80798626  6.57204623  0.54767052  0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [62.99970355 15.88739042  1.69014792  1.01408875  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [7.42265889e+01 7.06642200e+00 1.23430952e+00 2.77719642e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [85.50053302 16.53239994  0.3864      0.3036      0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [1.13621536e+02 8.84385139e+00 1.52974727e+00 2.62925312e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [1.91355822e+02 3.51290648e+00 2.14677618e-01 5.85484413e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  32
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [95.75, 3.71, 0.3, 0.18, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.024723 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  86
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  39.0
Iteration TIME (sec):  0.013831134000000134
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.99017531 10.36840043  0.6676833   0.07418706  0.07418703]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.74962341  9.35758042  0.42534456  0.08506891  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [22.00952626 15.11323481  2.51826368  1.17518972  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [22.76830414 14.68539353  1.95940562  0.57149331  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [23.68824122  3.25027353  0.23782489  0.07927496  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [24.03307207  5.23032742  0.23419377  0.07806459  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [24.26599595 10.83375586  0.23050544  0.1536703   0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [24.34527091 17.23354249  3.02342851  1.13378569  0.22675714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [25.29820131  6.39111357  0.66883747  0.37157637  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [25.56051743 13.14409247  0.51115915  0.14604547  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [26.19110184 16.3869757   3.58534516  0.64536213  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [27.23447815 15.64599994  4.34699998  4.34699998  0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [28.88646054 15.08597281  2.58111652  0.72800722  0.46327732]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [28.85795925 29.65934631  3.09873767  3.09873767  0.06323954]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.68, 1.1, 0.09, 0.07, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
API response time: 1.013381 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  68
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  40.0
Iteration TIME (sec):  0.011387626999999956
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.73279201 10.50341679  0.67597782  0.07510868  0.07510865]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.44017231  9.47990693  0.43090486  0.08618097  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [21.67028679 15.32281781  2.55206739  1.19096478  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [22.39605877 14.90079995  1.98719999  0.5796      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [23.29967886  3.29915257  0.24140141  0.08046714  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [23.62630766  5.3114226   0.23782489  0.07927496  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [23.84168792 11.00710696  0.23419377  0.15612918  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [23.90487075 17.51841373  3.07340592  1.15252722  0.23050544]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [24.82484922  6.50037129  0.68027141  0.37792856  0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [25.06463902 13.37674933  0.52020692  0.14863055  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [25.62435458 16.69685431  3.6511368   0.65720462  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [26.59307125 15.96575376  4.43308755  4.43308755  0.14073294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [28.1405827  15.42119338  2.63663075  0.74366508  0.47324142]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [29.55941897 14.67865439  3.17165913  3.17165913  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [30.39110062 17.95920351  3.14748927  0.43200833  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [31.10697529 17.44431351  3.90993234  3.00764026  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [32.94803895  6.3817801   2.34193765  0.40983909  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [32.48346639 26.62866528  5.91748117  1.02417943  0.17069657]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [34.98714654  9.88079997  1.71119999  1.3248      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [34.47254341 31.69417181  4.2757736   2.03099246  0.26723585]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [38.51007744  3.45953641  0.10326974  0.05163487  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [39.95009355  4.22931163  1.54245483  0.94537554  0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [41.47186178 10.94725389  0.52585062  0.23902301  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [44.28357337  5.03463641  0.54923306  0.22884711  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [44.37005046 26.05274064  2.13833215  0.61095204  0.13091829]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [43.87322485 48.43799983  3.97439999  2.40119999  0.5382    ]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  26
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.03, 1.8, 0.15, 0.02, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````
API response time: 1.253544 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  80
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  41.0
Iteration TIME (sec):  0.013464689000000085
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.48556477 10.63679641  0.68417179  0.07601912  0.07601909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.14300011  9.60067494  0.43639432  0.08727886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [21.34556956 15.52966081  2.58542916  1.20653361  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [22.04070476 15.11323481  2.01461094  0.58759486  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [22.92887761  3.34731793  0.2449257   0.0816419   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [23.23871891  5.3912981   0.24140141  0.08046714  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [23.43802962 11.17776996  0.23782489  0.15854993  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [23.48661995 17.79872615  3.12258353  1.17096883  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [24.37612632  6.60782272  0.69151633  0.38417574  0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [24.59548568 13.60542828  0.52909999  0.15117143  0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [25.09142162 17.00124705  3.7157637   0.66883747  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [25.99319079 16.27941535  4.5175349   4.5175349   0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [27.44747815 15.74949994  2.69099999  0.759       0.483     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [28.75724713 15.01979034  3.24294126  3.24294126  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [29.55675622 18.40270741  3.22521676  0.44267681  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [30.20595419 17.89748803  4.01150594  3.0857738   0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [31.9390891   6.55665577  2.40611221  0.42106964  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [31.42577948 27.40067052  6.08903789  1.05387194  0.17564532]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [33.77435922 10.18489548  1.76386458  1.36557258  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [33.19130654 32.73359989  4.41599998  2.09759999  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [36.97310743  3.58096039  0.10689434  0.05344717  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [38.22409969  4.3889641   1.60068102  0.98106256  0.25817436]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [39.51886962 11.3942631   0.54732268  0.24878304  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [41.99336653  5.25850623  0.57365523  0.23902301  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [41.82117847 27.3243449   2.24270168  0.64077191  0.13730827]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [46.29377059 25.02906746  4.18938543  2.53108703  0.56731261]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [53.79364504  7.02581295  0.58548441  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [56.59296327 17.16034294  1.8255684   1.09534104  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [6.49061904e+01 7.74087746e+00 1.35211833e+00 3.04226625e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [71.50339349 18.48378505  0.43200833  0.33943512  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [8.71841330e+01 1.02120000e+01 1.76639999e+00 3.03599999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [1.16681031e+02 4.30241419e+00 2.62925312e-01 7.17069032e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [1.86867108e+02 7.24049057e+00 5.85484413e-01 3.51290648e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  33
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.42, 3.7, 0.39, 0.39, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.139034 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  87
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  42.0
Iteration TIME (sec):  0.013686006000000361
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.24784449 10.76859741  0.69226878  0.07691878  0.07691875]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.85731641  9.71994256  0.44181557  0.08836311  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [21.03437019 15.73386854  2.61836589  1.22190408  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [21.70100612 15.32281781  2.04165391  0.59548239  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [22.57452563  3.39479999  0.2484      0.0828      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [22.8688468   5.47000735  0.2449257   0.0816419   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [23.05340066 11.34586616  0.24140141  0.16093427  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [23.08872431 18.07469185  3.17099857  1.18912446  0.23782489]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [23.94997106  6.7135546   0.7025813   0.39032294  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [24.15074322 13.83032663  0.53784604  0.1536703   0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [24.58908413 17.30043533  3.77928563  0.68027141  0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [25.43056347 16.58732021  4.60043236  4.60043236  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [26.80123872 16.07130346  2.74429229  0.77403116  0.49256528]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [28.01458985 15.35358746  3.31268992  3.31268992  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [28.78539091 18.83577154  3.3011146   0.45309416  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [29.37652352 18.33946787  4.11057038  3.16197722  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [31.01475174  6.72698688  2.46861904  0.43200833  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [30.46200355 28.15151284  6.25589174  1.08275049  0.18045842]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [32.6759609  10.48017099  1.81500168  1.40516259  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [32.03894406 33.74102246  4.55190859  2.16215658  0.28449429]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [94.19, 4.69, 0.63, 0.38, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````
API response time: 1.009799 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  74
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  43.0
Iteration TIME (sec):  0.011945970999999833
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.01903856 10.89887454  0.70027216  0.07780805  0.07780802]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.58240021  9.83776435  0.44717111  0.08943422  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.73577846 15.93553924  2.65089343  1.2370836   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [21.37584937 15.52966081  2.06834333  0.6032668   0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [22.23544297  3.44162703  0.25182637  0.08394212  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [22.51538277  5.54759998  0.2484      0.0828      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [22.68635314 11.511508    0.2449257   0.1632838   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [22.70958653 18.34650698  3.21868543  1.20700704  0.24140141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [23.54455535  6.81764693  0.71347468  0.39637482  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [23.72836836 14.05162591  0.54645212  0.15612918  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [24.11453486 17.59467734  3.8417574   0.69151633  0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [24.90150481 16.88977414  4.68186227  4.68186227  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [26.1968384  16.3869757   2.79656922  0.78877594  0.50194832]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [27.32447815 15.68049994  3.38099999  3.38099999  0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [28.06947805 19.25910016  3.37530621  0.46327732  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [28.60970133 18.77104381  4.20730292  3.23638686  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [30.16385584  6.89311034  2.52958177  0.44267681  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [29.57905488 28.88284275  6.4184095   1.11087857  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [31.67508512 10.76735213  1.86473696  1.44366733  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [32.994981   16.85961284  4.6838753   2.22484077  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [35.60170654  3.69839999  0.1104      0.0552      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [36.69823627  4.54300945  1.65686227  1.01549623  0.26723585]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [37.81102072 11.82438563  0.56798359  0.25817436  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [40.01643569  5.47322682  0.59707929  0.24878304  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [39.6552869  28.53934747  2.3424255   0.66926443  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [43.08535461 26.27511184  4.39386451  2.65462647  0.59500249]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [49.84517482  7.45199997  0.621       0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [51.76396574 18.34517827  1.95161471  1.17096883  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [5.83089976e+01 8.36110326e+00 1.46045472e+00 3.28602312e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [62.51970154 20.24797204  0.47324142  0.37183254  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [7.29151350e+01 1.14173631e+01 1.97489523e+00 3.39435118e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [8.95393330e+01 4.96799998e+00 3.03599999e-01 8.27999997e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [1.13932266e+02 8.86775369e+00 7.17069032e-01 4.30241419e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [1.86223076e+02 7.22097442e+00 7.61129737e-01 7.61129737e-01
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  34
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [96.05, 3.72, 0.11, 0.07, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.053313 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  88
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  44.0
Iteration TIME (sec):  0.014437991999999955
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.79860462 11.02767947  0.70818509  0.07868726  0.07868723]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.31759224  9.95419165  0.45246326  0.09049265  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.4489677  16.13476517  2.68302664  1.2520791   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [21.06422875 15.73386854  2.09469271  0.61095204  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.91056459  3.48782543  0.25520674  0.08506891  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [22.17714983  5.62412222  0.25182637  0.08394212  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [22.33558849 11.67479996  0.2484      0.1656      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [22.34777938 18.61435337  3.26567603  1.22462851  0.2449257 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [23.15825177  6.92017368  0.72420422  0.40233568  0.16093427]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [23.3265492  14.26949356  0.55492475  0.15854993  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [23.66531315 17.88421056  3.90322942  0.7025813   0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [24.40281934 17.18705677  4.7618999   4.7618999   0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [25.62997171 16.69685431  2.8478867   0.8032501   0.51115915]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [26.68102934 16.00093699  3.44795698  3.44795698  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [27.4026906  19.67332175  3.44790175  0.47324142  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [27.89800528 19.19291769  4.30186086  3.30912374  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [29.37718736  7.05532336  2.58910949  0.45309416  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [28.76626191 29.59610677  6.57691261  1.1383118   0.18971863]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [97.06, 2.28, 0.31, 0.31, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````
API response time: 1.164844 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  72
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  45.0
Iteration TIME (sec):  0.01298056900000022
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.58604544 11.15506101  0.71601057  0.07955676  0.07955673]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.06228825 10.06927283  0.45769422  0.09153884  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.17318498 16.33163315  2.71477954  1.26689712  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.76523283 15.93553924  2.12071474  0.6185418   0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.59892673  3.53341986  0.25854292  0.08618097  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [21.8530856   5.69961717  0.25520674  0.08506891  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.99993868 11.83583929  0.25182637  0.16788425  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [22.00202278 18.87839993  3.31199999  1.242       0.2484    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [22.78960614  7.02120346  0.73477711  0.4082095   0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [22.94367274 14.48408446  0.56326995  0.16093427  0.16093427]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [23.23925202 18.16925408  3.96374821  0.71347468  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [23.9317202  17.47942462  4.84061432  4.84061432  0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [25.09692646 17.00124705  2.89829569  0.81746801  0.52020692]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [26.07923907 16.3152688   3.51363826  3.51363826  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [26.77966659 20.07899993  3.51899999  0.483       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [27.2351455  19.60571583  4.39438458  3.38029583  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [28.64707056  7.21388975  2.64729899  0.46327732  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [29.46556375 14.64629052  6.73168468  1.16509927  0.19418321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [30.75814529 11.0470702   1.91317975  1.48117142  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [31.87040957 17.33530675  4.81222442  2.2858066   0.30076403]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [34.36824104  3.81222345  0.11379771  0.05689886  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [35.33674654  4.69199998  1.71119999  1.0488      0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [36.30120015 12.23940193  0.58791887  0.26723585  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [38.2876503   5.67983589  0.61961846  0.25817436  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [37.78568113 29.70469464  2.43807376  0.6965925   0.14926982]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [40.43663948 27.46569224  4.5892418   2.77266692  0.62145983]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [46.63445207  7.85509768  0.65459147  0.13091829  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [47.96147483 19.45799993  2.06999999  1.242       0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [5.33364096e+01 8.93839537e+00 1.56129177e+00 3.51290648e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [56.16091208 21.87030941  0.51115915  0.40162505  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [63.75688981 12.50709458  2.16338933  0.37183254  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [74.89003023  5.55439284  0.33943512  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [8.74233330e+01 1.02396000e+01 8.27999997e-01 4.96799998e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [1.13537878e+02 8.84385139e+00 9.32189741e-01 9.32189741e-01
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [1.87452593e+02 7.26000672e+00 2.14677618e-01 1.36613030e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  35
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [95.76, 3.71, 0.39, 0.09, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.208415 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  89
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  46.0
Iteration TIME (sec):  0.013309120000000174
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.38090414 11.28106533  0.72375145  0.08041686  0.08041683]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.81593347 10.18305353  0.46286607  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.90774294 16.52622496  2.74616532  1.28154381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.47803382 16.13476517  2.14642131  0.62603955  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.29965448  3.57843339  0.26183659  0.08727886  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [21.54222872  5.77412513  0.25854292  0.08618097  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.67834945 11.99471673  0.25520674  0.17013783  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [21.67116537 19.13880396  3.35768491  1.25913184  0.25182637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [22.4373142   7.12079998  0.7452      0.414       0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [22.57829769 14.69554213  0.57149331  0.1632838   0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [22.83443463 18.4500105   4.02335679  0.72420422  0.16093427]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [23.48576459 17.76711368  4.91806907  4.91806907  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [24.59448311 17.30043533  2.94784279  0.83144284  0.52909999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [25.51482048 16.62383158  3.57811406  3.57811406  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [26.19582776 20.47664249  3.58868992  0.49256528  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [26.61579159 20.00999993  4.48499998  3.44999999  0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [27.96705303  7.36904492  2.70423667  0.47324142  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [28.66585229 14.9866991   6.88297738  1.19128455  0.19854742]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [29.91405964 11.31987844  1.96042588  1.51774906  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [30.84931162 17.79863862  4.93723808  2.34518809  0.30857738]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [33.25111323  3.92274557  0.11709688  0.05854844  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [34.11219618  4.83640288  1.76386458  1.08107829  0.28449429]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [34.95402654 12.64079996  0.6072      0.276       0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [36.75931875  5.8791887   0.64136604  0.26723585  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [36.150761   30.82601844  2.53010872  0.7228882   0.15490462]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [38.20412583 28.60761535  4.77663431  2.88588323  0.6468359 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [43.95861048  8.23849595  0.68654133  0.13730827  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [44.86947951 20.51053283  2.18197158  1.30918295  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [4.94208248e+01 9.48059997e+00 1.65599999e+00 3.72599999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [51.36806676 23.38034422  0.54645212  0.42935524  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [57.27450881 13.50920615  2.33672755  0.40162505  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [65.48760128  6.0845325   0.37183254  0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [7.31157103e+01 1.14482208e+01 9.25732139e-01 5.55439284e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [87.11973301 10.21199996  1.0764      1.0764      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [1.14290801e+02 8.89165600e+00 2.62925312e-01 1.67316107e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [1.86886625e+02 7.24049057e+00 7.61129737e-01 1.75645324e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  36
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [94.44, 2.85, 2.22, 0.39, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.077071 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  90
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  47.0
Iteration TIME (sec):  0.01405186299999972
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.1827599  11.40573616  0.73141041  0.08126785  0.08126782]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.57801743 10.29557688  0.46798077  0.09359615  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.65201248 16.71861779  2.77719642  1.296025    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.20187777 16.33163315  2.17182363  0.63344856  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.01195186  3.62288768  0.26508934  0.08836311  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [21.24370649  5.84768383  0.26183659  0.08727886  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.36986678 12.15151706  0.25854292  0.17236194  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [21.35416792 19.39571215  3.40275652  1.27603369  0.25520674]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [22.10020289  7.21902255  0.7554791   0.41971061  0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [22.22913135 14.90399995  0.5796      0.1656      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [22.44915852 18.72666762  4.08209504  0.73477711  0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [23.06280129 18.05034163  4.99432275  4.99432275  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [24.11983384 17.59467734  2.99657077  0.84518663  0.53784604]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [24.98407734 16.92693177  3.64144843  3.64144843  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [25.64723856 20.86670883  3.65705206  0.50194832  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [26.03539221 20.40627602  4.57382049  3.51832345  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [27.33166659  7.52099997  2.75999999  0.483       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [27.92547296 15.3197845   7.03101533  1.2169065   0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [29.13368778 11.58626497  2.00655986  1.55346569  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [29.91685761 18.25052491  5.05916355  2.40310269  0.31619772]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [32.23316948  4.03023795  0.12030561  0.06015281  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [33.00314336  4.97661751  1.81500168  1.11242038  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [33.74235361 13.02983835  0.62588743  0.28449429  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [35.39562654  6.07199998  0.6624      0.276       0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [34.70542036 31.90796049  2.61891133  0.74826038  0.16034151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [36.29056132 29.70639998  4.95694769  2.99482256  0.67125333]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [41.68480956  8.60482838  0.71706903  0.14341381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [42.29260352 21.51162832  2.2884711   1.37308266  0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [4.62368484e+01 9.99342983e+00 1.74557726e+00 3.92754884e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [47.59404983 24.79859991  0.5796      0.4554      0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [52.38848245 14.44194885  2.49806683  0.42935524  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [58.83232717  6.57204623  0.40162505  0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [63.9326652  12.54089754  1.01408875  0.60845325  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [72.86113396 11.41736305  1.20345178  1.20345178  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [8.76993330e+01 1.02672000e+01 3.03599999e-01 1.93199999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [1.13944217e+02 8.86775369e+00 9.32189741e-01 2.15120710e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [1.84310493e+02 5.56210192e+00 4.33258465e+00 7.61129737e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  37
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [96.56, 2.92, 0.39, 0.09, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.786528 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  91
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  48.0
Iteration TIME (sec):  0.014863241000000027
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.99122462 11.52911496  0.73899     0.08211003  0.08211   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.34806938 10.40688365  0.47304017  0.09460803  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.40541685 16.90888454  2.8078846   1.31034615  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.93607639 16.52622496  2.19693225  0.64077191  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [20.73509278  3.66680307  0.26830266  0.08943422  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.95672491  5.92032865  0.26508934  0.08836311  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.0736246  12.3063197   0.26183659  0.17455773  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [21.05009002 19.64926163  3.44723888  1.29271458  0.25854292]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [21.77721332  7.31592651  0.76562022  0.42534456  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.89501103 15.10958207  0.58759486  0.16788425  0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [22.08190583 18.99939993  4.13999999  0.7452      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [22.66092737 18.32930979  5.06942956  5.06942956  0.16093427]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [23.67051745 17.88421056  3.04451895  0.85871047  0.54645212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [24.48380403 17.22484962  3.70369992  3.70369992  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [25.13049466 21.24961616  3.72415953  0.51115915  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [25.49003497 20.79500192  4.66094871  3.58534516  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [26.73624224  7.66994513  2.81465876  0.49256528  0.14073294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [27.23747815 15.64599994  7.17599998  1.242       0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [28.40941531 11.84666299  2.05165672  1.5883794   0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [29.06101539 18.6917741   5.17821898  2.45965402  0.32363869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [31.30059184  4.13493689  0.12343095  0.06171548  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [31.99255826  5.11298844  1.86473696  1.1429033   0.30076403]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [32.64496466 13.40759305  0.64403285  0.29274221  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [34.16909504  6.25887432  0.68278629  0.28449429  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [33.41578654 32.95439989  2.70479999  0.7728      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [34.62751376 30.76659445  5.13092832  3.09993586  0.69481321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [39.72204243  8.95618934  0.74634911  0.14926982  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [40.10291181 22.468163    2.39023011  1.43413806  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [43.58330122 10.48119763  1.83077688  0.4119248   0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [44.52521288 26.1400195   0.61095204  0.48003375  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [48.54107483 15.31799995  2.64959999  0.4554      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [53.81594921  7.02581295  0.42935524  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [57.43272473 13.54571752  1.09534104  0.65720462  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [63.70956567 12.50709458  1.31831538  1.31831538  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [7.33471433e+01 1.14790785e+01 3.39435118e-01 2.16004166e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [8.74325330e+01 1.02396000e+01 1.07640000e+00 2.48399999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [1.12366666e+02 6.81215580e+00 5.30631084e+00 9.32189741e-01
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [1.88447916e+02 5.69871495e+00 7.61129737e-01 1.75645324e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  38
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [89.79, 9.46, 0.29, 0.29, 0.08]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.993711 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  92
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  49.0
Iteration TIME (sec):  0.014757891999999995
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.80593957 11.65124108  0.74649263  0.08294366  0.08294363]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.12565458 10.51701247  0.47804602  0.0956092   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.16742608 17.09709417  2.83824099  1.32451246  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.67999973 16.71861779  2.22175713  0.6480125   0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [20.46841333  3.7101987   0.27147795  0.09049265  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.68055972  5.99209283  0.26830266  0.08943422  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [20.788835   12.4591991   0.26508934  0.17672623  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.75807794 19.89958079  3.49115452  1.30918295  0.26183659]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [21.46738735  7.4115636   0.77562875  0.43090486  0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.57488726 15.31240433  0.59548239  0.17013783  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.73131808 19.26836988  4.19710613  0.7554791   0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [22.27845273 18.60420477  5.14343975  5.14343975  0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [23.24436653 18.16925408  3.09172361  0.87202461  0.55492475]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [24.01120483 17.51784219  3.76492225  3.76492225  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [24.64263442 21.62574476  3.79007898  0.52020692  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [24.97633555 21.17659342  4.74647784  3.6511368   0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [26.17676646  7.81605245  2.86827613  0.50194832  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [26.59600319 15.96575376  7.31811278  1.26659644  0.21109941]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [27.73484141 12.10145908  2.09578342  1.622542    0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [28.27190899 19.12310378  5.29459798  2.51493404  0.33091237]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [30.44210984  4.23704947  0.12647909  0.06323954  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [31.06672267  5.24581546  1.91317975  1.17259404  0.30857738]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [31.64500872 13.77499239  0.66168086  0.30076403  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [33.05824778  6.44032854  0.7025813   0.29274221  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [32.25587096 33.96861789  2.78804401  0.796584    0.17069657]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  25
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [91.78, 7.53, 0.38, 0.23, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````
API response time: 1.038157 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  79
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  50.0
Iteration TIME (sec):  0.01294658400000026
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.62657275 11.77215193  0.7539206   0.08376899  0.08376896]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.91037074 10.62599996  0.483       0.0966      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.93755206 17.28331199  2.86827613  1.33852886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.43307026 16.90888454  2.24630768  0.65517307  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [20.21130497  3.7530926   0.27461653  0.09153884  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.41454866  6.06300764  0.27147795  0.09049265  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [20.51477921 12.61022521  0.26830266  0.17886844  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.47735502 20.14679003  3.53452457  1.32544671  0.26508934]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [21.16985514  7.50598223  0.78550977  0.43639432  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.26781037 15.51257497  0.6032668   0.17236194  0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.39617585 19.533729    4.25344565  0.76562022  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.91387054 18.87519993  5.21639998  5.21639998  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [22.83946383 18.4500105   3.1382183   0.88513849  0.56326995]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [23.56382918 17.80614597  3.82516483  3.82516483  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [24.18106746 21.99544239  3.85487135  0.52909999  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [24.49134976 21.55142948  4.83049282  3.7157637   0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [25.64976744  7.95947822  2.92090944  0.51115915  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [25.99605907 16.27941535  7.45751793  1.29072426  0.21512071]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [27.10454159 12.35099996  2.13899999  1.65599999  0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [27.54134844 19.54515429  5.40847333  2.56902483  0.33802958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [29.6484274   4.3367584   0.12945547  0.06472774  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [30.21444748  5.37536127  1.96042588  1.20155134  0.31619772]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [30.72891164 14.132844    0.67887024  0.30857738  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [32.04602742  6.61680857  0.72183366  0.30076403  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [33.21819693 16.97670972  2.86887362  0.81967818  0.17564532]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [33.16531419 31.79199989  5.29919998  3.20159999  0.7176    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [38.00564447  9.29427692  0.77452308  0.15490462  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [38.21275867 23.38560549  2.48783037  1.49269822  0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [41.32844798 10.94725389  1.91218408  0.43024142  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [41.96764062 27.41588375  0.64077191  0.50346364  0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [45.41254799 16.14658968  2.79292362  0.48003375  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [49.86587482  7.45199997  0.4554      0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [52.53345954 14.48098114  1.17096883  0.7025813   0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [57.23191221 13.50920615  1.42394335  1.42394335  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [64.13548295 12.5747005   0.37183254  0.23662071  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [7.31234247e+01 1.14482208e+01 1.20345178e+00 2.77719642e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [8.62181330e+01 7.86599997e+00 6.12719998e+00 1.07640000e+00
 8.27999997e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [1.14900310e+02 6.97947191e+00 9.32189741e-01 2.15120710e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [1.75235485e+02 1.84622752e+01 5.65968266e-01 5.65968266e-01
 1.56129177e-01]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  39
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.04, 4.73, 0.11, 0.09, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.299945 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  93
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  51.0
Iteration TIME (sec):  0.014380775999999873
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.45281618 11.89188308  0.76127609  0.08458627  0.08458623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.70184506 10.7338809   0.48790368  0.09758074  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.71534461 17.46759994  2.89799999  1.3524      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.19475729 17.09709417  2.2705928   0.66225623  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.96320903  3.79550177  0.27771964  0.09257321  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.15808471  6.13310254  0.27461653  0.09153884  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [20.25080005 12.75946384  0.27147795  0.1809853   0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.20721274 20.39100246  3.57736885  1.34151332  0.26830266]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````
Tokens: ['```', '``', 'module', "Here's", '\n']
Probs: [98.0, 1.79, 0.05, 0.05, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````
API response time: 1.006006 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  62
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  52.0
Iteration TIME (sec):  0.01164496100000001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.28438393 12.0104684   0.7685612   0.08539572  0.08539569]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.49973137 10.84068832  0.49275856  0.09855171  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.50038763 17.6500168   2.92742206  1.3661303   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.96457205 17.28331199  2.2946209   0.66926443  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.72361145  3.83744229  0.28078846  0.09359615  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.91061062  6.20240533  0.27771964  0.09257321  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.99629513 12.90697699  0.27461653  0.18307769  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.45790576  9.81616225  3.61970605  1.35738977  0.27147795]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.88382534  7.59922782  0.79526803  0.44181557  0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.97291822 15.71019536  0.61095204  0.17455773  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.07538057 19.79561892  4.3090486   0.77562875  0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.56583218 19.14245669  5.28835373  5.28835373  0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [22.45410652 18.72666762  3.18403413  0.89806091  0.57149331]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [23.139519   18.08997912  3.88447325  3.88447325  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [23.74351694 22.35902805  3.91859255  0.53784604  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [24.03250244 21.91985668  4.91307132  3.77928563  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [25.15222487  8.10036487  2.97261096  0.52020692  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [25.43337204 16.58732021  7.59436454  1.31440925  0.21906821]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [26.5138842  12.59559796  2.18136054  1.68879526  0.14073294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [26.86247815 19.95849993  5.51999998  2.62199999  0.345     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [28.91180046  4.43422581  0.13236495  0.06618247  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [29.42650373  5.50185767  2.00655986  1.22982701  0.32363869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [29.88560185 14.48185566  0.69563499  0.31619772  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [31.1186936   6.78870236  0.74058571  0.30857738  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [32.08625199 17.45561236  2.94748746  0.84213927  0.18045842]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [31.86696135 32.7858316   5.46229031  3.30013373  0.73968515]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  26
Leaf selection - action scores:  [1.91316790e+02 3.51290648e+00 2.92742206e-01 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  27
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.08, 1.8, 0.09, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````
API response time: 1.054158 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  81
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  53.0
Iteration TIME (sec):  0.013383723000000014
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.12100996 12.12794016  0.77577789  0.08619758  0.08619754]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.30370789 10.94645363  0.49756607  0.09951321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.29229599 17.83061843  2.95655136  1.37972397  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.74206376 17.46759994  2.31839999  0.6762      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.49203813  3.87892936  0.2838241   0.09460803  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.67161359  6.27094228  0.28078846  0.09359615  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.75071143 13.05282317  0.27771964  0.18514643  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.18889796  9.9354282   3.66155376  1.37308266  0.27461653]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.60857608  7.69134303  0.80490799  0.44717111  0.17886844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.68942649 15.90536055  0.6185418   0.17672623  0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.76793997 20.05417226  4.36394316  0.78550977  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.2331271  19.40612563  5.35934152  5.35934152  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [22.08677642 18.99939993  3.22919999  0.9108      0.5796    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [22.73636531 18.36954336  3.94288966  3.94288966  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [23.32797257 22.71679522  3.98129401  0.54645212  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [23.59753016 22.2821929   4.99428462  3.8417574   0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [24.68149701  8.23884268  3.02342851  0.52909999  0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [24.90425723 16.88977414  7.7287885   1.33767493  0.22294582]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [25.9588878  12.83553567  2.222914    1.72096568  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [26.22951116 20.36365807  5.62931752  2.67392582  0.35183235]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [28.22571915  4.52959642  0.13521183  0.06760592  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [28.69520327  5.62551036  2.05165672  1.25746702  0.33091237]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [29.10594732 14.82265183  0.71200511  0.32363869  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [30.26503911  6.95634988  0.75887453  0.31619772  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [31.05845851 17.92206958  3.02405832  0.86401666  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [32.81789145 22.16722541  5.62065036  3.39580959  0.76112974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [36.48826525  9.6204906   0.80170755  0.16034151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [36.55986806 24.26838973  2.58174359  1.54904615  0.25817436]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [39.38203895 11.3942631   1.9902643   0.44780947  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [39.79435484 28.63495667  0.66926443  0.52585062  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [42.80522104 16.93468612  2.929243    0.50346364  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [46.65384738  7.85509768  0.48003375  0.13091829  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [48.67562483 15.35939995  1.242       0.7452      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [52.34945015 14.44194885  1.52225947  1.52225947  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [57.61528157 13.58222888  0.40162505  0.25557958  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [63.93942579 12.54089754  1.31831538  0.30422663  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [72.10511938  8.79445533  6.85041783  1.20345178  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [8.81685330e+01 8.05919997e+00 1.07640000e+00 2.48399999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [106.80938062  22.6115768    0.69316673   0.69316673   0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [1.85481462e+02 9.23113758e+00 2.14677618e-01 1.75645324e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  40
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [97.38, 2.29, 0.19, 0.11, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 2.023957 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  94
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  54.0
Iteration TIME (sec):  0.014464992999999815
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.96244644 12.24432917  0.78292807  0.08699204  0.08699201]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.11347493 11.05120677  0.50232758  0.10046552  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.09071248 18.00945796  2.98539645  1.39318501  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.52681575 17.6500168   2.34193765  0.68306515  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.26805127  3.91997737  0.28682761  0.0956092   0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.44062072  6.33873822  0.2838241   0.09460803  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.51354008 13.19705764  0.28078846  0.18719231  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.92973212 10.05334639  3.70292856  1.38859821  0.27771964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.34344729  7.78236801  0.81443386  0.45246326  0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.4166197  16.09815984  0.62603955  0.17886844  0.17886844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.47295484 20.30951339  4.41815571  0.79526803  0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.9146647  19.66634747  5.42940124  5.42940124  0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.73611477 19.26836988  3.27374278  0.92336335  0.58759486]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [22.35267264 18.64502572  4.00045314  4.00045314  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.93265172 23.0690146   4.04302318  0.55492475  0.07927496]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.9, 3.72, 0.24, 0.09, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
API response time: 1.902622 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  69
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  55.0
Iteration TIME (sec):  0.012387616000000268
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.80846229 12.35966481  0.79001354  0.08777932  0.08777928]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.92875304 11.15497625  0.50704438  0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.8953054  18.186586    3.01396548  1.40651723  0.        ]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  3
Leaf selection - action scores:  [1.90399531e+02 4.46919768e+00 1.75645324e-01 7.80645884e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.09, 1.8, 0.07, 0.03, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````
API response time: 1.541090 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  70
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  56.0
Iteration TIME (sec):  0.011416457999999796
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.65884155 12.47397519  0.79703602  0.08855959  0.08855956]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.74928135 11.25778926  0.51171769  0.10234354  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.07254589 11.90803381  3.04226625  1.41972425  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.31844237 17.83061843  2.36524109  0.68986198  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.05124574  3.96059999  0.2898      0.0966      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.21719531  6.40581668  0.28682761  0.0956092   0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.28431179 13.33973268  0.2838241   0.18921607  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.67982375 10.16996149  3.74384614  1.4039423   0.28078846]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.08783397  7.87234058  0.8238496   0.45769422  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.15384364 16.28867724  0.63344856  0.1809853   0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.18960845 20.56175912  4.47171107  0.80490799  0.17886844]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  11
Leaf selection - action scores:  [1.89189530e+02 4.44968154e+00 1.26854956e+00 1.75645324e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [93.58, 4.66, 0.81, 0.81, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
API response time: 1.369253 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  66
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  57.0
Iteration TIME (sec):  0.011184720000000148
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.51338231 12.58728717  0.80399716  0.08933305  0.08933302]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.5748159  11.35967179  0.51634872  0.10326974  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.87799595 12.02393212  3.07030616  1.43280954  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.11658591 18.00945796  2.38831716  0.6965925   0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.84124611  4.00081015  0.29274221  0.09758074  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.00093324  6.47219998  0.2898      0.0966      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.06259319 13.4808978   0.28682761  0.19121841  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.43863578 10.28531578  3.78432133  1.4191205   0.2838241 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.84118071  7.9612964   0.83315893  0.46286607  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.90049866 16.4769919   0.64077191  0.18307769  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.44008591 13.54067957  4.52463257  0.81443386  0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.60945993 19.92325397  5.49856838  5.49856838  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.4009019  19.533729    3.3176876   0.93575804  0.59548239]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.98692936 18.91659993  4.05719999  4.05719999  0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [23.29209147 11.20796827  4.10382393  0.56326995  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [23.18443445 22.63873063  5.07419824  3.90322942  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [24.23526189  8.37503113  3.07340592  0.53784604  0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [24.40551883 17.18705677  7.86091412  1.36054283  0.22675714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [25.43610833 13.07106973  2.26370481  1.75254566  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [25.63752455 20.76109679  5.73655225  2.72486232  0.35853452]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [27.58466659  4.62299998  0.138       0.069       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [28.01408324  5.74650292  2.09578342  1.28451242  0.33802958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [28.38234066 15.15578673  0.72800722  0.33091237  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [29.4758201   7.1200511   0.77673285  0.32363869  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [30.11988983 18.377004    3.09873767  0.88535362  0.18971863]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [31.57133167 22.79292735  5.7746693   3.4888627   0.78198647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [35.13434654  9.93599997  0.828       0.1656      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [35.09863883 25.1201699   2.6723585   1.6034151   0.26723585]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [37.67994758 11.82438563  2.06539487  0.46471385  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [37.91836541 29.80420785  0.6965925   0.54732268  0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [40.58964958 17.68770279  3.05949454  0.52585062  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [43.97691824  8.23849595  0.50346364  0.13730827  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [45.53861746 16.19022911  1.30918295  0.78550977  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [48.50484983 15.31799995  1.61459999  1.61459999  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [52.7007408  14.52001344  0.42935524  0.27322606  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [57.43880996 13.54571752  1.42394335  0.32860231  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [63.04702769  9.63384313  7.50425675  1.31831538  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [7.37405795e+01 9.01045949e+00 1.20345178e+00 2.77719642e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [81.94013303 26.10959991  0.8004      0.8004      0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [1.13083735e+02 1.13057884e+01 2.62925312e-01 2.15120710e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [1.90048240e+02 4.46919768e+00 3.70806795e-01 2.14677618e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  41
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [93.4, 5.97, 0.3, 0.23, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.081194 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  95
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  58.0
Iteration TIME (sec):  0.014790395999999983
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.37189542 12.69962646  0.81089855  0.09009987  0.09009984]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.40512831 11.46064863  0.52093857  0.10418771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.68925814 12.13878151  3.09809231  1.44577641  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.92091426 18.186586    2.41117239  0.70325861  0.10046552]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  4
Leaf selection - action scores:  [1.91433887e+02 3.51290648e+00 1.36613030e-01 5.85484413e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.83, 1.1, 0.03, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````
API response time: 1.203926 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  59
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  59.0
Iteration TIME (sec):  0.010837202999999906
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.23420356 12.81101769  0.8177417   0.09086022  0.09086019]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.24000451 11.56074353  0.52548834  0.10509767  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.50604969 12.25260995  3.12563145  1.45862801  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.09839521 11.90803381  2.433813    0.70986213  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.63770377  4.04062019  0.29565514  0.09855171  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.79146003  6.53790928  0.29274221  0.09758074  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.84798324 13.62059995  0.2898      0.1932      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.20567353 10.39944928  3.82436817  1.43413806  0.28682761]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.60297641  8.0492692   0.84236538  0.46798077  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.65603428 16.66317851  0.6480125   0.18514643  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.15869989 13.70493181  4.57694219  0.8238496   0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.3166201  20.17696872  5.56687619  5.56687619  0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.080039   19.79561892  3.36105791  0.94799069  0.6032668 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.63778257 19.18442776  4.11316401  4.11316401  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.89942598 11.37889656  4.16373694  0.57149331  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.79144319 22.98973963  5.15287268  3.96374821  0.07927496]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', "Here's"]
Probs: [96.93, 1.38, 1.38, 0.24, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````
API response time: 1.197646 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  70
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  60.0
Iteration TIME (sec):  0.011766732999999974
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.10014036 12.92148446  0.82452806  0.09161426  0.09161423]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.07924363 11.6599792   0.52999905  0.10599981  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.32810652 12.36544421  3.15293005  1.47136736  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.90358183 12.02393212  2.45624493  0.71640477  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.44029466  4.08004181  0.29853964  0.09951321  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.58842791  6.6029647   0.29565514  0.09855171  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.64011031 13.7588837   0.29274221  0.19516147  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.98048078 10.51239996  3.86399999  1.44899999  0.2898    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.37274974  8.13629085  0.8514723   0.47304017  0.18921607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.41994393 16.84730762  0.65517307  0.18719231  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.88804868 13.8673279   4.6286607   0.83315893  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.03533442 20.42760779  5.63435594  5.63435594  0.17886844]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  12
Leaf selection - action scores:  [1.71371288e+02 1.80719522e+01 4.03984245e+00 1.48322718e+00
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [93.13, 5.95, 0.81, 0.08, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
API response time: 1.392874 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  67
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  61.0
Iteration TIME (sec):  0.012321705000000183
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.96954928 13.03104941  0.83125901  0.09236215  0.09236211]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.92265701 11.7583774   0.5344717   0.10689434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.15518193 12.47730987  3.17999433  1.48399735  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.71458846 12.13878151  2.47847384  0.7228882   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.24871698  4.11908616  0.30139655  0.10046552  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.39151367  6.6673854   0.29853964  0.09951321  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.43862931 13.89579139  0.29565514  0.19710342  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.76263586 10.62420384  3.90322942  1.46371103  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.15006544  8.22239157  0.86048284  0.47804602  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.19176046 17.02944597  0.66225623  0.18921607  0.18921607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.62746951 14.0279294   4.67980767  0.84236538  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.28398609 13.45018692  5.70103703  5.70103703  0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.7725336  20.05417226  3.40387566  0.96006749  0.61095204]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.30401786 19.44866009  4.16837673  4.16837673  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.52512936 11.54739996  4.22279999  0.5796      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [23.14875938 11.1677347   5.23036383  4.02335679  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [23.81146937  8.50904013  3.12258353  0.54645212  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [23.93436969 17.47942462  7.99085539  1.38303266  0.23050544]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [24.94254964 13.30243406  2.3037735   1.78356658  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [25.08230119 21.1512412   5.84181887  2.77486397  0.36511368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [26.98393221  4.71455343  0.14073294  0.07036647  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [27.37766659  5.86499998  2.13899999  1.311       0.345     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [27.70838692 15.48175492  0.74366508  0.33802958  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [28.74333598  7.28007223  0.7941897   0.33091237  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [29.25843499 18.82122957  3.17165913  0.90618832  0.19418321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [30.45021886 23.40236894  5.92468569  3.57949761  0.80230119]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [33.91660636 10.24179434  0.85348286  0.17069657  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [33.79482654 25.94399991  2.75999999  1.65599999  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [36.17521754 12.23940193  2.1378868   0.48102453  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [36.27786222 30.92928818  0.7228882   0.56798359  0.25817436]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [38.67715368 18.40994475  3.18442288  0.54732268  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [41.70219305  8.60482838  0.52585062  0.14341381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [42.92422154 16.98045554  1.37308266  0.8238496   0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [45.37860621 16.14658968  1.70193783  1.70193783  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [48.83087483 15.40079995  0.4554      0.2898      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [52.53903558 14.48098114  1.52225947  0.35129065  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [56.63555987 10.40573987  8.10552369  1.42394335  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [6.44802731e+01 9.87046383e+00 1.31831538e+00 3.04226625e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [68.51790734 29.19142013  0.8948744   0.8948744   0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [8.67701330e+01 1.30548000e+01 3.03599999e-01 2.48399999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [1.15880304e+02 5.47362694e+00 4.54143720e-01 2.62925312e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [1.82280814e+02 1.16511398e+01 5.85484413e-01 4.48871383e-01
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  42
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [98.17, 1.4, 0.31, 0.07, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.215846 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  96
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  62.0
Iteration TIME (sec):  0.01643087199999993
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.8422833  13.13973429  0.8379359   0.09310402  0.09310399]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.77006703 11.85595897  0.53890723  0.10778145  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.98704501 12.58823147  3.2068302   1.49652076  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.53113191 12.25260995  2.50050516  0.729314    0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.06268929  4.15776388  0.30422663  0.10140888  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.20041625  6.73118958  0.30139655  0.10046552  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.24321947 14.0313633   0.29853964  0.19902643  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.55174846 10.73489516  3.94206848  1.47827568  0.29565514]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.93452074  8.30759997  0.8694      0.483       0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.97105247 17.20965676  0.66926443  0.19121841  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.37635548 14.18679452  4.73040166  0.8514723   0.18921607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.00464671 13.61339296  5.76694717  5.76694717  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.47748628 20.30951339  3.44616145  0.97199426  0.6185418 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.98454117 19.70943795  4.22286763  4.22286763  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.16781712 11.71357884  4.28104825  0.58759486  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.75840815 11.33807561  5.30672355  4.08209504  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [23.40830151  8.6409711   3.17099857  0.55492475  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [23.48836675 17.76711368  8.11871719  1.40516259  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [24.4755911  13.52984257  2.34315709  1.8140571   0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [24.56020504 21.53447877  5.94522193  2.82398042  0.37157637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [26.41946675  4.80436251  0.14341381  0.0717069   0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [26.78127678  5.98114987  2.18136054  1.33696291  0.35183235]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [27.07866659 15.80099995  0.759       0.345       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [28.06111344  7.43665083  0.811271    0.33802958  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [28.46415332 19.25546873  3.24294126  0.92655465  0.19854742]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [29.43513004 23.99675562  6.07099626  3.66789357  0.82211408]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [32.81372194 10.53871943  0.87822662  0.17564532  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [32.62215735 26.742463    2.84494287  1.70696572  0.28449429]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [34.83258654 12.64079996  2.20799999  0.4968      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [34.82758532 32.01485483  0.74826038  0.58791887  0.26723585]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [37.00472234 19.10490255  3.30463179  0.56798359  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [39.73862797  8.95618934  0.54732268  0.14926982  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [40.70264228 17.73550739  1.43413806  0.86048284  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [42.77318245 16.93468612  1.78500746  1.78500746  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [45.68408223 16.23386854  0.48003375  0.30547602  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [48.68079983 15.35939995  1.61459999  0.3726      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [51.80299803 11.12420384  8.66516931  1.52225947  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [5.79256282e+01 1.06613194e+01 1.42394335e+00 3.28602312e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [59.90335256 31.97759858  0.98028579  0.98028579  0.27042367]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [7.25679854e+01 1.45957101e+01 3.39435118e-01 2.77719642e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [8.89229330e+01 6.32039998e+00 5.24399998e-01 3.03599999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [1.11123746e+02 1.42696737e+01 7.17069032e-01 5.49752924e-01
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [1.91590016e+02 2.73226059e+00 6.05000560e-01 1.36613030e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  43
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [98.7, 1.1, 0.15, 0.03, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.371243 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  97
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  63.0
Iteration TIME (sec):  0.015244927000000352
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.7182038  13.24755995  0.84456     0.09384004  0.09384   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.6213067  11.95274391  0.54330654  0.10866131  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.82347942 12.69823251  3.23344335  1.50894023  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.35294779 12.36544421  2.52234404  0.73568368  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.8819489   4.19608509  0.30703062  0.10234354  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.01485491  6.79439463  0.30422663  0.10140888  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.05358203 14.16563777  0.30139655  0.20093103  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.34745657 10.84450649  3.98052859  1.49269822  0.29853964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.72574239  8.39194325  0.87822662  0.48790368  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.75742075 17.38799994  0.6762      0.1932      0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.1341495  14.34397838  4.78046021  0.86048284  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.73596411 13.77475469  5.83211248  5.83211248  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.19408016 20.56175912  3.48793463  0.98377643  0.62603955]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  13
Leaf selection - action scores:  [1.82651621e+02 1.16706560e+01 5.85484413e-01 1.75645324e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.77, 3.71, 0.24, 0.24, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
API response time: 1.091042 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  68
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  64.0
Iteration TIME (sec):  0.012224600000000585
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.59718019 13.35454647  0.85113255  0.09457032  0.09457028]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.47621851 12.04875143  0.54767052  0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.66428233 12.80733554  3.25983925  1.52125832  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.17978903 12.47730987  2.54399546  0.74199868  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.70625011  4.23405948  0.30980923  0.10326974  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.83456764  6.8570171   0.30703062  0.10234354  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.86943841 14.29865138  0.30422663  0.20281775  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.14942406 10.95306884  4.01862064  1.50698274  0.30139655]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.52338378  8.47544723  0.88696541  0.49275856  0.19710342]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.55049535 17.56453238  0.68306515  0.19516147  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.90033906 14.49953326  4.82999998  0.8694      0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.47728033 13.93433325  5.89655767  5.89655767  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.44461054 13.54067957  3.5292134   0.99541916  0.63344856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.6783643  19.9668934   4.27666429  4.27666429  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [21.82624646 11.87752683  4.33851456  0.59548239  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.38631759 11.50599996  5.38199998  4.13999999  0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [23.02413988  8.77091781  3.21868543  0.56326995  0.16093427]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [23.06535855 18.05034163  8.24459628  1.42694936  0.23782489]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [24.03292933 13.75349148  2.38188959  1.84404355  0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [24.06808261 21.91116381  6.04685701  2.87225708  0.37792856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [25.88776747  4.89252331  0.14604547  0.07302274  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [26.22089379  6.09508677  2.222914    1.36243116  0.35853452]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [26.48855227 16.11392141  0.77403116  0.35183235  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [27.42366659  7.58999997  0.828       0.345       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [27.72880121 19.68036613  3.31268992  0.94648283  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [28.51056546 24.57715085  6.21386278  3.75420876  0.84146058]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [31.80875802 10.82750494  0.90229208  0.18045842  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [31.56009649 27.5177674   2.92742206  1.75645324  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [33.62499971 13.02983835  2.2759543   0.51208972  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [33.53354654 33.06479989  0.7728      0.6072      0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [35.52621619 19.7754529   3.42061888  0.58791887  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [38.02153212  9.29427692  0.56798359  0.15490462  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [38.78495966 18.45970136  1.49269822  0.89561893  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [40.55922847 17.68770279  1.86437948  1.86437948  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [43.06152981 17.02622496  0.50346364  0.32038595  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [45.54346628 16.19022911  1.70193783  0.39275488  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [47.99769983 11.79899996  9.19079997  1.61459999  0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [5.29851189e+01 1.13974299e+01 1.52225947e+00 3.51290648e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [53.80592885 34.5397541   1.05882967  1.05882967  0.29209094]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [63.45266319 15.98879929  0.37183254  0.30422663  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [7.43731631e+01 7.06642200e+00 5.86297022e-01 3.39435118e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [85.26133302 16.47719994  0.828       0.6348      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [1.16824445e+02 3.34632215e+00 7.40971333e-01 1.67316107e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [1.92624372e+02 2.14677618e+00 2.92742206e-01 5.85484413e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  44
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [98.95, 0.67, 0.19, 0.09, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.102378 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  98
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  65.0
Iteration TIME (sec):  0.015041908999999798
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.47908916 13.46071313  0.85765473  0.09529501  0.09529497]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.33465391 12.14399996  0.552       0.1104      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.50926304 12.9155622   3.28602312  1.53347745  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.01142442 12.58823147  2.56546416  0.74826038  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.53536295  4.27169631  0.31256314  0.10418771  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.65930932  6.91907282  0.30980923  0.10326974  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.69052858 14.43043897  0.30703062  0.20468708  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.95733819 11.06061175  4.056355    1.52113313  0.30422663]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.32712276  8.55813648  0.89561893  0.49756607  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.34993277 17.73930816  0.68986198  0.19710342  0.19710342]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.67445195 14.65350878  4.87903677  0.87822662  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.22799288 14.09218649  5.96030609  5.96030609  0.18921607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.1631652  13.70493181  3.57001491  1.00692728  0.64077191]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.38459172 20.22115027  4.32979259  4.32979259  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [21.49929778 12.03933144  4.39522958  0.6032668   0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.03111137 11.67160778  5.45623797  4.19710613  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [22.65753836  8.89896718  3.26567603  0.57149331  0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [22.66344197 18.32930979  8.36858213  1.44840845  0.24140141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [23.61253058 13.97356132  2.42000224  1.87355012  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [23.6031837  22.28162136  6.14681184  2.91973562  0.38417574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [25.38578716  4.97912336  0.14863055  0.07431527  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [25.69304018  6.20693255  2.26370481  1.38743198  0.36511368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [25.93406618 16.42088083  0.78877594  0.35853452  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [26.82631132  7.74031159  0.84439763  0.35183235  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [27.04547815 20.09649993  3.38099999  0.966       0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [27.66399299 25.14449848  6.35351758  3.83858354  0.86037217]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [30.88807261 11.10878567  0.92573214  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [30.59233463 28.27181845  3.00764026  1.80458416  0.30076403]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [32.53131181 13.40759305  2.34193765  0.52693597  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [32.36966867 34.0824156   0.796584    0.62588743  0.28449429]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  30
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [94.1, 3.65, 1.72, 0.3, 0.07]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.923240 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  84
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  66.0
Iteration TIME (sec):  0.013509223999999875
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.36381433 13.5660785   0.86412769  0.09601422  0.09601419]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [193.85388908   1.30758186   0.           0.           0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````
Tokens: ['```', '``', '\n', 'module', 'Certainly']
Probs: [97.55, 2.29, 0.11, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````
API response time: 1.033499 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  56
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  67.0
Iteration TIME (sec):  0.01046407699999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.47049558  8.78044028  0.87055252  0.09672809  0.09672806]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.19647256 12.23850722  0.55629578  0.11125916  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.35824254 13.02293327  3.31199999  1.54559999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.84763733 12.69823251  2.58675468  0.75447012  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.36907183  4.30900441  0.31529301  0.10509767  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.48885058  6.98057689  0.31256314  0.10418771  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.51660931 14.56103384  0.30980923  0.20653949  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.77090763 11.16716342  4.09374155  1.53515308  0.30703062]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.13665928  8.64003439  0.90418965  0.50232758  0.20093103]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.15541369 17.91237867  0.6965925   0.19902643  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.45605218 14.80595209  4.9275856   0.88696541  0.19710342]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.98754872 14.24836918  6.02337987  6.02337987  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.89245693 13.8673279   3.61035534  1.01830535  0.6480125 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.10241009 20.4723249   4.38227685  4.38227685  0.08943422]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  14
Leaf selection - action scores:  [1.92585340e+02 2.14677618e+00 1.75645324e-01 1.36613030e-01
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [96.35, 2.91, 0.51, 0.19, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
API response time: 0.953733 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  69
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  68.0
Iteration TIME (sec):  0.01239692399999992
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.35554076  8.84965078  0.87693028  0.09743674  0.0974367 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.0615419  12.33229026  0.56055865  0.11211173  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.21105221 13.12946872  3.3377747   1.55762819  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.68822465 12.80733554  2.6078714   0.76062916  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.20717444  4.34599225  0.31799943  0.10599981  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.32297636  7.04154379  0.31529301  0.10509767  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.34745297 14.69046779  0.31256314  0.20837543  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.58986072 11.27275076  4.13078974  1.54904615  0.30980923]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.95171354  8.72116325  0.91267988  0.50704438  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.96664072 18.0837929   0.70325861  0.20093103  0.20093103]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  10
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.91, 3.72, 0.31, 0.03, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````
API response time: 0.863251 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  64
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  69.0
Iteration TIME (sec):  0.011247220000000446
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.24327561  8.91836154  0.88326199  0.09814026  0.09814022]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.92973647 12.42536546  0.56478934  0.11295787  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.06753322 13.23518778  3.36335189  1.56956421  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.53299543 12.9155622   2.62881849  0.76673873  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.0494808   4.38266794  0.32068302  0.10689434  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.16148486  7.10198733  0.31799943  0.10599981  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.18284613 14.81877126  0.31529301  0.21019534  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.4139436  11.37739949  4.16750859  1.56281572  0.31256314]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.77202436  8.80154433  0.92109185  0.51171769  0.20468708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.14455457  8.62679875  0.70986213  0.20281775  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.24473656 14.95690805  4.97566074  0.89561893  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.75543906 14.40293326  6.08579998  6.08579998  0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.63182282 14.0279294   3.65024998  1.02955769  0.65517307]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.35185558 13.48035114  4.43413991  4.43413991  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [21.18595979 12.19907458  4.45122202  0.61095204  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [21.69155402 11.83499238  5.52947934  4.25344565  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [22.30719992  9.02519997  3.31199999  0.5796      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [22.28092673 18.60420477  8.49075768  1.46955421  0.2449257 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [23.21259144 14.1902186   2.45752389  1.90259914  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [23.16309763 22.64615045  6.24516707  2.96645436  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [24.91086055  5.06424275  0.15117143  0.07558571  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [25.19469075  6.3167983   2.3037735   1.41199021  0.37157637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [25.41176742 16.72220653  0.8032501   0.36511368  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [26.26502111  7.88775935  0.86048284  0.35853452  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [26.40835927 20.50439101  3.44795698  0.98513057  0.21109941]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [26.88516006 25.69964081  6.490168    3.92114317  0.87887692]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [30.04053873 11.38311799  0.94859317  0.18971863  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [29.70573401 29.0062737   3.0857738   1.85146428  0.30857738]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [31.53472857 13.77499239  2.40611221  0.54137525  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [33.33529381 17.03525816  0.81967818  0.64403285  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [34.20698654 20.42399993  3.53279999  0.6072      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [36.50353587  9.6204906   0.58791887  0.16034151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [37.10799208 19.15653742  1.54904615  0.92942769  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [38.64812899 18.40994475  1.94050769  1.94050769  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [40.83301846 17.78331199  0.52585062  0.33463221  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [42.92879848 16.98045554  1.78500746  0.4119248   0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [44.90342129 12.43723799  9.68795381  1.70193783  0.13091829]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [4.90947998e+01 1.20888000e+01 1.61459999e+00 3.72599999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [49.21013849 36.9245503   1.13193653  1.13193653  0.31225835]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [57.00067355 17.26987705  0.40162505  0.32860231  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [6.50346416e+01 7.74087746e+00 6.42256208e-01 3.71832542e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [71.30281819 18.42206958  0.92573214  0.70972797  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [8.96497330e+01 3.86399999e+00 8.55599997e-01 1.93199999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [1.17457856e+02 2.62925312e+00 3.58534516e-01 7.17069032e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [1.93112275e+02 1.30758186e+00 3.70806795e-01 1.75645324e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  45
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [96.38, 2.91, 0.51, 0.09, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.066907 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  99
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  70.0
Iteration TIME (sec):  0.015313490000000485
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.1335971   8.98658324  0.88954863  0.09883877  0.09883874]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.80093754 12.51774864  0.56898857  0.11379771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.92753578 13.34010893  3.38873604  1.58141015  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.38177041 13.02293327  2.64959999  0.7728      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.89581204  4.41903925  0.32334434  0.10778145  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.00418659  7.16192078  0.32068302  0.10689434  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.02258856 14.94597334  0.31799943  0.21199962  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.2429189  11.48113421  4.20390674  1.57646503  0.31529301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.59734748  8.88119794  0.92942769  0.51634872  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.9562846   8.71091849  0.71640477  0.20468708  0.20468708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.04013149 15.10641935  5.02327581  0.90418965  0.20093103]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.53119513 14.55592805  6.14758633  6.14758633  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.38065584 14.18679452  3.68971329  1.04068836  0.66225623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.07162635 13.64390591  4.48540335  4.48540335  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.88531604 12.35683311  4.50651882  0.6185418   0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [21.3665325  11.99624095  5.60176319  4.3090486   0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.97195798  9.14969137  3.35768491  0.58759486  0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.91630583 18.87519993  8.61119997  1.49039999  0.2484    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [22.83150643 14.40361732  2.49448121  1.93121126  0.16093427]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [22.74570143 23.0050269   6.34199714  3.01244864  0.39637482]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  20
Leaf selection - action scores:  [1.83822589e+02 9.15307299e+00 1.22951727e+00 7.41613590e-01
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [98.47, 1.4, 0.05, 0.03, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````
API response time: 1.061100 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  75
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  71.0
Iteration TIME (sec):  0.012682527000000832
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.02640754  9.05432618  0.89579115  0.09953239  0.09953235]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.67503258 12.60945498  0.57315704  0.11463141  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.79091852 13.44424996  3.41393145  1.59316801  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.23438074 13.12946872  2.67021976  0.7788141   0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.746       4.45511364  0.32598392  0.10866131  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.85090311  7.22135683  0.32334434  0.10778145  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.86649219 15.07210194  0.32068302  0.21378868  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.07656428 11.58397845  4.23999244  1.58999716  0.31799943]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.42745425  8.96014348  0.93768943  0.52093857  0.20837543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.77345137  8.79427692  0.7228882   0.20653949  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.84189041 15.25452669  5.07044375  0.91267988  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.31438409 14.70740038  6.20875785  6.20875785  0.19710342]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.13839879 14.34397838  3.72875897  1.05170125  0.66926443]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.80208784 13.80561243  4.53608748  4.53608748  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.59653416 12.5126792   4.56114529  0.62603955  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [21.0550415  12.15543515  5.6731261   4.36394316  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.65075954  9.27251151  3.40275652  0.59548239  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.56823053 19.14245669  8.72998075  1.51095821  0.25182637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [22.467841   14.61390023  2.53089892  1.95940562  0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [23.10231457 15.23900384  6.43737087  3.05775116  0.40233568]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [24.46064499  5.14795491  0.1536703   0.07683515  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [24.72319947  6.42478558  2.34315709  1.43612854  0.37792856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [24.91866258 17.01819776  0.81746801  0.37157637  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [25.73631291  8.03250095  0.87627283  0.36511368  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [25.81248939 20.9045106   3.51363826  1.00389664  0.21512071]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [26.16559083 26.24333322  6.62399998  4.00199999  0.897     ]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  26
Leaf selection - action scores:  [1.16657129e+02 4.30241419e+00 3.58534516e-01 4.78046021e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [1.91414371e+02 3.51290648e+00 1.75645324e-01 3.90322942e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [91.99, 7.55, 0.29, 0.11, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````
API response time: 1.052800 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  82
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  72.0
Iteration TIME (sec):  0.013273437000000499
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.92161447  9.12160029  0.90199047  0.1002212   0.10022116]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.55191478 12.70049916  0.57729542  0.11545908  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.65754787 13.54762802  3.43894227  1.60483972  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.09066739 13.23518778  2.69068151  0.78478211  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.59988605  4.49089826  0.32860231  0.1095341   0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.70146668  7.28030766  0.32598392  0.10866131  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.71437995 15.19718377  0.32334434  0.21556289  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.91467128 11.68595476  4.2757736   1.6034151   0.32068302]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.26213034  9.03839949  0.94587902  0.52548834  0.21019534]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.59579852  8.87689434  0.729314    0.20837543  0.20837543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.64969113 15.4012689   5.11717694  0.92109185  0.20468708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.10460571 14.85739483  6.26933254  6.26933254  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.90453906 14.49953326  3.76739999  1.0626      0.6762    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.54257998 13.96553197  4.58621152  4.58621152  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.31885607 12.66668077  4.61512522  0.63344856  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.75616995 12.31265155  5.74360242  4.41815571  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.34265174  9.39372596  3.44723888  0.6032668   0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.23549012 19.40612563  8.84716695  1.53124043  0.25520674]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [22.12030849 14.82119995  2.56679999  1.98719999  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [22.68954204 15.47121569  6.53135206  3.10239223  0.4082095 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [24.03307207  5.23032742  0.15612918  0.07806459  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [24.27624063  6.53098758  2.38188959  1.45986781  0.38417574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [24.45213347 17.3091282   0.83144284  0.37792856  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [25.23715662  8.17468015  0.89178329  0.37157637  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [25.25362377 21.29728668  3.57811406  1.0223183   0.21906821]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [26.70267537 19.8321922   6.75518103  4.0812552   0.9147641 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [29.25697871 11.65099271  0.97091606  0.19418321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [28.88957902 29.72258585  3.16197722  1.89718633  0.31619772]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [91.99, 7.55, 0.29, 0.11, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````
API response time: 0.902281 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  82
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  73.0
Iteration TIME (sec):  0.013146608999999643
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.81912998  9.18841518  0.90814748  0.10090531  0.10090528]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.43148293 12.79089531  0.58140433  0.11628087  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.52729754 13.65025964  3.4637725   1.61642717  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.95048035 13.34010893  2.71098883  0.79070508  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.45732057  4.52639998  0.3312      0.1104      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.55571907  7.33878496  0.32860231  0.1095341   0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.56608538 15.32124447  0.32598392  0.21732262  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.75704433 11.78708475  4.31125781  1.61672168  0.32334434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.10117462  9.11598374  0.9539983   0.52999905  0.21199962]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.42308633  8.95879016  0.73568368  0.21019534  0.21019534]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.4632338  15.54668305  5.16348718  0.92942769  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.90148908 15.00595383  6.32932752  6.32932752  0.20093103]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.67860433 14.65350878  3.80564868  1.07338809  0.68306515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.29249836 14.1237225   4.63579362  4.63579362  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.05158969 12.81890179  4.66848104  0.64077191  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.4690904  12.46796209  5.81322439  4.47171107  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.04676956  9.51339608  3.49115452  0.61095204  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.91699392 19.66634747  8.9628211   1.5512575   0.25854292]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [21.78775165 15.02563995  2.6022058   2.01461094  0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [22.29710292 15.70013326  6.62399998  3.14639999  0.414     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [23.62630766  5.3114226   0.15854993  0.07927496  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [23.85176077  6.63549001  2.42000224  1.48322718  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [24.00987879 17.59524888  0.84518663  0.38417574  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [24.76490193  8.31442839  0.90702855  0.37792856  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [24.72810251 21.68310931  3.64144843  1.04041384  0.22294582]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [26.00215616 20.22426918  6.88386271  4.15900038  0.93218974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [28.52974708 11.91284546  0.99273712  0.19854742  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [29.59178284 14.71101826  3.23638686  1.94183212  0.32363869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [30.6217216  14.132844    2.46861904  0.55543928  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [32.1994808  17.51576516  0.84213927  0.66168086  0.30076403]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [33.02044935 21.05257725  3.64152688  0.62588743  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [35.14906654  9.93599997  0.6072      0.1656      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [35.62547522 19.82890007  1.6034151   0.96204906  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [36.97691894 19.10490255  2.01376     2.01376     0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [38.90935118 18.50945796  0.54732268  0.34829625  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [40.70698815 17.73550739  1.86437948  0.43024142  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [42.32464211 13.04428526 10.16081167  1.78500746  0.13730827]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [4.59313723e+01 1.27427140e+01 1.70193783e+00 3.92754884e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [45.59132484 39.16439986  1.2006      1.2006      0.3312    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [52.13756056 18.46227515  0.42935524  0.35129065  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [5.84246169e+01 8.36110326e+00 6.93715991e-01 4.01625048e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [62.34392616 20.18036613  1.01408875  0.77746804  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [7.49826034e+01 4.32008332e+00 9.56589877e-01 2.16004166e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [9.01373330e+01 3.03599999e+00 4.13999999e-01 8.27999997e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [117.7566345    1.60145417   0.45414372   0.21512071   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [1.88096626e+02 5.67919880e+00 9.95323502e-01 1.75645324e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  46
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [93.38, 5.97, 0.38, 0.18, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.993854 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  100
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  74.0
Iteration TIME (sec):  0.01533549399999945
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.71887077  9.25478011  0.91426302  0.10158482  0.10158478]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.31364072 12.88065708  0.58548441  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.40004799 13.75216076  3.48842599  1.62793213  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.81367806 13.44424996  2.73114516  0.796584    0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.31816227  4.56162542  0.33377747  0.11125916  0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.41351105  7.39679997  0.3312      0.1104      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.42145146 15.44430865  0.32860231  0.21906821  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.6034994  11.88738914  4.34645233  1.62991962  0.32598392]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.94439823  9.19291324  0.96204906  0.5344717   0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.25509027  9.03998299  0.74199868  0.21199962  0.21199962]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.28223904 15.69080454  5.20938574  0.93768943  0.20837543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.70469016 15.15311781  6.38875913  6.38875913  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.4601585  14.80595209  3.84351677  1.08406883  0.68986198]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.05128819 14.28023891  4.68485101  4.68485101  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.7941016  12.96940263  4.72123391  0.6480125   0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.19304922 12.62143444  5.88202234  4.52463257  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.76232606  9.63157944  3.53452457  0.6185418   0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.61175674 19.92325397  9.07700176  1.57101954  0.26183659]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [21.46912591 15.22733542  2.6371363   2.04165391  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.9233913  15.92589289  6.71536981  3.18980066  0.41971061]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [23.23871891  5.3912981   0.16093427  0.08046714  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [23.44793899  6.73837196  2.45752389  1.50622432  0.39637482]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [23.58986667 17.87679074  0.85871047  0.39032294  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [24.31721938  8.45186627  0.92202178  0.38417574  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [24.23275149 22.06233523  3.70369992  1.05819998  0.22675714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [25.35114992 20.60915026  7.01018265  4.23531868  0.94929557]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [27.85241691 12.169065    1.01408875  0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [28.7887626  15.05288158  3.30912374  1.98547424  0.33091237]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [29.7812566  14.48185566  2.52958177  0.5691559   0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [31.16817491 17.98378505  0.86401666  0.67887024  0.30857738]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [31.9458274  21.66292327  3.74710024  0.64403285  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [33.93083107 10.24179434  0.62588743  0.17069657  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [34.30266654 20.47919993  1.65599999  0.9936      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [35.4994926  19.7754529   2.08443963  2.08443963  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [37.22714948 19.20817229  0.56798359  0.3614441   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [38.78910604 18.45970136  1.94050769  0.44780947  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [40.13333292 13.62431161 10.61262167  1.86437948  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [43.29495386 13.36467121  1.78500746  0.4119248   0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [42.64871732 41.28290226  1.26554352  1.26554352  0.34911545]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [48.30819983 19.58219993  0.4554      0.3726      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [5.34423544e+01 8.93839537e+00 7.41613590e-01 4.29355236e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [56.00269615 21.79728668  1.09534104  0.83976146  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [65.56872838  4.73241417  1.04789171  0.23662071  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [7.53914685e+01 3.39435118e+00 4.62866070e-01 9.25732139e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [90.367333    1.84919999  0.5244      0.2484      0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [114.68518882   6.95556961   1.21901735   0.21512071   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [1.82241782e+02 1.16511398e+01 7.41613590e-01 3.51290648e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  47
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.37, 2.29, 0.19, 0.11, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.008675 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  101
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  75.0
Iteration TIME (sec):  0.015577146999999236
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.62075758  9.32070407  0.92033792  0.10225981  0.10225977]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.19829673 12.96979764  0.58953626  0.11790725  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.27568592 13.85334675  3.51290648  1.63935636  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.68012678 13.54762802  2.75115381  0.80241986  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.18227761  4.59658091  0.33633519  0.11211173  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.27470166  7.45436349  0.33377747  0.11125916  0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.2803301  15.56639995  0.3312      0.2208      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.45386364 11.98688784  4.38136416  1.64301156  0.32860231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.79162331  9.26920428  0.97003301  0.53890723  0.21556289]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.09159985  9.1204906   0.74826038  0.21378868  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.10644598 15.83366727  5.25488342  0.94587902  0.21019534]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.51388913 15.29892536  6.44764294  6.44764294  0.20468708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.24879832 14.95690805  3.88101538  1.09464536  0.6965925 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.81843906 14.43513326  4.73339998  4.73339998  0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.54581108 13.11824033  4.77340383  0.65517307  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.92735841 12.77313237  5.95002485  4.57694219  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.48860334  9.74833012  3.57736885  0.62603955  0.17886844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.31888582 20.17696872  9.18976387  1.59053606  0.26508934]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [21.16348603 15.426394    2.67161013  2.06834333  0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.56697228 16.14862177  6.80551304  3.23261869  0.42534456]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.8688468   5.47000735  0.1632838   0.0816419   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [23.06315425  6.83970655  2.49448121  1.52887558  0.40233568]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [23.19029535 18.15396681  0.87202461  0.39637482  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [23.89205217  8.58710472  0.93677506  0.39032294  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [23.76480246 22.43529166  3.76492225  1.07569207  0.23050544]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [24.74416702 20.98721767  7.13426631  4.3102859   0.96609856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [27.21954159 12.41999996  1.035       0.207       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [28.04531982 15.38739042  3.38029583  2.0281775   0.33802958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [29.0042323  14.82265183  2.58910949  0.58254964  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [30.22639854 18.44024354  0.88535362  0.69563499  0.31619772]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [30.96661875 22.25653793  3.84977953  0.66168086  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [32.82749804 10.53871943  0.64403285  0.17564532  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [33.11291    21.10947611  1.70696572  1.02417943  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [34.18122654 20.42399993  2.15279999  2.15279999  0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [35.74000487 19.88234724  0.58791887  0.37413019  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [37.11196399 19.15653742  2.01376     0.46471385  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [38.24178336 14.18063312 11.04596685  1.94050769  0.14926982]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [41.05465798 13.95894382  1.86437948  0.43024142  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [40.19636399 43.29787316  1.32731324  1.32731324  0.36615538]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  39
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [94.11, 3.65, 1.72, 0.38, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.995719 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  93
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  76.0
Iteration TIME (sec):  0.014964875000000433
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.52471507  9.38619573  0.92637299  0.10293037  0.10293033]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.08536396 13.05832971  0.59356044  0.11871209  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.15410405 13.95383247  3.53721754  1.65070152  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.54970005 13.65025964  2.771018    0.80821358  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.04954027  4.63127258  0.3388736   0.11295787  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.13915771  7.51148588  0.33633519  0.11211173  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.14258141 15.68754107  0.33377747  0.22251831  0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.30797412 12.08559996  4.41599998  1.65599999  0.3312    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.64268269  9.34487251  0.97795177  0.54330654  0.21732262]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.93241753  9.20033006  0.75447012  0.21556289  0.21556289]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.93561089 15.97530363  5.29999055  0.9539983   0.21199962]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.32878828 15.4434133   6.50599384  6.50599384  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.04415011 15.10641935  3.91815513  1.10512068  0.70325861]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.5934807  14.58845496  4.78145604  4.78145604  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.30618453 13.26546882  4.82500969  0.66225623  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.67138827 12.92311602  6.01725891  4.6286607   0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.224945    9.86369899  3.61970605  0.63344856  0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.03757028 20.42760779  9.30115902  1.60981598  0.26830266]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  18
Leaf selection - action scores:  [1.89423724e+02 4.44968154e+00 6.05000560e-01 6.05000560e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.75, 1.1, 0.09, 0.04, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````
API response time: 0.939166 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  73
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  77.0
Iteration TIME (sec):  0.012347302000000226
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.43067156  9.45126348  0.93236899  0.10359659  0.10359655]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.97475955 13.14626558  0.59755753  0.11951151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.03520043 14.05363226  3.56136265  1.66196924  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.42227816 13.75216076  2.7907408   0.81396607  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.91983068  4.66570631  0.34139314  0.11379771  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.0067532   7.56817715  0.3388736   0.11295787  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.00807323 15.80775387  0.33633519  0.22422346  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.16567729 12.18354385  4.45036626  1.66888735  0.33377747]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.49741866  9.41993294  0.98580694  0.54767052  0.21906821]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.77735749  9.27951775  0.76062916  0.21732262  0.21732262]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.76950565 16.11574469  5.344717    0.96204906  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.14911029 15.58661683  6.56382604  6.56382604  0.20837543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.84586722 15.25452669  3.95494613  1.11549763  0.70986213]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.37597891 14.74025095  4.82903389  4.82903389  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.07473049 13.41113922  4.87606942  0.66926443  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.42456152 13.07144225  6.08374997  4.67980767  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.97074941  9.97773398  3.66155376  0.64077191  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.2862484  13.45018692  9.41123574  1.62886772  0.27147795]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.86997392 15.6229165   2.70564476  2.09469271  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.22655985 16.36843879  6.89447777  3.27487694  0.43090486]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.51538277  5.54759998  0.1656      0.0828      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [22.69595807  6.93956156  2.53089892  1.55119611  0.4082095 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.80956085 18.42697411  0.88513849  0.40233568  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [23.48757647  8.72024607  0.95129957  0.39637482  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [23.32182896 22.80227963  3.82516483  1.09290424  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [24.17652532 21.35882096  7.25622842  4.38397134  0.98261426]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [26.62647055 12.66596443  1.05549704  0.21109941  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [27.35447815 15.71499994  3.44999999  2.06999999  0.345     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [28.28306695 15.15578673  2.64729899  0.59564227  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [29.36199937 18.88595731  0.90618832  0.71200511  0.32363869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [30.0695305  22.83472611  3.94979046  0.67887024  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [31.82212531 10.82750494  0.66168086  0.18045842  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [32.03537207 21.72147171  1.75645324  1.05387194  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [32.9955561  21.05257725  2.21905544  2.21905544  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [34.41306654 20.53439993  0.6072      0.3864      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [35.62929287 19.82890007  2.08443963  0.48102453  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [36.58767145 14.71593845 11.46294153  2.01376     0.15490462]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [39.12081676 14.52892937  1.94050769  0.44780947  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [42.02375227 22.1115768   1.38633346  1.38633346  0.38243682]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [45.19435083 20.64145113  0.48003375  0.39275488  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [4.95191498e+01 9.48059997e+00 7.86599997e-01 4.55399998e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [51.22308966 23.30227963  1.17096883  0.89774277  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [58.90534991  5.11159152  1.13185241  0.25557958  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [6.59270397e+01 3.71832542e+00 5.07044375e-01 1.01408875e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [75.58432934  2.06746844  0.58629702  0.27771964  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [88.00293301  8.03159997  1.4076      0.2484      0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [1.11099844e+02 1.42696737e+01 9.08287440e-01 4.30241419e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [1.90028724e+02 4.46919768e+00 3.70806795e-01 2.14677618e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  48
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [98.63, 1.1, 0.19, 0.05, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.954774 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  102
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  78.0
Iteration TIME (sec):  0.015432542999999299
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.33855879  9.51591545  0.93832668  0.10425856  0.10425852]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.86640463 13.23361715  0.60152805  0.12030561  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.91887839 14.15275997  3.58534516  1.67316107  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.29774765 13.85334675  2.81032518  0.81967818  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.7930355   4.69988777  0.34389423  0.11463141  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.87736884  7.6244469   0.34139314  0.11379771  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.8766805  15.92705937  0.3388736   0.22591574  0.11295787]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.58, 3.71, 0.64, 0.03, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````
API response time: 1.650976 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  79.0
Iteration TIME (sec):  0.011043921000000623
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.24831166  9.58015951  0.94424678  0.10491635  0.10491631]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.76022401 13.32039589  0.60547254  0.12109451  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.80504602 14.25122901  3.60916831  1.68427855  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.17600111 13.95383247  2.82977403  0.82535076  0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.66904718  4.73382241  0.34637725  0.11545908  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.7508916   7.6803044   0.34389423  0.11463141  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.00204676  7.5227389   0.34139314  0.22759543  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.02682822 12.28073717  4.48446918  1.68167594  0.33633519]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.35568248  9.49439997  0.9936      0.552       0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.62624518  9.35806935  0.76673873  0.21906821  0.21906821]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.60791653 16.2550202   5.38907226  0.97003301  0.21556289]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.97459618 15.7285696   6.62115312  6.62115312  0.21019534]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.65362742 15.4012689   3.99139801  1.12577893  0.71640477]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.16553216 14.8905659   4.87614753  4.87614753  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.85099567 13.55529995  4.92659998  0.6762      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.18634769 13.21816481  6.14952216  4.73040166  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.72546419 10.09048032  3.70292856  0.6480125   0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.00687937 13.61339296  9.52003977  1.64769919  0.27461653]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.58780891 15.81699744  2.73925654  2.12071474  0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.90099722 16.58545526  6.98230905  3.3165968   0.43639432]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.17714983  5.62412222  0.16788425  0.08394212  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [22.34505135  7.03799998  2.56679999  1.57319999  0.414     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.44622991 18.69599527  0.89806091  0.4082095   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [23.10216862  8.85138495  0.96560563  0.40233568  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [22.9016941  23.16357683  3.88447325  1.1098495   0.23782489]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  25
Leaf selection - action scores:  [1.79119198e+02 1.46956588e+01 7.41613590e-01 4.48871383e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  26
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.11, 3.69, 0.64, 0.5, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````
API response time: 1.029554 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  80
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  80.0
Iteration TIME (sec):  0.013304526999999844
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.15986819  9.64400328  0.95013     0.10557004  0.10557   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.6561459  13.40661295  0.6093915   0.1218783   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.6936159  14.34905232  3.63283524  1.69532311  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.05693645 14.05363226  2.84909012  0.83098462  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.5477638   4.76751553  0.3488426   0.11628087  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.62721418  7.73575858  0.34637725  0.11545908  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.87087522  7.58151433  0.34389423  0.22926282  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.89129007 12.37719694  4.51831471  1.69436802  0.3388736 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.21733366  9.56828746  1.00133241  0.55629578  0.22251831]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.47891605  9.43599997  0.7728      0.2208      0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.45064315 16.39315871  5.43306541  0.97795177  0.21732262]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.80500398 15.86930382  6.67798809  6.67798809  0.21199962]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.46713077 15.54668305  4.02752     1.13596718  0.7228882 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.96176839 15.03944233  4.92281029  4.92281029  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.63456114 13.69799701  4.97661751  0.68306515  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.95625821 13.36333462  6.21459828  4.78046021  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.48858111 10.20198073  3.74384614  0.65517307  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.73816824 13.77475469  9.62761425  1.66631785  0.27771964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.31627886 16.00872562  2.77246086  2.14642131  0.17886844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.58924101 16.79977555  7.06904913  3.35779834  0.44181557]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [21.8530856   5.69961717  0.17013783  0.08506891  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [22.00926559  7.13508042  2.6022058   1.59490033  0.41971061]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.09901706 18.96119993  0.9108      0.414       0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [22.73437779  8.98060908  0.97970281  0.4082095   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [23.26065313 15.34629335  3.94288966  1.1265399   0.24140141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [23.64420458 21.72428077  7.3761742   4.45643858  0.99885692]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [26.06920611 12.90724257  1.07560355  0.21512071  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [26.7103487  16.03612023  3.51832345  2.11099407  0.35183235]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [27.61138712 15.48175492  2.70423667  0.60845325  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [28.5650028  19.3216512   0.92655465  0.72800722  0.33091237]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [29.24372047 23.39863142  4.04733084  0.69563499  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [30.90106534 11.10878567  0.67887024  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [31.05350613 22.31669073  1.80458416  1.08275049  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [31.92171921 21.66292327  2.28338921  2.28338921  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [33.21959536 21.16637497  0.62588743  0.398292    0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [34.30634654 20.47919993  2.15279999  0.4968      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [35.12536241 15.23244345 11.86527174  2.08443963  0.16034151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [37.42971705 15.07738255  2.01376     0.46471385  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [39.70587071 23.03487531  1.44294162  1.44294162  0.39805286]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [42.59925864 21.64893658  0.50346364  0.4119248   0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [4.63289761e+01 9.99342983e+00 8.29149200e-01 4.80033747e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [47.45949983 24.71579991  1.242       0.9522      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [53.88286171  5.46452119  1.21000112  0.27322606  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [5.92278670e+01 4.01625048e+00 5.47670519e-01 1.09534104e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [66.09605453  2.26479821  0.64225621  0.30422663  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [73.60171967  8.97960175  1.57374464  0.27771964  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [8.52429330e+01 1.64771999e+01 1.04880000e+00 4.96799998e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [1.15868353e+02 5.47362694e+00 4.54143720e-01 2.62925312e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [1.92487759e+02 2.14677618e+00 3.70806795e-01 9.75807355e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  49
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.83, 2.89, 0.83, 0.31, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.836139 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  103
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  81.0
Iteration TIME (sec):  0.015754446000000755
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.07316911  9.70745415  0.95597701  0.10621971  0.10621967]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.55410191 13.49227908  0.61328541  0.12265708  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.58450487 14.44624246  3.65634899  1.70629619  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.94045686 14.15275997  2.86827613  0.83658054  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.42908835  4.80097218  0.35129065  0.11709688  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.50623492  7.79081805  0.3488426   0.11628087  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.74268955  7.63986537  0.34637725  0.23091817  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.75893346 12.4729395   4.55190859  1.70696572  0.34139314]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.08223945  9.64160875  1.00900557  0.56055865  0.22422346]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.33521505  9.51332409  0.7788141   0.22251831  0.22251831]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.29749711 16.53018763  5.47670519  0.98580694  0.21906821]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  11
Leaf selection - action scores:  [1.15354453e+02 5.44972464e+00 1.55364957e+00 2.15120710e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [1.82632104e+02 9.09452455e+00 1.58080791e+00 1.58080791e+00
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [95.75, 3.71, 0.39, 0.11, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
API response time: 1.091796 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  79
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  82.0
Iteration TIME (sec):  0.012140551999999971
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.98815796  9.7705193   0.96178847  0.10686543  0.10686539]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.45402657 13.57740471  0.61715476  0.12343095  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.47763376 14.54281155  3.67971248  1.71719916  0.        ]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  3
Leaf selection - action scores:  [1.16095425e+02 5.47362694e+00 2.15120710e-01 9.56092042e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [1.91433887e+02 3.51290648e+00 1.36613030e-01 5.85484413e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.03, 0.86, 0.09, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````
API response time: 1.012126 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  59
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  83.0
Iteration TIME (sec):  0.010294651999999793
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.90478078  9.83320566  0.96756503  0.10750727  0.10750723]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.35585744 13.66199995  0.621       0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.5752024  10.72907853  3.70292856  1.72803333  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.82647031 14.25122901  2.88733465  0.84213927  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.31292878  4.8341973   0.35372175  0.11790725  0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.38785705  7.84549113  0.35129065  0.11709688  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.61737821  7.69780109  0.3488426   0.23256173  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.62963599 12.56798062  4.58525636  1.71947113  0.34389423]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.95027427  9.71437664  1.01662081  0.56478934  0.22591574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.19499581  9.59005566  0.78478211  0.22422346  0.22422346]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.43410659 12.24959996  5.51999998  0.9936      0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.64010724 16.00885035  6.73434342  6.73434342  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.28609784 15.69080454  4.06332088  1.14606486  0.729314  ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.76434244 15.18692077  4.96903488  4.96903488  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.42503912 13.83927409  5.02613731  0.68986198  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.73384248 13.50699995  6.27899998  4.82999998  0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.25963144 10.31227561  3.78432133  0.66225623  0.18921607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.47945699 13.93433325  9.73399996  1.68473076  0.28078846]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.05473264 16.19818459  2.80527219  2.17182363  0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.29034703 17.01149773  7.15473771  3.39850041  0.44717111]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [21.54222872  5.77412513  0.17236194  0.08618097  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.68754609  7.2308576   2.6371363   1.61630935  0.42534456]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.76676612 19.22274608  0.92336335  0.41971061  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [22.38290277  9.10799997  0.9936      0.414       0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [22.84517192 15.58007156  4.00045314  1.14298661  0.2449257 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [23.14373197 22.0838921   7.49420048  4.52774613  1.01483965]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [25.54429016 13.14409247  1.09534104  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [26.10792184 16.35112225  3.58534516  2.1512071   0.35853452]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [26.98379159 15.80099995  2.75999999  0.621       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [27.82713708 19.74797204  0.94648283  0.74366508  0.33802958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [28.48024586 23.94926279  4.14257518  0.71200511  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [30.05318664 11.38311799  0.69563499  0.18971863  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [30.15398326 22.89644158  1.85146428  1.11087857  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [30.94322599 22.25653793  2.3459594   2.3459594   0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [32.13869285 21.78002016  0.64403285  0.40983909  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [33.11646618 21.10947611  2.21905544  0.51208972  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [33.82058654 15.73199995 12.25439996  2.15279999  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [35.93470527 15.60657364  2.08443963  0.48102453  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [37.71912611 23.92329434  1.49741128  1.49741128  0.41307897]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [40.3940853  22.6115768   0.52585062  0.43024142  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [43.67026312 10.48119763  0.86961902  0.50346364  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [44.39914341 26.05274064  1.30918295  1.00370693  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [49.92797482  5.79599998  1.2834      0.2898      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [5.41783919e+01 4.29355236e+00 5.85484413e-01 1.17096883e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [59.37999769  2.44626165  0.69371599  0.32860231  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [64.35858247  9.83666088  1.72395088  0.30422663  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [7.12873893e+01 1.84220696e+01 1.17259404e+00 5.55439284e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [8.89137330e+01 6.32039998e+00 5.24399998e-01 3.03599999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [1.17374198e+02 2.62925312e+00 4.54143720e-01 1.19511505e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  49
Leaf selection - action scores:  [1.87023238e+02 5.64016651e+00 1.61984021e+00 6.05000560e-01
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  50
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.76, 3.71, 0.24, 0.24, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.948780 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  104
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  84.0
Iteration TIME (sec):  0.01546273900000017
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.82298595  9.89551999  0.97330731  0.1081453   0.10814526]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.25953481 13.74607459  0.62482157  0.12496431  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.46862852 10.80059996  3.72599999  1.73879999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.71488926 14.34905232  2.9062682   0.84766156  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.19919747  4.86719562  0.35613626  0.11871209  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.27198877  7.89978584  0.35372175  0.11790725  0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.49483556  7.75533022  0.35129065  0.23419377  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.50328174 12.66233549  4.61836333  1.73188625  0.34637725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.82131922  9.78660348  1.02417943  0.56898857  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.05812015  9.66620811  0.79070508  0.22591574  0.22591574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.28162581 12.35076568  5.56295783  1.00133241  0.22251831]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.47969377 16.14723876  6.79023104  6.79023104  0.21556289]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.11026772 15.83366727  4.09880907  1.15607435  0.73568368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.57293347 15.33303987  5.0148334   5.0148334   0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.22206992 13.97917276  5.07517396  0.6965925   0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.51868402 13.64920664  6.34274781  4.87903677  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.03818233 10.42140326  3.82436817  0.66926443  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.23014306 14.09218649  9.83923545  1.7029446   0.2838241 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.80257339 16.38545306  2.83770416  2.19693225  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.00345887 17.22071406  7.23941211  3.43872075  0.45246326]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [21.24370649  5.84768383  0.17455773  0.08727886  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.37893846  7.32538263  2.67161013  1.63743847  0.43090486]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.44843347 19.48078106  0.93575804  0.42534456  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [22.0465732   9.23363349  1.00730547  0.41971061  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [22.45015747 15.81053326  4.05719999  1.1592      0.2484    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [22.67209022 22.43792704  7.61039657  4.59794793  1.03057454]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [25.04871431 13.37674933  1.11472911  0.22294582  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [25.54290614 16.66034294  3.6511368   2.19068208  0.36511368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [26.39566853 16.11392141  2.81465876  0.63329822  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [27.14147815 20.16549993  0.966       0.759       0.345     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [27.77165692 24.48751567  4.23567839  0.72800722  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [29.2693078  11.65099271  0.71200511  0.19418321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [29.32593188 23.46187096  1.89718633  1.1383118   0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [30.04679322 22.83472611  2.40690356  2.40690356  0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [31.15376081 22.37684354  0.66168086  0.42106964  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [32.0388161  21.72147171  2.28338921  0.52693597  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [32.6470506  16.21617437 12.63154635  2.21905544  0.17069657]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [34.60074654 16.11839994  2.15279999  0.4968      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [35.99247225 24.78051141  1.54996793  1.54996793  0.42757736]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [38.4905664  23.53487531  0.54732268  0.44780947  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [41.41101956 10.94725389  0.90828744  0.52585062  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [41.84864012 27.3243449   1.37308266  1.0526967   0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [46.71203328  6.10952042  1.35282238  0.30547602  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [5.02022498e+01 4.55399998e+00 6.20999998e-01 1.24200000e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [54.31779299  2.61516371  0.74161359  0.35129065  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [57.8160941  10.62480808  1.86207977  0.32860231  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [62.33040497 20.18036613  1.28451242  0.60845325  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [7.43654487e+01 7.06642200e+00 5.86297022e-01 3.39435118e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [9.00729330e+01 3.03599999e+00 5.24399998e-01 1.38000000e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  49
Leaf selection - action scores:  [1.14027876e+02 6.90776501e+00 1.98389099e+00 7.40971333e-01
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  50
Leaf selection - action scores:  [1.86886625e+02 7.24049057e+00 4.68387530e-01 4.68387530e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  51
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [91.84, 7.54, 0.23, 0.23, 0.07]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.783516 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  105
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  85.0
Iteration TIME (sec):  0.01615017100000049
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.74272413  9.95746883  0.9790159   0.10877959  0.10877954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.1650015  13.82963813  0.62861991  0.12572398  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.36420594 10.87168125  3.74892943  1.7495004   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.60563044 14.44624246  2.92507919  0.8531481   0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.08781097  4.89997172  0.35853452  0.11951151  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.15854264  7.95370991  0.35613626  0.11871209  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.37496113  7.81246122  0.35372175  0.2358145   0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.37976078 12.75601878  4.65123466  1.744213    0.3488426 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.69526165  9.85830117  1.03168268  0.57315704  0.22926282]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.92445741  9.74179434  0.796584    0.22759543  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.13305857 12.45115616  5.60558648  1.00900557  0.22422346]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.32356467 16.28449741  6.84566242  6.84566242  0.21732262]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.9393966  15.97530363  4.13399263  1.16599792  0.74199868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.38724286 15.47783655  5.06021743  5.06021743  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.0253196  14.1177326   5.12374132  0.70325861  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.31039733 13.78999824  6.40586128  4.9275856   0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.82383325 10.52939996  3.86399999  0.6762      0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.98967337 14.24836918  9.94335724  1.72096568  0.28682761]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.55925319 16.5706053   2.86976963  2.22175713  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [19.72779752 17.42751146  7.32310751  3.47847607  0.45769422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.95672491  5.92032865  0.17672623  0.08836311  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.08257628  7.41870337  2.70564476  1.6582984   0.43639432]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.14307475 19.73544261  0.94799069  0.43090486  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [21.72433265  9.35758042  1.02082696  0.42534456  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [22.07399334 16.03781572  4.11316401  1.17518972  0.25182637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [22.22664416 22.78663724  7.72484504  4.66709388  1.04607277]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  26
Leaf selection - action scores:  [8.95209330e+01 4.96799998e+00 4.13999999e-01 5.51999998e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [1.16716884e+02 4.30241419e+00 2.15120710e-01 4.78046021e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [1.79529037e+02 1.47346911e+01 5.65968266e-01 2.14677618e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  29
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [95.2, 3.69, 0.82, 0.24, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.914619 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  83
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  86.0
Iteration TIME (sec):  0.013387690999999258
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.6639481  10.01905854  0.9846914   0.1094102   0.10941016]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.07220281 13.91269976  0.63239544  0.12647909  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.26186336 10.94233042  3.77171949  1.76013576  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.49861457 14.54281155  2.94376998  0.85859958  0.12265708]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  4
Leaf selection - action scores:  [1.16728836e+02 4.30241419e+00 1.67316107e-01 7.17069032e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [1.92878082e+02 2.14677618e+00 5.85484413e-02 3.90322942e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.26, 0.67, 0.04, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````
API response time: 1.170952 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````// Instantiate mod_a and connect ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  71
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  87.0
Iteration TIME (sec):  0.011301956999999696
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.5866126  10.08029529  0.99033438  0.1100372   0.11003715]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.98108637 13.99526844  0.63614857  0.12722971  0.        ]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````
Tokens: ['```', '``', '\n', 'module', 'Certainly']
Probs: [97.55, 2.29, 0.11, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````
API response time: 0.968210 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  56
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  88.0
Iteration TIME (sec):  0.010813001999999905
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.51067437 10.14118508  0.99594538  0.11066064  0.1106606 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.06888291  6.53867641  0.63987967  0.12797593  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.16153284 11.01255525  3.79437266  1.77070724  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.59631559 10.72907853  2.96234285  0.86401666  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.97868986  4.93253003  0.36091683  0.12030561  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.04743546  8.00727086  0.35853452  0.11951151  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.25765964  7.86920222  0.35613626  0.23742418  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.25896898 12.84904461  4.6838753   1.75645324  0.35129065]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.57199462  9.92948116  1.03913175  0.57729542  0.23091817]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.79388398  9.8168268   0.80241986  0.22926282  0.22926282]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.98824091 12.55078894  5.64789339  1.01662081  0.22591574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.17153289 16.42065352  6.90064855  6.90064855  0.21906821]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  12
Leaf selection - action scores:  [1.04443053e+02 2.21335308e+01 4.94777632e+00 1.81657488e+00
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [1.81753878e+02 1.16121075e+01 1.58080791e+00 1.56129177e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.53, 2.29, 0.09, 0.04, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
API response time: 0.971794 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  68
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  89.0
Iteration TIME (sec):  0.011469249000000126
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.43609189 10.20173374  1.00152495  0.11128059  0.11128055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.97786257  6.57948068  0.64358915  0.12871783  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.06314951 11.08236332  3.81689139  1.78121598  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.48959735 10.80059996  2.98079999  0.8694      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.87175842  4.96487483  0.36328352  0.12109451  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.93858799  8.0604759   0.36091683  0.12030561  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.14284042  7.92556112  0.35853452  0.23902301  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.14080729 12.94142665  4.71629005  1.76860877  0.35372175]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.4514168  10.00015452  1.0465278   0.58140433  0.23256173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.6662828   9.89131749  0.80821358  0.23091817  0.23091817]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.84701827 12.64968093  5.68988574  1.02417943  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.30714659 12.16679996  6.95519998  6.95519998  0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.77325633 16.11574469  4.16887926  1.17583774  0.74826038]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.20699236 15.62134607  5.10519803  5.10519803  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.83447744 14.25499131  5.17185263  0.70986213  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.10862486 13.92941615  6.46835897  4.97566074  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.61621299 10.63630017  3.90322942  0.68306515  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.75753906 14.40293326 10.04639997  1.73879999  0.2898    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.32426786 16.75371147  2.90148076  2.24630768  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [19.46265272 17.63197194  7.40585712  3.51778213  0.46286607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.68055972  5.99209283  0.17886844  0.08943422  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [20.79767131  7.5108647   2.73925654  1.67889917  0.44181557]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.84983264 19.98685965  0.96006749  0.43639432  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [21.41522519  9.47990693  1.03417166  0.43090486  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [21.71523524 16.26204699  4.16837673  1.19096478  0.25520674]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [22.56525055 18.30420476  7.83762247  4.73523024  1.06134471]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [24.57984726 13.60542828  1.13378569  0.22675714  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [25.01160152 16.96408941  3.7157637   2.22945822  0.37157637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [25.84305357 16.42088083  2.86827613  0.64536213  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [26.50218123 20.57475748  0.98513057  0.77403116  0.35183235]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [27.11169122 25.01418917  4.32677867  0.74366508  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [28.54178026 11.91284546  0.72800722  0.19854742  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [28.56038496 24.01399052  1.94183212  1.16509927  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [29.22158663 23.39863142  2.46634223  2.46634223  0.25295818]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [30.25142875 22.95815706  0.67887024  0.43200833  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [31.05684796 22.31669073  2.3459594   0.54137525  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [31.58420467 16.68630576 12.99775396  2.28338921  0.17564532]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [33.40096046 16.61446637  2.21905544  0.51208972  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [34.47434276 25.60959991  1.60079999  1.60079999  0.4416    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [36.82598624 24.42329434  0.56798359  0.46471385  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [39.46082024 11.3942631   0.94537554  0.54732268  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [39.68136214 28.53934747  1.43413806  1.09950585  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [44.03184155  6.40771907  1.41885208  0.32038595  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [4.69690210e+01 4.80033747e+00 6.54591473e-01 1.30918295e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [50.33162482  2.77379999  0.7866      0.3726      0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [52.88475019 11.35839761  1.990647    0.35129065  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [55.9905257  21.79728668  1.38743198  0.65720462  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [6.50278810e+01 7.74087746e+00 6.42256208e-01 3.71832542e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [7.53374674e+01 3.39435118e+00 5.86297022e-01 1.54288690e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  49
Leaf selection - action scores:  [87.49693301  7.97639997  2.29079999  0.8556      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  50
Leaf selection - action scores:  [1.13944217e+02 8.86775369e+00 5.73655225e-01 5.73655225e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  51
Leaf selection - action scores:  [1.79236295e+02 1.47151749e+01 4.48871383e-01 4.48871383e-01
 1.36613030e-01]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  52
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.61, 3.71, 0.39, 0.18, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.913562 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  106
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  90.0
Iteration TIME (sec):  0.01626531900000039
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.36282527 10.26194695  1.00707361  0.11189711  0.11189707]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.88847041  6.6200511   0.64727737  0.12945547  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.9666513  11.15176194  3.83927804  1.79166309  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.38503333 10.87168125  2.99914355  0.8747502   0.12496431]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.76694436  4.99701028  0.3656349   0.1218783   0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.8319247   8.11333204  0.36328352  0.12109451  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.03041721  7.98154554  0.36091683  0.24061122  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.0251818  13.03317806  4.74848353  1.78068132  0.35613626]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.33343174 10.0703319   1.05387194  0.58548441  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.54154286  9.96527798  0.81396607  0.23256173  0.23256173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.70924487 12.7478484   5.73157045  1.03168268  0.22926282]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.15577529 12.26732132  7.00932686  7.00932686  0.22251831]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.61163313 16.2550202   4.20347636  1.1855959   0.75447012]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.03192218 15.76360216  5.14978576  5.14978576  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.64925399 14.39098489  5.21952048  0.71640477  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.91303461 14.06749984  6.53025855  5.02327581  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.4149769  10.74213661  3.94206848  0.68986198  0.19710342]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.53327131 14.55592805 10.14839649  1.75645324  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.09715242 16.93483794  2.93284903  2.2705928   0.18921607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [19.20737515 17.83417298  7.48769228  3.55665383  0.46798077]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.41454866  6.06300764  0.1809853   0.09049265  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [20.5235045   7.60190881  2.77246086  1.69925021  0.44717111]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.56792721 20.23515315  0.97199426  0.44181557  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [21.11838299  9.60067494  1.04734636  0.43639432  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [21.37258872 16.48334676  4.22286763  1.20653361  0.25854292]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [22.12811608 18.57519992  7.94879997  4.80239998  1.0764    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [24.13537619 13.83032663  1.15252722  0.23050544  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [24.51079893 17.26264248  3.77928563  2.26757138  0.37792856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [25.32251741 16.72220653  2.92090944  0.65720462  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [25.90427423 20.9762175   1.00389664  0.78877594  0.35853452]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [26.49504159 25.52999991  4.41599998  0.759       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [27.86417446 12.169065    0.74366508  0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [27.84987257 24.55369815  1.98547424  1.19128455  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [28.45866995 23.94926279  2.52438175  2.52438175  0.25891095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [29.4207912  23.52511051  0.69563499  0.44267681  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [30.15723144 22.89644158  2.40690356  0.55543928  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [30.61572738 17.14354949 13.35392276  2.3459594   0.18045842]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [32.31433817 17.09614485  2.28338921  0.52693597  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [33.12632272 26.41315957  1.65006687  1.65006687  0.45519086]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [35.35442171 25.28051141  0.58791887  0.48102453  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [37.75541393 11.82438563  0.98106256  0.56798359  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [37.81055943 29.70469464  1.49269822  1.14440197  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [41.75434352  6.6926443   1.48194267  0.33463221  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [44.27441949  5.03463641  0.68654133  0.13730827  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [47.09024169  2.92384191  0.8291492   0.39275488  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [49.00164983 12.04739996  2.11139999  0.3726      0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [51.21193758 23.30227963  1.48322718  0.7025813   0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [5.84185317e+01 8.36110326e+00 6.93715991e-01 4.01625048e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [6.58797156e+01 3.71832542e+00 6.42256208e-01 1.69014792e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  49
Leaf selection - action scores:  [73.17742577  8.91788628  2.56119225  0.95658988  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  50
Leaf selection - action scores:  [8.74325330e+01 1.02396000e+01 6.62399998e-01 6.62399998e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  51
Leaf selection - action scores:  [109.25936648  18.022335     0.54975292   0.54975292   0.16731611]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  52
Leaf selection - action scores:  [1.86593882e+02 7.24049057e+00 7.61129737e-01 3.51290648e-01
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  53
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.79, 1.1, 0.05, 0.04, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.943220 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  107
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  91.0
Iteration TIME (sec):  0.015719164000000063
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.29083643 10.32183021  1.01259186  0.11251025  0.11251021]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.80065848  6.66039165  0.6509447   0.13018894  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.87197893 11.22075824  3.86153491  1.80204963  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.28255212 10.94233042  3.01737559  0.88006788  0.12572398]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.66417878  5.02894038  0.36797125  0.12265708  0.12265708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.72737348  8.16584607  0.3656349   0.1218783   0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.92030791  8.03716282  0.36328352  0.24218902  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.91200313 13.12431161  4.78046021  1.79267258  0.35853452]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.21794794 10.14002361  1.06116526  0.58953626  0.2358145 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.41955899 10.03871943  0.81967818  0.23419377  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.57478305 12.84530705  5.77295416  1.03913175  0.23091817]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.00828907 12.36707236  7.06303896  7.06303896  0.22422346]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.45432658 16.39315871  4.23779102  1.19527439  0.76062916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.8617896  15.90463709  5.19399074  5.19399074  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.46937935 14.52574768  5.26675692  0.7228882   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.72331771 14.20428688  6.59157688  5.07044375  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.21980459 10.84694042  3.98052859  0.6965925   0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.31643725 14.70740038 10.24937805  1.77393082  0.29565514]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.8774775  17.11404756  2.96388533  2.2946209   0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [18.96137024 18.03418787  7.56864265  3.59510526  0.47304017]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.15808471  6.13310254  0.18307769  0.09153884  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [20.2594184   7.69187536  2.80527219  1.71936038  0.45246326]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.29664696 20.48043668  0.98377643  0.44717111  0.08943422]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  23
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [97.86, 1.79, 0.19, 0.11, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````
API response time: 1.583409 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````// Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    // Instantiate mod_a and connect the ports by name
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  89
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  92.0
Iteration TIME (sec):  0.012849747999999828
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.22008868 10.3813889   1.01808021  0.11312007  0.11312002]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.71438074  6.70050621  0.65459147  0.13091829  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.77907569 11.28935913  3.88366424  1.81237664  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.18208569 11.01255525  3.03549813  0.88535362  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.56339576  5.06066903  0.37029286  0.12343095  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.62486561  8.21802453  0.36797125  0.12265708  0.12265708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.81243431  8.09242012  0.3656349   0.2437566   0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.80118625 13.21483959  4.81222442  1.80458416  0.36091683]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.10487827 10.20923959  1.06840879  0.59356044  0.23742418]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.30023118 10.11165262  0.82535076  0.2358145   0.2358145 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.4435027  12.94207203  5.81404332  1.0465278   0.23256173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.86452515 12.46607054  7.11634568  7.11634568  0.22591574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.30114825 16.53018763  4.27183005  1.20487514  0.76673873]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  13
Leaf selection - action scores:  [1.11350818e+02 1.42935760e+01 7.17069032e-01 2.15120710e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [1.86906141e+02 7.24049057e+00 4.68387530e-01 4.68387530e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [96.35, 2.91, 0.51, 0.19, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
API response time: 1.157151 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  69
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  93.0
Iteration TIME (sec):  0.011423639000000207
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.15054674 10.44062823  1.02353912  0.11372661  0.11372657]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.62959316  6.74039851  0.65821805  0.13164361  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.68788724 11.35757134  3.90566818  1.82264515  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.08356909 11.08236332  3.05351311  0.89060799  0.12722971]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.46453243  5.09219998  0.3726      0.1242      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.52433534  8.26987378  0.37029286  0.12343095  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.70672179  8.14732432  0.36797125  0.24531417  0.12265708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.69265023 13.30477393  4.84378033  1.81641762  0.36328352]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.99413979 10.27798946  1.07560355  0.59755753  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.18346459 10.18408794  0.83098462  0.23742418  0.23742418]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.31528075 13.03815792  5.85484413  1.05387194  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.7243301  12.56433264  7.16925604  7.16925604  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.43778659 12.24959996  4.30559999  1.2144      0.7728    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.69636741 16.0444818   5.23782266  5.23782266  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.29460131 14.65931251  5.31357346  0.729314    0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.53918641 14.33981312  6.65233002  5.11717694  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.03039768 10.95074126  4.01862064  0.70325861  0.20093103]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.10663659 14.85739483 10.34937435  1.79123787  0.29853964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.66484575 17.29139994  2.99459999  2.31839999  0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [18.72409224 18.23208602  7.64873634  3.63314976  0.47804602]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.91061062  6.20240533  0.18514643  0.09257321  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [20.00481037  7.78080173  2.83770416  1.73923803  0.45769422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.54839841  9.86140858  0.99541916  0.45246326  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [20.83301655  9.71994256  1.06035737  0.44181557  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [21.0448894  16.70182707  4.27666429  1.22190408  0.26183659]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [21.71398545 18.84245668  8.05844377  4.86864311  1.09124759]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [23.71325908 14.05162591  1.17096883  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [24.03769971 17.55625977  3.8417574   2.30505444  0.38417574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [24.83107673 17.01819776  2.97261096  0.66883747  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [25.3434979  21.37030941  1.0223183   0.8032501   0.36511368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [25.91717654 26.03559355  4.50345402  0.77403116  0.14073294]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  31
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', "Here's", '\n']
Probs: [98.01, 1.8, 0.11, 0.03, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.458087 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  85
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  94.0
Iteration TIME (sec):  0.01334481999999948
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.08217685 10.49955328  1.02896908  0.11432994  0.1143299 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.54625333  6.78007223  0.66182475  0.13236495  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.59836163 11.42540141  3.92754884  1.83285613  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.98694016 11.15176194  3.07142244  0.89583154  0.12797593]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.36752866  5.12353689  0.37489294  0.12496431  0.12496431]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.42571993  8.32139997  0.3726      0.1242      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.60309924  8.20188211  0.37029286  0.2468619   0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.58631799 13.39412615  4.87513198  1.82817449  0.3656349 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.88565352 10.3462825   1.08275049  0.60152805  0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.06916895 10.25603548  0.83658054  0.23902301  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.19000058 13.13357884  5.89536256  1.06116526  0.2358145 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.58755922 12.66187484  7.22177876  7.22177876  0.22926282]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.28527365 12.35076568  4.33910711  1.22385072  0.7788141 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.5354428  16.18316591  5.28129081  5.28129081  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.12468402 14.79171077  5.35998109  0.73568368  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.3603724  14.47411281  6.71253333  5.16348718  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.84647791 11.05356738  4.056355    0.70986213  0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.90349839 15.00595383 10.44841368  1.80837929  0.30139655]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.45888895 17.46695165  3.0250028   2.34193765  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [18.49503906 18.42793325  7.72799997  3.67079999  0.483     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.67161359  6.27094228  0.18719231  0.09359615  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [19.75912718  7.86872319  2.86976963  1.75889107  0.46286607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.27825731  9.98119763  1.00692728  0.45769422  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [20.55840566  9.83776435  1.07321066  0.44717111  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [20.73108706 16.91759303  4.32979259  1.2370836   0.26508934]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [21.32093604 19.10612562  8.16661564  4.93399695  1.10589587]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [23.31168514 14.26949356  1.18912446  0.23782489  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [23.58985071 17.84517827  3.90322942  2.34193765  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [24.36612214 17.3091282   3.02342851  0.68027141  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [24.81617987 21.75742459  1.04041384  0.81746801  0.37157637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [26.42916876 12.76577709  4.5892418   0.78877594  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [27.23104159 12.41999996  0.759       0.207       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [27.1881153  25.08179508  2.0281775   1.2169065   0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [27.75059886 24.48751567  2.58111652  2.58111652  0.2647299 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [28.65285316 24.07871826  0.71200511  0.45309416  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [29.32909386 23.46187096  2.46634223  0.5691559   0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [29.72847129 17.58891065 13.70083566  2.40690356  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [31.32419376 17.56461912  2.3459594   0.54137525  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [31.91915339 27.19341273  1.6979048   1.6979048   0.46838753]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [34.04138654 26.10959991  0.6072      0.4968      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [36.24775298 12.23940193  1.01549623  0.58791887  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [36.17459247 30.82601844  1.54904615  1.18760205  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [39.78838457  6.96592504  1.54245483  0.34829625  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [41.98467479  5.25850623  0.71706903  0.14341381  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [44.38884304  3.06655127  0.86961902  0.4119248   0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [45.84409348 12.69907458  2.22561101  0.39275488  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [47.44914983 24.71579991  1.57319999  0.7452      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [5.34367783e+01 8.93839537e+00 7.41613590e-01 4.29355236e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [5.91852704e+01 4.01625048e+00 6.93715991e-01 1.82556840e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  49
Leaf selection - action scores:  [63.98674993  9.76905496  2.80564554  1.04789171  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  50
Leaf selection - action scores:  [7.31234247e+01 1.14482208e+01 7.40585712e-01 7.40585712e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  51
Leaf selection - action scores:  [83.82613302 20.81039993  0.6348      0.6348      0.1932    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  52
Leaf selection - action scores:  [1.13764950e+02 8.86775369e+00 9.32189741e-01 4.30241419e-01
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  53
Leaf selection - action scores:  [1.92800017e+02 2.14677618e+00 9.75807355e-02 7.80645884e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  54
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [95.47, 3.7, 0.5, 0.14, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.501745 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  108
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  95.0
Iteration TIME (sec):  0.016349435999999606
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.01494647 10.55816901  1.03437053  0.1149301   0.11493006]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.46432046  6.8195309   0.6654119   0.13308238  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.51044905 11.49285567  3.94930828  1.84301053  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.89213955 11.22075824  3.08922793  0.90102481  0.12871783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.27232685  5.1546833   0.37717195  0.12572398  0.12572398]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.32895943  8.37260907  0.37489294  0.12496431  0.12496431]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.50149869  8.25609997  0.3726      0.2484      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.48211596 13.48290741  4.9062833   1.83985624  0.36797125]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.77934419 10.4141277   1.08985057  0.60547254  0.24218902]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.95725839 10.32750494  0.84213927  0.24061122  0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.06755185 13.22834839  5.93560441  1.06840879  0.23742418]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.45407583 12.75871274  7.27392225  7.27392225  0.23091817]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.13667508 12.45115616  4.37235745  1.23322903  0.78478211]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.37881618 16.32071784  5.32440411  5.32440411  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.95940659 14.92297249  5.40599036  0.74199868  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.18662495 14.60721865  6.77220147  5.20938574  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.66778557 11.15544573  4.09374155  0.71640477  0.20468708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.70667857 15.15311781 10.546523    1.82535975  0.30422663]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.25926519 17.64075644  3.05510307  2.36524109  0.19710342]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [18.27374808 18.62179202  7.80645884  3.70806795  0.48790368]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  20
Leaf selection - action scores:  [1.12067887e+02 1.12101792e+01 1.50584497e+00 9.08287440e-01
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [1.92175500e+02 2.73226059e+00 9.75807355e-02 5.85484413e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  22
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.15, 1.09, 0.52, 0.19, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````
API response time: 0.845387 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  76
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  96.0
Iteration TIME (sec):  0.012628024000000515
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.94882437 10.61648024  1.03974391  0.11552715  0.1155271 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.38375552  6.858778    0.66897982  0.13379596  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.42410166 11.55994031  3.97094849  1.85310929  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.79911047 11.28935913  3.10693139  0.90618832  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.17887192  5.18564264  0.37943727  0.12647909  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.23399636  8.42350686  0.37717195  0.12572398  0.12572398]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.40185532  8.30998417  0.37489294  0.24992863  0.12496431]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.37997406 13.57112852  4.93723808  1.85146428  0.37029286]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.67513993 10.48153376  1.0969047   0.6093915   0.2437566 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.8476512  10.39850573  0.84766156  0.24218902  0.24218902]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.94782972 13.32247975  5.97557527  1.07560355  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.32375077 12.85486138  7.32569459  7.32569459  0.23256173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.99182687 12.55078894  4.40535685  1.24253655  0.79070508]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.22629994 16.45716489  5.36717109  5.36717109  0.1095341 ]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  14
Leaf selection - action scores:  [1.17433953e+02 2.62925312e+00 2.15120710e-01 1.67316107e-01
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.88038077e+02 5.67919880e+00 9.95323502e-01 3.70806795e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.06, 0.86, 0.04, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````
API response time: 0.974519 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  70
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  97.0
Iteration TIME (sec):  0.012085722000000132
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.88378041 10.67449166  1.04508968  0.11612112  0.11612108]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.30452086  6.89781688  0.67252881  0.13450576  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.33927377 11.62666134  3.9924714   1.86315332  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.70779849 11.35757134  3.12453454  0.91132257  0.13018894]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.08711114  5.21641824  0.38168914  0.12722971  0.12722971]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.14077581  8.47409895  0.37943727  0.12647909  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.30410715  8.3635408   0.37717195  0.25144797  0.12572398]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.27982527 13.65879995  4.96799998  1.86299999  0.3726    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.57297223 10.5485091   1.10391374  0.61328541  0.24531417]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.74026953 10.46904696  0.8531481   0.2437566   0.2437566 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.83073484 13.41598563  6.01528052  1.08275049  0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.19646186 12.95033526  7.3771036   7.3771036   0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.85057444 12.64968093  4.43811088  1.25177486  0.796584  ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.36234659 12.19439996  5.40959998  5.40959998  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.79856191 15.05312647  5.45161134  0.74826038  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.01770961 14.73916193  6.83134845  5.25488342  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.49407773 11.25640204  4.13078974  0.7228882   0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.51585727 15.29892536 10.64372803  1.8421837   0.30703062]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.06565667 17.81286546  3.08490966  2.38831716  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [18.46531968 13.8602913   7.88413696  3.74496505  0.49275856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.44062072  6.33873822  0.18921607  0.09460803  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [19.52185974  7.95567304  2.90148076  1.77832692  0.46798077]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.0179996  10.099633    1.01830535  0.46286607  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [20.29389179  9.95419165  1.08591182  0.45246326  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [20.43023133 17.13074336  4.38227685  1.2520791   0.26830266]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [20.94726078 19.36634745  8.27337332  4.99849638  1.12035264]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [22.92904236 14.48408446  1.20700704  0.24140141  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [23.16509156 18.1296166   3.96374821  2.37824893  0.39637482]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [23.92536012 17.59524888  3.07340592  0.69151633  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [24.31913516 22.13792095  1.05819998  0.83144284  0.37792856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [25.85746562 13.00920615  4.6734551   0.8032501   0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [26.63772918 12.66596443  0.77403116  0.21109941  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [26.56979159 25.59899991  2.06999999  1.242       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [27.0911155  25.01418917  2.63663075  2.63663075  0.27042367]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [27.9401214  24.61988062  0.72800722  0.46327732  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [28.56346724 24.01399052  2.52438175  0.58254964  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [28.91171286 18.02327015 14.03917885  2.46634223  0.18971863]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [30.41708608 18.02091898  2.40690356  0.55543928  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [30.83011988 27.95227687  1.74443135  1.74443135  0.48122244]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [32.86042132 26.91315957  0.62588743  0.51208972  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [34.90250654 12.64079996  1.0488      0.6072      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [34.72832629 31.90796049  1.6034151   1.22928491  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [38.06919508  7.22888205  1.60068102  0.3614441   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [40.00814292  5.47322682  0.74634911  0.14926982  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [42.09332161  3.20290834  0.90828744  0.43024142  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [43.2125689  13.31890179  2.33424052  0.4119248   0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [44.38944576 26.05274064  1.6582984   0.78550977  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [4.95139748e+01 9.48059997e+00 7.86599997e-01 4.55399998e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [5.41393596e+01 4.29355236e+00 7.41613590e-01 1.95161471e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  49
Leaf selection - action scores:  [57.48140656 10.55178534  3.03044354  1.13185241  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  50
Leaf selection - action scores:  [63.93942579 12.54089754  0.811271    0.811271    0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  51
Leaf selection - action scores:  [70.09936641 23.26673444  0.70972797  0.70972797  0.21600417]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  52
Leaf selection - action scores:  [8.72945330e+01 1.02396000e+01 1.07640000e+00 4.96799998e-01
 8.27999997e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  53
Leaf selection - action scores:  [1.17565416e+02 2.62925312e+00 1.19511505e-01 9.56092042e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  54
Leaf selection - action scores:  [1.86320656e+02 7.22097442e+00 9.75807355e-01 2.73226059e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  55
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', 'To']
Probs: [95.92, 2.26, 1.07, 0.65, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.769126 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  109
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  98.0
Iteration TIME (sec):  0.016333398999999638
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.81978573 10.73220785  1.05040823  0.11671207  0.11671203]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.22658031  6.93665083  0.67605917  0.13521183  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.2559214  11.69302462  4.01387891  1.87314349  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.6181516  11.42540141  3.14203907  0.91642806  0.13091829]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [13.99699387  5.24701333  0.3839278   0.12797593  0.12797593]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.04924515  8.52439078  0.38168914  0.12722971  0.12722971]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.20819489  8.41677576  0.37943727  0.25295818  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.18160571 13.74593185  4.99857258  1.87446472  0.37489294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.47277557 10.61506187  1.11087857  0.61715476  0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.63503908 10.53913743  0.85859958  0.24531417  0.24531417]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.7161728  13.50887833  6.05472541  1.08985057  0.24218902]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.07209333 13.0451484   7.42815683  7.42815683  0.2358145 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.71277199 12.7478484   4.47062495  1.2609455   0.80241986]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.21049291 12.2951361   5.45169867  5.45169867  0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.64195567 15.18220027  5.4968537   0.75447012  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [16.85340678 14.86997259  6.88998771  5.29999055  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.32512703 11.35646092  4.16750859  0.729314    0.20837543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.33073677 15.4434133  10.74005333  1.85885538  0.30980923]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [17.87776738 17.98332739  3.114431    2.41117239  0.20093103]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [98.06, 1.8, 0.09, 0.03, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````
API response time: 0.762880 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  73
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  99.0
Iteration TIME (sec):  0.012190798999999863
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.75681233 10.78963327  1.0557      0.11730004  0.1173    ]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [118.21077822   1.60145417   0.           0.           0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [1.90380015e+02 4.46919768e+00 2.14677618e-01 5.85484413e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [97.56, 2.29, 0.09, 0.04, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````
API response time: 0.808904 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  57
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  100.0
Iteration TIME (sec):  0.010366412999999852
ROBUST FINAL VALUE, ITERATION:  1.0
Adding child.
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [94.43, 4.7, 0.64, 0.14, 0.03]
Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 1.051226 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  110
Trimming the result to last instance of endmodule...
Running getPromptScore: 
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [96.8, 2.92, 0.15, 0.09, 0.01]
Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.851271 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  110
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.81539874  7.88507923  1.06096537  0.11788509  0.11788504]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.149899    6.97528305  0.67957119  0.13591424  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.17400227 11.75903582  4.03517284  1.88308066  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.53011993 11.49285567  3.15944662  0.92150527  0.13164361]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [13.90847171  5.27743105  0.38615349  0.12871783  0.12871783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [13.95935389  8.57438763  0.3839278   0.12797593  0.12797593]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.11406184  8.46969477  0.38168914  0.25445943  0.12722971]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.0852543  13.83253406  5.02895932  1.88585974  0.37717195]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.37448743 10.68119996  1.1178      0.621       0.2484    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.53188908 10.60878567  0.86401666  0.2468619   0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.60405382 13.60116977  6.09391498  1.0969047   0.2437566 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [14.95053565 13.13931433  7.47886156  7.47886156  0.23742418]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.57828181 12.84530705  4.50290425  1.27004992  0.80821358]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.06253668 12.3951003   5.49347475  5.49347475  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.48940502 15.31022036  5.54172672  0.76062916  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [16.69351058 14.9996793   6.9481321   5.344717    0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.16072031 11.45564587  4.20390674  0.73568368  0.21019534]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.1510397  15.58661683 10.83552234  1.87537887  0.31256314]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.05484672  8.57609431  3.14367513  2.433813    0.20281775]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [18.24554251 14.0028341   7.96105719  3.78150216  0.49756607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.21719531  6.40581668  0.19121841  0.0956092   0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [19.29253858  8.04168282  2.93284903  1.79755263  0.47304017]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [19.76703835 10.21675957  1.02955769  0.46798077  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [20.03887134 10.06927283  1.09846613  0.45769422  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [20.14146016 17.34137093  4.43413991  1.26689712  0.27147795]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [20.59143798 19.62325396  8.37877086  5.06217406  1.13462522]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [22.56389029 14.69554213  1.22462851  0.2449257   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [22.76151129 18.40977693  4.02335679  2.41401408  0.40233568]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [23.50676565 17.87679074  3.12258353  0.7025813   0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [23.84958607 22.51212681  1.07569207  0.84518663  0.38417574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [25.31987228 13.24832571  4.75617754  0.81746801  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [26.08023794 12.90724257  0.78877594  0.21512071  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [25.99035767 26.10596002  2.11099407  1.26659644  0.14073294]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  33
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '    \n']
Probs: [96.01, 3.72, 0.19, 0.05, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.795270 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  87
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  101.0
Iteration TIME (sec):  0.013674579999999992
MCTS EXECUTION TIME (sec):  1.3180685260000002
----
 Tree depth: 0
 Node: action=None
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);

• Child Action scores:[10.75253567  7.92772185  1.06620473  0.11846724  0.11846719]
• Child averaged monte carlo:-0.9901960784313726
• Child probablities:[8.25660000e+01 2.49050000e+00 7.65000000e-02 8.50000327e-03
 8.50000000e-03]
• Child visitation:[1 1 0 0 0]
• N=101.0,Q=-0.9901960784313726,M=-0.9901960784313726
----
 Tree depth: 1
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```
• Child Action scores:[13.07444348  7.01371663  0.68306515  0.13661303  0.        ]
• Child averaged monte carlo:-0.9897959183673469
• Child probablities:[9.883e+01 1.100e+00 5.000e-02 1.000e-02 0.000e+00]
• Child visitation:[1 1 0 0 0]
• N=97.0,Q=-0.9897959183673469,M=-0.9897959183673469
----
 Tree depth: 1
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``
• Child Action scores:[90.716933    1.84919999  0.          0.          0.        ]
• Child averaged monte carlo:-0.75
• Child probablities:[99.33  0.67  0.    0.    0.  ]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````
• Child Action scores:[13.09347594 11.8247005   4.056355    1.89296567  0.        ]
• Child averaged monte carlo:-0.9895833333333334
• Child probablities:[95.82  3.72  0.3   0.14  0.  ]
• Child visitation:[1 1 0 0 0]
• N=95.0,Q=-0.9895833333333334,M=-0.9895833333333334
----
 Tree depth: 2
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````
• Child Action scores:[1.90380015e+02 4.46919768e+00 2.14677618e-01 5.85484413e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.755e+01 2.290e+00 1.100e-01 3.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````
• Child Action scores:[1.16083473e+02 5.47362694e+00 2.62925312e-01 7.17069032e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.755e+01 2.290e+00 1.100e-01 3.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````
• Child Action scores:[13.44365557 11.55994031  3.17675879  0.92655465  0.13236495]
• Child averaged monte carlo:-0.9891304347826086
• Child probablities:[9.595e+01 3.720e+00 2.400e-01 7.000e-02 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=91.0,Q=-0.9891304347826086,M=-0.9891304347826086
----
 Tree depth: 3
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````
• Child Action scores:[8.90885330e+01 6.32039998e+00 2.48399999e-01 1.10400000e-01
 2.75999999e-02]
• Child averaged monte carlo:-0.75
• Child probablities:[9.756e+01 2.290e+00 9.000e-02 4.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````
• Child Action scores:[1.90399531e+02 4.46919768e+00 1.75645324e-01 7.80645884e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.756e+01 2.290e+00 9.000e-02 4.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````
• Child Action scores:[13.82149816  5.30767446  0.38836642  0.12945547  0.12945547]
• Child averaged monte carlo:-0.9886363636363636
• Child probablities:[9.953e+01 4.100e-01 3.000e-02 1.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=87.0,Q=-0.9886363636363636,M=-0.9886363636363636
----
 Tree depth: 4
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````
• Child Action scores:[8.95761330e+01 4.96799998e+00 1.93199999e-01 8.27999997e-02
 2.75999999e-02]
• Child averaged monte carlo:-0.75
• Child probablities:[9.809e+01 1.800e+00 7.000e-02 3.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 4
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````
• Child Action scores:[1.16728836e+02 4.30241419e+00 1.67316107e-01 7.17069032e-02
 2.39023011e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.809e+01 1.800e+00 7.000e-02 3.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 5
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````
• Child Action scores:[13.87105374  8.62409464  0.38615349  0.12871783  0.12871783]
• Child averaged monte carlo:-0.9885057471264368
• Child probablities:[9.928e+01 6.700e-01 3.000e-02 1.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=86.0,Q=-0.9885057471264368,M=-0.9885057471264368
----
 Tree depth: 5
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````
• Child Action scores:[1.17613221e+02 2.62925312e+00 7.17069032e-02 4.78046021e-02
 2.39023011e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.883e+01 1.100e+00 3.000e-02 2.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 5
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````
• Child Action scores:[1.93268405e+02 1.67838865e+00 1.75645324e-01 1.95161471e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.903e+01 8.600e-01 9.000e-02 1.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 6
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````
• Child Action scores:[14.0216537   8.5223034   0.3839278   0.25595187  0.12797593]
• Child averaged monte carlo:-0.9883720930232558
• Child probablities:[9.852e+01 1.410e+00 3.000e-02 2.000e-02 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=85.0,Q=-0.9883720930232558,M=-0.9883720930232558
----
 Tree depth: 6
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````
• Child Action scores:[1.93717276e+02 1.30758186e+00 7.80645884e-02 3.90322942e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.926e+01 6.700e-01 4.000e-02 2.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 7
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````
• Child Action scores:[13.99071256 13.91861612  5.05916355  1.89718633  0.37943727]
• Child averaged monte carlo:-0.9880952380952381
• Child probablities:[9.711e+01 2.280e+00 4.000e-01 1.500e-01 3.000e-02]
• Child visitation:[1 1 0 0 0]
• N=83.0,Q=-0.9880952380952381,M=-0.9880952380952381
----
 Tree depth: 7
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````
• Child Action scores:[1.86535334e+02 7.24049057e+00 1.24903341e+00 5.85484413e-02
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.558e+01 3.710e+00 6.400e-01 3.000e-02 2.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 8
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````
• Child Action scores:[14.27804804 10.74693104  1.12467883  0.62482157  0.24992863]
• Child averaged monte carlo:-0.9878048780487805
• Child probablities:[9.895e+01 8.600e-01 9.000e-02 5.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=81.0,Q=-0.9878048780487805,M=-0.9878048780487805
----
 Tree depth: 8
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````
• Child Action scores:[1.91258242e+02 3.49339033e+00 9.75807355e-02 9.75807355e-02
 7.80645884e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.80e+01 1.79e+00 5.00e-02 5.00e-02 4.00e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 9
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````
• Child Action scores:[14.43075186 10.67799996  0.8694      0.2484      0.2484    ]
• Child averaged monte carlo:-0.9876543209876543
• Child probablities:[9.807e+01 1.800e+00 7.000e-02 2.000e-02 2.000e-02]
• Child visitation:[1 1 0 0 0]
• N=80.0,Q=-0.9876543209876543,M=-0.9876543209876543
----
 Tree depth: 10
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````
• Child Action scores:[14.49429256 13.69287147  6.13285413  1.10391374  0.24531417]
• Child averaged monte carlo:-0.9873417721518988
• Child probablities:[9.466e+01 4.710e+00 5.000e-01 9.000e-02 2.000e-02]
• Child visitation:[1 1 0 0 0]
• N=78.0,Q=-0.9873417721518988,M=-0.9873417721518988
----
 Tree depth: 10
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````
• Child Action scores:[1.87179367e+02 7.26000672e+00 6.05000560e-01 5.85484413e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.591e+01 3.720e+00 3.100e-01 3.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 11
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````
• Child Action scores:[14.83168473 13.23284612  7.52922483  7.52922483  0.23902301]
• Child averaged monte carlo:-0.9866666666666667
• Child probablities:[9.397e+01 4.680e+00 6.300e-01 6.300e-01 2.000e-02]
• Child visitation:[1 1 0 0 0]
• N=74.0,Q=-0.9866666666666667,M=-0.9866666666666667
----
 Tree depth: 11
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````
• Child Action scores:[8.85181330e+01 6.29279998e+00 1.79399999e+00 2.48399999e-01
 5.51999998e-02]
• Child averaged monte carlo:-0.75
• Child probablities:[9.694e+01 2.280e+00 6.500e-01 9.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 12
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````
• Child Action scores:[15.44697377 12.94207203  4.53495379  1.27908953  0.81396607]
• Child averaged monte carlo:-0.9859154929577465
• Child probablities:[9.468e+01 4.710e+00 3.900e-01 1.100e-01 7.000e-02]
• Child visitation:[1 1 0 0 0]
• N=70.0,Q=-0.9859154929577465,M=-0.9859154929577465
----
 Tree depth: 12
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````
• Child Action scores:[80.11853303 25.55759991  5.71319998  2.09759999  0.0828    ]
• Child averaged monte carlo:-0.75
• Child probablities:[8.781e+01 9.260e+00 2.070e+00 7.600e-01 3.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 12
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````
• Child Action scores:[111.33886667  11.13847229   1.93608639   1.93608639   0.11951151]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.358e+01 4.660e+00 8.100e-01 8.100e-01 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 13
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````
• Child Action scores:[15.91831461 12.49431001  5.53493553  5.53493553  0.11295787]
• Child averaged monte carlo:-0.9850746268656716
• Child probablities:[9.427e+01 4.690e+00 4.900e-01 4.900e-01 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=66.0,Q=-0.9850746268656716,M=-0.9850746268656716
----
 Tree depth: 13
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
• Child Action scores:[8.54361330e+01 1.65047999e+01 8.27999997e-01 2.48399999e-01
 2.75999999e-02]
• Child averaged monte carlo:-0.75
• Child probablities:[9.359e+01 5.980e+00 3.000e-01 9.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 13
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
• Child Action scores:[1.10801065e+02 1.42218691e+01 1.93608639e+00 1.91218408e-01
 2.39023011e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.313e+01 5.950e+00 8.100e-01 8.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 13
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````
• Child Action scores:[1.86867108e+02 7.24049057e+00 7.61129737e-01 2.14677618e-01
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.575e+01 3.710e+00 3.900e-01 1.100e-01 2.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 14
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````
• Child Action scores:[16.34073825 15.43721212  5.5862393   0.76673873  0.1095341 ]
• Child averaged monte carlo:-0.9841269841269841
• Child probablities:[9.648e+01 2.910e+00 5.100e-01 7.000e-02 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=62.0,Q=-0.9841269841269841,M=-0.9841269841269841
----
 Tree depth: 14
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
• Child Action scores:[90.118933    3.03599999  0.2484      0.1932      0.1104    ]
• Child averaged monte carlo:-0.75
• Child probablities:[9.868e+01 1.100e+00 9.000e-02 7.000e-02 4.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 14
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
• Child Action scores:[1.13956169e+02 8.86775369e+00 5.73655225e-01 5.73655225e-01
 2.39023011e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.577e+01 3.710e+00 2.400e-01 2.400e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 14
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````
• Child Action scores:[1.90340983e+02 4.46919768e+00 1.75645324e-01 7.80645884e-02
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.753e+01 2.290e+00 9.000e-02 4.000e-02 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 15
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````
• Child Action scores:[16.53782783 15.12830955  7.00579394  5.38907226  0.10778145]
• Child averaged monte carlo:-0.9836065573770492
• Child probablities:[9.591e+01 2.900e+00 6.500e-01 5.000e-01 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=60.0,Q=-0.9836065573770492,M=-0.9836065573770492
----
 Tree depth: 15
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
• Child Action scores:[1.87159851e+02 7.26000672e+00 4.68387530e-01 1.75645324e-01
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.59e+01 3.72e+00 2.40e-01 9.00e-02 3.00e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 15
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
• Child Action scores:[1.14649335e+02 6.95556961e+00 1.21901735e+00 4.54143720e-01
 2.39023011e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.635e+01 2.910e+00 5.100e-01 1.900e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 15
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````
• Child Action scores:[1.88038077e+02 5.67919880e+00 9.95323502e-01 3.70806795e-01
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.635e+01 2.910e+00 5.100e-01 1.900e-01 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 16
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````
• Child Action scores:[17.00065756 11.55397939  4.23999244  0.74199868  0.21199962]
• Child averaged monte carlo:-0.9830508474576272
• Child probablities:[9.84e+01 1.09e+00 4.00e-01 7.00e-02 2.00e-02]
• Child visitation:[1 0 0 0 0]
• N=58.0,Q=-0.9830508474576272,M=-0.9830508474576272
----
 Tree depth: 16
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
• Child Action scores:[1.89170014e+02 2.69322830e+00 2.69322830e+00 4.68387530e-01
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.693e+01 1.380e+00 1.380e+00 2.400e-01 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 16
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````
• Child Action scores:[1.93326953e+02 1.67838865e+00 7.80645884e-02 3.90322942e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.906e+01 8.600e-01 4.000e-02 2.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 17
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````
• Child Action scores:[16.97650705 15.7285696  10.93015752  1.89175803  0.31529301]
• Child averaged monte carlo:-0.9827586206896551
• Child probablities:[9.398e+01 4.680e+00 1.040e+00 1.800e-01 3.000e-02]
• Child visitation:[1 1 0 0 0]
• N=57.0,Q=-0.9827586206896551,M=-0.9827586206896551
----
 Tree depth: 18
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````
• Child Action scores:[17.86745813  8.65974672  3.1726497   2.45624493  0.20468708]
• Child averaged monte carlo:-0.9818181818181818
• Child probablities:[9.761e+01 1.790e+00 3.100e-01 2.400e-01 2.000e-02]
• Child visitation:[1 1 0 0 0]
• N=54.0,Q=-0.9818181818181818,M=-0.9818181818181818
----
 Tree depth: 18
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````
• Child Action scores:[1.15497867e+02 5.44972464e+00 7.40971333e-01 7.40971333e-01
 4.78046021e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.706e+01 2.280e+00 3.100e-01 3.100e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 19
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````
• Child Action scores:[18.0329945  14.14401277  8.03724129  3.81768961  0.50232758]
• Child averaged monte carlo:-0.9811320754716981
• Child probablities:[9.273e+01 5.930e+00 8.000e-01 3.800e-01 5.000e-02]
• Child visitation:[1 1 0 0 0]
• N=52.0,Q=-0.9811320754716981,M=-0.9811320754716981
----
 Tree depth: 19
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````
• Child Action scores:[1.91375338e+02 3.51290648e+00 1.75645324e-01 5.85484413e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.806e+01 1.800e+00 9.000e-02 3.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 19
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````
• Child Action scores:[1.92721953e+02 2.14677618e+00 1.75645324e-01 7.80645884e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.875e+01 1.100e+00 9.000e-02 4.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 20
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````
• Child Action scores:[19.00093324  6.47219998  0.1932      0.0966      0.0966    ]
• Child averaged monte carlo:-0.9795918367346939
• Child probablities:[9.928e+01 6.700e-01 2.000e-02 1.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=48.0,Q=-0.9795918367346939,M=-0.9795918367346939
----
 Tree depth: 20
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````
• Child Action scores:[85.98813301 12.94439996  1.73879999  1.0488      0.1104    ]
• Child averaged monte carlo:-0.75
• Child probablities:[9.419e+01 4.690e+00 6.300e-01 3.800e-01 4.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 21
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````
• Child Action scores:[19.07073015  8.12678236  2.96388533  1.81657488  0.47804602]
• Child averaged monte carlo:-0.9791666666666666
• Child probablities:[9.856e+01 8.500e-01 3.100e-01 1.900e-01 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=47.0,Q=-0.9791666666666666,M=-0.9791666666666666
----
 Tree depth: 21
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````
• Child Action scores:[1.17182979e+02 3.34632215e+00 1.19511505e-01 7.17069032e-02
 4.78046021e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.847e+01 1.400e+00 5.000e-02 3.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 22
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````
• Child Action scores:[19.52483421 10.3326198   1.04068836  0.47304017  0.09460803]
• Child averaged monte carlo:-0.9787234042553191
• Child probablities:[9.752e+01 2.290e+00 1.100e-01 5.000e-02 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=46.0,Q=-0.9787234042553191,M=-0.9787234042553191
----
 Tree depth: 22
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````
• Child Action scores:[1.91550984e+02 2.12726003e+00 1.01483965e+00 3.70806795e-01
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.815e+01 1.090e+00 5.200e-01 1.900e-01 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 23
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````
• Child Action scores:[19.79279016 10.18305353  1.11087857  0.46286607  0.09257321]
• Child averaged monte carlo:-0.9777777777777777
• Child probablities:[9.872e+01 1.100e+00 1.200e-01 5.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=44.0,Q=-0.9777777777777777,M=-0.9777777777777777
----
 Tree depth: 23
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````
• Child Action scores:[1.90985015e+02 3.49339033e+00 3.70806795e-01 2.14677618e-01
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.786e+01 1.790e+00 1.900e-01 1.100e-01 2.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 24
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````
• Child Action scores:[19.86398946 17.54956325  4.48540335  1.28154381  0.27461653]
• Child averaged monte carlo:-0.9772727272727273
• Child probablities:[9.334e+01 5.970e+00 4.900e-01 1.400e-01 3.000e-02]
• Child visitation:[1 1 0 0 0]
• N=43.0,Q=-0.9772727272727273,M=-0.9772727272727273
----
 Tree depth: 25
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````
• Child Action scores:[20.25210691 19.8769687   8.48285896  5.12506062  1.14872048]
• Child averaged monte carlo:-0.975609756097561
• Child probablities:[86.47 11.7   0.96  0.58  0.13]
• Child visitation:[1 1 0 0 0]
• N=40.0,Q=-0.975609756097561,M=-0.975609756097561
----
 Tree depth: 25
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.09187660e+02 1.79984327e+01 9.08287440e-01 5.49752924e-01
 7.17069032e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.178e+01 7.530e+00 3.800e-01 2.300e-01 3.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 26
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````
• Child Action scores:[22.21493706 14.90399995  1.242       0.2484      0.        ]
• Child averaged monte carlo:-0.9722222222222222
• Child probablities:[9.801e+01 1.800e+00 1.500e-01 3.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=35.0,Q=-0.9722222222222222,M=-0.9722222222222222
----
 Tree depth: 26
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````
• Child Action scores:[7.48746014e+01 5.55439284e+00 4.62866070e-01 6.17154760e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.8
• Child probablities:[9.803e+01 1.800e+00 1.500e-01 2.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 26
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.85618075e+02 7.20145828e+00 1.24903341e+00 9.75807355e-01
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.511e+01 3.690e+00 6.400e-01 5.000e-01 2.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 27
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[22.37741261 18.68584667  4.08209504  2.44925702  0.4082095 ]
• Child averaged monte carlo:-0.9714285714285714
• Child probablities:[9.437e+01 4.700e+00 5.000e-01 3.000e-01 5.000e-02]
• Child visitation:[1 1 0 0 0]
• N=34.0,Q=-0.9714285714285714,M=-0.9714285714285714
----
 Tree depth: 27
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[8.95669330e+01 4.96799998e+00 2.48399999e-01 5.51999998e-02
 2.75999999e-02]
• Child averaged monte carlo:-0.75
• Child probablities:[9.808e+01 1.800e+00 9.000e-02 2.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 28
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[23.10854305 18.15396681  3.17099857  0.71347468  0.07927496]
• Child averaged monte carlo:-0.9696969696969697
• Child probablities:[9.719e+01 2.290e+00 4.000e-01 9.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=32.0,Q=-0.9696969696969697,M=-0.9696969696969697
----
 Tree depth: 28
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.79529037e+02 1.47346911e+01 5.65968266e-01 2.14677618e-01
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.199e+01 7.550e+00 2.900e-01 1.100e-01 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 28
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.09438634e+02 1.80462373e+01 6.93166731e-01 2.62925312e-01
 7.17069032e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.199e+01 7.550e+00 2.900e-01 1.100e-01 3.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 29
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[23.40509785 22.88034422  1.09290424  0.85871047  0.39032294]
• Child averaged monte carlo:-0.96875
• Child probablities:[9.366e+01 5.990e+00 1.400e-01 1.100e-01 5.000e-02]
• Child visitation:[1 1 0 0 0]
• N=31.0,Q=-0.96875,M=-0.96875
----
 Tree depth: 29
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.85793720e+02 7.20145828e+00 1.60032406e+00 4.68387530e-01
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.52e+01 3.69e+00 8.20e-01 2.40e-01 2.00e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 30
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[24.81314178 13.48335684  4.83748561  0.83144284  0.15117143]
• Child averaged monte carlo:-0.9666666666666667
• Child probablities:[9.549e+01 3.700e+00 6.400e-01 1.100e-01 2.000e-02]
• Child visitation:[1 1 0 0 0]
• N=29.0,Q=-0.9666666666666667,M=-0.9666666666666667
----
 Tree depth: 30
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.83646944e+02 7.12339369e+00 3.35677730e+00 5.85484413e-01
 1.36613030e-01]
• Child averaged monte carlo:-0.5
• Child probablities:[9.41e+01 3.65e+00 1.72e+00 3.00e-01 7.00e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 31
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[25.55510834 13.14409247  0.8032501   0.21906821  0.        ]
• Child averaged monte carlo:-0.9642857142857143
• Child probablities:[9.805e+01 1.800e+00 1.100e-01 3.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=27.0,Q=-0.9642857142857143,M=-0.9642857142857143
----
 Tree depth: 31
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.91277758e+02 3.51290648e+00 2.14677618e-01 5.85484413e-02
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.801e+01 1.800e+00 1.100e-01 3.000e-02 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 32
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[26.50374394 12.80163054  2.1512071   1.29072426  0.14341381]
• Child averaged monte carlo:-0.9629629629629629
• Child probablities:[9.575e+01 3.710e+00 3.000e-01 1.800e-01 2.000e-02]
• Child visitation:[1 1 0 0 0]
• N=26.0,Q=-0.9629629629629629,M=-0.9629629629629629
----
 Tree depth: 33
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[26.47491659 25.52999991  2.69099999  2.69099999  0.276     ]
• Child averaged monte carlo:-0.96
• Child probablities:[9.542e+01 3.700e+00 3.900e-01 3.900e-01 4.000e-02]
• Child visitation:[1 0 0 0 0]
• N=24.0,Q=-0.96,M=-0.96
----
 Tree depth: 33
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.87374528e+02 7.26000672e+00 3.70806795e-01 9.75807355e-02
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.601e+01 3.720e+00 1.900e-01 5.000e-02 2.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 34
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[27.27629693 25.149401    0.74366508  0.47324142  0.13521183]
• Child averaged monte carlo:-0.9583333333333334
• Child probablities:[9.605e+01 3.720e+00 1.100e-01 7.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=23.0,Q=-0.9583333333333334,M=-0.9583333333333334
----
 Tree depth: 35
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[27.85288086 24.55369815  2.58111652  0.59564227  0.13236495]
• Child averaged monte carlo:-0.9565217391304348
• Child probablities:[9.576e+01 3.710e+00 3.900e-01 9.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=22.0,Q=-0.9565217391304348,M=-0.9565217391304348
----
 Tree depth: 36
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[28.15660717 18.44740512 14.36955767  2.52438175  0.19418321]
• Child averaged monte carlo:-0.9545454545454546
• Child probablities:[9.444e+01 2.850e+00 2.220e+00 3.900e-01 3.000e-02]
• Child visitation:[1 0 0 0 0]
• N=21.0,Q=-0.9545454545454546,M=-0.9545454545454546
----
 Tree depth: 37
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[29.58205203 18.46594696  2.46634223  0.5691559   0.06323954]
• Child averaged monte carlo:-0.9523809523809523
• Child probablities:[9.656e+01 2.920e+00 3.900e-01 9.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=20.0,Q=-0.9523809523809523,M=-0.9523809523809523
----
 Tree depth: 38
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[29.84129218 28.69142013  1.7897488   1.7897488   0.49372381]
• Child averaged monte carlo:-0.95
• Child probablities:[8.979e+01 9.460e+00 2.900e-01 2.900e-01 8.000e-02]
• Child visitation:[1 1 0 0 0]
• N=19.0,Q=-0.95,M=-0.95
----
 Tree depth: 39
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[31.79084623 27.69341273  0.64403285  0.52693597  0.11709688]
• Child averaged monte carlo:-0.9444444444444444
• Child probablities:[9.504e+01 4.730e+00 1.100e-01 9.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=17.0,Q=-0.9444444444444444,M=-0.9444444444444444
----
 Tree depth: 39
 Node: action=1
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.83666460e+02 7.12339369e+00 3.35677730e+00 7.41613590e-01
 7.80645884e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.411e+01 3.650e+00 1.720e+00 3.800e-01 4.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 40
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[33.69256711 13.02983835  1.08107829  0.62588743  0.05689886]
• Child averaged monte carlo:-0.9411764705882353
• Child probablities:[9.738e+01 2.290e+00 1.900e-01 1.100e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=16.0,Q=-0.9411764705882353,M=-0.9411764705882353
----
 Tree depth: 41
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[33.43786654 32.95439989  1.65599999  1.2696      0.2208    ]
• Child averaged monte carlo:-0.9375
• Child probablities:[9.34e+01 5.97e+00 3.00e-01 2.30e-01 4.00e-02]
• Child visitation:[1 0 0 0 0]
• N=15.0,Q=-0.9375,M=-0.9375
----
 Tree depth: 42
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[36.54934773  7.4826038   1.65686227  0.37413019  0.10689434]
• Child averaged monte carlo:-0.9333333333333333
• Child probablities:[9.817e+01 1.400e+00 3.100e-01 7.000e-02 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=14.0,Q=-0.9333333333333333,M=-0.9333333333333333
----
 Tree depth: 43
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[38.27970648  5.67983589  0.77452308  0.15490462  0.05163487]
• Child averaged monte carlo:-0.9285714285714286
• Child probablities:[9.87e+01 1.10e+00 1.50e-01 3.00e-02 1.00e-02]
• Child visitation:[1 0 0 0 0]
• N=13.0,Q=-0.9285714285714286,M=-0.9285714285714286
----
 Tree depth: 44
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[40.11180252  3.3336927   0.94537554  0.44780947  0.24878304]
• Child averaged monte carlo:-0.9230769230769231
• Child probablities:[9.895e+01 6.700e-01 1.900e-01 9.000e-02 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=12.0,Q=-0.9230769230769231,M=-0.9230769230769231
----
 Tree depth: 45
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[40.97643227 13.91113922  2.43803471  0.43024142  0.23902301]
• Child averaged monte carlo:-0.9166666666666666
• Child probablities:[9.638e+01 2.910e+00 5.100e-01 9.000e-02 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=11.0,Q=-0.9166666666666666,M=-0.9166666666666666
----
 Tree depth: 46
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[41.83948624 27.3243449   1.73923803  0.8238496   0.09153884]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[9.338e+01 5.970e+00 3.800e-01 1.800e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 47
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[4.63241272e+01 9.99342983e+00 8.29149200e-01 4.80033747e-01
 4.36394316e-02]
• Child averaged monte carlo:-0.9
• Child probablities:[9.737e+01 2.290e+00 1.900e-01 1.100e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=9.0,Q=-0.9,M=-0.9
----
 Tree depth: 48
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[5.01660248e+01 4.55399998e+00 7.86599997e-01 2.06999999e-01
 4.13999999e-02]
• Child averaged monte carlo:-0.8888888888888888
• Child probablities:[9.863e+01 1.100e+00 1.900e-01 5.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=8.0,Q=-0.8888888888888888,M=-0.8888888888888888
----
 Tree depth: 49
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[52.57806788 11.28033302  3.23968042  1.21000112  0.15612918]
• Child averaged monte carlo:-0.875
• Child probablities:[9.583e+01 2.890e+00 8.300e-01 3.100e-01 4.000e-02]
• Child visitation:[1 0 0 0 0]
• N=7.0,Q=-0.875,M=-0.875
----
 Tree depth: 50
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[57.43880996 13.54571752  0.87627283  0.87627283  0.07302274]
• Child averaged monte carlo:-0.8571428571428571
• Child probablities:[9.576e+01 3.710e+00 2.400e-01 2.400e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=6.0,Q=-0.8571428571428571,M=-0.8571428571428571
----
 Tree depth: 51
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[61.28927386 25.48743058  0.77746804  0.77746804  0.23662071]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[9.184e+01 7.540e+00 2.300e-01 2.300e-01 7.000e-02]
• Child visitation:[1 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 52
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[73.00770821 11.44822079  1.20345178  0.55543928  0.09257321]
• Child averaged monte carlo:-0.8
• Child probablities:[9.561e+01 3.710e+00 3.900e-01 1.800e-01 3.000e-02]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 53
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[90.220133    3.03599999  0.138       0.1104      0.        ]
• Child averaged monte carlo:-0.75
• Child probablities:[9.879e+01 1.100e+00 5.000e-02 4.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 54
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[113.59763412   8.84385139   1.19511505   0.33463221   0.11951151]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.547e+01 3.700e+00 5.000e-01 1.400e-01 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 55
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.87198883e+02 4.41064924e+00 2.08822774e+00 1.26854956e+00
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.592e+01 2.260e+00 1.070e+00 6.500e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 56
 Node: action=0
• state:e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.0
• Child probablities:[0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0]
• N=0.0,Q=0.0,M=0.0
END ROBUST/MAX VALUES:
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [96.8, 2.92, 0.15, 0.09, 0.01]
Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.800058 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  110
Trimming the result to last instance of endmodule...
Running getPromptScore: 
getLLMestimates: prior state:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '    \n']
Probs: [96.8, 2.92, 0.15, 0.09, 0.01]
Getting terminal state (rollout). Temp:  0
Current prompt:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.819082 seconds
Initiating comile/functionality check.
VERILOG CODE:
e th// You are given a module named mod_a that has 2 outputs and 4 inputs, in some order. 
// You must connect the 6 ports by name to your top-level module's ports:

// Port in mod_a	Port in top_module
// output out1	out1
// output out2	out2
// input in1	a
// input in2	b
// input in3	c
// input in4	d

// You are given the following module:

module mod_a ( output out1, output out2, input in1, input in2, input in3, input in4);


module top_module ( 
    input a, 
    input b, 
    input c,
    input d,
    output out1,
    output out2
);
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:25: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//92624_top_module/92624_top_module.v:1: syntax error\nI give up.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .out1(out1),
        .out2(out2),
        .in1(a),
        .in2(b),
        .in3(c),
        .in4(d)
    );

endmodule
```
Depth of rollout:  110
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Total Time:  166.581018
