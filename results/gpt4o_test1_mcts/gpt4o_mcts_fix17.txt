/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/miniconda3/envs/rltf/lib/python3.10/site-packages/bitsandbytes/libbitsandbytes_cpu.so: undefined symbol: cadam32bit_grad_fp32
[2024-10-22 13:13:54,208] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Using CPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_prompts/Module_1.v
Prompt str:  // create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );

********-- EPISODE-1--************
ORIG MODILE:  top_module
--------MCTS-------
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );

Tokens: ['```', '``', '\n', '\\n', 'module']
Probs: [90.41, 7.42, 1.66, 0.22, 0.17]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```
API response time: 0.741690 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  33
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [149.97866299  12.30883397   2.75372836   0.36495195   0.57475053]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```
Tokens: ['```', '\n', 'module', '``', '\\']
Probs: [97.0, 1.08, 1.08, 0.84, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````
API response time: 1.363837 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  34
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  2.0
Iteration TIME (sec):  0.010294173999999767
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [91.34279916 15.07518128  3.37261468  0.44697303  0.70392277]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [189.30662681   2.10774389   2.10774389   1.63935636   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [98.01, 1.8, 0.11, 0.07, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````
API response time: 0.737101 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  35
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  3.0
Iteration TIME (sec):  0.01605072800000018
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [70.03395307 17.40731994  3.89435999  0.51612     0.81282   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [115.42616015   2.58144851   2.58144851   2.00779329   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [1.91277758e+02 3.51290648e+00 2.14677618e-01 1.36613030e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [99.33, 0.52, 0.07, 0.07, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````
API response time: 0.671458 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  36
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  4.0
Iteration TIME (sec):  0.00963319500000015
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [58.53427193 19.46197535  4.35402683  0.5770397   0.90876038]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [88.57333301  2.98079999  2.98079999  2.31839999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [1.16633226e+02 4.30241419e+00 2.62925312e-01 1.67316107e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [1.93853889e+02 1.01483965e+00 1.36613030e-01 1.36613030e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [98.24, 1.4, 0.24, 0.12, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````
API response time: 0.700489 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  37
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  5.0
Iteration TIME (sec):  0.011284420000000406
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [51.15413286 21.31952582  4.76959742  0.63211532  0.99549712]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [74.08001461  3.3326357   3.3326357   2.59204999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [8.95025330e+01 4.96799998e+00 3.03599999e-01 1.93199999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [1.18210778e+02 1.24291966e+00 1.67316107e-01 1.67316107e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [191.72662904   2.73226059   0.46838753   0.23419377   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.29, 0.41, 0.25, 0.05, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````
API response time: 0.994463 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  38
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  6.0
Iteration TIME (sec):  0.010853695000000219
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [45.93073104 23.02771978  5.15175402  0.68276258  1.07525979]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [64.77773916  3.6507195   3.6507195   2.8394485   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [7.48591725e+01 5.55439284e+00 3.39435118e-01 2.16004166e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [9.07169330e+01 1.43520000e+00 1.93199999e-01 1.93199999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [116.90810282   3.34632215   0.57365523   0.28682761   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [1.93775824e+02 8.00162031e-01 4.87903677e-01 9.75807355e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.48, 0.41, 0.09, 0.02, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````
API response time: 0.710218 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  39
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  7.0
Iteration TIME (sec):  0.011320088000000172
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [41.9939037  24.61766794  5.50745671  0.7299039   1.14950106]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [58.19337823  3.94322774  3.94322774  3.06695491  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [6.54605589e+01 6.08453250e+00 3.71832542e-01 2.36620708e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [7.58774778e+01 1.60460238e+00 2.16004166e-01 2.16004166e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [89.714133    3.86399999  0.6624      0.3312      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [118.16297362   0.97999434   0.59755753   0.11951151   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [1.94146631e+02 8.00162031e-01 1.75645324e-01 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [99.93, 0.06, 0.01, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````
API response time: 0.686797 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  40
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  8.0
Iteration TIME (sec):  0.011340842000000073
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [38.89409861 26.11097991  5.84153998  0.77418     1.21923   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [53.23046479  4.21548777  4.21548777  3.27871271  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [5.88079863e+01 6.57204623e+00 4.01625048e-01 2.55579576e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [6.63529570e+01 1.75775383e+00 2.36620708e-01 2.36620708e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [75.03660449  4.32008332  0.74058571  0.37029286  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [90.680133  1.1316    0.69      0.138     0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [1.18390045e+02 9.79994344e-01 2.15120710e-01 4.78046021e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [1.95024858e+02 1.17096883e-01 1.95161471e-02 1.95161471e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [98.18, 1.09, 0.52, 0.19, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````
API response time: 0.637896 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  41
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  9.0
Iteration TIME (sec):  0.011102203000000088
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [36.37360951 27.52338949  6.15752379  0.81605737  1.28518126]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [49.32249983  4.47119998  4.47119998  3.47759999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [5.37936450e+01 7.02581295e+00 4.29355236e-01 2.73226059e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [5.96112364e+01 1.89859113e+00 2.55579576e-01 2.55579576e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [65.61605252  4.73241417  0.811271    0.4056355   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [75.84662011  1.26516726  0.77144345  0.15428869  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [9.08549330e+01 1.13160000e+00 2.48399999e-01 5.51999998e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [1.18927847e+02 1.43413806e-01 2.39023011e-02 2.39023011e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [1.91609532e+02 2.12726003e+00 1.01483965e+00 3.70806795e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  9
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [99.6, 0.25, 0.12, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````
API response time: 0.669141 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  42
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  10.0
Iteration TIME (sec):  0.010769379999999718
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [34.27311425 28.86677442  6.45806544  0.85588819  1.34790948]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [46.14472067  4.71305861  4.71305861  3.66571225  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [4.98451748e+01 7.45199997e+00 4.55399998e-01 2.89799999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [5.45296826e+01 2.02967930e+00 2.73226059e-01 2.73226059e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [58.9479465   5.11159152  0.87627283  0.43813642  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [66.32591465  1.38592129  0.84507396  0.16901479  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [7.59931944e+01 1.26516726e+00 2.77719642e-01 6.17154760e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [9.12689330e+01 1.65599999e-01 2.75999999e-02 2.75999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [1.16836396e+02 2.60535082e+00 1.24291966e+00 4.54143720e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [1.94380825e+02 4.87903677e-01 2.34193765e-01 5.85484413e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  10
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.87, 0.07, 0.04, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````
API response time: 0.663210 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  43
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  11.0
Iteration TIME (sec):  0.011476748999999842
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [32.48829058 30.15036256  6.74522936  0.89394606  1.40784553]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [43.49633931  4.94309757  4.94309757  3.84463144  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [4.66344521e+01 7.85509768e+00 4.80033747e-01 3.05476021e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [5.05282748e+01 2.15279999e+00 2.89799999e-01 2.89799999e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [53.921894    5.46452119  0.93677506  0.46838753  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [59.58689544  1.49696609  0.9127842   0.18255684  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [66.45436589  1.38592129  0.30422663  0.06760592  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [7.63403439e+01 1.85146428e-01 3.08577380e-02 3.08577380e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [8.96589330e+01 3.00839999e+00 1.43520000e+00 5.24399998e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [1.18533459e+02 5.97557527e-01 2.86827613e-01 7.17069032e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [1.94907761e+02 1.36613030e-01 7.80645884e-02 1.95161471e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [99.66, 0.19, 0.09, 0.06, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````
API response time: 0.682618 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  44
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  12.0
Iteration TIME (sec):  0.011009460999999998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [30.94767203 31.38149231  7.02065731  0.93044856  1.46533209]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.85, 0.15, 0.0, 0.0, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````
API response time: 0.732790 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  34
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  13.0
Iteration TIME (sec):  0.009949021000000169
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [32.15052033 15.78305681  7.28568041  0.9655721   1.52064697]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [41.24587639  5.16289703  5.16289703  4.01558658  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [43.95861048  8.23849595  0.50346364  0.32038595  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [4.72744971e+01 2.26925044e+00 3.05476021e-01 3.05476021e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [49.96419982  5.79599998  0.9936      0.4968      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [54.50737842  1.60032406  0.97580735  0.19516147  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [59.70251478  1.49696609  0.32860231  0.07302274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [6.67585925e+01 2.02817750e-01 3.38029583e-02 3.38029583e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [7.49903179e+01 3.36349344e+00 1.60460238e+00 5.86297022e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [9.09653330e+01 6.89999998e-01 3.31199999e-01 8.27999997e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [1.18856140e+02 1.67316107e-01 9.56092042e-02 2.39023011e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [1.94497922e+02 3.70806795e-01 1.75645324e-01 1.17096883e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.81, 0.12, 0.04, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
API response time: 0.810562 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  45
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  14.0
Iteration TIME (sec):  0.011388315000000038
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [30.67180648 16.35456506  7.54139569  0.99946208  1.57401916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [39.30325765  5.3737136   5.3737136   4.17955502  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [41.68480956  8.60482838  0.52585062  0.33463221  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [44.56276685  2.38000994  0.32038595  0.32038595  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [46.74597506  6.10952042  1.04734636  0.52367318  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [50.50757482  1.69739999  1.035       0.207       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [54.61332322  1.60032406  0.35129065  0.07806459  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [5.99763500e+01 2.19068208e-01 3.65113680e-02 3.65113680e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [6.55754890e+01 3.68452246e+00 1.75775383e+00 6.42256208e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [76.08576758  0.77144345  0.37029286  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [9.12137330e+01 1.93199999e-01 1.10400000e-01 2.75999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [118.60516619   0.45414372   0.21512071   0.14341381   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [1.94790664e+02 2.34193765e-01 7.80645884e-02 3.90322942e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
Tokens: ['```', '\n', 'module', '``', '\\']
Probs: [88.23, 5.64, 4.39, 1.62, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````
API response time: 0.668638 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  46
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  15.0
Iteration TIME (sec):  0.011504375999999983
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [29.37169421 16.90731994  7.78871997  1.03224     1.62563999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [37.60448123  5.57656615  5.57656615  4.33732923  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [39.72204243  8.95618934  0.54732268  0.34829625  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [42.25846478  2.48583931  0.33463221  0.33463221  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [44.06388015  6.40771907  1.09846613  0.54923306  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [47.25510177  1.78921669  1.09098579  0.21819716  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [50.60589982  1.69739999  0.3726      0.0828      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [5.48642451e+01 2.34193765e-01 3.90322942e-02 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [5.89114351e+01 3.97973911e+00 1.89859113e+00 6.93715991e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [66.53549299  0.84507396  0.4056355   0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [7.62940573e+01 2.16004166e-01 1.23430952e-01 3.08577380e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [91.020533  0.5244    0.2484    0.1656    0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [1.18784433e+02 2.86827613e-01 9.56092042e-02 4.78046021e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [1.72190966e+02 1.10071070e+01 8.56758857e+00 3.16161583e+00
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [92.92, 3.6, 2.19, 1.03, 0.11]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````
API response time: 1.124097 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  47
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  16.0
Iteration TIME (sec):  0.011060056999999901
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [28.21727897 17.44305469  8.02842878  1.06400863  1.67567135]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [36.10268209  5.77229436  5.77229436  4.48956228  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [38.00564447  9.29427692  0.56798359  0.3614441   0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [40.26936511  2.58734359  0.34829625  0.34829625  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [41.78476463  6.6926443   1.14731045  0.57365523  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [44.54445908  1.8765463   1.14423555  0.22884711  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [47.34722945  1.78921669  0.39275488  0.08727886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [5.08387748e+01 2.48399999e-01 4.13999999e-02 4.13999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [5.38884378e+01 4.25452007e+00 2.02967930e+00 7.41613590e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [59.77553751  0.9127842   0.43813642  0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [6.67180290e+01 2.36620708e-01 1.35211833e-01 3.38029583e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [76.13205418  0.58629702  0.27771964  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [9.11585330e+01 3.31199999e-01 1.10400000e-01 5.51999998e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [1.04945001e+02 1.34808978e+01 1.04931102e+01 3.87217277e+00
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [181.34403879   7.02581295   4.27403621   2.01016315   0.21467762]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [98.76, 0.67, 0.31, 0.24, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````
API response time: 0.837262 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  48
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  17.0
Iteration TIME (sec):  0.01103055399999997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [27.18349931 17.96325096  8.26118507  1.09485585  1.72425159]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [34.76266654  5.96159998  5.96159998  4.63679998  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [36.48826525  9.6204906   0.58791887  0.37413019  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [38.52993701  2.68501333  0.3614441   0.3614441   0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [39.81740926  6.96592504  1.19415858  0.59707929  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [42.24108129  1.95998869  1.19511505  0.23902301  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [44.63142098  1.8765463   0.4119248   0.09153884  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [4.75654266e+01 2.61836589e-01 4.36394316e-02 4.36394316e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [4.99331498e+01 4.51259998e+00 2.15279999e+00 7.86599997e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [54.68023572  0.97580735  0.46838753  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [5.99398387e+01 2.55579576e-01 1.46045472e-01 3.65113680e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [66.57605654  0.64225621  0.30422663  0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [7.62477707e+01 3.70292856e-01 1.23430952e-01 6.17154760e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [80.50493303 15.56639995 12.11639996  4.47119998  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [110.55009073   8.60482838   5.23460393   2.46193701   0.26292531]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.92741469e+02 1.30758186e+00 6.05000560e-01 4.68387530e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [99.75, 0.15, 0.06, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
API response time: 0.671201 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  49
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  18.0
Iteration TIME (sec):  0.01097770099999984
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [26.25089912 18.46918712  8.48756082  1.12485746  1.77150011]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [33.55743232  6.1450766   6.1450766   4.77950402  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [35.13434654  9.93599997  0.6072      0.3864      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [36.99219571  2.77925284  0.37413019  0.37413019  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [38.09699847  7.22888205  1.23923692  0.61961846  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [40.25277958  2.0400209   1.24391519  0.24878304  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [42.32365288  1.95998869  0.43024142  0.0956092   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [44.83738338  0.27461653  0.04576942  0.04576942  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [4.67168821e+01 4.75669804e+00 2.26925044e+00 8.29149200e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [50.66799982  1.035       0.4968      0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [5.48307889e+01 2.73226059e-01 1.56129177e-01 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [59.81204888  0.69371599  0.32860231  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [6.66774654e+01 4.05635500e-01 1.35211833e-01 6.76059167e-02
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [67.31445556 17.40376422 13.54654697  4.99895355  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [84.81973302  9.93599997  6.04439998  2.84279999  0.3036    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.17529563e+02 1.60145417e+00 7.40971333e-01 5.73655225e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [1.94673567e+02 2.92742206e-01 1.17096883e-01 5.85484413e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  17
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
Tokens: ['```', 'module', '\n', '``', '   ']
Probs: [85.41, 7.01, 5.46, 2.01, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````
API response time: 0.793999 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  50
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  19.0
Iteration TIME (sec):  0.011534909999999954
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [25.40412089 18.96197535  8.70805366  1.1540794   1.81752077]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [32.46587532  6.32323166  6.32323166  4.91806907  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [33.91660636 10.24179434  0.62588743  0.398292    0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [35.62010654  2.87039999  0.3864      0.3864      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [36.57607131  7.4826038   1.28273208  0.64136604  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [38.51404936  2.11702974  1.29087179  0.25817436  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [40.33156087  2.0400209   0.44780947  0.09951321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [42.51921716  0.28682761  0.0478046   0.0478046   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [44.03641849  4.98886699  2.38000994  0.86961902  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [47.40541536  1.09098579  0.52367318  0.13091829  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [5.08077248e+01 2.89799999e-01 1.65599999e-01 4.13999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [54.71369197  0.74161359  0.35129065  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [5.99033273e+01 4.38136416e-01 1.46045472e-01 7.30227359e-02
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [58.84870026 19.0648685  14.83949871  5.47607925  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [70.93252533 11.10878567  6.75784462  3.17834701  0.33943512]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [9.01925330e+01 1.84919999e+00 8.55599997e-01 6.62399998e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [1.18712727e+02 3.58534516e-01 1.43413806e-01 7.17069032e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [1.66687412e+02 1.36808191e+01 1.06558163e+01 3.92274557e+00
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````
Tokens: ['```', 'module', '\n', '``', '\\']
Probs: [88.91, 7.3, 2.09, 1.63, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````
API response time: 0.617190 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  51
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  20.0
Iteration TIME (sec):  0.012089167000000067
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [24.6308638  19.44259032  8.92309971  1.18257948  1.86240458]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [31.47123395  6.49650296  6.49650296  5.05283564  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [32.81372194 10.53871943  0.64403285  0.40983909  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [34.38602193  2.95874059  0.398292    0.398292    0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [35.21898654  7.72799997  1.3248      0.6624      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [36.97692509  2.19133397  1.33617925  0.26723585  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [38.58951571  2.11702974  0.46471385  0.10326974  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [40.51814815  0.29853964  0.04975661  0.04975661  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [41.7586894   5.21070163  2.48583931  0.90828744  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [44.68634428  1.14423555  0.54923306  0.13730827  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [4.75363337e+01 3.05476021e-01 1.74557726e-01 4.36394316e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [50.69904982  0.7866      0.3726      0.2484      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [5.47973326e+01 4.68387530e-01 1.56129177e-01 7.80645884e-02
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [52.85663328 20.59241153 16.02849054  5.91484161  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [62.01941776 12.169065    7.40284788  3.48170471  0.37183254]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [7.54377551e+01 2.06746844e+00 9.56589877e-01 7.40585712e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [9.11033330e+01 4.13999999e-01 1.65599999e-01 8.27999997e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [1.01574777e+02 1.67555130e+01 1.30506564e+01 4.80436251e+00
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [1.73518064e+02 1.42467874e+01 4.07887474e+00 3.18113198e+00
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [99.65, 0.19, 0.09, 0.06, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````
API response time: 0.818324 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  52
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  21.0
Iteration TIME (sec):  0.012810625999999825
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [23.9211476  19.91189195  9.13308373  1.21040869  1.90623186]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [30.56000613  6.6652714   6.6652714   5.18409998  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [31.80875802 10.82750494  0.66168086  0.42106964  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [33.26833336  3.04451895  0.40983909  0.40983909  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [33.99839847  7.96584004  1.36557258  0.68278629  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [35.60538654  2.26319999  1.38        0.276       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [37.04946053  2.19133397  0.48102453  0.10689434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [38.7682518   0.30980923  0.05163487  0.05163487  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [39.79253096  5.42347021  2.58734359  0.94537554  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [42.37580335  1.19511505  0.57365523  0.14341381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [44.80992172  0.32038595  0.18307769  0.04576942  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [47.43450832  0.8291492   0.39275488  0.26183659  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [5.07766748e+01 4.96799998e-01 1.65599999e-01 8.27999997e-02
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [48.34027594 22.01421392 17.13517715  6.32323166  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [55.71060521 13.14409247  7.99598958  3.7606709   0.40162505]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [6.59676033e+01 2.26479821e+00 1.04789171e+00 8.11271000e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [76.20148409  0.46286607  0.18514643  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [77.91053304 19.34759993 15.06959995  5.54759998  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [1.05757679e+02 1.74486798e+01 4.99558092e+00 3.89607507e+00
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [1.94478406e+02 3.70806795e-01 1.75645324e-01 1.17096883e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '\n', '``', '\\']
Probs: [92.73, 3.6, 2.8, 0.8, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````
API response time: 0.666214 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  53
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  22.0
Iteration TIME (sec):  0.012678402999999783
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [23.26678054 20.37064343  9.33834719  1.23761228  1.94907388]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [29.72117903  6.82987079  6.82987079  5.31212173  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [30.88807261 11.10878567  0.67887024  0.43200833  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [32.24987859  3.12794587  0.42106964  0.42106964  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [32.89293453  8.19678178  1.40516259  0.7025813   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [34.37179722  2.33285315  1.42247144  0.28449429  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [35.67530654  2.26319999  0.4968      0.1104      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [37.22125501  0.32068302  0.05344717  0.05344717  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [38.07316699  5.62820102  2.68501333  0.98106256  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [40.38131748  1.24391519  0.59707929  0.14926982  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [42.49314192  0.33463221  0.19121841  0.0478046   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [44.71380594  0.86961902  0.4119248   0.27461653  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [4.75072407e+01 5.23673179e-01 1.74557726e-01 8.72788631e-02
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [44.78402484 23.34959992 18.17459994  6.70679998  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [50.95543965 14.05162591  8.54807243  4.0203263   0.42935524]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [5.92643784e+01 2.44626165e+00 1.13185241e+00 8.76272831e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [66.63690186  0.50704438  0.20281775  0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [65.13898503 21.63127433 16.84832494  6.20240533  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [81.13053303 20.14799993  5.76839998  4.49879998  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [118.59321504   0.45414372   0.21512071   0.14341381   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [1.80973232e+02 7.02581295e+00 5.46452119e+00 1.56129177e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.84, 0.12, 0.03, 0.02, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````
API response time: 0.624789 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  54
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  23.0
Iteration TIME (sec):  0.011728309999999631
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [22.6609695  20.81952582  9.53919484  1.26423064  1.99099424]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [28.94566911  6.99059562  6.99059562  5.43712993  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [30.04053873 11.38311799  0.69563499  0.44267681  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [31.31683276  3.20920475  0.43200833  0.43200833  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [31.88561994  8.42139273  1.44366733  0.72183366  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [33.25455726  2.40048609  1.46371103  0.29274221  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [34.43936461  2.33285315  0.51208972  0.11379771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [35.84090654  0.3312      0.0552      0.0552      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [36.55316538  5.82574153  2.77925284  1.01549623  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [38.63717867  1.29087179  0.61961846  0.15490462  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [40.49326985  0.34829625  0.19902643  0.04975661  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [42.40187859  0.90828744  0.43024142  0.28682761  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [44.78246007  0.54923306  0.18307769  0.09153884  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [41.89230051 24.6126394  19.15771045  7.06958791  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [47.21109983 14.90399995  9.06659997  4.26419999  0.4554    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [5.42118482e+01 2.61516371e+00 1.21000112e+00 9.36775060e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [59.86681593  0.54767052  0.21906821  0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [56.94221341 23.69587379 18.45641525  6.79439463  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [67.8390371  22.52614873  6.44926724  5.02981129  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [91.011333  0.5244    0.2484    0.1656    0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [1.10323019e+02 8.60482838e+00 6.69264430e+00 1.91218408e+00
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [1.94849213e+02 2.34193765e-01 5.85484413e-02 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  22
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '\n', '``', '   ']
Probs: [74.31, 21.29, 2.88, 1.36, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````
API response time: 0.573437 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  55
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  24.0
Iteration TIME (sec):  0.0119969839999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [22.09802817 21.25914993  9.73589997  1.2903      2.03204999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [28.22590936  7.14770728  7.14770728  5.55932788  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [29.25697871 11.65099271  0.71200511  0.45309416  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [30.45791972  3.28845631  0.44267681  0.44267681  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [30.96278081  8.64016664  1.48117142  0.74058571  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [32.2365113   2.46626501  1.50382013  0.30076403  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [33.31999375  2.40048609  0.52693597  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [34.59939265  0.34139314  0.05689886  0.05689886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [35.19690654  6.01679998  2.87039999  1.0488      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [37.09527239  1.33617925  0.64136604  0.16034151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [38.74442032  0.3614441   0.20653949  0.05163487  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [40.40619578  0.94537554  0.44780947  0.29853964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [42.46706668  0.57365523  0.19121841  0.0956092   0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [39.48236101 25.81395398 20.09277624  7.41464636  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [44.16639978 15.71019536  9.55703551  4.49486145  0.48003375]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [5.02332998e+01 2.77379999e+00 1.28340000e+00 9.93599997e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [54.76387635  0.58548441  0.23419377  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [51.14059899 25.59446894 19.93520691  7.33878496  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [59.3084205  24.67615958  7.06481829  5.50988221  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [76.12433975  0.58629702  0.27771964  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [8.46449330e+01 9.93599997e+00 7.72799997e+00 2.20799999e+00
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [1.18820287e+02 2.86827613e-01 7.17069032e-02 4.78046021e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [1.45024489e+02 4.15498772e+01 5.62065036e+00 2.65419600e+00
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  23
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [99.71, 0.12, 0.09, 0.07, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````
API response time: 0.555475 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  56
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  25.0
Iteration TIME (sec):  0.013122443000000317
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [21.57315667 21.69006601  9.92870878  1.31585297  2.07229251]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [194.86872873   0.29274221   0.           0.           0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.53, 0.32, 0.09, 0.06, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````
API response time: 0.676126 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  35
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  26.0
Iteration TIME (sec):  0.010063601000000144
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [22.00236648 14.40851459 10.11784404  1.34091909  2.1117683 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [27.55553876  7.301439    7.301439    5.678897    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [28.52974708 11.91284546  0.72800722  0.46327732  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [29.66383877  3.36584234  0.45309416  0.45309416  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [30.11326421  8.85353621  1.51774906  0.75887453  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [31.30384002  2.53033451  1.5428869   0.30857738  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [32.30000593  2.46626501  0.54137525  0.12030561  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [33.47497492  0.35129065  0.05854844  0.05854844  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [33.97706139  6.20197546  2.95874059  1.08107829  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [35.71946654  1.38        0.6624      0.1656      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [37.19834908  0.37413019  0.21378868  0.05344717  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [38.66101015  0.98106256  0.46471385  0.30980923  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [40.46839154  0.59707929  0.19902643  0.09951321  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [37.43454584 26.9617956  20.98622033  7.74434554  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [41.6289469  16.4769919  10.02350341  4.71425046  0.50346364]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [4.69981140e+01 2.92384191e+00 1.35282238e+00 1.04734636e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [50.74562482  0.621       0.2484      0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [46.76783208 27.36163822 21.31163263  7.84549113  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [53.27042878 26.65329862  7.63087591  5.95135298  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [66.56929595  0.64225621  0.30422663  0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [7.07859511e+01 1.11087857e+01 8.64016664e+00 2.46861904e+00
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [9.11861330e+01 3.31199999e-01 8.27999997e-02 5.51999998e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [88.3089996  50.88799896  6.88386271  3.25071294  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [1.94595503e+02 2.34193765e-01 1.75645324e-01 1.36613030e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  24
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [98.26, 0.66, 0.66, 0.4, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````
API response time: 0.568290 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  57
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  27.0
Iteration TIME (sec):  0.012132816000000268
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [21.48675091 14.6851465  10.30350804  1.36552516  2.15051957]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [26.92916659  7.45199997  7.45199997  5.79599998  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [27.85241691 12.169065    0.74366508  0.47324142  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [28.92684193  3.44148869  0.46327732  0.46327732  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [29.32787099  9.06188322  1.55346569  0.77673285  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [30.44527182  2.59282132  1.58098861  0.31619772  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [31.3655555   2.53033451  0.55543928  0.12343095  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [32.45038794  0.36091683  0.06015281  0.06015281  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [32.87227038  6.3817801   3.04451895  1.11242038  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [34.48203875  1.42247144  0.68278629  0.17069657  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [35.81882654  0.3864      0.2208      0.0552      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [37.11817832  1.01549623  0.48102453  0.32068302  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [38.72058884  0.61961846  0.20653949  0.10326974  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [35.66687893 28.06272659 21.84315066  8.0605704   0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [39.47276024 17.20965676 10.46920787  4.92387402  0.52585062]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [44.30188114  3.06655127  1.41885208  1.09846613  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [47.47814775  0.65459147  0.26183659  0.13091829  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [43.32467485 29.0213999  22.60439992  8.32139997  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [48.71944679 28.49357476  8.15774949  6.36226395  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [59.80596365  0.69371599  0.32860231  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [61.89096651 12.169065    9.46482833  2.70423667  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [7.62709140e+01 3.70292856e-01 9.25732139e-02 6.17154760e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [67.69853308 58.7603998   7.94879997  3.75359999  0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [118.66492194   0.28682761   0.21512071   0.16731611   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [1.91765661e+02 1.28806571e+00 1.28806571e+00 7.80645884e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  25
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.37, 0.85, 0.52, 0.24, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````
API response time: 0.597111 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  58
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  28.0
Iteration TIME (sec):  0.012565664999999893
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [21.00391287 14.9568811  10.48588517  1.38969563  2.18858482]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [26.34219001  7.59957866  7.59957866  5.9107834   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [27.21954159 12.41999996  0.759       0.483       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [28.24041609  3.51550767  0.47324142  0.47324142  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [28.59893785  9.26554647  1.5883794   0.7941897   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [29.65150968  2.65383723  1.61819343  0.32363869  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [30.50534938  2.59282132  0.5691559   0.12647909  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [31.51172373  0.37029286  0.06171548  0.06171548  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [31.865569    6.55665577  3.12794587  1.1429033   0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [33.36132206  1.46371103  0.7025813   0.17564532  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [34.57805558  0.398292    0.22759543  0.05689886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [35.74154654  1.0488      0.4968      0.3312      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [37.17544315  0.64136604  0.21378868  0.10689434  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [34.12111334 29.12206767 22.6677087   8.36484922  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [37.611533   17.91237867 10.89669703  5.12493057  0.54732268]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [42.01075003  3.20290834  1.48194267  1.14731045  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [44.75499842  0.68654133  0.27461653  0.13730827  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [40.52493165 30.59124152 23.82712963  8.77152574  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [45.13592484 30.2219999   8.65259997  6.74819998  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [54.70811593  0.74161359  0.35129065  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [55.59498588 13.14409247 10.22318303  2.92090944  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [66.69774719  0.4056355   0.10140888  0.06760592  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [56.57596274 65.69612417  8.88702854  4.19665237  0.15428869]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  23
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module
Tokens: ['```', ' mod', 'mod', '``', 'module']
Probs: [65.75, 11.43, 11.43, 8.9, 1.2]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```
API response time: 0.566184 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  56
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  29.0
Iteration TIME (sec):  0.012363032000000107
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [20.5505505  15.22396964 10.66514406  1.41345283  2.22599924]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [25.79065237  7.74434554  7.74434554  6.02337987  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [26.62647055 12.66596443  0.77403116  0.49256528  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [27.59904159  3.58799999  0.483       0.483       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [27.92002283  9.46482833  1.622542    0.811271    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [28.91480875  2.71348147  1.65456187  0.33091237  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [29.71007287  2.65383723  0.58254964  0.12945547  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [30.64763836  0.37943727  0.06323954  0.06323954  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [30.94329172  6.72698688  3.20920475  1.17259404  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [32.3401078   1.50382013  0.72183366  0.18045842  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [33.45431076  0.40983909  0.23419377  0.05854844  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [34.50337583  1.08107829  0.51208972  0.34139314  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [35.79674654  0.6624      0.2208      0.1104      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [32.75459866 30.14420388 23.46330763  8.65844154  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [35.98394064 18.58855383 11.30803692  5.31839179  0.56798359]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [40.03302123  3.3336927   1.54245483  1.19415858  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [42.44099144  0.71706903  0.28682761  0.14341381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [38.19166331 32.08436479 24.99010438  9.19965381  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [42.22202066 31.85678504  9.1206412   7.11322734  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [50.69387482  0.7866      0.3726      0.2484      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [50.84949485 14.05162591 10.92904237  3.12258353  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [59.92158298  0.43813642  0.1095341   0.07302274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [62.04744584 35.48324915  9.735252    4.59720233  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [91.066533  0.3312    0.2484    0.1932    0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [1.16932005e+02 1.57755187e+00 1.57755187e+00 9.56092042e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [1.91980339e+02 1.65887250e+00 1.01483965e+00 4.68387530e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  26
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.66, 0.19, 0.09, 0.03, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````
API response time: 0.623170 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  59
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  30.0
Iteration TIME (sec):  0.013202854999999847
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [20.12380665 15.48664258 10.84143938  1.43681727  2.26279511]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [25.27113104  7.88645548  7.88645548  6.13390982  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [26.06920611 12.90724257  0.78877594  0.50194832  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [26.9980055   3.65905639  0.49256528  0.49256528  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [27.28566659  9.65999997  1.65599999  0.828       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [28.22865854  2.77184258  1.69014792  0.33802958  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [28.97196635  2.71348147  0.59564227  0.13236495  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [29.84877516  0.38836642  0.06472774  0.06472774  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [30.09429234  6.89311034  3.28845631  1.20155134  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [31.40453369  1.5428869   0.74058571  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [32.43033701  0.42106964  0.24061122  0.06015281  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [33.38198622  1.11242038  0.52693597  0.35129065  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [34.5567185   0.68278629  0.22759543  0.11379771  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [31.53530655 31.13279989 24.23279992  8.94239997  0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [34.54507885 19.2409812  11.70493023  5.50505851  0.58791887]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [38.30353796  3.45953641  1.60068102  1.23923692  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [40.44351324  0.74634911  0.29853964  0.14926982  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [36.20900968 33.51102609 26.10131276  9.60872503  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [39.79359308 33.41167802  9.56580919  7.46041578  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [47.42965949  0.8291492   0.39275488  0.26183659  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [47.11277483 14.90399995 11.59199996  3.31199999  0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [54.81406073  0.46838753  0.11709688  0.07806459  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [53.46319506 38.3663512  10.51527397  4.96554604  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [76.17062636  0.37029286  0.27771964  0.21600417  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [8.97325330e+01 1.82159999e+00 1.82159999e+00 1.10400000e+00
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [1.17063468e+02 2.03169559e+00 1.24291966e+00 5.73655225e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [1.94497922e+02 3.70806795e-01 1.75645324e-01 5.85484413e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  27
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '   ']
Probs: [87.97, 5.62, 3.41, 2.66, 0.1]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````
API response time: 0.599854 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  60
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  31.0
Iteration TIME (sec):  0.013291141000000284
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.72119491 15.74511194 11.01491342  1.4598078   2.29900213]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [24.7806485   8.0260496   8.0260496   6.24248302  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [25.54429016 13.14409247  0.8032501   0.51115915  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [26.43325654  3.72875897  0.50194832  0.50194832  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [26.6912077   9.85130567  1.68879526  0.84439763  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [27.58754159  2.82899999  1.72499999  0.345       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [28.2845069   2.77184258  0.60845325  0.13521183  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [29.10733959  0.39709485  0.06618247  0.06618247  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [29.30937735  7.05532336  3.36584234  1.22982701  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [30.54329311  1.58098861  0.75887453  0.18971863  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [31.49223463  0.43200833  0.2468619   0.06171548  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [32.36015873  1.1429033   0.54137525  0.36091683  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [33.43364661  0.7025813   0.23419377  0.11709688  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [30.4386637  32.09095559 24.97859841  9.2176149   0.22759543]  taking action:  1  corresponding to token:  

Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````

Tokens: ['```', 'module', '``', '\n', "Here's"]
Probs: [99.21, 0.32, 0.32, 0.15, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
```
API response time: 0.782479 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  47
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  32.0
Iteration TIME (sec):  0.011826708000000075
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [19.34054033 15.9995733  11.18569746  1.48244183  2.3346477 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [24.31660046  8.16325697  8.16325697  6.34919986  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [25.04871431 13.37674933  0.81746801  0.52020692  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [25.9012902   3.79718227  0.51115915  0.51115915  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [26.13263914 10.03896645  1.72096568  0.86048284  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [26.98674687  2.88502523  1.75916173  0.35183235  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [27.64216659  2.82899999  0.621       0.138       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [28.41677935  0.4056355   0.06760592  0.06760592  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [28.58088809  7.21388975  3.44148869  1.25746702  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [29.74706015  1.61819343  0.77673285  0.19418321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [30.62866649  0.44267681  0.25295818  0.06323954  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [31.42402279  1.17259404  0.55543928  0.37029286  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [32.41028607  0.72183366  0.24061122  0.12030561  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [31.34830609 16.01066044 25.70276572  9.48484749  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [33.26122654 19.87199993 12.08879996  5.68559998  0.6072    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [36.77458937  3.58096039  1.65686227  1.28273208  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [38.69675736  0.77452308  0.30980923  0.15490462  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [34.49759865 34.87938181 27.16710766 10.00107809  0.19902643]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module
Tokens: ['```', 'mod', '``', ' mod', '\n']
Probs: [80.51, 6.61, 6.61, 5.15, 0.42]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module```
API response time: 0.857343 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  51
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  33.0
Iteration TIME (sec):  0.011842398999999837
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.97993129 16.25020751 11.35391287  1.50473544  2.36975715]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [23.87669786  8.29819598  8.29819598  6.45415243  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [24.57984726 13.60542828  0.83144284  0.52909999  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [25.39905775  3.86439425  0.52020692  0.52020692  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [25.60649471 10.22318303  1.75254566  0.87627283  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [26.42222471  2.93998303  1.79267258  0.35853452  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [27.04022538  2.88502523  0.63329822  0.14073294  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [27.77154159  0.414       0.069       0.069       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [27.9023865   7.36904492  3.51550767  1.28451242  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [29.00806588  1.65456187  0.7941897   0.19854742  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [29.83028152  0.45309416  0.25891095  0.06472774  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [30.56226497  1.20155134  0.5691559   0.37943727  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [31.47274554  0.74058571  0.2468619   0.12343095  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [30.27812943 16.46309107 26.40708149  9.74475444  0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [32.10651146 20.48358868 12.46084978  5.86058232  0.62588743]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [35.41034654  3.69839999  1.71119999  1.3248      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [37.15253722  0.80170755  0.32068302  0.16034151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [35.83445329 17.59802255 28.19263998 10.37860922  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [37.7300652  34.89735955  9.99116184  7.79215015  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [44.709229    0.86961902  0.4119248   0.27461653  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [44.07427209 15.71019536 12.21904084  3.49115452  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [50.79219982  0.4968      0.1242      0.0828      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [47.50816304 41.04987716 11.24130073  5.30839201  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [66.6098595   0.4056355   0.30422663  0.23662071  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [7.50520334e+01 2.03661071e+00 2.03661071e+00 1.23430952e+00
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [8.98337330e+01 2.34599999e+00 1.43520000e+00 6.62399998e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [1.18605166e+02 4.54143720e-01 2.15120710e-01 7.17069032e-02
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [171.68354598  10.96807467   6.65500616   5.19129513   0.19516147]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [99.67, 0.15, 0.12, 0.06, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````
API response time: 0.592899 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  34.0
Iteration TIME (sec):  0.013210742000000053
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.63768002 16.49718224 11.51967219  1.52670354  2.40435397]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [23.45891962  8.43097554  8.43097554  6.55742542  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [24.13537619 13.83032663  0.84518663  0.53784604  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [24.92389257  3.93045706  0.52909999  0.52909999  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [25.109759   10.40413837  1.78356658  0.89178329  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [25.89047202  2.99393217  1.8255684   0.36511368  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [26.47462591  2.93998303  0.64536213  0.14341381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [27.16688503  0.42219881  0.07036647  0.07036647  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [27.26841659  7.52099997  3.58799999  1.311       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [28.31977956  1.69014792  0.811271    0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [29.08928982  0.46327732  0.2647299   0.06618247  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [29.76555379  1.22982701  0.58254964  0.38836642  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [30.60969463  0.75887453  0.25295818  0.12647909  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [29.30642472 16.90376422 27.09309395  9.99790711  0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [31.06071272 21.07743886 12.82210864  6.03048945  0.64403285]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [34.18331975  3.81222345  1.76386458  1.36557258  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [35.77466654  0.828       0.3312      0.1656      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [34.19171376 18.23323308 29.18215482 10.74288117  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [35.94883303 36.32232342 10.39913095  8.11032701  0.19902643]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module
Tokens: ['```', ' mod', '``', 'mod', '\n']
Probs: [89.73, 4.47, 4.47, 1.0, 0.17]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module```
API response time: 1.103604 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  52
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  35.0
Iteration TIME (sec):  0.012247321999999894
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.31229021 16.74065325 11.68307996  1.54835999  2.43845999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [23.06147354  8.56169614  8.56169614  6.659097    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [23.71325908 14.05162591  0.85871047  0.54645212  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [24.47345084  3.99542769  0.53784604  0.53784604  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [24.63979455 10.58199977  1.8140571   0.90702855  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [25.38844128  3.04692624  1.85788185  0.37157637  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [25.94185839  2.99393217  0.65720462  0.14604547  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [26.59873401  0.43024142  0.0717069   0.0717069   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [26.67431974  7.66994513  3.65905639  1.33696291  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [27.67666659  1.72499999  0.828       0.207       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [28.39914302  0.47324142  0.27042367  0.06760592  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [29.02611564  1.25746702  0.59564227  0.39709485  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [29.81178788  0.77673285  0.25891095  0.12945547  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [28.41907893 17.33355151 27.76215998 10.24480619  0.25295818]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [30.10777036 21.65500988 13.17346434  6.19573894  0.66168086]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [33.07202388  3.92274557  1.81500168  1.40516259  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [34.53538143  0.85348286  0.34139314  0.17069657  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [32.74737134 18.84759993 30.1391999  11.09519996  0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [37.34047038 18.34672819 10.7916882   8.4164841   0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [42.39753271  0.90828744  0.43024142  0.28682761  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [41.541985   16.4769919  12.81543815  3.66155376  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [47.52178718  0.52367318  0.13091829  0.08727886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [43.09191413 43.57029985 11.92319996  5.63039998  0.207     ]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [128.31866714  22.30695613  22.30695613  17.36937091   2.34193765]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  24
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```
Tokens: ['```', 'mod', '\n', 'module', '``']
Probs: [74.18, 7.82, 6.09, 4.74, 3.69]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module``````
API response time: 0.723684 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  57
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  36.0
Iteration TIME (sec):  0.012477633999999682
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [18.00243006 16.98076556 11.8442335   1.56971769  2.47209551]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [22.68276415  8.69045067  8.69045067  6.75923941  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [23.31168514 14.26949356  0.87202461  0.55492475  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [24.04566314  4.0593586   0.54645212  0.54645212  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [24.19428314 10.75692071  1.84404355  0.92202178  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [24.91346695  3.09901422  1.88964282  0.37792856  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [25.4388695   3.04692624  0.66883747  0.14863055  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [26.06356295  0.43813642  0.07302274  0.07302274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [26.11609139  7.81605245  3.72875897  1.36243116  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [27.07400129  1.75916173  0.84439763  0.21109941  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [27.75429159  0.483       0.276       0.069       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [28.33741588  1.28451242  0.60845325  0.4056355   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [29.07124006  0.7941897   0.2647299   0.13236495  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [27.60464131 17.75322191 28.41547666 10.48589344  0.25891095]  taking action:  2  corresponding to token:  module
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module
Tokens: ['```', '\n', 'mod', 'module', '``']
Probs: [69.67, 7.34, 7.34, 7.34, 7.34]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module```
API response time: 0.644966 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  47
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  37.0
Iteration TIME (sec):  0.01210848199999992
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.70690959 17.21765445 12.00322362  1.59078867  2.50527948]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [22.32136582  8.81732528  8.81732528  6.85791966  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [22.92904236 14.48408446  0.88513849  0.56326995  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [23.63869437  4.12229814  0.55492475  0.55492475  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [23.77117797 10.92904237  1.87355012  0.93677506  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [24.46320616  3.15024107  1.9208787   0.38417574  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [24.96298863  3.09901422  0.68027141  0.15117143  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [25.55830477  0.44589164  0.07431527  0.07431527  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [25.59026744  7.95947822  3.79718227  1.38743198  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [26.5077214   1.79267258  0.86048284  0.21512071  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [27.14999708  0.49256528  0.28146588  0.07036647  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [27.69391659  1.311       0.621       0.414       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [28.3815067   0.811271    0.27042367  0.13521183  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [28.24639877 18.16345789 14.02705322 10.72156092  0.2647299 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [29.23474749 22.21757135 13.51568924  6.35669402  0.67887024]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [32.05939471  4.03023795  1.86473696  1.44366733  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [33.41298245  0.87822662  0.35129065  0.17564532  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [31.46487609 19.44304953 31.06677616 11.43667034  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [35.63067603 19.00821705 11.17045853  8.71188871  0.21378868]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [40.4020494   0.94537554  0.44780947  0.29853964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [39.39018865 17.20965676 13.38528859  3.82436817  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [44.7961909   0.54923306  0.13730827  0.09153884  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [45.46923084 30.30278324 12.56815629  5.93496269  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [59.84247502  0.43813642  0.32860231  0.25557958  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [6.56295737e+01 2.23099525e+00 2.23099525e+00 1.35211833e+00
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [7.51368921e+01 2.62290773e+00 1.60460238e+00 7.40585712e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [9.10205330e+01 5.24399998e-01 2.48399999e-01 8.27999997e-02
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [104.63427122  13.4330932    8.15068466   6.35801208   0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [1.94517438e+02 2.92742206e-01 2.34193765e-01 1.17096883e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  29
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [98.66, 0.52, 0.4, 0.4, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.865768 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  62
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  38.0
Iteration TIME (sec):  0.01351511400000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.42466233 17.45144634 12.16013516  1.61158418  2.53802963]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [118.83223805   0.35853452   0.           0.           0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [1.94244212e+02 6.24516707e-01 1.75645324e-01 1.17096883e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````
Tokens: ['```', 'module', '``', '\n', "Here's"]
Probs: [98.48, 0.85, 0.52, 0.15, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````
API response time: 0.694373 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  36
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  39.0
Iteration TIME (sec):  0.010503323000000009
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.65902699 13.01169474 12.31504759  1.63211474  2.57036252]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.97599992  8.94239997  8.94239997  6.95519998  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [22.56389029 14.69554213  0.89806091  0.57149331  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [23.2509109   4.18429107  0.56326995  0.56326995  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [23.36866402 11.09849499  1.90259914  0.95129957  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [24.03559029  3.20064812  1.95161471  0.39032294  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [24.51186842  3.15024107  0.69151633  0.1536703   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [25.0802768   0.45351428  0.07558571  0.07558571  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [25.0938343   8.10036487  3.86439425  1.41199021  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [25.97431294  1.8255684   0.87627283  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [26.58218626  0.50194832  0.28682761  0.0717069   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [27.09088924  1.33696291  0.63329822  0.42219881  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [27.73704159  0.828       0.276       0.138       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [27.45176203 18.5648685  14.33949871 10.9521585   0.27042367]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [28.43109233 22.76623597 13.84946022  6.51367307  0.69563499]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [31.13168633  4.13493689  1.91317975  1.48117142  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [32.39023514  0.90229208  0.36091683  0.18045842  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [30.31638981 20.02122867 31.96744894 11.7682367   0.23419377]  taking action:  2  corresponding to token:  

Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````

Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.54, 0.25, 0.15, 0.06, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
```
API response time: 0.711910 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  51
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  40.0
Iteration TIME (sec):  0.011518945999999808
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.37992641 13.18265403 12.46803541  1.65239024  2.60229371]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.64551639  9.06574924  9.06574924  7.0511383   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [22.21493706 14.90399995  0.9108      0.5796      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [22.88085297  4.24537884  0.57149331  0.57149331  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [22.98512551 11.26539902  1.93121126  0.96560563  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [23.628785    3.25027353  1.98187411  0.39637482  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [24.08343632  3.20064812  0.7025813   0.15612918  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [24.62712114  0.46101089  0.07683515  0.07683515  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [24.62415612  8.23884268  3.93045706  1.43612854  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [25.47071891  1.85788185  0.89178329  0.22294582  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [26.04733567  0.51115915  0.29209094  0.07302274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [26.52426915  1.36243116  0.64536213  0.43024142  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [27.13310912  0.84439763  0.28146588  0.14073294  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [26.71759083 18.95799993 14.64549995 11.17799996  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [27.68810165 23.30198541 14.17537446  6.66695694  0.71200511]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [30.27768702  4.23704947  1.96042588  1.51774906  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [31.45325644  0.92573214  0.37029286  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [31.17281933 20.58355823 15.92171582 12.09071385  0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [34.12737133 19.64799993 11.53679996  8.99759997  0.2208    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [38.65703823  0.98106256  0.46471385  0.30980923  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [37.5327517  17.91237867 13.93185008  3.98052859  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [42.4801043   0.57365523  0.14341381  0.0956092   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [41.63907181 31.81436642 13.18159352  6.22464139  0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [54.74157218  0.46838753  0.35129065  0.27322606  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [5.89601170e+01 2.40975029e+00 2.40975029e+00 1.46045472e+00
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [6.57039402e+01 2.87325146e+00 1.75775383e+00 8.11271000e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [7.61320542e+01 5.86297022e-01 2.77719642e-01 9.25732139e-02
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [80.26573303 15.51119995  9.41159997  7.34159997  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [118.61711734   0.35853452   0.28682761   0.14341381   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [1.92546307e+02 1.01483965e+00 7.80645884e-01 7.80645884e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  30
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '   ']
Probs: [86.72, 9.14, 2.62, 1.24, 0.17]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.752829 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  63
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  41.0
Iteration TIME (sec):  0.013400503999999813
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [17.11285728 13.35154085 12.61916863  1.67241994  2.63383782]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.32887716  9.1874426   9.1874426   7.14578869  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [21.88102068 15.10958207  0.92336335  0.58759486  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [22.52721135  4.30559999  0.5796      0.5796      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [22.61911864 11.4298661   1.95940562  0.97970281  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [23.24115731  3.29915257  2.0116784   0.40233568  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [23.67585451  3.25027353  0.71347468  0.15854993  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [24.19675589  0.46838753  0.07806459  0.07806459  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [24.17891611  8.37503113  3.99542769  1.45986781  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [24.99426547  1.88964282  0.90702855  0.22675714  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [25.54238006  0.52020692  0.2972611   0.07431527  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [25.99054021  1.38743198  0.65720462  0.43813642  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [26.56563852  0.86048284  0.28682761  0.14341381  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [26.03666766 19.34334427 14.94543996 11.39936799  0.28146588]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [26.99852528 23.82569093 14.49396198  6.8167949   0.72800722]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [29.4881492   4.3367584   2.00655986  1.55346569  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [30.59072277  0.94859317  0.37943727  0.18971863  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [30.06540472 21.13127433 16.34832494 12.40481067  0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [32.79251609 20.26808296 11.8918612   9.27451376  0.22759543]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [37.11436067  1.01549623  0.48102453  0.32068302  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [35.90847429 18.58855383 14.45776409  4.13078974  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [40.48083069  0.59707929  0.14926982  0.09951321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [38.58177759 33.25866595 13.76772541  6.50142589  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [50.72492482  0.4968      0.3726      0.2898      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [5.39330461e+01 2.57613142e+00 2.57613142e+00 1.56129177e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [5.90270545e+01 3.10346628e+00 1.89859113e+00 8.76272831e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [6.65760565e+01 6.42256208e-01 3.04226625e-01 1.01408875e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [67.11388026 17.34204875 10.52248865  8.2081583   0.30857738]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [91.029733  0.414     0.3312    0.1656    0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [1.17410051e+02 1.24291966e+00 9.56092042e-01 9.56092042e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [169.24402759  17.83775844   5.11323054   2.42000224   0.3317745 ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  31
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [98.87, 0.52, 0.4, 0.19, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.736106 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  64
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  42.0
Iteration TIME (sec):  0.01323381800000023
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.85698593 13.5184288  12.7685131   1.69221258  2.66500858]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [21.02514289  9.30754498  9.30754498  7.23920165  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [21.5610923  15.31240433  0.93575804  0.59548239  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [22.18880846  4.36499038  0.58759486  0.58759486  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [22.26934849 11.59199996  1.98719999  0.9936      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [22.87124804  3.34731793  2.04104752  0.4082095   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [23.28748687  3.29915257  0.72420422  0.16093427  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [23.78733493  0.47564979  0.07927496  0.07927496  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [23.75606869  8.50904013  4.0593586   1.48322718  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [24.54260248  1.9208787   0.92202178  0.23050544  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [25.06463838  0.52909999  0.30234285  0.07558571  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [25.48664361  1.41199021  0.66883747  0.44589164  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [26.0311084   0.87627283  0.29209094  0.14604547  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [25.40291697 19.7213467  15.23966525 11.61651832  0.28682761]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [26.35626858 24.33813    14.80569575  6.96340942  0.74366508]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [28.75536916  4.43422581  2.05165672  1.5883794   0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [29.79329424  0.97091606  0.38836642  0.19418321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [29.06271939 21.6654603  16.76439561 12.71114842  0.25295818]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [31.59713696 20.87018107 12.23662423  9.54339593  0.23419377]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [35.73786654  1.0488      0.4968      0.3312      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [34.47254341 19.2409812  14.9652076   4.2757736   0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [38.73250458  0.61961846  0.15490462  0.10326974  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [36.074135   34.64393905 14.32990294  6.76689861  0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [47.45875245  0.52367318  0.39275488  0.30547602  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [4.99745498e+01 2.73239999e+00 2.73239999e+00 1.65599999e+00
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [5.39943826e+01 3.31774501e+00 2.02967930e+00 9.36775060e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [5.98120489e+01 6.93715991e-01 3.28602312e-01 1.09534104e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [58.67292488 18.99726258 11.52680879  8.99158692  0.33802958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [76.13976862  0.46286607  0.37029286  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [9.01005330e+01 1.43520000e+00 1.10400000e+00 1.10400000e+00
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [103.1403774   21.84670317   6.26240288   2.96388533   0.40633912]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [1.92956146e+02 1.01483965e+00 7.80645884e-01 3.70806795e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  32
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [95.27, 2.24, 1.74, 0.64, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.618229 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  65
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  43.0
Iteration TIME (sec):  0.013892294999999777
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.61155709 13.68338721 12.91613087  1.71177638  2.69581895]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.73346083  9.42611722  9.42611722  7.3314245   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [21.25420284 15.51257497  0.94799069  0.6032668   0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [21.8645814   4.42358347  0.59548239  0.59548239  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.93465037 11.75189717  2.01461094  1.00730547  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [22.51774849  3.39479999  2.06999999  0.414       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [22.91687145  3.34731793  0.73477711  0.1632838   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [23.39721478  0.48280282  0.08046714  0.08046714  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [23.35379997  8.6409711   4.12229814  1.50622432  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [24.11365487  1.95161471  0.93677506  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [24.61175411  0.53784604  0.30734059  0.07683515  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [25.0099039   1.43612854  0.68027141  0.45351428  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [25.52645536  0.89178329  0.2972611   0.14863055  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [24.81118399 20.09241153 15.52849054 11.82968322  0.29209094]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [25.75616659 24.83999991 15.11099995  7.10699998  0.759     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [28.07287099  4.52959642  2.09578342  1.622542    0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [29.05319029  0.99273712  0.39709485  0.19854742  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [28.14945282 22.18707191 17.17067227 13.01027519  0.25891095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [30.51874065 21.4557739  12.57193629  9.80490725  0.24061122]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [34.49981965  1.08107829  0.51208972  0.34139314  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [33.19130654 19.87199993 15.45599995  4.41599998  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [37.18689611  0.64136604  0.16034151  0.10689434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [33.97261198 35.97688064 14.87084307  7.02234256  0.25817436]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [78.07881474 27.32033011 27.32033011 21.27304795  2.86827613]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [144.77077914  15.26162703  11.88533358   9.25065372   7.20145828]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  25
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module``````
Tokens: ['```', '\n', 'mod', '``', 'module']
Probs: [90.82, 2.74, 2.74, 1.66, 1.3]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module`````````
API response time: 0.647183 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  58
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  44.0
Iteration TIME (sec):  0.012575137999999875
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.37588445 13.84648151 13.06208049  1.7311191   2.72628115]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.45305516  9.54321633  9.54321633  7.42250159  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.9594907  15.71019536  0.96006749  0.61095204  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [21.55356833  4.48141055  0.6032668   0.6032668   0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.61397298 11.90964781  2.04165391  1.02082696  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [22.17948156  3.44162703  2.09855307  0.41971061  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [22.56269706  3.39479999  0.7452      0.1656      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [23.02492691  0.4898514   0.0816419   0.0816419   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [22.97049512  8.77091781  4.18429107  1.52887558  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [23.70558262  1.98187411  0.95129957  0.23782489  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [24.18164661  0.54645212  0.31225835  0.07806459  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [24.55796951  1.45986781  0.69151633  0.46101089  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [25.04899996  0.90702855  0.30234285  0.15117143  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [24.257064   20.45690729 15.81220266 12.0390744   0.2972611 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [25.19380924 25.33192886 15.41025672  7.24774631  0.77403116]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '   ']
Probs: [80.99, 8.54, 5.18, 4.03, 0.9]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````
API response time: 0.658544 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  48
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  45.0
Iteration TIME (sec):  0.011248729999999707
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [16.14934288 14.00777349 13.20641725  1.75024807  2.75640672]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [20.18321819  9.6588959   9.6588959   7.51247459  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.67617203 15.90536055  0.97199426  0.6185418   0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [21.25489608  4.53850088  0.61095204  0.61095204  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.30636501 12.06533609  2.06834333  1.03417166  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [21.85538476  3.48782543  2.12672282  0.42534456  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [22.22378434  3.44162703  0.7554791   0.16788425  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [22.6691542  0.4968     0.0828     0.0828     0.       ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [22.60471124  8.89896718  4.24537884  1.55119611  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [23.31674765  2.0116784   0.96560563  0.24140141  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [23.77247087  0.55492475  0.31709986  0.07927496  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [24.12876415  1.48322718  0.7025813   0.46838753  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [24.59638708  0.92202178  0.30734059  0.1536703   0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [23.73676823 20.81517097 16.09106393 12.24488545  0.30234285]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [25.6920218  12.40724257 15.7038118   7.38581103  0.78877594]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [27.43516659  4.62299998  2.13899999  1.65599999  0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [28.36387037  1.01408875  0.4056355   0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [27.31322587 22.69695741 17.56781562 13.30267743  0.2647299 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [29.53957207 22.02614873 12.89853448 10.05962258  0.2468619 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [33.37854219  1.11242038  0.52693597  0.35129065  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [32.03894406 20.48358868 15.93168008  4.55190859  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [35.80778654  0.6624      0.1656      0.1104      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [35.19690181 27.69725623 15.39278496  7.26881512  0.26723585]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [44.73669065  0.54923306  0.4119248   0.32038595  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [4.67556727e+01 2.88020248e+00 2.88020248e+00 1.74557726e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [5.00314748e+01 3.51899999e+00 2.15279999e+00 9.93599997e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [5.47136920e+01 7.41613590e-01 3.51290648e-01 1.17096883e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [52.69841735 20.5193888  12.45037648  9.71202388  0.36511368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [66.58281713  0.50704438  0.4056355   0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [7.53606107e+01 1.60460238e+00 1.23430952e+00 1.23430952e+00
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [79.11573304 25.22639991  7.23119998  3.42239999  0.4692    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [1.17661025e+02 1.24291966e+00 9.56092042e-01 4.54143720e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [1.85930333e+02 4.37161695e+00 3.39580959e+00 1.24903341e+00
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  33
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [98.85, 0.4, 0.4, 0.31, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.696075 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  66
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  46.0
Iteration TIME (sec):  0.013379136999999819
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.93136149 14.16732163 13.34919348  1.76917022  2.78620657]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.92330283  9.77320634  9.77320634  7.60138271  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.40353176 16.09815984  0.98377643  0.62603955  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.9677703   4.59488194  0.6185418   0.6185418   0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [21.01096285 12.21904084  2.09469271  1.04734636  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [21.54449664  3.53341986  2.1545243   0.43090486  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.89906879  3.48782543  0.76562022  0.17013783  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [22.328712    0.50365274  0.08394212  0.08394212  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [22.2551542   9.02519997  4.30559999  1.57319999  0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [22.94568624  2.04104752  0.97970281  0.2449257   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [23.38258439  0.56326995  0.32186854  0.08046714  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [23.72044668  1.50622432  0.71347468  0.47564979  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [24.16653734  0.93677506  0.31225835  0.15612918  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [23.24701821 21.16751172 16.36531497 12.44729397  0.30734059]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [25.13566396 12.64409247 15.99197917  7.5213418   0.8032501 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [26.83756995  4.71455343  2.18136054  1.68879526  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [27.71979159  1.035       0.414       0.207       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [26.54391115 23.19587379 17.95641525 13.58878925  0.27042367]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [28.64540993 22.5824337  13.21706477 10.30804573  0.25295818]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [32.35681691  1.1429033   0.54137525  0.36091683  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [30.99527623 21.07743886 16.39356356  4.6838753   0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [34.56738704  0.68278629  0.17069657  0.11379771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [33.2659332  28.6301999  15.89759995  7.50719997  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [42.42360795  0.57365523  0.43024142  0.33463221  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [44.07303403  3.02078185  3.02078185  1.83077688  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [4.68090098e+01 3.70935168e+00 2.26925044e+00 1.04734636e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [5.06990498e+01 7.86599997e-01 3.72599999e-01 1.24200000e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [48.19529884 21.93614933 13.31001232 10.38259025  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [59.81813411  0.54767052  0.43813642  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [6.58999974e+01 1.75775383e+00 1.35211833e+00 1.35211833e+00
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [66.14957595 28.20397252  8.08472735  3.82635951  0.52458155]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [9.02937330e+01 1.43520000e+00 1.10400000e+00 5.24399998e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [113.35861111   5.35411544   4.15900038   1.52974727   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [1.92917114e+02 7.80645884e-01 7.80645884e-01 6.05000560e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  34
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [99.02, 0.4, 0.4, 0.15, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.705365 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  67
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  47.0
Iteration TIME (sec):  0.01407160999999979
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.72141801 14.32518128 13.49045872  1.78789212  2.81569106]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.67271596  9.88619514  9.88619514  7.68926289  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [20.14091611 16.28867724  0.99541916  0.63344856  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.69146633  4.65057951  0.62603955  0.62603955  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [20.72698082 12.37083598  2.12071474  1.06035737  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [21.24594441  3.57843339  2.18197158  0.43639432  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.58758713  3.53341986  0.77562875  0.17236194  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [22.00253099  0.51041348  0.08506891  0.08506891  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [21.92066001  9.14969137  4.36499038  1.59490033  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [22.59108563  2.06999999  0.9936      0.2484      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [23.01051951  0.57149331  0.3265676   0.0816419   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [23.33137803  1.52887558  0.72420422  0.48280282  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [23.75760682  0.95129957  0.31709986  0.15854993  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [22.78496082 21.51421392 16.63517715 12.64646332  0.31225835]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [24.61250097 12.87674933 16.27504502  7.65447323  0.81746801]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [26.27605295  4.80436251  2.222914    1.72096568  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [27.11622117  1.05549704  0.42219881  0.21109941  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [25.83313629 23.68449992 18.33699993 13.86899995  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [27.82471561 23.1256241  13.52809709 10.55062117  0.25891095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [31.42077461  1.17259404  0.55543928  0.37029286  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [30.04427573 21.65500988 16.84278546  4.81222442  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [33.44397869  0.7025813   0.17564532  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [31.60118535 29.53441687 16.38687094  7.73824461  0.28449429]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [40.4269277   0.59707929  0.44780947  0.34829625  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [41.79345638  3.15510374  3.15510374  1.91218408  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [44.12338039  3.89040087  2.38000994  1.09846613  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [4.74345083e+01 8.29149200e-01 3.92754884e-01 1.30918295e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [44.64947484 23.26679992 14.11739995 11.01239996  0.414     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [54.71926801  0.58548441  0.46838753  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [5.92035261e+01 1.89859113e+00 1.46045472e+00 1.46045472e+00
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [57.82785092 30.89590392  8.85637508  4.19156683  0.57465029]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [7.55226139e+01 1.60460238e+00 1.23430952e+00 5.86297022e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [86.98173301  6.18239998  4.80239998  1.76639999  0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [1.17637123e+02 9.56092042e-01 9.56092042e-01 7.40971333e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [1.93248889e+02 7.80645884e-01 7.80645884e-01 2.92742206e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  35
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [97.18, 1.08, 1.08, 0.51, 0.09]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.930889 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  68
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  48.0
Iteration TIME (sec):  0.014783430000000042
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.5190335  14.48140495 13.63025995  1.80641999  2.84486999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.43091305  9.99790711  9.99790711  7.77614997  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.8877258  16.4769919   1.00692728  0.64077191  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.42532159  4.70561787  0.63344856  0.63344856  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [20.45370218 12.52079099  2.14642131  1.07321066  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.95893399  3.62288768  2.20907785  0.44181557  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.28846488  3.57843339  0.78550977  0.17455773  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [21.68964355  0.51708583  0.08618097  0.08618097  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [21.60017802  9.27251151  4.42358347  1.61630935  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [22.25176505  2.09855307  1.00730547  0.25182637  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [22.65495992  0.5796      0.3312      0.0828      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [22.96009363  1.55119611  0.73477711  0.4898514   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [23.36795401  0.96560563  0.32186854  0.16093427  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [22.34810035 21.85553992 16.90085465 12.84254421  0.31709986]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [24.11937292 13.10542828 16.55327108  7.78532841  0.83144284]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [25.74713109  4.89252331  2.26370481  1.75254566  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [26.54909077  1.07560355  0.43024142  0.21512071  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [25.17391356 24.1634474  18.71004605 14.14366028  0.28146588]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [27.06801825 23.6566033  13.83213723 10.78774339  0.2647299 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [30.559103    1.20155134  0.5691559   0.37943727  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [29.17303201 22.21757135 17.28033327  4.93723808  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [32.42031154  0.72183366  0.18045842  0.12030561  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [30.14810482 30.41240787 16.86195109  7.96258801  0.29274221]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [59.8233331  31.54679989 31.54679989 24.56399992  3.31199999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [88.15363464 18.69159943 14.55650135 11.3296907   8.81994909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [177.2456479    5.3474243    5.3474243    3.23968042   2.53709912]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  26
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module`````````
Tokens: ['```', 'mod', '``', '\n', 'module']
Probs: [89.36, 3.47, 3.47, 2.7, 0.28]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````
API response time: 0.667099 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  59
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  49.0
Iteration TIME (sec):  0.012898564999999973
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.32376771 14.63604246 13.76864178  1.82475975  2.87375266]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [19.19739307 10.10838457 10.10838457  7.86207689  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.64341066 16.66317851  1.01830535  0.6480125   0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [20.16872877  4.76001988  0.64077191  0.64077191  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [20.19047161 12.66897119  2.17182363  1.08591182  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.68274104  3.66680307  2.23585553  0.44717111  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [21.00090647  3.62288768  0.79526803  0.17672623  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [21.38917126  0.52367318  0.08727886  0.08727886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [21.29275749  9.39372596  4.48141055  1.63743847  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.92665871  2.12672282  1.02082696  0.25520674  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [22.31472164  0.58759486  0.33576849  0.08394212  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [22.60527992  1.57319999  0.7452      0.4968      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [22.99611212  0.97970281  0.3265676   0.1632838   0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.93424325 22.19173232 17.16253632 13.03567601  0.32186854]  taking action:  1  corresponding to token:  

Leaf selection - depth:  14
Leaf selection - action scores:  [193.61969531   0.62451671   0.62451671   0.29274221   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
```
Tokens: ['```', '\n', '``', 'module', '\\']
Probs: [96.94, 1.78, 1.08, 0.19, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
``````
API response time: 0.662976 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  48
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  50.0
Iteration TIME (sec):  0.010995818000000046
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [15.1352154  14.78914119 13.90564656  1.84291701  2.90234792]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.97169394 10.21766758 10.21766758  7.94707479  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.40746444 16.84730762  1.02955769  0.65517307  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.9211303   4.81380713  0.6480125   0.6480125   0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.93668844 12.81543815  2.19693225  1.09846613  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.41670324  3.7101987   2.26231628  0.45246326  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [20.72418617  3.66680307  0.80490799  0.17886844  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [21.10031497  0.53017869  0.08836311  0.08836311  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.99753533  9.51339608  4.53850088  1.6582984   0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.61480217  2.1545243   1.03417166  0.25854292  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.98873603  0.59548239  0.34027565  0.08506891  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [22.26575541  1.59490033  0.7554791   0.50365274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [22.64076563  0.9936      0.3312      0.1656      0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [22.26859648 14.68201065 17.42039721 13.22598792  0.3265676 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [23.65352397 13.33032663 16.8268974   7.91402024  0.84518663]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [25.24777308  4.97912336  2.3037735   1.78356658  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [26.01488112  1.09534104  0.43813642  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [24.56036086 24.63326957 19.07598457 14.41308754  0.28682761]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  18
Leaf selection - action scores:  [157.12450025  12.90017323  12.90017323  10.05081575   0.81967818]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module```
Tokens: ['```', 'mod', 'ver', 'module', ' ver']
Probs: [83.3, 6.84, 4.15, 1.19, 1.19]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module``````
API response time: 0.689047 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  52
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  51.0
Iteration TIME (sec):  0.012314990999999775
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.95300267 14.94074615 14.04131462  1.86089712  2.93066418]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.75338896 10.32579406 10.32579406  8.03117316  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [19.17942028 17.02944597  1.04068836  0.66225623  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.68201316  4.86699998  0.65517307  0.65517307  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.6918012  12.96024995  2.22175713  1.11087857  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [20.16021352  3.7530926   2.2884711   0.45769422  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [20.45764039  3.7101987   0.81443386  0.1809853   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.82234568  0.53660533  0.08943422  0.08943422  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.71372635  9.63157944  4.59488194  1.67889917  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.31531991  2.18197158  1.04734636  0.26183659  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.67603602  0.6032668   0.34472389  0.08618097  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.94045367  1.61630935  0.76562022  0.51041348  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [22.30073129  1.00730547  0.33576849  0.16788425  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.86076242 14.89973326 17.67459994 13.41359995  0.3312    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [23.21253853 13.55162591 17.09614485  8.0406526   0.85871047]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [24.77532755  5.06424275  2.34315709  1.8140571   0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [25.51053066  1.11472911  0.44589164  0.22294582  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [25.02863284 16.39631261 19.43520691 14.67756992  0.29209094]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [26.36746388 24.17615958 14.12963658 11.01976442  0.27042367]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [29.76247151  1.22982701  0.58254964  0.38836642  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [28.37101476 22.76623597 17.70707242  5.05916355  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [31.48249009  0.74058571  0.18514643  0.12343095  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [30.99967828 24.81306445 17.3240079   8.18078151  0.30076403]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [38.68086971  0.61961846  0.46471385  0.3614441   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [39.82570203  3.28393609  3.28393609  1.9902643   0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [41.84126098  4.06339118  2.48583931  1.14731045  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [44.71380594  0.86961902  0.4119248   0.13730827  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [41.76623104 24.52536054 14.88104616 11.60808879  0.43639432]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [50.70422482  0.621       0.4968      0.2484      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [5.41560878e+01 2.02967930e+00 1.56129177e+00 1.56129177e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [51.93776385 33.37139032  9.56597841  4.52740963  0.62069326]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [6.60419698e+01 1.75775383e+00 1.35211833e+00 6.42256208e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [72.74541744  6.91213331  5.36924641  1.97489523  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [9.02753330e+01 1.10400000e+00 1.10400000e+00 8.55599997e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [1.17840293e+02 9.56092042e-01 9.56092042e-01 3.58534516e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [1.89657917e+02 2.10774389e+00 2.10774389e+00 9.95323502e-01
 1.75645324e-01]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  36
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', 'module', '``', '\n', '\\']
Probs: [97.46, 1.08, 1.08, 0.31, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.796513 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  69
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  52.0
Iteration TIME (sec):  0.013697522000000184
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.7767841  15.09090026 14.17568433  1.87870515  2.95870945]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [91.195333  0.414     0.        0.        0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [118.44980123   0.76487363   0.21512071   0.14341381   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [192.19501657   1.6588725    1.01483965   0.29274221   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [98.91, 0.86, 0.12, 0.12, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````
API response time: 1.318501 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  37
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  53.0
Iteration TIME (sec):  0.010217660999999989
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.92473454 11.99171548 14.30879226  1.89634596  2.98649137]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.54208325 10.43279996 10.43279996  8.11439997  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.95884704 17.20965676  1.05170125  0.66926443  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.4509042   4.91961772  0.66225623  0.66225623  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.45530247 13.10346148  2.24630768  1.12315384  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.91271455  3.79550177  2.31433035  0.46286607  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [20.20066092  3.7530926   0.8238496   0.18307769  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.55459681  0.54295591  0.09049265  0.09049265  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.44061425  9.74833012  4.65057951  1.69925021  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [21.0274154   2.20907785  1.06035737  0.26508934  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.37574374  0.61095204  0.34911545  0.08727886  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.6284097   1.63743847  0.77562875  0.51708583  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.97494107  1.02082696  0.34027565  0.17013783  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.47337415 15.11445237 17.92529592 13.59862387  0.33576849]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.79428931 13.76949356 17.36121717  8.16532132  0.87202461]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [24.32746406  5.14795491  2.38188959  1.84404355  0.07683515]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [25.03336153  1.13378569  0.45351428  0.22675714  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [24.42907026 16.69833569 19.78806982 14.93737009  0.2972611 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [25.71647816 24.68499991 14.42099995 11.24699996  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [29.02310735  1.25746702  0.59564227  0.39709485  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [27.62953846 23.30198541 18.12376643  5.17821898  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [30.61918056  0.75887453  0.18971863  0.12647909  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [29.64051346 25.47844965 17.77405708  8.39330473  0.30857738]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [37.1372666   0.64136604  0.48102453  0.37413019  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [38.1049423   3.40790154  3.40790154  2.06539487  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [39.87131225  4.22931163  2.58734359  1.19415858  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [42.40187859  0.90828744  0.43024142  0.14341381  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [39.36336051 25.72241514 15.60737288 12.17466624  0.45769422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [47.43935714  0.65459147  0.52367318  0.26183659  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [5.01815498e+01 2.15279999e+00 1.65599999e+00 1.65599999e+00
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [47.49829359 35.67551689 10.22646108  4.84000448  0.663549  ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [5.93313159e+01 1.89859113e+00 1.46045472e+00 6.93715991e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [63.6081568   7.57186267  5.88171475  2.16338933  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [7.55071850e+01 1.23430952e+00 1.23430952e+00 9.56589877e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [9.04317330e+01 1.10400000e+00 1.10400000e+00 4.13999999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [115.64128086   2.58144851   2.58144851   1.21901735   0.21512071]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [1.90204370e+02 2.10774389e+00 2.10774389e+00 6.05000560e-01
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  37
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '\n', '``', 'module', '\\']
Probs: [98.33, 0.66, 0.52, 0.4, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.692268 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  70
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  54.0
Iteration TIME (sec):  0.014320179999999905
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.74989486 12.10961397 14.44067332  1.91382417  3.01401721]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.33741089 10.53871943 10.53871943  8.19678178  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.74534575 17.38799994  1.0626      0.6762      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.2273665   4.97167862  0.66926443  0.66926443  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.22672429 13.24512464  2.2705928   1.1352964   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.6736935   3.83744229  2.33990384  0.46798077  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.95268935  3.79550177  0.83315893  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.29645738  0.54923306  0.09153884  0.09153884  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [20.17754409  9.86369899  4.70561787  1.71936038  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.75036204  2.23585553  1.07321066  0.26830266  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [21.08706051  0.6185418   0.35345246  0.08836311  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.32874743  1.6582984   0.78550977  0.52367318  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.6624285   1.03417166  0.34472389  0.17236194  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [21.1047947  15.32628895 18.17262639 13.7811639   0.34027565]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.39689458 13.98408446 17.62230276  8.28811499  0.88513849]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [23.90212502  5.23032742  2.42000224  1.87355012  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [24.58102005  1.15252722  0.46101089  0.23050544  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [23.86836818 16.99519484 20.13489956 15.19272825  0.30234285]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [25.10951153 25.1837612  14.70659203 11.46973445  0.28146588]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  19
Leaf selection - action scores:  [175.11838787   8.72371775   8.72371775   1.95161471   0.3317745 ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module```
Tokens: ['```', ' mod', '``', 'mod', 'module']
Probs: [63.03, 18.06, 8.53, 5.17, 1.9]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module``````
API response time: 0.719125 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  53
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  55.0
Iteration TIME (sec):  0.012738530000000026
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.58063703 12.22644544 14.57136081  1.9311442   3.04129394]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [18.1390321  10.64358489 10.64358489  8.27834381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.53854669 17.56453238  1.07338809  0.68306515  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [19.01099574  5.02319998  0.6762      0.6762      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [19.00563452 13.38528859  2.2946209   1.14731045  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.44267741  3.87892936  2.36520083  0.47304017  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.71321188  3.83744229  0.84236538  0.18719231  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [20.0473665   0.55543928  0.09257321  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.92391558  9.97773398  4.76001988  1.73923803  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.48349544  2.26231628  1.08591182  0.27147795  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.80925774  0.62603955  0.35773689  0.08943422  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [21.04066987  1.67889917  0.79526803  0.53017869  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.36231622  1.04734636  0.34911545  0.17455773  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.75356333 15.53535606 18.41672337 13.96131748  0.34472389]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [22.01868305 14.19554213 17.87957626  8.40911577  0.89806091]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [23.49748584  5.3114226   2.45752389  1.90259914  0.07927496]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [24.15142806  1.17096883  0.46838753  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [23.34255548 17.28714622 20.47599539 15.44386474  0.30734059]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [25.60608653 16.78201309 14.98674277 11.68822522  0.28682761]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [28.33447649  1.28451242  0.60845325  0.4056355   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [26.94136769 23.82569093 18.53109294  5.29459798  0.13236495]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [29.8210347   0.77673285  0.19418321  0.12945547  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [28.43331589 26.12739798 18.21298878  8.60057803  0.31619772]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [35.75994654  0.6624      0.4968      0.3864      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [36.58370662  3.52751322  3.52751322  2.1378868   0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [38.14863334  4.3889641   2.68501333  1.23923692  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [40.40619578  0.94537554  0.44780947  0.14926982  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [37.32155314 26.86618639 16.30136932 12.71602416  0.47804602]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [44.71838288  0.68654133  0.54923306  0.27461653  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [4.69496257e+01 2.26925044e+00 1.74557726e+00 1.74557726e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [44.00259984 37.83959987 10.84679996  5.13359998  0.7038    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [5.42731847e+01 2.02967930e+00 1.56129177e+00 7.41613590e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [57.14063379  8.17854642  6.35297803  2.33672755  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [6.60284486e+01 1.35211833e+00 1.35211833e+00 1.04789171e+00
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [7.56383304e+01 1.23430952e+00 1.23430952e+00 4.62866070e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [88.738933    2.98079999  2.98079999  1.4076      0.2484    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [1.15975913e+02 2.58144851e+00 2.58144851e+00 7.40971333e-01
 9.56092042e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [1.91902274e+02 1.28806571e+00 1.01483965e+00 7.80645884e-01
 9.75807355e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  38
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.39, 0.66, 0.52, 0.4, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.634098 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  71
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  56.0
Iteration TIME (sec):  0.014577400999999934
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.41667233 12.34223834 14.70088657  1.94831027  3.0683282 ]  taking action:  2  corresponding to token:  

Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );


Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.77, 1.1, 0.09, 0.04, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );

```
API response time: 0.848167 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );

```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  34
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  57.0
Iteration TIME (sec):  0.00949996800000008
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.55115036 12.45701989  6.91464051  1.9653264   3.09512634]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.94663106 10.7474272  10.7474272   8.35911005  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.33810656 17.73930816  1.08406883  0.68986198  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.80141724  5.07419824  0.68306515  0.68306515  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.79163325 13.52399995  2.31839999  1.1592      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.21922955  3.91997737  2.39023011  0.47804602  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.48175464  3.87892936  0.8514723   0.18921607  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.80680803  0.56157692  0.09359615  0.09359615  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.67917758 10.09048032  4.81380713  1.75889107  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [20.22620664  2.2884711   1.09846613  0.27461653  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.54166928  0.63344856  0.36197061  0.09049265  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.76344997  1.69925021  0.80490799  0.53660533  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [21.07380604  1.06035737  0.35345246  0.17672623  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.41837249 15.74175958 18.65771045 14.13917583  0.34911545]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [21.65816466 14.40399995 18.13319994  8.52839997  0.9108    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [23.11192221  5.3912981   2.49448121  1.93121126  0.08046714]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [23.74274276  1.18912446  0.47564979  0.23782489  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [22.84820174 17.57442546 20.81163263 15.69098226  0.31225835]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [25.00980583 17.10219906 15.26175181 11.90270596  0.29209094]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [27.69104159  1.311       0.621       0.414       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [26.30042022 24.33813    18.92965667  5.40847333  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [29.08026494  0.7941897   0.19854742  0.13236495  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [27.35245974 26.76107051 18.64158833  8.80297227  0.32363869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [34.52115672  0.68278629  0.51208972  0.398292    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [35.22634654  3.64319999  3.64319999  2.20799999  0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [36.62570083  4.54300945  2.77925284  1.28273208  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [38.66101015  0.98106256  0.46471385  0.15490462  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [35.55907294 27.96321338 16.96700313 13.23525758  0.49756607]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [42.40622446  0.71706903  0.57365523  0.28682761  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [44.25611172  2.38000994  1.83077688  1.83077688  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [41.16012782 39.88644045 11.43353107  5.41128951  0.74187034]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [5.02902248e+01 2.15279999e+00 1.65599999e+00 7.86599997e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [52.26580952  8.7432339   6.79161919  2.49806683  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [5.93191454e+01 1.46045472e+00 1.46045472e+00 1.13185241e+00
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [66.14337867  1.35211833  1.35211833  0.50704438  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [74.21887443  3.3326357   3.3326357   1.57374464  0.27771964]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [88.996533    2.98079999  2.98079999  0.8556      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [117.01566317   1.57755187   1.24291966   0.95609204   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [1.92019371e+02 1.28806571e+00 1.01483965e+00 7.80645884e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  39
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.38, 0.25, 0.19, 0.15, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.684718 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  72
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  58.0
Iteration TIME (sec):  0.014203371000000242
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.3885405  12.57081614  6.97828666  1.98219646  3.12169443]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.7599136  10.85027574 10.85027574  8.43910335  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.14370625 17.91237867  1.09464536  0.6965925   0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.59828308  5.12468902  0.68986198  0.68986198  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.58434989 13.66130297  2.34193765  1.17096883  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [19.00294574  3.96059999  2.41499999  0.483       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.25788008  3.91997737  0.86048284  0.19121841  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.57430598  0.5676482   0.09460803  0.09460803  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.44282299 10.20198073  4.86699998  1.77832692  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.97793659  2.31433035  1.11087857  0.27771964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.28368452  0.64077191  0.36615538  0.09153884  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.49642296  1.71936038  0.81443386  0.54295591  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.79616981  1.07321066  0.35773689  0.17886844  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [20.09804745 15.94559878 18.89570356 14.3148245   0.35345246]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [21.31400581 14.60958207 18.38332486  8.64603863  0.92336335]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.74398272  5.47000735  2.53089892  1.95940562  0.0816419 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [23.35332362  1.20700704  0.48280282  0.24140141  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [22.38232656 17.85724996 21.14206524 15.93426781  0.31709986]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [24.45142702 17.41671667 15.53189228 12.11338968  0.2972611 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [27.08807458  1.33696291  0.63329822  0.42219881  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [25.70154159 24.83999991 19.31999993  5.51999998  0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [28.39032486  0.811271    0.20281775  0.13521183  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [26.37788726 27.38049775 19.06055274  9.00081657  0.33091237]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [49.97240681 35.27039451 35.27039451 27.4633868   3.70292856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [67.57893308 21.58319993 16.80839994 13.08239995 10.18439996]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [108.04034912   6.54923049   6.54923049   3.96778198   3.10729914]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [174.39629043   6.77210304   6.77210304   5.26935972   0.54645212]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  27
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````
Tokens: ['```', 'module', '\n', '``', 'mod']
Probs: [42.73, 25.91, 9.53, 9.53, 5.78]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```````````````
API response time: 1.082013 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  60
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  59.0
Iteration TIME (sec):  0.013406554999999987
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.23086978 12.68365203  7.04139569  1.99892416  3.14803831]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.57860541 10.9521585  10.9521585   8.5183455   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.95504854 18.0837929   1.10512068  0.70325861  0.10046552]  taking action:  1  corresponding to token:  ``
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [99.09, 0.86, 0.03, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````
API response time: 0.786404 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  36
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  60.0
Iteration TIME (sec):  0.009994308000000007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [14.07789523 12.79555148  7.10398096  2.01551302  3.17416356]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.40245047 11.05310219 11.05310219  8.59685726  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [18.13285355  8.62679875  1.11549763  0.70986213  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.40126987  5.17468717  0.6965925   0.6965925   0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.38344035 13.79723968  2.36524109  1.18262054  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.79345147  4.00081015  2.43951839  0.48790368  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [19.04118324  3.96059999  0.8694      0.1932      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.34942081  0.57365523  0.0956092   0.0956092   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [19.21438412 10.31227561  4.91961772  1.79755263  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.73817085  2.33990384  1.12315384  0.28078846  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [20.03474288  0.6480125   0.37029286  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [20.23897951  1.73923803  0.8238496   0.54923306  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.52874176  1.08591182  0.36197061  0.1809853   0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.79152988 16.14696692 19.13081158 14.48834386  0.35773689]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.98500943 14.81240433 18.63009194  8.76209803  0.93575804]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.39236563  5.54759998  2.56679999  1.98719999  0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [22.98170473  1.22462851  0.4898514   0.2449257   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.94232694 18.13582073 21.46752809 16.17389431  0.32186854]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [23.92713225 17.72585673 15.79741395 12.32047117  0.30234285]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [26.52151119  1.36243116  0.64536213  0.43024142  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [25.14033072 25.33192886 19.70261133  5.62931752  0.14073294]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````module
Tokens: [' mod', 'mod', '```', 'module', '``']
Probs: [31.31, 31.31, 18.99, 8.97, 4.24]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:   mod

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````module mod
API response time: 1.046818 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````module mod_a ( input in1, input in2, output out );

    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: error: invalid module item.\n'
Rollout raw response:  ```verilog
_a ( input in1, input in2, output out );

    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  67
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  61.0
Iteration TIME (sec):  0.01235863100000012
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.92939026 12.90653742  7.1660553   2.03196646  3.20007553]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.23120929 11.1531323  11.1531323   8.67465846  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.94469854  8.71091849  1.12577893  0.71640477  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.21007639  5.22420684  0.70325861  0.70325861  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [18.18858476 13.93185008  2.38831716  1.19415858  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.59039894  4.04062019  2.4637928   0.49275856  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.8312889   4.00081015  0.87822662  0.19516147  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [19.13174574  0.5796      0.0966      0.0966      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.99342909 10.42140326  4.97167862  1.81657488  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.506435    2.36520083  1.1352964   0.2838241   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.79432854  0.65517307  0.37438461  0.09359615  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.99056021  1.75889107  0.83315893  0.55543928  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.27091166  1.09846613  0.36615538  0.18307769  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.49786314 16.34595176 19.36313697 14.65980951  0.36197061]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.67009708 15.01257497 18.87363289  8.87664012  0.94799069]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [22.0559001   5.62412222  2.6022058   2.01461094  0.08394212]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [22.62657135  1.242       0.4968      0.2484      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.52591855 18.41032412 21.7882389  16.41002205  0.3265676 ]  taking action:  2  corresponding to token:  

Leaf selection - depth:  18
Leaf selection - action scores:  [1.94263728e+02 4.87903677e-01 2.92742206e-01 1.17096883e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
```
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [94.26, 3.65, 1.73, 0.3, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
``````
API response time: 0.949990 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  52
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  62.0
Iteration TIME (sec):  0.012688158000000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.78514312 13.01663185  7.22763103  2.04828774  3.22577936]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [17.06465774 11.2522732  11.2522732   8.75176805  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.76197696  8.79427692  1.13596718  0.7228882   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [18.02442179  5.2732615   0.70986213  0.70986213  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.99948521 14.06517226  2.41117239  1.20558619  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.39346491  4.08004181  2.48783037  0.49756607  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.6278486   4.04062019  0.88696541  0.19710342  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.92090386  0.58548441  0.09758074  0.09758074  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.77955825 10.52939996  5.02319998  1.83539999  0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.28229094  2.39023011  1.14731045  0.28682761  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.5619658   0.66225623  0.37843213  0.09460803  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.75065034  1.77832692  0.84236538  0.56157692  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [20.02211926  1.11087857  0.37029286  0.18514643  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.21618047 16.54263597 19.59277624 14.82929271  0.36615538]  taking action:  2  corresponding to token:  module
Leaf selection - depth:  14
Leaf selection - action scores:  [135.9689968   14.32485197  14.32485197  14.32485197  14.32485197]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module```
Tokens: ['```', 'mod', '``', '\n', '  \n']
Probs: [95.53, 1.75, 1.75, 0.64, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module``````
API response time: 0.799026 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  48
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  63.0
Iteration TIME (sec):  0.012079255999999816
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.64495579 13.12585594  7.28871997  2.06447999  3.25127999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.90258568 11.3505482  11.3505482   8.82820415  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.58443259  8.87689434  1.14606486  0.729314    0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.84404389  5.32186402  0.71640477  0.71640477  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.81586391 14.1972425   2.433813    1.2169065   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.20234828  4.11908616  2.5116379   0.50232758  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.43053846  4.08004181  0.89561893  0.19902643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.71654514  0.59131027  0.09855171  0.09855171  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.57240123 10.63630017  5.07419824  1.85403397  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [19.06533324  2.41499999  1.1592      0.2898      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.33721538  0.66926443  0.38243682  0.0956092   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.51877518  1.79755263  0.8514723   0.5676482   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.78184905  1.12315384  0.37438461  0.18719231  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.44433664 16.73709754 12.87988029 14.99686066  0.37029286]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.36829465 15.21019536 19.11407102  8.9897229   0.96006749]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [21.73352929  5.69961717  2.6371363   2.04165391  0.08506891]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [22.28674094  1.25913184  0.50365274  0.25182637  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.8449935  18.68093325 14.40293326 16.64279994  0.3312    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [23.43361785 18.02988598 16.05854592 12.52412911  0.30734059]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [25.98783567  1.38743198  0.65720462  0.43813642  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [25.63752455 12.40724257 20.07793289  5.73655225  0.14341381]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [27.74566659  0.828       0.207       0.138       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [26.96553151 23.15549945 19.470504    9.19440467  0.33802958]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [33.39920635  0.7025813   0.52693597  0.40983909  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [34.00551082  3.75532459  3.75532459  2.2759543   0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [35.26682654  4.69199998  2.87039999  1.3248      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [37.11817832  1.01549623  0.48102453  0.16034151  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [34.0178436  29.01879793 17.60749127 13.73487589  0.51634872]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [40.41034217  0.74634911  0.59707929  0.29853964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [41.9672913   2.48583931  1.91218408  1.91218408  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [38.79124274 41.83325166 11.99158855  5.67540832  0.77808017]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  31
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module
Tokens: ['```', ' mod', 'mod', '``', 'module']
Probs: [72.87, 12.66, 9.86, 3.63, 0.38]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module```
API response time: 0.721748 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  64
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  64.0
Iteration TIME (sec):  0.015129189000000487
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.50864289 13.23422999  7.34933349  2.08054623  3.27658216]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.74479595 11.44797958 11.44797958  8.90398412  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.41182587  8.95879016  1.15607435  0.73568368  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.66869748  5.37002666  0.7228882   0.7228882   0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.63746156 14.32809543  2.45624493  1.22812247  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [18.01676829  4.15776388  2.53522188  0.50704438  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.23905683  4.11908616  0.90418965  0.20093103  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.51834424  0.59707929  0.09951321  0.09951321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.37161414 10.74213661  5.12468902  1.87248253  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.85518622  2.43951839  1.17096883  0.29274221  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [19.11967074  0.6762      0.3864      0.0966      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.29449637  1.81657488  0.86048284  0.57365523  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.54962562  1.1352964   0.37843213  0.18921607  0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [19.16582588 16.92941016 13.02957043 15.16257686  0.37438461]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [20.07871941 15.40536055 19.351522    9.10140076  0.97199426]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [21.42429687  5.77412513  2.67161013  2.06834333  0.08618097]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.96114611  1.27603369  0.51041348  0.25520674  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.43592717 18.9478093  14.61079963 16.87236665  0.33576849]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [22.96800882 18.32904982 16.31549897 12.7245279   0.31225835]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [25.48398949  1.41199021  0.66883747  0.44589164  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [25.08230119 12.64409247 20.44636606  5.84181887  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [27.1415531   0.84439763  0.21109941  0.14073294  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [26.03889462 23.6501666  19.87199993  9.38399997  0.345     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [32.37686785  0.72183366  0.54137525  0.42106964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [32.89982259  3.86419712  3.86419712  2.34193765  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [34.04462879  4.83640288  2.95874059  1.36557258  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [35.74154654  1.0488      0.4968      0.1656      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [32.65533963 30.03730954 18.22548497 14.21694722  0.5344717 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [38.66498206  0.77452308  0.61961846  0.30980923  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [39.99155739  2.58734359  1.9902643   1.9902643   0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [40.55615099 21.34670317 12.52480576  5.92777066  0.81267824]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [4.70514511e+01 2.26925044e+00 1.74557726e+00 8.29149200e-01
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [48.42722483  9.27359997  7.20359998  2.64959999  0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [5.42620326e+01 1.56129177e+00 1.56129177e+00 1.21000112e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [59.42259429  1.46045472  1.46045472  0.54767052  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [64.89942981  3.6507195   3.6507195   1.72395088  0.30422663]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [74.4348786   3.3326357   3.3326357   0.95658988  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [89.796933    1.82159999  1.4352      1.104       0.138     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [1.17087370e+02 1.57755187e+00 1.24291966e+00 9.56092042e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [1.93951470e+02 4.87903677e-01 3.70806795e-01 2.92742206e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  40
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', "Here's"]
Probs: [99.68, 0.25, 0.03, 0.03, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.729317 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  73
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  65.0
Iteration TIME (sec):  0.014432497999999683
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.3760304  13.34177356  7.40948252  2.09648934  3.30169043]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.59110338 11.54458872 11.54458872  8.97912456  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.2439324   9.03998299  1.16599792  0.74199868  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.49815306  5.41776117  0.729314    0.729314    0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.46403562 14.45776409  2.47847384  1.23923692  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.83646289  4.19608509  2.55858847  0.51171769  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [18.05312241  4.15776388  0.91267988  0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.32599814  0.6027931   0.10046552  0.10046552  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [18.17687732 10.84694042  5.17468717  1.89075108  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.65150101  2.4637928   1.18262054  0.29565514  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.9089552   0.68306515  0.39032294  0.09758074  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [19.07740824  1.83539999  0.8694      0.5796      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.32500995  1.14731045  0.38243682  0.19121841  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.89825423 17.11964355 13.17764217 15.32650137  0.37843213]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.80056959 15.59815984 19.58609447  9.2117248   0.98377643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [21.12733467  5.84768383  2.70564476  2.09469271  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.64882098  1.29271458  0.51708583  0.25854292  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [21.04768438 19.21110264 14.81587547 17.0988515   0.34027565]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [22.52779027 18.62357461 16.56846753 12.92181917  0.31709986]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [25.00729749  1.43612854  0.68027141  0.45351428  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [24.56020504 12.87674933 20.80827674  5.94522193  0.14863055]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [26.57391239  0.86048284  0.21512071  0.14341381  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [25.19466159 24.13503545 20.26554308  9.56983979  0.35183235]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [31.44026371  0.74058571  0.55543928  0.43200833  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [31.89230358  3.97008514  3.97008514  2.40611221  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [32.93770687  4.97661751  3.04451895  1.40516259  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [34.50337583  1.08107829  0.51208972  0.17069657  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [31.43962655 31.02239989 18.82319993 14.68319995  0.552     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [37.12199598  0.80170755  0.64136604  0.32068302  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [38.26381882  2.68501333  2.06539487  2.06539487  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [38.31720903 22.2387696  13.03623115  6.16981932  0.84586233]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [44.3522275   2.38000994  1.83077688  0.86961902  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [45.30587382  9.77523267  7.59326109  2.79292362  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [5.02798748e+01 1.65599999e+00 1.65599999e+00 1.28340000e+00
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [54.35682528  1.56129177  1.56129177  0.58548441  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [58.30291234  3.94322774  3.94322774  1.86207977  0.32860231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [65.08872637  3.6507195   3.6507195   1.04789171  0.13521183]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [75.1060344   2.03661071  1.60460238  1.23430952  0.15428869]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [8.98521330e+01 1.82159999e+00 1.43520000e+00 1.10400000e+00
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [1.18270534e+02 5.97557527e-01 4.54143720e-01 3.58534516e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [1.94536954e+02 4.87903677e-01 5.85484413e-02 5.85484413e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  41
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.36, 0.32, 0.19, 0.12, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.765269 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  74
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  66.0
Iteration TIME (sec):  0.014357194000000462
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.24695524 13.44850544  7.46917758  2.11231213  3.32660921]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [76.27862844  0.46286607  0.          0.          0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [90.900933  0.8832    0.2484    0.1656    0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [117.19493043   2.03169559   1.24291966   0.35853452   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [193.0342109    1.67838865   0.23419377   0.23419377   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.84, 0.09, 0.06, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````
API response time: 0.808542 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  38
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  67.0
Iteration TIME (sec):  0.010417891000000346
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.35276013 11.12870315  7.52842878  2.12801727  3.3513427 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.44133362 11.64039608 11.64039608  9.05364139  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [17.08054181  9.1204906   1.17583774  0.74826038  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.33219545  5.46507876  0.73568368  0.73568368  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.29535911 14.58628008  2.50050516  1.25025258  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.66118695  4.23405948  2.58174359  0.51634872  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.87247265  4.19608509  0.92109185  0.20468708  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [18.13922429  0.60845325  0.10140888  0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.98789304 10.95074126  5.22420684  1.90884481  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.45395333  2.48783037  1.19415858  0.29853964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.70471893  0.68986198  0.39420685  0.09855171  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.86713488  1.85403397  0.87822662  0.58548441  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [19.10759574  1.1592      0.3864      0.1932      0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.64093045 17.30786371 13.32414687 15.48869109  0.38243682]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.533115   15.78867724 19.81789064  9.32074309  0.99541916]  taking action:  2  corresponding to token:  

Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````

Tokens: ['```', 'module', '\n', '``', '\\']
Probs: [90.63, 5.79, 2.74, 0.78, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````
```
API response time: 0.714234 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  48
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  68.0
Iteration TIME (sec):  0.011378203000000475
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.22459971 11.21633829  7.5872459   2.14360735  3.37589499]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.29532277 11.73542129 11.73542129  9.1275499   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.9214567   9.20033006  1.1855959   0.75447012  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.17062278  5.51199017  0.74199868  0.74199868  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [17.13121921 14.71367359  2.52234404  1.26117202  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.49071108  4.27169631  2.60469287  0.52093857  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.69686196  4.23405948  0.92942769  0.20653949  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.95775893  0.61406123  0.10234354  0.10234354  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.80438366 11.05356738  5.2732615   1.92676863  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.26224118  2.5116379   1.20558619  0.30139655  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.5066368   0.6965925   0.39805286  0.09951321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.66332721  1.87248253  0.88696541  0.59131027  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.89700653  1.17096883  0.39032294  0.19516147  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.39322264 17.49413325 13.46913326 15.64919995  0.3864    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.77021796 15.9769919   9.52350341  9.42850092  1.00692728]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.84185287  5.92032865  2.73925654  2.12071474  0.08836311]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.34888871  1.30918295  0.52367318  0.26183659  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.67857893 19.47095379 15.01827023 17.32237539  0.34472389]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [22.1107518  18.91366971 16.8176314  13.11614315  0.32186854]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [24.55540834  1.45986781  0.69151633  0.46101089  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [24.06808261 13.10542828 21.16399955  6.04685701  0.15117143]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [26.03922204  0.87627283  0.21906821  0.14604547  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [24.42161893 24.61066617 20.65158812  9.75213883  0.35853452]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [43.6508902  38.63678138 38.63678138 30.08463292  4.056355  ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [56.47567509 24.1307511  18.79236243 14.6265678  11.38650532]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [82.88773302  7.56239997  7.56239997  4.58159998  3.58799999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [106.29548114   8.29409847   8.29409847   6.45362129   0.66926443]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [83.39249653 50.56633712 18.59888818 18.59888818 11.28033302]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```````````````
Tokens: ['```', 'mod', '``', 'module', '\n']
Probs: [80.79, 6.63, 6.63, 3.13, 1.48]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module``````````````````
API response time: 1.069021 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module``````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  69.0
Iteration TIME (sec):  0.012423856999999927
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [13.09977359 11.30334066  7.64563832  2.15908486  3.40027   ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.15291624 11.82968322 11.82968322  9.20086473  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.76649136  9.27951775  1.19527439  0.76062916  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [17.01324543  5.55850568  0.74826038  0.74826038  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.97141623 14.83997353  2.54399546  1.27199773  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.32482018  4.30900441  2.62744171  0.52548834  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.52606048  4.27169631  0.93768943  0.20837543  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.78135538  0.61961846  0.10326974  0.10326974  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.62609006 11.15544573  5.32186402  1.94452724  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [18.07608291  2.53522188  1.2169065   0.30422663  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.31440597  0.70325861  0.40186206  0.10046552  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.46566077  1.89075108  0.89561893  0.59707929  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.69289273  1.18262054  0.39420685  0.19710342  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [18.15455175 17.67851158 13.6126476  15.80807915  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.50453108 16.16317851  9.63676693  9.53504104  1.01830535]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.56713095  5.99209283  2.77246086  2.14642131  0.08943422]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [21.06055157  1.32544671  0.53017869  0.26508934  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [20.32710771 19.72749433 15.2180864  17.54305149  0.34911545]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [21.71494185 19.19952916 17.06315725 13.30762982  0.3265676 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [24.12624594  1.48322718  0.7025813   0.46838753  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [23.6031837  13.33032663 21.51384142  6.14681184  0.1536703 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [25.53441771  0.89178329  0.22294582  0.14863055  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [24.88723575 21.35220068 21.03054795  9.93109209  0.36511368]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [30.57807486  0.75887453  0.5691559   0.44267681  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [30.96927718  4.07322141  4.07322141  2.46861904  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [31.92906363  5.11298844  3.12794587  1.44366733  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [33.38198622  1.11242038  0.52693597  0.17564532  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [30.34620305 31.97715788 19.40251039 15.13509608  0.56898857]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````module
Tokens: ['```', ' mod', 'mod', '``', 'module']
Probs: [44.56, 16.39, 16.39, 16.39, 3.66]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````module```
API response time: 3.119457 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  70.0
Iteration TIME (sec):  0.012872955999999824
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.97814089 11.38972377  7.70361513  2.1744522   3.42447152]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [16.01396819 11.92319996 11.92319996  9.27359997  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.61547133  9.35806935  1.20487514  0.76673873  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.8598849   5.60463515  0.75447012  0.75447012  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.81576267 14.9652076   2.56546416  1.28273208  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.16331244  4.34599225  2.64999527  0.52999905  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.35985273  4.30900441  0.94587902  0.21019534  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.60978275  0.62512629  0.10418771  0.10418771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.45276983 11.25640204  5.37002666  1.96212513  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.89521566  2.55858847  1.22812247  0.30703062  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [18.12774404  0.70986213  0.4056355   0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.27383335  1.90884481  0.90418965  0.6027931   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.49492936  1.19415858  0.39805286  0.19902643  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.92438597 17.86105516 13.75473383 15.96537734  0.39420685]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.24873159 16.34730762  9.7487788   9.6404038   1.02955769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.30251013  6.06300764  2.80527219  2.17182363  0.09049265]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.78308187  1.34151332  0.53660533  0.26830266  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.99192663 19.98084766 15.41542009 17.76098595  0.35345246]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [21.3386302  19.48133324 17.30519994 13.49639995  0.3312    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [23.71796934  1.50622432  0.71347468  0.47564979  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [23.16309763 13.55162591 21.85808474  6.24516707  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [25.05681917  0.90702855  0.22675714  0.15117143  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [24.14712737 21.74531692 21.40279894 10.10687728  0.37157637]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [29.78096515  0.77673285  0.58254964  0.45309416  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [30.11958816  4.17380993  4.17380993  2.52958177  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [31.00500719  5.24581546  3.20920475  1.48117142  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [32.36015873  1.1429033   0.54137525  0.18045842  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [31.25316487 15.952112   19.96501848 15.57388538  0.58548441]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [35.74522654  0.828       0.6624      0.3312      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [36.73641282  2.77925284  2.1378868   2.1378868   0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [36.39813397 23.09713639 13.5283364   6.4027241   0.87779282]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [42.05855463  2.48583931  1.91218408  0.90828744  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [42.70452831 10.25235052  7.96387942  2.929243    0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [4.70417534e+01 1.74557726e+00 1.74557726e+00 1.35282238e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [50.36784982  1.65599999  1.65599999  0.621       0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [53.33083355  4.21548777  4.21548777  1.990647    0.35129065]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [58.47329872  3.94322774  3.94322774  1.13185241  0.14604547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [65.67689785  2.23099525  1.75775383  1.35211833  0.16901479]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [7.51523210e+01 2.03661071e+00 1.60460238e+00 1.23430952e+00
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [9.07629330e+01 6.89999998e-01 5.24399998e-01 4.13999999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [1.18629068e+02 5.97557527e-01 7.17069032e-02 7.17069032e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [1.93912438e+02 6.24516707e-01 3.70806795e-01 2.34193765e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  42
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.36, 1.09, 0.4, 0.12, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.774417 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  75
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  71.0
Iteration TIME (sec):  0.015116250000000164
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.85956889 11.47550066  7.76118507  2.1897117   3.44850319]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.87834091 12.01598891 12.01598891  9.34576915  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.46823218  9.43599997  1.2144      0.7728      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.71037334  5.65038803  0.76062916  0.76062916  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.66408194 15.08940232  2.58675468  1.29337734  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [17.00599836  4.38266794  2.6723585   0.5344717   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.19803652  4.34599225  0.9539983   0.21199962  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.44282458  0.63058601  0.10509767  0.10509767  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.28419614 11.35646092  5.41776117  1.97956658  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.71939354  2.58174359  1.23923692  0.30980923  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.94638743  0.71640477  0.40937416  0.10234354  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [18.08756316  1.92676863  0.91267988  0.60845325  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.30281379  1.20558619  0.40186206  0.20093103  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.70223605 18.04181771 13.89543375 16.12114081  0.39805286]  taking action:  1  corresponding to token:  

Leaf selection - depth:  14
Leaf selection - action scores:  [118.06736442   0.76487363   0.76487363   0.35853452   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.89189530e+02 3.47387418e+00 2.10774389e+00 3.70806795e-01
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
``````
Tokens: ['```', '``', 'module', '\n', 'Certainly']
Probs: [99.87, 0.09, 0.02, 0.02, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
`````````
API response time: 0.879516 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  49
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  72.0
Iteration TIME (sec):  0.012111057999999453
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.74393241 11.56068392  7.81835658  2.2048656   3.47236855]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.74590426 12.1080668  12.1080668   9.41738529  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.32461894  9.51332409  1.22385072  0.7788141   0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.56455247  5.6957734   0.76673873  0.76673873  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.51620806 15.21258316  2.6078714   1.3039357   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.85269947  4.41903925  2.69453613  0.53890723  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [17.04042196  4.38266794  0.96204906  0.21378868  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.28027775  0.63599887  0.10599981  0.10599981  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [17.1201563  11.45564587  5.46507876  1.9968557   0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.54838642  2.60469287  1.25025258  0.31256314  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.77008959  0.7228882   0.41307897  0.10326974  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.90658716  1.94452724  0.92109185  0.61406123  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [18.11626379  1.2169065   0.4056355   0.20281775  0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.88100529 13.41563777 14.03478717 16.27541361  0.40186206]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [19.00222371 16.52944597  9.85957963  9.74462742  1.04068836]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [20.04738658  6.13310254  2.83770416  2.19693225  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.51581424  1.35738977  0.54295591  0.27147795  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.67182929 20.2311297  15.6103616  17.97627849  0.35773689]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  18
Leaf selection - action scores:  [95.71871292 15.799421   15.799421   12.30968505  1.00389664]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [162.56950529  13.34904461   8.09920104   2.3224215    2.3224215 ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module``````
Tokens: ['```', '``', 'mod', '\n', 'module']
Probs: [91.2, 4.54, 2.14, 0.79, 0.61]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module`````````
API response time: 1.194690 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  53
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  73.0
Iteration TIME (sec):  0.012123153999999303
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.63111329 11.6452857   7.87513783  2.21991605  3.496071  ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.61653511 12.19944973 12.19944973  9.4884609   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.18448534  9.59005566  1.23322903  0.78478211  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.42227295  5.74079998  0.7728      0.7728      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.37198445 15.33477455  2.62881849  1.31440925  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.70324801  4.45511364  2.71653271  0.54330654  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.88683026  4.41903925  0.97003301  0.21556289  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [17.12195154  0.64136604  0.10689434  0.10689434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.96045074 11.55397939  5.51199017  2.01399641  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.38197856  2.62744171  1.26117202  0.31529301  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.59861978  0.729314    0.41675086  0.10418771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.73065933  1.96212513  0.92942769  0.61961846  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.93501592  1.22812247  0.40937416  0.20468708  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.66105215 13.54865138 14.17283202 16.42823775  0.4056355 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.76446057 16.70965676  9.96920787  9.84774804  1.05170125]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.80120591  6.20240533  2.86976963  2.22175713  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.2581388   1.37308266  0.54923306  0.27461653  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.91615498 15.10883714 15.80299585 18.18902292  0.36197061]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.98027686 19.75924982 17.54390363 13.68256599  0.33576849]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [23.32893964  1.52887558  0.72420422  0.48280282  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.74570143 13.76949356 22.19698999  6.34199714  0.15854993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [24.6040706   0.92202178  0.23050544  0.1536703   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [23.46423612 22.13171175 21.76868525 10.27965692  0.37792856]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [29.04115711  0.7941897   0.59564227  0.46327732  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [29.33403554  4.27203066  4.27203066  2.58910949  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [30.15436991  5.37536127  3.28845631  1.51774906  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [31.42402279  1.17259404  0.55543928  0.18514643  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [30.18613102 16.40293826 20.51210658 16.00064619  0.60152805]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [34.506932    0.85348286  0.68278629  0.34139314  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [35.37354654  2.87039999  2.20799999  2.20799999  0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [34.73029678 23.92535669 14.00315854  6.62744908  0.90860189]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [40.07863145  2.58734359  1.9902643   0.94537554  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [40.49404038 10.70823088  8.31800077  3.05949454  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [44.34307362  1.83077688  1.83077688  1.41885208  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [47.12418347  1.74557726  1.74557726  0.65459147  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [49.41564983  4.47119998  4.47119998  2.11139999  0.3726    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [53.48696273  4.21548777  4.21548777  1.21000112  0.15612918]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [59.00271356  2.40975029  1.89859113  1.46045472  0.18255684]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [6.57174614e+01 2.23099525e+00 1.75775383e+00 1.35211833e+00
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [7.59160500e+01 7.71443450e-01 5.86297022e-01 4.62866070e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [9.10389330e+01 6.89999998e-01 8.27999997e-02 8.27999997e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [1.18246632e+02 7.64873634e-01 4.54143720e-01 2.86827613e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [1.91960823e+02 2.12726003e+00 7.80645884e-01 2.34193765e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  43
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '\n', '``', 'module', "Here's"]
Probs: [99.88, 0.06, 0.04, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.794123 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  76
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  74.0
Iteration TIME (sec):  0.014260054000000189
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.52099989 11.72931775  7.9315367   2.23486515  3.51961383]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.49011692 12.29015321 12.29015321  9.55900805  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [16.04769327  9.66620811  1.24253655  0.79070508  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.28339378  5.78547614  0.7788141   0.7788141   0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.23126343 15.45599995  2.64959999  1.3248      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.55748575  4.49089826  2.7383526   0.54767052  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.73709334  4.45511364  0.97795177  0.21732262  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.96766634  0.64668867  0.10778145  0.10778145  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.80489206 11.65148306  5.55850568  2.03099246  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.21996752  2.64999527  1.27199773  0.31799943  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.43176166  0.73568368  0.42039067  0.10509767  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.55954939  1.97956658  0.93768943  0.62512629  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.7588238   1.23923692  0.41307897  0.20653949  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.44851106 13.68043897 14.30960449 16.57965328  0.40937416]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.53493906 16.88799994 10.07769996  9.94979997  1.0626    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.56345803  6.27094228  2.90148076  2.24630768  0.09359615]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [20.00949564  1.38859821  0.55543928  0.27771964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.60087543 15.29218239 15.9934029  18.39930762  0.36615538]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.63850586 20.03343546 17.77940281 13.86623281  0.34027565]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [22.9576924   1.55119611  0.73477711  0.4898514   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.34911722 13.98408446 22.53079804  6.43737087  0.16093427]  taking action:  2  corresponding to token:  

Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````

Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.43, 0.41, 0.12, 0.04, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````
```
API response time: 0.807744 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  54
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  75.0
Iteration TIME (sec):  0.012379797000000359
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.41348652 11.81279144  7.98756082  2.24971491  3.54300022]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.36653923 12.38019216 12.38019216  9.62903835  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.91411216  9.74179434  1.25177486  0.796584    0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.14778169  5.82980994  0.78478211  0.78478211  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [16.09390553 15.57628192  2.67021976  1.33510988  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.41526343  4.52639998  2.75999999  0.552       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.59105266  4.49089826  0.98580694  0.21906821  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.81725332  0.65196785  0.10866131  0.10866131  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.65330379 11.74817752  5.60463515  2.04784746  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [17.06216318  2.6723585   1.28273208  0.32068302  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.26931226  0.74199868  0.42399924  0.10599981  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.39304147  1.9968557   0.94587902  0.63058601  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.58745681  1.25025258  0.41675086  0.20837543  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.24297892 13.81103384 14.44513911 16.72969845  0.41307897]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.31319561 17.06453238 10.18509053 10.05081575  1.07338809]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.33367251  6.33873822  2.93284903  2.2705928   0.09460803]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.76936957  1.4039423   0.56157692  0.28078846  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.29917488 15.47345574 16.18165825 18.607216    0.37029286]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.31208398 20.30403652 18.01182316 14.04749845  0.34472389]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [22.6029142   1.57319999  0.7452      0.4968      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.68954204 14.19554213 10.9298661   6.53135206  0.1632838 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [24.17409197  0.93677506  0.23419377  0.15612918  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.83174937 22.51171856 22.12852261 10.44958012  0.38417574]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [28.35211282  0.811271    0.60845325  0.47324142  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [28.60495444  4.36804334  4.36804334  2.64729899  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [29.36794054  5.50185767  3.36584234  1.55346569  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [30.56226497  1.20155134  0.5691559   0.18971863  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [29.21728014 16.84204875 21.0449773  16.41631661  0.61715476]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [33.38543025  0.87822662  0.7025813   0.35129065  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [34.14775797  2.95874059  2.2759543   2.2759543   0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [33.26388562 24.72639991 14.46239995  6.84479998  0.9384    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [38.347229    2.68501333  2.06539487  0.98106256  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [38.58593323 11.14548006  8.65764969  3.18442288  0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [42.04986288  1.91218408  1.91218408  1.48194267  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [44.42088164  1.83077688  1.83077688  0.68654133  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [46.23199954  4.71305861  4.71305861  2.22561101  0.39275488]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [49.56054983  4.47119998  4.47119998  1.2834      0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [53.97207838  2.57613142  2.0296793   1.56129177  0.19516147]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [5.90392249e+01 2.40975029e+00 1.89859113e+00 1.46045472e+00
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [66.38675997  0.84507396  0.64225621  0.50704438  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [76.14748305  0.77144345  0.09257321  0.09257321  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [9.07445330e+01 8.83199997e-01 5.24399998e-01 3.31199999e-01
 2.75999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [1.17051517e+02 2.60535082e+00 9.56092042e-01 2.86827613e-01
 4.78046021e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [1.94927277e+02 1.17096883e-01 7.80645884e-02 1.95161471e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  44
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.31, 0.41, 0.19, 0.09, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.945533 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  77
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  76.0
Iteration TIME (sec):  0.015470067999999948
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.30847333 11.89571773  8.04321755  2.2644673   3.56623326]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.24569721 12.46958099 12.46958099  9.69856299  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.78361848  9.8168268   1.2609455   0.80241986  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [16.01531061  5.87380913  0.79070508  0.79070508  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.95977895 15.69564214  2.69068151  1.34534076  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.27644008  4.56162542  2.78147891  0.55629578  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.44855867  4.52639998  0.9936      0.2208      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.67055321  0.65720462  0.1095341   0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.50552006 11.8440826   5.65038803  2.06456486  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.90838655  2.69453613  1.29337734  0.32334434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [17.11108093  0.74826038  0.42757736  0.10689434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.23093301  2.01399641  0.9539983   0.63599887  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.42069875  1.26117202  0.42039067  0.21019534  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.04408251 13.94046779 14.57946892 16.87840981  0.41675086]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [18.09880222 17.23930816 10.29141246 10.15082633  1.08406883]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [19.11141492  6.40581668  2.96388533  2.2946209   0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.53728545  1.4191205   0.5676482   0.2838241   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [19.01011864 15.65272589 16.36783324 18.81282684  0.37438461]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.99990193 20.57119001 18.24128239 14.22645469  0.34911545]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  19
Leaf selection - action scores:  [106.73767371  10.68432857  10.68432857   2.39023011   0.40633912]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [123.01027513  35.24616165  16.64727347  10.08984805   3.70806795]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module``````
Tokens: ['```', '``', 'mod', 'module', '\n']
Probs: [91.9, 3.56, 2.16, 0.8, 0.62]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module`````````
API response time: 1.293126 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  54
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  77.0
Iteration TIME (sec):  0.012719371999999396
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.20586551 11.97810727  8.09851403  2.2791242   3.58931592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.12749153 12.55833358 12.55833358  9.76759278  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.65609524  9.89131749  1.27004992  0.80821358  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.88586121  5.91748117  0.796584    0.796584    0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.82875898 15.8141015   2.71098883  1.35549441  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.14088251  4.59658091  2.80279324  0.56055865  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.30947015  4.56162542  1.00133241  0.22251831  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.52741581  0.6624      0.1104      0.1104      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.36138437 11.93921733  5.6957734   2.08114797  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.75846933  2.71653271  1.3039357   0.32598392  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.9568882   0.75447012  0.43112578  0.10778145  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [17.07303379  2.03099246  0.96204906  0.64136604  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.25834676  1.27199773  0.42399924  0.21199962  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.85147557 14.06877126 14.71262547 17.0258223   0.42039067]  taking action:  3  corresponding to token:  ``
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.09, 0.52, 0.32, 0.07, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````
API response time: 2.750488 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  47
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  78.0
Iteration TIME (sec):  0.011305816000000135
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.10557335 12.05997035  8.15345717  2.29368744  3.61225108]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [15.01182763 12.64646332 12.64646332  9.83613814  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.53143148  9.96527798  1.27908953  0.81396607  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.75932038  5.96083326  0.80241986  0.80241986  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.70072761 15.93168008  2.73114516  1.36557258  0.        ]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````module
Tokens: ['```', 'ver', '``', 'mod', '\n']
Probs: [98.11, 1.09, 0.31, 0.24, 0.05]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````module```
API response time: 0.716834 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  38
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  79.0
Iteration TIME (sec):  0.01055222599999972
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.00751166 12.14131692  8.20805366  2.3081588   3.63504153]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [66.70450778  0.50704438  0.          0.          0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [76.03176654  0.98744762  0.27771964  0.18514643  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [89.934933    2.34599999  1.4352      0.414       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [117.7088299    2.05559789   0.28682761   0.28682761   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [1.94849213e+02 1.75645324e-01 1.17096883e-01 1.95161471e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.89, 0.09, 0.02, 0.0, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````
API response time: 0.977257 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  39
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  80.0
Iteration TIME (sec):  0.01006417799999948
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [12.08847078 10.3332771   8.26230997  2.32253999  3.65768999]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.8986158  12.73398314 12.73398314  9.90420911  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.40952211 10.03871943  1.28806571  0.81967818  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.63558078  6.00387233  0.80821358  0.80821358  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.82296956  7.52419862  2.75115381  1.37557691  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [16.00846468  4.63127258  2.8239467   0.56478934  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.17365363  4.59658091  1.00900557  0.22422346  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.38769924  0.66755494  0.11125916  0.11125916  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.22074915 12.03359996  5.74079998  2.09759999  0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.6122528   2.7383526   1.31440925  0.32860231  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.80656532  0.76062916  0.43464523  0.10866131  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.91916469  2.04784746  0.97003301  0.64668867  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [17.10021032  1.28273208  0.42757736  0.21378868  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [17.00454486 14.19597334 14.84463898  8.08598469  0.42399924]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.8913631  17.41237867 10.39669703 10.24986113  1.09464536]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.89628324  6.47219998  2.99459999  2.31839999  0.0966    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.31280452  1.43413806  0.57365523  0.28682761  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.73285879 15.83005781 16.55199535 19.01621466  0.37843213]  taking action:  3  corresponding to token:  ``
Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````
Tokens: ['```', '\n', '``', 'module', '\\']
Probs: [95.29, 2.24, 1.75, 0.64, 0.04]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````
API response time: 1.519209 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  51
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  81.0
Iteration TIME (sec):  0.011383437000000107
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.99097313 10.40214187  8.31623239  2.33683268  3.68019906]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.78777064 12.82090553 12.82090553  9.97181542  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.29026719 10.11165262  1.29697976  0.82535076  0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.5145407   6.04660506  0.81396607  0.81396607  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.69514757  7.58213583  2.771018    1.385509    0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.87906732  4.66570631  2.84494287  0.56898857  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [16.04098286  4.63127258  1.01662081  0.22591574  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.25126944  0.67267038  0.11211173  0.11211173  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [16.08347498 12.12724806  5.78547614  2.11392397  0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.46958724  2.75999999  1.3248      0.3312      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.65995314  0.76673873  0.43813642  0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.76915733  2.06456486  0.97795177  0.65196785  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.94611005  1.29337734  0.43112578  0.21556289  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.81375021 14.32210194 14.9755384   8.15844154  0.42757736]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.6905115  17.5837929  10.50097402 10.34794816  1.10512068]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.68790496  6.53790928  3.0250028   2.34193765  0.09758074]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [19.09552074  1.44899999  0.5796      0.2898      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.94141982 16.00551304 16.73420849  9.10872503  0.38243682]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [20.26044453 15.37626834 18.46789086 14.40318761  0.35345246]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [22.26342368  1.59490033  0.7554791   0.50365274  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [22.29710292 14.40399995 11.09199996  6.62399998  0.1656    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [23.76503885  0.95129957  0.23782489  0.15854993  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.24391827 22.88564408 22.48260145 10.61678402  0.39032294]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [39.17704075 41.73249359 41.73249359 32.49511749  4.38136416]  taking action:  1  corresponding to token:   mod
Adding child.
Leaf selection - depth:  24
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module mod
Tokens: ['```', '_a', 'module', '\n', 'ule']
Probs: [65.54, 24.11, 3.26, 1.98, 1.98]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module mod```
API response time: 0.760279 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module mod```mod_a ( 
        .in1(a), 
        .in2(b), 
        .out(out) 
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a ( 
        .in1(a), 
        .in2(b), 
        .out(out) 
    );

endmodule
```
Depth of rollout:  59
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  82.0
Iteration TIME (sec):  0.011622313000000162
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.89559933 10.470588    8.369827    2.35103848  3.7025713 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.67921082 12.90724257 12.90724257 10.03896645  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.17357191 10.18408794  1.30583297  0.83098462  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.39610331  6.08903789  0.81967818  0.81967818  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.57019177  7.63966065  2.7907408   1.3953704   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.75257735  4.69988777  2.86578522  0.57315704  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.91133831  4.66570631  1.02417943  0.22759543  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [16.11799958  0.67774721  0.11295787  0.11295787  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.94943017 12.22017853  5.82980994  2.13012286  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.33033124  2.78147891  1.33510988  0.33377747  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.51690153  0.7728      0.4416      0.1104      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.62285288  2.08114797  0.98580694  0.65720462  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.79587732  1.3039357   0.43464523  0.21732262  0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.62880907 14.44718377 15.10535145  8.23029706  0.43112578]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.49590719 17.7535975  10.60427181 10.44511413  1.11549763]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  15
Leaf selection - action scores:  [158.06127531  16.66678962  10.10936419   7.86500728   1.75645324]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [97.91, 1.09, 0.66, 0.31, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````
API response time: 0.664431 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  49
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  83.0
Iteration TIME (sec):  0.01140500099999997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.80227402 10.53862303  8.42309971  2.36515896  3.72480916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.57285894 12.99300593 12.99300593 10.10567128  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [15.05934608 10.25603548  1.31462656  0.83658054  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.28017677  6.13117707  0.82535076  0.82535076  0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.4479968   7.69678178  2.81032518  1.40516259  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.6288875   4.73382241  2.88647708  0.57729542  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.78460672  4.69988777  1.03168268  0.22926282  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.98776961  0.68278629  0.11379771  0.11379771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.81849009 12.3124076   5.87380913  2.14619949  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.19435118  2.80279324  1.34534076  0.33633519  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.37726869  0.7788141   0.44503663  0.11125916  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.48010153  2.09759999  0.9936      0.6624      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.64935307  1.31440925  0.43813642  0.21906821  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.44943131 14.57124447 15.23410476  8.30156597  0.43464523]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.66619926 11.61455797 10.7066175  10.54138449  1.12577893]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.48593413  6.6029647   3.05510307  2.36524109  0.09855171]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.88505787  1.46371103  0.58548441  0.29274221  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.66810948 16.17914994 16.91453325  9.20829997  0.3864    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.95157007 15.57174539 18.69175226 14.57777808  0.35773689]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.93815451  1.61630935  0.76562022  0.51041348  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [21.9233913  14.60958207 11.25189717  6.71536981  0.16788425]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [23.3752692   0.96560563  0.24140141  0.16093427  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.60369039 20.22204986 22.8311897  10.78139514  0.39637482]  taking action:  2  corresponding to token:  

Adding child.
Leaf selection - depth:  23
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````

Tokens: ['```', 'module', '``', '\n', "Here's"]
Probs: [99.41, 0.32, 0.19, 0.07, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````
```
API response time: 0.614846 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  56
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  84.0
Iteration TIME (sec):  0.012066373999999769
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.71092547 10.60625428  8.47605626  2.37919563  3.74691505]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.46864118 13.07820688 13.07820688 10.17193868  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.94750388 10.32750494  1.32336171  0.84213927  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.16667361  6.17302859  0.83098462  0.83098462  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.3284625   7.75350759  2.82977403  1.41488702  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.50789607  4.76751553  2.90702166  0.58140433  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.66068058  4.73382241  1.03913175  0.23091817  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.86046574  0.68778845  0.11463141  0.11463141  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.69053677 12.40395092  5.91748117  2.16215658  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [16.06152065  2.8239467   1.35549441  0.3388736   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.24092067  0.78478211  0.44844692  0.11211173  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.34076178  2.11392397  1.00133241  0.66755494  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.50638724  1.3248      0.4416      0.2208      0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.2753464  14.69430865 15.36182385  8.37226242  0.43813642]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.47273957 11.72570254 10.80803692 10.63678358  1.13596718]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.29004921  6.6673854   3.08490966  2.38831716  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.68106652  1.47827568  0.59131027  0.29565514  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.40551307 16.35102389 17.09302717  9.30686391  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.6556452  15.76490887 18.91296413 14.75030217  0.36197061]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.62614178  1.63743847  0.77562875  0.51708583  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [21.56697228 14.81240433 11.40964781  6.80551304  0.17013783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [23.00331582  0.97970281  0.2449257   0.1632838   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.95805149 20.53931653 11.08726757 10.94353048  0.40233568]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [27.70829159  0.828       0.621       0.483       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [27.92590161  4.4619905   4.4619905   2.70423667  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [28.63804568  5.62551036  3.44148869  1.5883794   0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [29.76555379  1.22982701  0.58254964  0.19418321  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [28.3325406  17.27031197 21.56468463 16.8217188   0.63239544]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [32.36350056  0.90229208  0.72183366  0.36091683  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [33.03758362  3.04451895  2.34193765  2.34193765  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [31.96179278 25.50277785 14.90750065  7.05545832  0.96728058]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [36.81658358  2.77925284  2.1378868   1.01549623  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [36.91734025 11.56621127  8.98446769  3.30463179  0.25817436]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [40.07033868  1.9902643   1.9902643   1.54245483  0.04975661]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [42.12374272  1.91218408  1.91218408  0.71706903  0.0956092 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [43.57872427  4.94309757  4.94309757  2.33424052  0.4119248 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [46.36776666  4.71305861  4.71305861  1.35282238  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [50.01077482  2.73239999  2.15279999  1.65599999  0.207     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [5.40055346e+01 2.57613142e+00 2.02967930e+00 1.56129177e+00
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [59.6416625   0.9127842   0.69371599  0.54767052  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [66.58957772  0.84507396  0.10140888  0.10140888  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [7.59006211e+01 9.87447615e-01 5.86297022e-01 3.70292856e-01
 3.08577380e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [8.98245330e+01 3.00839999e+00 1.10400000e+00 3.31199999e-01
 5.51999998e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [1.18868092e+02 1.43413806e-01 9.56092042e-02 2.39023011e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [1.93814857e+02 8.00162031e-01 3.70806795e-01 1.75645324e-01
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  45
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '\n', 'module', '``', '    \n']
Probs: [92.9, 3.6, 1.7, 1.7, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.827695 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  78
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  85.0
Iteration TIME (sec):  0.014533899999999988
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.62148545 10.67348886  8.5287022   2.39314998  3.76889128]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.36648709 13.16285635 13.16285635 10.23777716  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.83796364 10.39850573  1.33203959  0.84766156  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [15.05551056  6.21459828  0.83658054  0.83658054  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.21149383  7.80984618  2.84909012  1.42454506  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.38950631  4.80097218  2.92742206  0.58548441  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.53945802  4.76751553  1.0465278   0.23256173  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.73597998  0.6927545   0.11545908  0.11545908  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.56545844 12.49482357  5.96083326  2.17799677  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.93171999  2.84494287  1.36557258  0.34139314  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [16.10773069  0.79070508  0.45183147  0.11295787  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.20469996  2.13012286  1.00900557  0.67267038  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.36683815  1.33510988  0.44503663  0.22251831  0.11125916]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [16.10630169 14.81639995 15.48853326  8.44239997  0.4416    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.28513671 11.8358591  10.90855478 10.73133463  1.14606486]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [18.09995073  6.73118958  3.114431    2.41117239  0.10046552]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.48322192  1.49269822  0.59707929  0.29853964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [18.15295843 16.52118752 17.26974489  9.40444705  0.39420685]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.3717965  15.95583901 19.13161837 14.92083156  0.36615538]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.32650951  1.6582984   0.78550977  0.52367318  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [21.22655985 15.01257497 11.56533609  6.89447777  0.17236194]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [22.64786277  0.9936      0.2484      0.1656      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [22.37234481 20.85195083 11.2564337  11.1032985   0.4082095 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [27.10496254  0.84439763  0.63329822  0.49256528  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [27.29141659  4.55399998  4.55399998  2.75999999  0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [27.95823487  5.74650292  3.51550767  1.622542    0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [29.02611564  1.25746702  0.59564227  0.19854742  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [27.52049525 17.68849417 22.07215841 17.21757811  0.64727737]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [31.42727098  0.92573214  0.74058571  0.37029286  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [32.02597648  3.12794587  2.40611221  2.40611221  0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [30.79575517 26.25663766 15.33969162  7.26000672  0.9953235 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [35.45082654  2.87039999  2.20799999  1.0488      0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [35.44222778 11.97216608  9.29980758  3.42061888  0.26723585]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [38.33928518  2.06539487  2.06539487  1.60068102  0.05163487]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [40.14082721  1.9902643   1.9902643   0.74634911  0.09951321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [41.3241021   5.16289703  5.16289703  2.43803471  0.43024142]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [43.70687866  4.94309757  4.94309757  1.41885208  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [46.7896145   2.88020248  2.26925044  1.74557726  0.21819716]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [5.00418248e+01 2.73239999e+00 2.15279999e+00 1.65599999e+00
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [54.5575628   0.97580735  0.74161359  0.58548441  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [59.82421933  0.9127842   0.1095341   0.1095341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [6.63732388e+01 1.08169467e+00 6.42256208e-01 4.05635500e-01
 3.38029583e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [7.51291777e+01 3.36349344e+00 1.23430952e+00 3.70292856e-01
 6.17154760e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [9.12229330e+01 1.65599999e-01 1.10400000e-01 2.75999999e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [118.18687592   0.97999434   0.45414372   0.21512071   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [1.81305006e+02 7.02581295e+00 3.31774501e+00 3.31774501e+00
 5.85484413e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  46
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [98.98, 0.67, 0.19, 0.15, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.720706 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  79
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  86.0
Iteration TIME (sec):  0.014343267000000104
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.53388887 10.74033366  8.58104294  2.40702343  3.79074011]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.26632952 13.24696491 13.24696491 10.30319493  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.73064756 10.46904696  1.34066129  0.8531481   0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.94660837  6.25589174  0.84213927  0.84213927  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [15.09700039  7.86580537  2.86827613  1.43413806  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.27362637  4.8341973   2.94768128  0.58953626  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.42084209  4.80097218  1.05387194  0.23419377  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.61421001  0.6976852   0.11628087  0.11628087  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.44314897 12.58504008  6.00387233  2.19372258  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.80483579  2.86578522  1.37557691  0.34389423  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.97757877  0.796584    0.45519086  0.11379771  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [16.07178955  2.14619949  1.01662081  0.67774721  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.23057189  1.34534076  0.44844692  0.22422346  0.11211173]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.94206098 14.93754107 15.61425655  8.51199168  0.44503663]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [17.1031025  11.94505353 11.0081947  10.82505986  1.15607435]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.91535941  6.79439463  3.14367513  2.433813    0.10140888]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.29122162  1.50698274  0.6027931   0.30139655  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.9098304  16.6896909  17.44473842  9.50107809  0.39805286]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.09923035 16.14461155 19.34780172 15.08943387  0.37029286]  taking action:  2  corresponding to token:  

Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````

Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.85, 0.09, 0.04, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````
```
API response time: 0.682490 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  52
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  87.0
Iteration TIME (sec):  0.011952892000000048
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.44807378 10.80679539  8.63308373  2.42081737  3.81246372]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.16810424 13.33054281 13.33054281 10.36819996  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.62548138 10.53913743  1.34922791  0.85859958  0.12265708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.83989145  6.29691442  0.84766156  0.84766156  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.98489617  7.92139273  2.88733465  1.44366733  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.16016884  4.86719562  2.96780221  0.59356044  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.30474078  4.8341973   1.06116526  0.2358145   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.49505843  0.7025813   0.11709688  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.32350784 12.67461445  6.04660506  2.20933646  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.68076042  2.88647708  1.385509    0.34637725  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.8503512   0.80241986  0.45852564  0.11463141  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.94191083  2.16215658  1.02417943  0.68278629  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [16.09746179  1.35549441  0.45183147  0.22591574  0.11295787]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.78240325 15.05775387 15.73901641  8.5810501   0.44844692]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.92636804 12.05331063 11.1069793  10.91798053  1.16599792]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.7360146   6.8570171   3.1726497   2.45624493  0.10234354]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [18.10478354  1.52113313  0.60845325  0.30422663  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.67556463 16.8565817  17.61805725  9.59678437  0.40186206]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.32105852 16.331298    9.28079803 15.25617301  0.37438461]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [21.03846079  1.67889917  0.79526803  0.53017869  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.90099722 15.21019536 11.71904084  6.98230905  0.17455773]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [22.30772647  1.00730547  0.25182637  0.16788425  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.82543694 21.16014992 11.42319996 11.26079996  0.414     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [26.53805894  0.86048284  0.64536213  0.50194832  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [26.69683701  4.64418696  4.64418696  2.81465876  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [27.32304159  5.86499998  3.58799999  1.65599999  0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [28.33741588  1.28451242  0.60845325  0.20281775  0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [26.77177289 18.09727542 22.5682239  17.60453829  0.66182475]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [30.56542695  0.94859317  0.75887453  0.37943727  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [31.0992045   3.20920475  2.46861904  2.46861904  0.06171548]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [29.74383099 26.98983198 15.76003497  7.45894785  1.02259769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [34.22243772  2.95874059  2.2759543   1.08107829  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [34.12602654 12.36479996  9.60479997  3.53279999  0.276     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [36.80894827  2.1378868   2.1378868   1.65686227  0.05344717]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [38.4068077   2.06539487  2.06539487  0.77452308  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [39.37789256  5.3737136   5.3737136   2.53758698  0.44780947]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [41.44578655  5.16289703  5.16289703  1.48194267  0.19121841]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [44.10507263  3.02078185  2.38000994  1.83077688  0.22884711]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [4.68187075e+01 2.88020248e+00 2.26925044e+00 1.74557726e+00
 4.36394316e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [50.55414982  1.035       0.7866      0.621       0.0828    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [54.72484406  0.97580735  0.11709688  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [5.96294920e+01 1.16836377e+00 6.93715991e-01 4.38136416e-01
 3.65113680e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [65.69717962  3.68452246  1.35211833  0.4056355   0.06760592]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [7.63017717e+01 1.85146428e-01 1.23430952e-01 3.08577380e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [90.698533  1.1316    0.5244    0.2484    0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [1.10526188e+02 8.60482838e+00 4.06339118e+00 4.06339118e+00
 7.17069032e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [193.17082393   1.30758186   0.37080679   0.29274221   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  47
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '\n', 'module', '``', '\\']
Probs: [99.46, 0.19, 0.19, 0.15, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.750206 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  80
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  88.0
Iteration TIME (sec):  0.01487005500000027
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.36398109 10.87288055  8.68482966  2.43453316  3.83406426]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [14.07174994 13.41359995 13.41359995 10.43279996  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.52239439 10.60878567  1.35774047  0.86401666  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.73528766  6.33767158  0.8531481   0.8531481   0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.87509929  7.97661557  2.9062682   1.4531341   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [15.04905048  4.89997172  2.98778763  0.59755753  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.1910665   4.86719562  1.06840879  0.23742418  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.37843281  0.70744351  0.11790725  0.11790725  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.20643935 12.7635602   6.08903789  2.22484077  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.55939189  2.90702166  1.3953704   0.3488426   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.72594006  0.80821358  0.46183633  0.11545908  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.81495033  2.17799677  1.03168268  0.68778845  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.96738793  1.36557258  0.45519086  0.22759543  0.11379771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.62712112 15.17705937 15.86283464  8.6495873   0.45183147]  taking action:  2  corresponding to token:  module
Leaf selection - depth:  14
Leaf selection - action scores:  [82.76366575 17.54428898 17.54428898 17.54428898 17.54428898]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.86437753e+02 3.41532574e+00 3.41532574e+00 1.24903341e+00
 7.80645884e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module``````
Tokens: ['```', '\n', 'module', '``', 'ver']
Probs: [90.37, 4.5, 2.13, 1.0, 0.78]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module`````````
API response time: 0.859035 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  49
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  89.0
Iteration TIME (sec):  0.012350639000000108
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.28155434 10.93859549  8.73628569  2.44817211  3.85554378]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.97720802 13.49614596 13.49614596 10.49700242  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.42131894 10.67799996  1.3662      0.8694      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.63272824  6.37816829  0.85859958  0.85859958  0.12265708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.76753178  8.03148097  2.92507919  1.46253959  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.94019207  4.93253003  3.00764026  0.60152805  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [15.07973587  4.89997172  1.07560355  0.23902301  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.26424519  0.71227253  0.11871209  0.11871209  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [15.09185269 12.85189039  6.13117707  2.24023777  0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.44063311  2.92742206  1.40516259  0.35129065  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.60424308  0.81396607  0.46512347  0.11628087  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.69080034  2.19372258  1.03913175  0.6927545   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.84023667  1.37557691  0.45852564  0.22926282  0.11463141]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.75062062 15.2954778  11.73929921  8.7176149   0.45519086]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.75468226 12.16065411 11.20493023 11.01011702  1.17583774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.56167247  6.91907282  3.20136205  2.47847384  0.10326974]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.92364442  1.53515308  0.61406123  0.30703062  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.44964258 17.02190534 17.78974856  9.69159194  0.4056355 ]  taking action:  2  corresponding to token:  

Leaf selection - depth:  18
Leaf selection - action scores:  [118.46175238   0.59755753   0.35853452   0.14341381   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [1.83959203e+02 7.12339369e+00 3.37629345e+00 5.85484413e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
``````
Tokens: ['```', 'module', '``', '\n', 'Sure']
Probs: [99.84, 0.07, 0.07, 0.02, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
`````````
API response time: 0.915475 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
`````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  53
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  90.0
Iteration TIME (sec):  0.01249805199999976
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.20073965 11.00394634  8.78745664  2.46173549  3.87690429]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.88442236 13.57819016 13.57819016 10.56081457  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.32219057 10.7467883   1.37460746  0.8747502   0.12496431]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.53214742  6.4184095   0.86401666  0.86401666  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.66211921  8.08599578  2.94376998  1.47188499  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.83351805  4.96487483  3.0273627   0.60547254  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.97066949  4.93253003  1.08275049  0.24061122  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.15241178  0.71706903  0.11951151  0.11951151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.97966141 12.93961762  6.17302859  2.25552968  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.32439199  2.94768128  1.41488702  0.35372175  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.48516291  0.81967818  0.46838753  0.11709688  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.56935882  2.20933646  1.0465278   0.6976852   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.71590014  1.385509    0.46183633  0.23091817  0.11545908]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.59660524 15.41302866 11.83079713  8.78514412  0.45852564]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.58781032 12.26710673 11.30206824 11.10148885  1.1855959 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.39210485  6.98057689  3.22981916  2.50050516  0.10418771]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.74755801  1.54904615  0.61961846  0.30980923  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.61949286 17.18570517 13.21989304  9.78552565  0.40937416]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [19.05142914 16.51596605  9.38653947 15.4211094   0.37843213]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.76126865  1.69925021  0.80490799  0.53660533  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.58924101 15.40536055 11.87083598  7.06904913  0.17672623]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.98183855  1.02082696  0.25520674  0.17013783  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.31335403 21.46409738 11.58766566 11.41612868  0.41971061]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [41.93955573 21.80695613 44.61391226 34.73874183  4.6838753 ]  taking action:  2  corresponding to token:  mod
Adding child.
Leaf selection - depth:  24
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````modulemod
Tokens: ['```', '``', 'module', '\n', 'a']
Probs: [94.12, 4.69, 0.49, 0.3, 0.14]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````modulemod```
API response time: 0.602972 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````modulemod```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro modulemod undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  57
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  91.0
Iteration TIME (sec):  0.011930262999999997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.12148552 11.06893909  8.83834719  2.47522456  3.89814776]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.79333928 13.65974158 13.65974158 10.62424345  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.22494761 10.81515847  1.38296381  0.88006788  0.12572398]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.43348243  6.45839998  0.8694      0.8694      0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.55879069  8.14016664  2.96234285  1.48117142  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.72895632  4.99701028  3.04695749  0.6093915   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.86379168  4.96487483  1.08985057  0.24218902  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [15.04285285  0.72183366  0.12030561  0.12030561  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.86978322 13.02675408  6.21459828  2.2707186   0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.21058082  2.96780221  1.42454506  0.35613626  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.36860721  0.82535076  0.47162901  0.11790725  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.45052862  2.22484077  1.05387194  0.7025813   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.59427615  1.3953704   0.46512347  0.23256173  0.11628087]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.44670146 15.52973074 11.92163439  8.85218574  0.46183633]  taking action:  1  corresponding to token:  

Leaf selection - depth:  14
Leaf selection - action scores:  [90.606533  0.8832    0.8832    0.414     0.      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [1.15354453e+02 4.25460959e+00 2.58144851e+00 4.54143720e-01
 2.39023011e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [1.94907761e+02 1.75645324e-01 3.90322942e-02 3.90322942e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  17
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
`````````
Tokens: ['```', '``', 'module', '\n', 'Certainly']
Probs: [99.86, 0.09, 0.02, 0.01, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
````````````
API response time: 0.659474 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  50
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  92.0
Iteration TIME (sec):  0.011362838999999347
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.04374268 11.13357958  8.88896191  2.48864051  3.91927609]  taking action:  1  corresponding to token:  ``
Leaf selection - depth:  1
Leaf selection - action scores:  [59.92766821  0.54767052  0.          0.          0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [66.48816885  1.08169467  0.30422663  0.20281775  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [75.22175091  2.62290773  1.60460238  0.46286607  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [90.330533    2.37359999  0.3312      0.3312      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [1.18820287e+02 2.15120710e-01 1.43413806e-01 2.39023011e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [1.94946793e+02 1.75645324e-01 3.90322942e-02 0.00000000e+00
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.85, 0.12, 0.03, 0.01, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````
API response time: 0.586015 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  40
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  93.0
Iteration TIME (sec):  0.011141924999999553
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.10825777  9.67313928  8.93930523  2.50198452  3.94029113]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.70390736 13.74080901 13.74080901 10.6872959   0.        ]  taking action:  1  corresponding to token:  

Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```

Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.96, 0.04, 0.0, 0.0, 0.0]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```
```
API response time: 0.598361 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```
```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:12: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:16: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  35
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  94.0
Iteration TIME (sec):  0.010178923999999867
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [11.03089072  9.72909797  8.98938147  2.51525774  3.96119467]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.7900782   6.41070048 13.82140096 10.74997852  0.        ]  taking action:  2  corresponding to token:  module
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```module
Tokens: ['```', '``', 'module', '\n', 'ver']
Probs: [96.53, 2.91, 0.19, 0.15, 0.09]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```module```
API response time: 0.610233 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  35
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  95.0
Iteration TIME (sec):  0.009561215999999817
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.9549731   9.78476291  9.03919484  2.52846128  3.98198849]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.87574949  6.45076285  6.45076285 10.81229776  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.12953107 10.88311799  1.39126998  0.88535362  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.33667327  6.49814435  0.8747502   0.8747502   0.12496431]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.45747844  8.19399997  2.98079999  1.49039999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.62643814  5.02894038  3.06642706  0.61328541  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.75903018  4.99701028  1.0969047   0.2437566   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.93549237  0.72656705  0.12109451  0.12109451  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.76213976 13.11331154  6.25589174  2.2858066   0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [15.09911611  2.98778763  1.43413806  0.35853452  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.25448803  0.83098462  0.47484835  0.11871209  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.33421759  2.24023777  1.06116526  0.70744351  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.4752674   1.40516259  0.46838753  0.23419377  0.11709688]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.56364651 12.31648173 12.01182509  8.91875018  0.46512347]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.42553233 12.37269031 11.39841326 11.19211475  1.19527439]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.22709778  7.04154379  3.25802772  2.52234404  0.10509767]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.57629384  1.56281572  0.62512629  0.31256314  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.3963933  17.34802255 13.34631999  9.87860922  0.41307897]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.79212641 16.69867978  9.49116184 15.58430029  0.38243682]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.49426837  1.71936038  0.81443386  0.54295591  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.29034703 15.59815984 12.02079099  7.15473771  0.17886844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.66923226  1.03417166  0.25854292  0.17236194  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.61239613 19.23463507 11.74992346 11.56937216  0.42534456]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [26.00406294  0.87627283  0.65720462  0.51115915  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [26.13815505  4.73265561  4.73265561  2.86827613  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [26.72779826  5.98114987  3.65905639  1.68879526  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [27.69391659  1.311       0.621       0.207       0.069     ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [26.07860224 18.49726258 23.05361758 17.98317383  0.67605917]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [29.76863606  0.97091606  0.77673285  0.38836642  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [30.24606725  3.28845631  2.52958177  2.52958177  0.06323954]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [28.78870045 27.70397252 16.1694547   7.65271902  1.04916309]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [33.10990817  3.04451895  2.34193765  1.11242038  0.05854844]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [32.94221343 12.74534407  9.90040119  3.64152688  0.28449429]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [35.44346654  2.20799999  2.20799999  1.71119999  0.0552    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [36.8738484   2.1378868   2.1378868   0.80170755  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [37.67597567  5.57656615  5.57656615  2.63337846  0.46471385]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [39.49399131  5.3737136   5.3737136   1.54245483  0.19902643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [41.82387749  3.15510374  2.48583931  1.91218408  0.23902301]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [44.13253428  3.02078185  2.38000994  1.83077688  0.04576942]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [47.2987412   1.09098579  0.8291492   0.65459147  0.08727886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [50.70939982  1.035       0.1242      0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [5.45464107e+01 1.24903341e+00 7.41613590e-01 4.68387530e-01
 3.90322942e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [59.02096924  3.97973911  1.46045472  0.43813642  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [6.67247896e+01 2.02817750e-01 1.35211833e-01 3.38029583e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [75.86204898  1.26516726  0.58629702  0.27771964  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [8.48013330e+01 9.93599997e+00 4.69199998e+00 4.69199998e+00
 8.27999997e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [117.79248796   1.60145417   0.45414372   0.35853452   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [194.10759899   0.37080679   0.37080679   0.29274221   0.        ]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  48
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.46, 0.32, 0.19, 0.02, 0.01]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 2.469568 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  81
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  96.0
Iteration TIME (sec):  0.014601126999999714
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.88046051  9.84013868  9.08874943  2.54159624  4.00267428]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.78491886  6.49059562  6.49059562 10.87425986  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [14.03588454 10.95067418  1.39952684  0.89060799  0.12722971]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.24166246  6.53764711  0.88006788  0.88006788  0.12572398]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.35811781  8.24750201  2.99914355  1.49957177  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.52589775  5.06066903  3.0857738   0.61715476  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.65631615  5.02894038  1.10391374  0.24531417  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.83025776  0.7312698   0.1218783   0.1218783   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.65665634 13.19930139  6.29691442  2.30079565  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.98991839  3.00764026  1.44366733  0.36091683  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.14272166  0.83658054  0.47804602  0.11951151  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.22033798  2.25552968  1.06840879  0.71227253  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.3587816   1.41488702  0.47162901  0.2358145   0.11790725]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.41501262 12.40852834 12.10138286  8.98484749  0.46838753]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.26764229 12.47742578 11.49398438 11.2820127   1.20487514]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [17.06645055  7.10198733  3.28599414  2.54399546  0.10599981]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.40963584  1.57646503  0.63058601  0.31529301  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.18096474 17.50889703 13.47162308  9.97086534  0.41675086]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  18
Leaf selection - action scores:  [73.40253306 18.24359994 18.24359994 14.21399995  1.1592    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [99.05308392 16.34917393  9.91945494  2.84437383  2.84437383]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [177.98726149   8.86033078   4.17645548   1.54177562   1.19048497]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module`````````
Tokens: ['```', '``', '\n', 'mod', 'module']
Probs: [93.51, 3.63, 1.04, 1.04, 0.49]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module````````````
API response time: 0.584028 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  54
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  97.0
Iteration TIME (sec):  0.012026842000000038
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.80731057  9.89522973  9.13804924  2.55466365  4.02325372]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.69572919  6.53020272  6.53020272 10.93587089  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.94395403 11.01783413  1.40773528  0.89583154  0.12797593]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.14839503  6.57691261  0.88535362  0.88535362  0.12647909]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.26064701  8.30067881  3.01737559  1.5086878   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.42727243  5.09219998  3.10499999  0.621       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.55558368  5.06066903  1.11087857  0.2468619   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.72707985  0.7359425   0.12265708  0.12265708  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.55326163 13.28473465  6.33767158  2.31568769  0.1218783 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.88291186  3.0273627   1.4531341   0.36328352  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [15.0332284   0.84213927  0.48122244  0.12030561  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [15.10880623  2.2707186   1.07560355  0.71706903  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.24473087  1.42454506  0.47484835  0.23742418  0.11871209]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.27024497 12.49993793 12.19032083  9.05048735  0.47162901]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [16.11394659 12.58133327 11.58879996 11.37119996  1.2144    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [16.90997463  7.16192078  3.31372454  2.56546416  0.10689434]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.24738126  1.58999716  0.63599887  0.31799943  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.33957523 13.93469311 13.59583175 10.06231568  0.42039067]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.54251355 16.87949994  9.59469997 15.74579995  0.3864    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [20.2368507   1.73923803  0.8238496   0.54923306  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [20.00345887 15.78867724 12.16897119  7.23941211  0.1809853 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.36902998  1.04734636  0.26183659  0.17455773  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [21.11761393 19.49769883 11.91005998 11.7206122   0.43090486]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [25.49991419  0.89178329  0.66883747  0.52020692  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [25.6119038   4.81950057  4.81950057  2.92090944  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [26.16849259  6.09508677  3.72875897  1.72096568  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [27.09088924  1.33696291  0.63329822  0.21109941  0.07036647]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [25.43447816 18.88899993 23.52899992 18.35399994  0.69      ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [29.02912394  0.99273712  0.7941897   0.39709485  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [29.45732647  3.36584234  2.58910949  2.58910949  0.06472774]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [27.91649097 28.40047178 16.56876063  7.8417035   1.07507225]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  31
Leaf selection - action scores:  [142.21416387  24.70744222  19.24292103   7.08436139   0.74161359]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  32
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module```
Tokens: ['```', '\n', '``', 'mod', ' ver']
Probs: [88.09, 3.42, 3.42, 3.42, 0.46]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module``````
API response time: 0.724070 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module``````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  65
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  98.0
Iteration TIME (sec):  0.01294592200000011
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.73548255  9.95004041  9.18709816  2.56766457  4.04372843]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.60813173  6.56958791  6.56958791 10.99713675  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.85368772 11.08460474  1.41589614  0.90102481  0.12871783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [14.05681835  6.61594508  0.89060799  0.89060799  0.12722971]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.16500691  8.35353621  3.03549813  1.51774906  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.3305022   5.12353689  3.12410786  0.62482157  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.45676993  5.09219998  1.1178      0.2484      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.62589245  0.74058571  0.12343095  0.12343095  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.45188767 13.369622    6.37816829  2.33048457  0.12265708]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.7780242   3.04695749  1.46253959  0.3656349   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.92593228  0.84766156  0.48437803  0.12109451  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [14.99954283  2.2858066   1.08275049  0.72183366  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.13303154  1.43413806  0.47804602  0.23902301  0.11951151]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [15.12918084 12.59072355 12.27865169  9.11567915  0.47484835]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [15.96426363 12.6844321  11.68287764 11.45969312  1.22385072]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [16.75749252  7.22135683  3.3412248   2.58675468  0.10778145]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [17.08933971  1.6034151   0.64136604  0.32068302  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [17.12688769 14.06117348 13.7189742  10.152981    0.42399924]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.30200709 17.05848422  9.69718686 15.90565988  0.39032294]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [19.98845627  1.75889107  0.83315893  0.55543928  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.72779752 15.9769919  12.31543815  7.32310751  0.18307769]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [21.08043327  1.06035737  0.26508934  0.17672623  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.65230776 19.75741106 12.06815629 11.86992538  0.43639432]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [25.02293592  0.90702855  0.68027141  0.52909999  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [25.11506724  4.90480809  4.90480809  2.97261096  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [25.64165381  6.20693255  3.79718227  1.75254566  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [26.52426915  1.36243116  0.64536213  0.21512071  0.0717069 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [24.83390953 19.2729778  23.99496594 18.71748077  0.70366469]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  28
Leaf selection - action scores:  [28.34035527  1.01408875  0.811271    0.4056355   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  29
Leaf selection - action scores:  [28.72528621  3.44148869  2.64729899  2.64729899  0.06618247]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  30
Leaf selection - action scores:  [28.59573353 19.05371727 16.95866716  8.02623942  1.10037153]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  31
Leaf selection - action scores:  [32.09615476  3.12794587  2.40611221  1.1429033   0.06015281]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  32
Leaf selection - action scores:  [31.87005882 13.11485085 10.18742878  3.74710024  0.29274221]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  33
Leaf selection - action scores:  [34.21532536  2.2759543   2.2759543   1.76386458  0.05689886]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  34
Leaf selection - action scores:  [35.50602654  2.20799999  2.20799999  0.828       0.1104    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  35
Leaf selection - action scores:  [36.17139988  5.77229436  5.77229436  2.72580567  0.48102453]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  36
Leaf selection - action scores:  [37.78718924  5.57656615  5.57656615  1.60068102  0.20653949]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  37
Leaf selection - action scores:  [39.85472672  3.28393609  2.58734359  1.9902643   0.24878304]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  38
Leaf selection - action scores:  [41.84995273  3.15510374  2.48583931  1.91218408  0.0478046 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  39
Leaf selection - action scores:  [44.58565156  1.14423555  0.86961902  0.68654133  0.09153884]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  40
Leaf selection - action scores:  [47.44420597  1.09098579  0.13091829  0.13091829  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  41
Leaf selection - action scores:  [5.05437998e+01 1.32480000e+00 7.86599997e-01 4.96799998e-01
 4.13999999e-02]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  42
Leaf selection - action scores:  [53.98880651  4.25452007  1.56129177  0.46838753  0.07806459]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  43
Leaf selection - action scores:  [5.99459239e+01 2.19068208e-01 1.46045472e-01 3.65113680e-02
 0.00000000e+00]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  44
Leaf selection - action scores:  [66.33943583  1.38592129  0.64225621  0.30422663  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  45
Leaf selection - action scores:  [70.91709647 11.10878567  5.24581546  5.24581546  0.09257321]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  46
Leaf selection - action scores:  [90.394933    1.84919999  0.5244      0.414       0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  47
Leaf selection - action scores:  [118.36614318   0.45414372   0.45414372   0.35853452   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  48
Leaf selection - action scores:  [1.94107599e+02 6.24516707e-01 3.70806795e-01 3.90322942e-02
 1.95161471e-02]  taking action:  0  corresponding to token:  ```
Adding child.
Leaf selection - depth:  49
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '   ']
Probs: [97.07, 1.38, 0.84, 0.65, 0.02]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.583042 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  82
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  99.0
Iteration TIME (sec):  0.014705232999999929
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.66493732 10.00457496  9.23589997  2.58059999  4.06409998]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.52207966  6.6087549   6.6087549  11.05806318  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.76503612 11.15099271  1.42401022  0.90618832  0.12945547]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.96688189  6.65474861  0.89583154  0.89583154  0.12797593]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [14.07114097  8.40607991  3.05351311  1.52675656  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.23552958  5.1546833   3.14309957  0.62861991  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.35981481  5.12353689  1.12467883  0.24992863  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.52663243  0.7452      0.1242      0.1242      0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.35246945 13.45397376  6.4184095   2.34518809  0.12343095]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.67518647  3.06642706  1.47188499  0.36797125  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.82076075  0.8531481   0.4875132   0.1218783   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [14.89247196  2.30079565  1.08985057  0.72656705  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [15.02360396  1.44366733  0.48122244  0.24061122  0.12030561]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [14.99166682 12.68089779 12.36638771  9.18043193  0.47804602]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [15.81842243 12.78674087 11.77623439 11.54750815  1.23322903]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [16.60883737  7.28030766  3.36850056  2.6078714   0.10866131]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [16.93533191  1.61672168  0.64668867  0.32334434  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [16.92126584 14.18658645 13.84107741 10.24288117  0.42757736]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [18.07007111 17.23568744  9.7986539  16.06392905  0.39420685]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [19.74857042  1.77832692  0.84236538  0.56157692  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.46265272 16.16317851 12.46024995  7.40585712  0.18514643]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [20.80271378  1.07321066  0.26830266  0.17886844  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [20.21375169 20.01389667 12.22428844 12.01738353  0.44181557]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  23
Leaf selection - action scores:  [24.57077537  0.92202178  0.69151633  0.53784604  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [24.64500735  4.98865704  4.98865704  3.02342851  0.07558571]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [25.14426252  6.3167983   3.86439425  1.78356658  0.07431527]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [25.99054021  1.38743198  0.65720462  0.21906821  0.07302274]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [24.27222511 19.6496398  24.45205399 19.07403625  0.71706903]  taking action:  2  corresponding to token:  ``
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', '\n', 'module', '\\']
Probs: [98.53, 0.66, 0.52, 0.24, 0.03]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````
API response time: 0.627786 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  100.0
Iteration TIME (sec):  0.012098947000000138
ROBUST FINAL VALUE, ITERATION:  1.0
Adding child.
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.96, 0.03, 0.01, 0.0, 0.0]
Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.928231 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  83
Trimming the result to last instance of endmodule...
Running getPromptScore: 
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.48, 0.25, 0.15, 0.12, 0.0]
Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.622324 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  83
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [10.59563752 10.05883752  9.28445837  2.59347089  4.08436993]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  1
Leaf selection - action scores:  [13.43752821  6.64770728  6.64770728 11.11865577  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  2
Leaf selection - action scores:  [13.67795167 11.21700453  1.43207833  0.91132257  0.13018894]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  3
Leaf selection - action scores:  [13.87853733  6.69332719  0.90102481  0.90102481  0.12871783]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  4
Leaf selection - action scores:  [13.97899506  8.45831544  3.07142244  1.53571122  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  5
Leaf selection - action scores:  [14.14229966  5.18564264  3.16197722  0.63239544  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  6
Leaf selection - action scores:  [14.26466075  5.1546833   1.13151585  0.25144797  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  7
Leaf selection - action scores:  [14.42923943  0.74978589  0.12496431  0.12496431  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  8
Leaf selection - action scores:  [14.25494494 13.53779995  6.45839998  2.35979999  0.1242    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  9
Leaf selection - action scores:  [14.57433268  3.0857738   1.48117142  0.37029286  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  10
Leaf selection - action scores:  [14.71764469  0.85859958  0.49062833  0.12265708  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  11
Leaf selection - action scores:  [14.78752121  2.31568769  1.0969047   0.7312698   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  12
Leaf selection - action scores:  [14.91637219  1.4531341   0.48437803  0.24218902  0.12109451]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  13
Leaf selection - action scores:  [14.85755821 12.77047284 12.45354074  9.24475444  0.48122244]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  14
Leaf selection - action scores:  [15.67626203 12.88827746 11.86888653 11.63466039  1.24253655]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  15
Leaf selection - action scores:  [16.46385176  7.33878496  3.39555722  2.62881849  0.1095341 ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  16
Leaf selection - action scores:  [16.78518933  1.62991962  0.65196785  0.32598392  0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  17
Leaf selection - action scores:  [16.72233315 14.3109586  13.96216726 10.33203524  0.43112578]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  18
Leaf selection - action scores:  [17.84621262 17.41116171  9.89913095 16.22065402  0.39805286]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  19
Leaf selection - action scores:  [19.51671848  1.79755263  0.8514723   0.5676482   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  20
Leaf selection - action scores:  [19.20737515 16.34730762 12.60346148  7.48769228  0.18719231]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  21
Leaf selection - action scores:  [20.53520552  1.08591182  0.27147795  0.1809853   0.        ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  22
Leaf selection - action scores:  [19.79955308 20.26727302 12.37852787 12.1630541   0.44717111]  taking action:  1  corresponding to token:  module
Leaf selection - depth:  23
Leaf selection - action scores:  [44.53416653 23.16009992 23.16009992 36.84599987  4.96799998]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  24
Leaf selection - action scores:  [49.35006897 26.43391342 20.58600163 16.02260225 12.47329163]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  25
Leaf selection - action scores:  [69.31249409  8.45502021  8.45502021  5.12238451  4.01150594]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  26
Leaf selection - action scores:  [81.54453303  9.57719997  9.57719997  7.45199997  0.7728    ]  taking action:  0  corresponding to token:  ```
Leaf selection - depth:  27
Leaf selection - action scores:  [50.56726622 61.93086205 22.77889291 22.77889291 13.81553001]  taking action:  1  corresponding to token:  module
Adding child.
Leaf selection - depth:  28
Getting LLM token estimates (probs/ids).
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````module
Tokens: ['```', 'mod', 'module', '``', '\n']
Probs: [63.35, 11.01, 11.01, 11.01, 1.16]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  ```

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````module```
API response time: 0.746904 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````module```mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro module undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  61
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  101.0
Iteration TIME (sec):  0.012461173000000159
MCTS EXECUTION TIME (sec):  1.2608017549999997
----
 Tree depth: 0
 Node: action=None
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );

• Child Action scores:[10.52754717 10.11283211  9.33277698  2.60627824  4.10453979]
• Child averaged monte carlo:-0.9901960784313726
• Child probablities:[76.8485  6.307   1.411   0.187   0.2945]
• Child visitation:[1 1 1 0 0]
• N=101.0,Q=-0.9901960784313726,M=-0.9901960784313726
----
 Tree depth: 1
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```
• Child Action scores:[13.35443432  6.68644852  6.68644852 11.17891992  0.        ]
• Child averaged monte carlo:-0.989247311827957
• Child probablities:[97.    1.08  1.08  0.84  0.  ]
• Child visitation:[1 1 1 0 0]
• N=92.0,Q=-0.989247311827957,M=-0.989247311827957
----
 Tree depth: 1
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``
• Child Action scores:[54.81963677  0.58548441  0.          0.          0.        ]
• Child averaged monte carlo:-0.875
• Child probablities:[99.85  0.15  0.    0.    0.  ]
• Child visitation:[1 0 0 0 0]
• N=7.0,Q=-0.875,M=-0.875
----
 Tree depth: 1
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );


• Child Action scores:[1.92760985e+02 2.14677618e+00 1.75645324e-01 7.80645884e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.877e+01 1.100e+00 9.000e-02 4.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````
• Child Action scores:[13.5923887  11.28264652  1.44010124  0.91642806  0.13091829]
• Child averaged monte carlo:-0.9888888888888889
• Child probablities:[9.801e+01 1.800e+00 1.100e-01 7.000e-02 1.000e-02]
• Child visitation:[1 1 0 0 0]
• N=89.0,Q=-0.9888888888888889,M=-0.9888888888888889
----
 Tree depth: 2
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```

• Child Action scores:[1.95083406e+02 7.80645884e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.996e+01 4.000e-02 0.000e+00 0.000e+00 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```module
• Child Action scores:[1.88389368e+02 5.67919880e+00 3.70806795e-01 2.92742206e-01
 1.75645324e-01]
• Child averaged monte carlo:-0.5
• Child probablities:[9.653e+01 2.910e+00 1.900e-01 1.500e-01 9.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````
• Child Action scores:[59.73294092  1.16836377  0.32860231  0.21906821  0.        ]
• Child averaged monte carlo:-0.8571428571428571
• Child probablities:[9.953e+01 3.200e-01 9.000e-02 6.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=6.0,Q=-0.8571428571428571,M=-0.8571428571428571
----
 Tree depth: 3
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````
• Child Action scores:[13.79173828  6.73168468  0.90618832  0.90618832  0.12945547]
• Child averaged monte carlo:-0.9886363636363636
• Child probablities:[9.933e+01 5.200e-01 7.000e-02 7.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=87.0,Q=-0.9886363636363636,M=-0.9886363636363636
----
 Tree depth: 3
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````
• Child Action scores:[1.93385502e+02 1.67838865e+00 5.85484413e-02 5.85484413e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.909e+01 8.600e-01 3.000e-02 3.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````
• Child Action scores:[65.77830672  2.87325146  1.75775383  0.50704438  0.        ]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[98.48  0.85  0.52  0.15  0.  ]
• Child visitation:[1 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 4
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````
• Child Action scores:[13.88851725  8.51024813  3.08922793  1.54461397  0.        ]
• Child averaged monte carlo:-0.9885057471264368
• Child probablities:[98.24  1.4   0.24  0.12  0.  ]
• Child visitation:[1 1 0 0 0]
• N=86.0,Q=-0.9885057471264368,M=-0.9885057471264368
----
 Tree depth: 4
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````
• Child Action scores:[75.5534716   2.65376547  0.37029286  0.37029286  0.        ]
• Child averaged monte carlo:-0.8
• Child probablities:[98.91  0.86  0.12  0.12  0.  ]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 5
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````
• Child Action scores:[14.05075979  5.21641824  3.18074283  0.63614857  0.        ]
• Child averaged monte carlo:-0.9882352941176471
• Child probablities:[9.929e+01 4.100e-01 2.500e-01 5.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=84.0,Q=-0.9882352941176471,M=-0.9882352941176471
----
 Tree depth: 5
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````module
• Child Action scores:[1.91472919e+02 2.12726003e+00 6.05000560e-01 4.68387530e-01
 9.75807355e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.811e+01 1.090e+00 3.100e-01 2.400e-01 5.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 5
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````
• Child Action scores:[9.11861330e+01 2.48399999e-01 1.65599999e-01 2.75999999e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.75
• Child probablities:[9.984e+01 9.000e-02 6.000e-02 1.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 6
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````
• Child Action scores:[14.1712527   5.18564264  1.1383118   0.25295818  0.        ]
• Child averaged monte carlo:-0.9880952380952381
• Child probablities:[9.948e+01 4.100e-01 9.000e-02 2.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=83.0,Q=-0.9880952380952381,M=-0.9880952380952381
----
 Tree depth: 6
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````
• Child Action scores:[1.18880043e+02 2.15120710e-01 4.78046021e-02 0.00000000e+00
 0.00000000e+00]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.989e+01 9.000e-02 2.000e-02 0.000e+00 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 7
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````
• Child Action scores:[14.33365562  0.7543439   0.12572398  0.12572398  0.        ]
• Child averaged monte carlo:-0.9879518072289156
• Child probablities:[9.993e+01 6.000e-02 1.000e-02 1.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=82.0,Q=-0.9879518072289156,M=-0.9879518072289156
----
 Tree depth: 7
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````
• Child Action scores:[1.94868729e+02 2.34193765e-01 5.85484413e-02 1.95161471e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.985e+01 1.200e-01 3.000e-02 1.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 8
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````
• Child Action scores:[14.1592548  13.62111028  6.49814435  2.37432198  0.12496431]
• Child averaged monte carlo:-0.9878048780487805
• Child probablities:[9.818e+01 1.090e+00 5.200e-01 1.900e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=81.0,Q=-0.9878048780487805,M=-0.9878048780487805
----
 Tree depth: 9
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````
• Child Action scores:[14.47539993  3.10499999  1.49039999  0.3726      0.        ]
• Child averaged monte carlo:-0.9876543209876543
• Child probablities:[9.96e+01 2.50e-01 1.20e-01 3.00e-02 0.00e+00]
• Child visitation:[1 0 0 0 0]
• N=80.0,Q=-0.9876543209876543,M=-0.9876543209876543
----
 Tree depth: 10
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````
• Child Action scores:[14.61651795  0.86401666  0.49372381  0.12343095  0.        ]
• Child averaged monte carlo:-0.9875
• Child probablities:[9.987e+01 7.000e-02 4.000e-02 1.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=79.0,Q=-0.9875,M=-0.9875
----
 Tree depth: 11
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````
• Child Action scores:[14.68462163  2.33048457  1.10391374  0.7359425   0.        ]
• Child averaged monte carlo:-0.9873417721518988
• Child probablities:[9.966e+01 1.900e-01 9.000e-02 6.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=78.0,Q=-0.9873417721518988,M=-0.9873417721518988
----
 Tree depth: 12
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````
• Child Action scores:[14.81126374  1.46253959  0.4875132   0.2437566   0.1218783 ]
• Child averaged monte carlo:-0.9871794871794872
• Child probablities:[9.981e+01 1.200e-01 4.000e-02 2.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=77.0,Q=-0.9871794871794872,M=-0.9871794871794872
----
 Tree depth: 13
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
• Child Action scores:[14.72671833 12.8594605  12.54012227  9.30865516  0.48437803]
• Child averaged monte carlo:-0.987012987012987
• Child probablities:[8.823e+01 5.640e+00 4.390e+00 1.620e+00 4.000e-02]
• Child visitation:[1 1 1 1 0]
• N=76.0,Q=-0.987012987012987,M=-0.987012987012987
----
 Tree depth: 14
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````
• Child Action scores:[15.53763073 12.9890591  11.96084978 11.72116463  1.25177486]
• Child averaged monte carlo:-0.9852941176470589
• Child probablities:[92.92  3.6   2.19  1.03  0.11]
• Child visitation:[1 1 1 0 0]
• N=67.0,Q=-0.9852941176470589,M=-0.9852941176470589
----
 Tree depth: 14
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````

• Child Action scores:[75.78490463  0.98744762  0.98744762  0.46286607  0.        ]
• Child averaged monte carlo:-0.8
• Child probablities:[99.21  0.32  0.32  0.15  0.  ]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 14
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module
• Child Action scores:[63.42973309 20.25839993 20.25839993 20.25839993 20.25839993]
• Child averaged monte carlo:-0.75
• Child probablities:[69.67  7.34  7.34  7.34  7.34]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 14
 Node: action=3
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````
• Child Action scores:[1.93385502e+02 1.01483965e+00 6.24516707e-01 1.36613030e-01
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.909e+01 5.200e-01 3.200e-01 7.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 15
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````
• Child Action scores:[16.32238724  7.39679997  3.42239999  2.64959999  0.1104    ]
• Child averaged monte carlo:-0.984375
• Child probablities:[9.876e+01 6.700e-01 3.100e-01 2.400e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=63.0,Q=-0.984375,M=-0.984375
----
 Tree depth: 15
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````
• Child Action scores:[96.29236815 20.41256511 12.38139195  9.63262733  2.1512071 ]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[80.99  8.54  5.18  4.03  0.9 ]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 15
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````

• Child Action scores:[1.76874841e+02 1.12998492e+01 5.34742430e+00 1.52225947e+00
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.063e+01 5.790e+00 2.740e+00 7.800e-01 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 15
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
```
• Child Action scores:[8.85181330e+01 4.91279998e+00 2.98079999e+00 5.24399998e-01
 2.75999999e-02]
• Child averaged monte carlo:-0.75
• Child probablities:[9.694e+01 1.780e+00 1.080e+00 1.900e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 15
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module```
• Child Action scores:[1.13669341e+02 4.18290269e+00 4.18290269e+00 1.52974727e+00
 9.56092042e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.553e+01 1.750e+00 1.750e+00 6.400e-01 4.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 16
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````
• Child Action scores:[16.63875299  1.64301156  0.65720462  0.32860231  0.        ]
• Child averaged monte carlo:-0.9841269841269841
• Child probablities:[9.975e+01 1.500e-01 6.000e-02 3.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=62.0,Q=-0.9841269841269841,M=-0.9841269841269841
----
 Tree depth: 16
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````
• Child Action scores:[1.91082596e+02 2.12726003e+00 1.28806571e+00 6.05000560e-01
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.791e+01 1.090e+00 6.600e-01 3.100e-01 2.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 16
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
``````
• Child Action scores:[1.18856140e+02 2.15120710e-01 4.78046021e-02 4.78046021e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.987e+01 9.000e-02 2.000e-02 2.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 16
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````module``````
• Child Action scores:[176.36742128   8.78226619   4.15693933   1.95161471   1.52225947]
• Child averaged monte carlo:-0.5
• Child probablities:[90.37  4.5   2.13  1.    0.78]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 17
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
• Child Action scores:[16.52974025 14.43431541 14.08226858 10.42046148  0.43464523]
• Child averaged monte carlo:-0.9838709677419355
• Child probablities:[8.541e+01 7.010e+00 5.460e+00 2.010e+00 4.000e-02]
• Child visitation:[1 1 1 1 0]
• N=61.0,Q=-0.9838709677419355,M=-0.9838709677419355
----
 Tree depth: 17
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````
`````````
• Child Action scores:[1.94888245e+02 1.75645324e-01 3.90322942e-02 1.95161471e-02
 1.95161471e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.986e+01 9.000e-02 2.000e-02 1.000e-02 1.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 18
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````
• Child Action scores:[17.62997714 17.58495669  9.99864644 16.37587913  0.40186206]
• Child averaged monte carlo:-0.9811320754716981
• Child probablities:[8.891e+01 7.300e+00 2.090e+00 1.630e+00 4.000e-02]
• Child visitation:[1 1 1 0 0]
• N=52.0,Q=-0.9811320754716981,M=-0.9811320754716981
----
 Tree depth: 18
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module
• Child Action scores:[61.35891213 20.39696481 20.39696481 15.89173506  1.296025  ]
• Child averaged monte carlo:-0.8
• Child probablities:[80.51  6.61  6.61  5.15  0.42]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 18
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````

• Child Action scores:[90.910133  0.69      0.414     0.1656    0.      ]
• Child averaged monte carlo:-0.75
• Child probablities:[9.954e+01 2.500e-01 1.500e-01 6.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 18
 Node: action=3
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````
• Child Action scores:[1.85969366e+02 4.37161695e+00 3.41532574e+00 1.24903341e+00
 7.80645884e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.529e+01 2.240e+00 1.750e+00 6.400e-01 4.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 19
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````
• Child Action scores:[19.29246213  1.81657488  0.86048284  0.57365523  0.        ]
• Child averaged monte carlo:-0.9791666666666666
• Child probablities:[9.965e+01 1.900e-01 9.000e-02 6.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=47.0,Q=-0.9791666666666666,M=-0.9791666666666666
----
 Tree depth: 19
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module
• Child Action scores:[81.88493303 12.33719996 12.33719996  2.75999999  0.4692    ]
• Child averaged monte carlo:-0.75
• Child probablities:[89.73  4.47  4.47  1.    0.17]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 19
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````

• Child Action scores:[1.94868729e+02 1.75645324e-01 7.80645884e-02 1.95161471e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.985e+01 9.000e-02 4.000e-02 1.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 19
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module```
• Child Action scores:[75.96933305 18.87839993 11.45399996  3.28439999  3.28439999]
• Child averaged monte carlo:-0.75
• Child probablities:[83.3   6.84  4.15  1.19  1.19]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 19
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
```
• Child Action scores:[1.12151545e+02 8.72433989e+00 4.13509808e+00 7.17069032e-01
 4.78046021e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.426e+01 3.650e+00 1.730e+00 3.000e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 20
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````
• Child Action scores:[18.96137024 16.52944597 12.74512464  7.56864265  0.18921607]
• Child averaged monte carlo:-0.9787234042553191
• Child probablities:[9.273e+01 3.600e+00 2.800e+00 8.000e-01 2.000e-02]
• Child visitation:[1 1 1 0 0]
• N=46.0,Q=-0.9787234042553191,M=-0.9787234042553191
----
 Tree depth: 20
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module```
• Child Action scores:[74.8281018  43.16755572 20.38866281 12.35748965  4.5414372 ]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[63.03 18.06  8.53  5.17  1.9 ]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 20
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module``````
• Child Action scores:[108.49449284  10.85164468   5.11509243   1.88828178   1.45804036]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[91.2   4.54  2.14  0.79  0.61]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 20
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````
``````
• Child Action scores:[1.94849213e+02 1.36613030e-01 1.36613030e-01 3.90322942e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.984e+01 7.000e-02 7.000e-02 2.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 21
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````
• Child Action scores:[20.27729809  1.09846613  0.27461653  0.18307769  0.        ]
• Child averaged monte carlo:-0.9772727272727273
• Child probablities:[9.984e+01 1.200e-01 3.000e-02 2.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=43.0,Q=-0.9772727272727273,M=-0.9772727272727273
----
 Tree depth: 21
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````module
• Child Action scores:[61.10505655 61.10505655 37.06116333 17.50598394  8.27484637]
• Child averaged monte carlo:-0.5
• Child probablities:[31.31 31.31 18.99  8.97  4.24]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 21
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````

• Child Action scores:[1.94049051e+02 8.00162031e-01 2.34193765e-01 7.80645884e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.943e+01 4.100e-01 1.200e-01 4.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 21
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````module``````
• Child Action scores:[179.35339179   6.94774837   4.21548777   1.56129177   1.21000112]
• Child averaged monte carlo:-0.5
• Child probablities:[91.9   3.56  2.16  0.8   0.62]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 21
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````module`````````
• Child Action scores:[182.49549147   7.08436139   2.0296793    2.0296793    0.95629121]
• Child averaged monte carlo:-0.5
• Child probablities:[93.51  3.63  1.04  1.04  0.49]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 22
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````
• Child Action scores:[20.04534037 18.36588549 12.53094179 12.30700058  0.45246326]
• Child averaged monte carlo:-0.9767441860465116
• Child probablities:[7.431e+01 2.129e+01 2.880e+00 1.360e+00 5.000e-02]
• Child visitation:[1 1 1 0 0]
• N=42.0,Q=-0.9767441860465116,M=-0.9767441860465116
----
 Tree depth: 23
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````
• Child Action scores:[24.14135521  0.93677506  0.7025813   0.54645212  0.        ]
• Child averaged monte carlo:-0.96875
• Child probablities:[9.971e+01 1.200e-01 9.000e-02 7.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=31.0,Q=-0.96875,M=-0.96875
----
 Tree depth: 23
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module
• Child Action scores:[40.13275178 24.43993514 24.43993514 38.83909409  5.23673179]
• Child averaged monte carlo:-0.9
• Child probablities:[65.75 11.43 11.43  8.9   1.2 ]
• Child visitation:[1 1 1 0 0]
• N=9.0,Q=-0.9,M=-0.9
----
 Tree depth: 23
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````

• Child Action scores:[1.94010018e+02 6.24516707e-01 3.70806795e-01 1.36613030e-01
 0.00000000e+00]
• Child averaged monte carlo:-0.5
• Child probablities:[9.941e+01 3.200e-01 1.900e-01 7.000e-02 0.000e+00]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 24
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````
• Child Action scores:[24.19940548  5.07111976  5.07111976  3.07340592  0.07683515]
• Child averaged monte carlo:-0.967741935483871
• Child probablities:[9.826e+01 6.600e-01 6.600e-01 4.000e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=30.0,Q=-0.967741935483871,M=-0.967741935483871
----
 Tree depth: 24
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```
• Child Action scores:[44.30688795 28.55188975 22.23542309 17.30638842 13.47269478]
• Child averaged monte carlo:-0.8571428571428571
• Child probablities:[74.18  7.82  6.09  4.74  3.69]
• Child visitation:[1 0 0 0 0]
• N=6.0,Q=-0.8571428571428571,M=-0.8571428571428571
----
 Tree depth: 24
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module mod
• Child Action scores:[127.90882805  47.05343064   6.36226395   3.86419712   3.86419712]
• Child averaged monte carlo:-0.5
• Child probablities:[65.54 24.11  3.26  1.98  1.98]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 24
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````modulemod
• Child Action scores:[183.68597644   9.15307299   0.95629121   0.58548441   0.27322606]
• Child averaged monte carlo:-0.5
• Child probablities:[94.12  4.69  0.49  0.3   0.14]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 25
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````
• Child Action scores:[24.6736778   6.42478558  3.93045706  1.8140571   0.07558571]
• Child averaged monte carlo:-0.9666666666666667
• Child probablities:[9.837e+01 8.500e-01 5.200e-01 2.400e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=29.0,Q=-0.9666666666666667,M=-0.9666666666666667
----
 Tree depth: 25
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module``````
• Child Action scores:[60.59969351  9.26201058  9.26201058  5.61129108  4.39438458]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[90.82  2.74  2.74  1.66  1.3 ]
• Child visitation:[1 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 26
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````
• Child Action scores:[25.48664361  1.41199021  0.66883747  0.22294582  0.07431527]
• Child averaged monte carlo:-0.9655172413793104
• Child probablities:[9.966e+01 1.900e-01 9.000e-02 3.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=28.0,Q=-0.9655172413793104,M=-0.9655172413793104
----
 Tree depth: 26
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module`````````
• Child Action scores:[68.18618665 10.70763508 10.70763508  8.33158926  0.86401666]
• Child averaged monte carlo:-0.8
• Child probablities:[89.36  3.47  3.47  2.7   0.28]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 27
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[24.73524034 20.0193888  11.95037648 19.42404776  0.73022736]
• Child averaged monte carlo:-0.9642857142857143
• Child probablities:[87.97  5.62  3.41  2.66  0.1 ]
• Child visitation:[1 1 1 0 0]
• N=27.0,Q=-0.9642857142857143,M=-0.9642857142857143
----
 Tree depth: 27
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````
• Child Action scores:[58.4673998  35.25579988 26.30279991 26.30279991 15.95279994]
• Child averaged monte carlo:-0.75
• Child probablities:[42.73 25.91  9.53  9.53  5.78]
• Child visitation:[1 1 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 28
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[27.69679159  1.035       0.828       0.414       0.        ]
• Child averaged monte carlo:-0.96
• Child probablities:[9.967e+01 1.500e-01 1.200e-01 6.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=24.0,Q=-0.96,M=-0.96
----
 Tree depth: 28
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````module
• Child Action scores:[86.96395145 31.98696509 31.98696509 31.98696509  7.14290984]
• Child averaged monte carlo:-0.5
• Child probablities:[44.56 16.39 16.39 16.39  3.66]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 28
 Node: action=2
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.92292597e+02 1.28806571e+00 1.01483965e+00 4.68387530e-01
 5.85484413e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.853e+01 6.600e-01 5.200e-01 2.400e-01 3.000e-02]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 28
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module```````````````
• Child Action scores:[157.67095237  12.93920552  12.93920552   6.10855404   2.88838977]
• Child averaged monte carlo:-0.5
• Child probablities:[80.79  6.63  6.63  3.13  1.48]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 28
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````module````````````module
• Child Action scores:[123.63479184  21.48727795  21.48727795  21.48727795   2.26387306]
• Child averaged monte carlo:-0.5
• Child probablities:[63.35 11.01 11.01 11.01  1.16]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 29
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[28.04347711  3.51550767  2.70423667  2.70423667  0.06760592]
• Child averaged monte carlo:-0.9583333333333334
• Child probablities:[9.866e+01 5.200e-01 4.000e-01 4.000e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=23.0,Q=-0.9583333333333334,M=-0.9583333333333334
----
 Tree depth: 30
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[27.74672108 19.4969273  17.3398084   8.20662687  1.12510207]
• Child averaged monte carlo:-0.9565217391304348
• Child probablities:[86.72  9.14  2.62  1.24  0.17]
• Child visitation:[1 1 0 0 0]
• N=22.0,Q=-0.9565217391304348,M=-0.9565217391304348
----
 Tree depth: 31
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[31.16741634  3.20920475  2.46861904  1.17259404  0.06171548]
• Child averaged monte carlo:-0.95
• Child probablities:[9.887e+01 5.200e-01 4.000e-01 1.900e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=19.0,Q=-0.95,M=-0.95
----
 Tree depth: 31
 Node: action=1
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module
• Child Action scores:[86.58803392 30.26031314 23.56766885  8.67653529  0.90828744]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[72.87 12.66  9.86  3.63  0.38]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 32
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[30.89309865 13.47422837 10.46658811  3.84977953  0.30076403]
• Child averaged monte carlo:-0.9473684210526315
• Child probablities:[9.527e+01 2.240e+00 1.740e+00 6.400e-01 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=18.0,Q=-0.9473684210526315,M=-0.9473684210526315
----
 Tree depth: 32
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````module```
• Child Action scores:[171.91773975   6.67452231   6.67452231   6.67452231   0.89774277]
• Child averaged monte carlo:-0.5
• Child probablities:[88.09  3.42  3.42  3.42  0.46]
• Child visitation:[0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 33
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[33.10302012  2.34193765  2.34193765  1.81500168  0.05854844]
• Child averaged monte carlo:-0.9444444444444444
• Child probablities:[9.885e+01 4.000e-01 4.000e-01 3.100e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=17.0,Q=-0.9444444444444444,M=-0.9444444444444444
----
 Tree depth: 34
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[34.2757804   2.2759543   2.2759543   0.85348286  0.11379771]
• Child averaged monte carlo:-0.9411764705882353
• Child probablities:[9.902e+01 4.000e-01 4.000e-01 1.500e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=16.0,Q=-0.9411764705882353,M=-0.9411764705882353
----
 Tree depth: 35
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[34.82890654  5.96159998  5.96159998  2.81519999  0.4968    ]
• Child averaged monte carlo:-0.9375
• Child probablities:[9.718e+01 1.080e+00 1.080e+00 5.100e-01 9.000e-02]
• Child visitation:[1 0 0 0 0]
• N=15.0,Q=-0.9375,M=-0.9375
----
 Tree depth: 36
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[36.27829422  5.77229436  5.77229436  1.65686227  0.21378868]
• Child averaged monte carlo:-0.9333333333333333
• Child probablities:[9.746e+01 1.080e+00 1.080e+00 3.100e-01 4.000e-02]
• Child visitation:[1 0 0 0 0]
• N=14.0,Q=-0.9333333333333333,M=-0.9333333333333333
----
 Tree depth: 37
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[38.13274569  3.40790154  2.68501333  2.06539487  0.25817436]
• Child averaged monte carlo:-0.9285714285714286
• Child probablities:[9.833e+01 6.600e-01 5.200e-01 4.000e-01 5.000e-02]
• Child visitation:[1 0 0 0 0]
• N=13.0,Q=-0.9285714285714286,M=-0.9285714285714286
----
 Tree depth: 38
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[39.87960502  3.28393609  2.58734359  1.9902643   0.04975661]
• Child averaged monte carlo:-0.9230769230769231
• Child probablities:[9.839e+01 6.600e-01 5.200e-01 4.000e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=12.0,Q=-0.9230769230769231,M=-0.9230769230769231
----
 Tree depth: 39
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[42.28019415  1.19511505  0.90828744  0.71706903  0.0956092 ]
• Child averaged monte carlo:-0.9166666666666666
• Child probablities:[9.938e+01 2.500e-01 1.900e-01 1.500e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=11.0,Q=-0.9166666666666666,M=-0.9166666666666666
----
 Tree depth: 40
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[44.72295982  1.14423555  0.13730827  0.13730827  0.        ]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[9.968e+01 2.500e-01 3.000e-02 3.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 41
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[4.72890435e+01 1.39646181e+00 8.29149200e-01 5.23673179e-01
 4.36394316e-02]
• Child averaged monte carlo:-0.9
• Child probablities:[9.936e+01 3.200e-01 1.900e-01 1.200e-01 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=9.0,Q=-0.9,M=-0.9
----
 Tree depth: 42
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[50.02629982  4.51259998  1.65599999  0.4968      0.0828    ]
• Child averaged monte carlo:-0.8888888888888888
• Child probablities:[9.836e+01 1.090e+00 4.000e-01 1.200e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=8.0,Q=-0.8888888888888888,M=-0.8888888888888888
----
 Tree depth: 43
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[5.48363649e+01 2.34193765e-01 1.56129177e-01 3.90322942e-02
 0.00000000e+00]
• Child averaged monte carlo:-0.875
• Child probablities:[9.988e+01 6.000e-02 4.000e-02 1.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=7.0,Q=-0.875,M=-0.875
----
 Tree depth: 44
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[59.5990659   1.49696609  0.69371599  0.32860231  0.        ]
• Child averaged monte carlo:-0.8571428571428571
• Child probablities:[9.931e+01 4.100e-01 1.900e-01 9.000e-02 0.000e+00]
• Child visitation:[1 0 0 0 0]
• N=6.0,Q=-0.8571428571428571,M=-0.8571428571428571
----
 Tree depth: 45
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[62.00589657 12.169065    5.74650292  5.74650292  0.10140888]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[9.29e+01 3.60e+00 1.70e+00 1.70e+00 3.00e-02]
• Child visitation:[1 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 46
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[75.60747264  2.06746844  0.58629702  0.46286607  0.        ]
• Child averaged monte carlo:-0.8
• Child probablities:[98.98  0.67  0.19  0.15  0.  ]
• Child visitation:[1 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 47
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[90.836533  0.5244    0.5244    0.414     0.      ]
• Child averaged monte carlo:-0.75
• Child probablities:[99.46  0.19  0.19  0.15  0.  ]
• Child visitation:[1 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 48
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.18366143e+02 7.64873634e-01 4.54143720e-01 4.78046021e-02
 2.39023011e-02]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.946e+01 3.200e-01 1.900e-01 2.000e-02 1.000e-02]
• Child visitation:[1 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 49
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[1.89443240e+02 2.69322830e+00 1.63935636e+00 1.26854956e+00
 3.90322942e-02]
• Child averaged monte carlo:-0.5
• Child probablities:[9.707e+01 1.380e+00 8.400e-01 6.500e-01 2.000e-02]
• Child visitation:[1 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 50
 Node: action=0
• state:// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
• Child Action scores:[0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.0
• Child probablities:[0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0]
• N=0.0,Q=0.0,M=0.0
END ROBUST/MAX VALUES:
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', '\\']
Probs: [99.48, 0.25, 0.15, 0.12, 0.0]
Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.604566 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );

endmodule
```
Depth of rollout:  83
Trimming the result to last instance of endmodule...
Running getPromptScore: 
getLLMestimates: prior state:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
Tokens: ['```', '``', 'module', '\n', "Here's"]
Probs: [99.96, 0.03, 0.01, 0.0, 0.0]
Getting terminal state (rollout). Temp:  0
Current prompt:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
API response time: 0.661033 seconds
Initiating comile/functionality check.
VERILOG CODE:
// create one instance of module mod_a, then connect the module's three pins (in1, in2, and out) 
// to your top-level module's three ports (wires a, b, and out). 
//The module mod_a is provided for you — you must instantiate it.


//Hint: When connecting modules, only the ports on the module are important. 
// You do not need to know the code inside the module. 
// The code for module mod_a looks like this:

module top_module ( input a, input b, output out );
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
Compilation check...
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: warning: macro mod_a undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:11: syntax error\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/github_mcts/MCTS/mcts_dump_gpt4o//91430_top_module/91430_top_module.v:15: error: invalid module item.\n'
Rollout raw response:  ```verilog
    mod_a instance_name (
        .in1(a),
        .in2(b),
        .out(out)
    );
endmodule
```
Depth of rollout:  83
Trimming the result to last instance of endmodule...
Running getPromptScore: 
MCTS Total Time:  119.542818
