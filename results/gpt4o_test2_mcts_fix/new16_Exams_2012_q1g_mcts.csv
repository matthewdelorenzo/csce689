Area,Delay,Score,Current Run,Episode,Verilog
N/A,N/A,-0.1,2.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1]); 

endmodule"
N/A,N/A,-0.1,3.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (~x[4] & ~x[3] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,4.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (~x[4] & ~x[3] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,5.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & x[3] & ~x[2] & x[1]) | (~x[4] & ~x[3] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,6.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1] & ~x[2]);

endmodule"
N/A,N/A,-0.1,7.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[2] & ~x[1]) | (~x[4] & x[3] & x[2] & x[1]) | (x[4] & x[3] & ~x[2] & x[1]) | (x[4] & x[3] & x[2] & ~x[1]) | (~x[4] & ~x[3] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,8.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & x[3] & x[1]) | (~x[3] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,9.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [3:0] row1, row2, row3, row4;

// Assign the values from the Karnaugh map to the corresponding rows
assign row1 = 4'b1001; // x_3'x_4'
assign row2 = 4'b0000; // x_3'x_4
assign row3 = 4'b1110; // x_3x_4
assign row4 = 4'b1101; // x_3x_4'

// Use the input bits to select the correct row and column
assign f = (x[4] ? (x[3] ? row3 : row4) : (x[3] ? row1 : row2)) >> (x[2:1]) & 1'b1;

endmodule"
N/A,N/A,-0.1,10.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,11.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & ~x[2] & ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,12.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[4]) | (~x[1] & ~x[2] & ~x[3]) | (x[2] & x[3] & ~x[4]) | (~x[1] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,13.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1]);

endmodule"
N/A,N/A,-0.1,14.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & x[1]) | (~x[4] & x[3] & x[2] & ~x[1]);

endmodule"
N/A,N/A,-0.1,15.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[4] & ~x[2]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[3] & x[4] & ~x[1]) | (x[3] & ~x[4] & x[1] & ~x[2]);

endmodule"
N/A,N/A,-0.1,16.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3] & ~x[4] & x[1]) | (~x[3] & ~x[4] & x[1]) | (x[3] & x[4] & x[2]) | (x[3] & x[4] & x[1]) | (~x[3] & ~x[4] & ~x[2] & ~x[1]);

endmodule"
N/A,N/A,-0.1,17.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2] & ~x[3] & x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]) | (x[1] & ~x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,18.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x_not;

assign x_not = ~x;

assign f = (x_not[4] & x_not[3] & x_not[2] & x_not[1]) |
           (x[4] & x[3] & x[2] & x_not[1]) |
           (x[4] & x[3] & x_not[2] & x_not[1]) |
           (x[4] & x_not[3] & x_not[2] & x[1]);

endmodule"
N/A,N/A,-0.1,19.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1]);

endmodule"
N/A,N/A,-0.1,20.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[1] & ~x[2]) | (~x[4] & ~x[3] & ~x[2] & x[1]) | (x[3] & x[4] & ~x[1]) | (x[3] & ~x[4] & x[2]);

endmodule"
N/A,N/A,-0.1,21.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (~x[1] & ~x[2] & x[3]) | (x[3] & x[4]) | (~x[1] & ~x[4]);

endmodule"
N/A,N/A,-1,22.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & ~x[2] & x[3] & x[4]) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,23.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[1] & ~x[2]) | (~x[4] & ~x[3] & x[1]) | (x[3] & x[2] & x[1]) | (x[4] & x[3] & ~x[1]);

endmodule"
N/A,N/A,-0.1,24.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3] & x[4] & ~x[2]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[3] & ~x[4]) | (~x[1] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,25.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[3] & x[4] & ~x[1]) | (~x[1] & x[4] & x[3]);

endmodule"
N/A,N/A,-0.1,26.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = x[1] & ~x[2] & ~x[3] & ~x[4] |  // x_1'x_2'x_3'x_4'
            x[1] & ~x[2] & x[3] & x[4] |   // x_1'x_2x_3x_4
            x[1] & x[2] & x[3] & x[4] |    // x_1x_2x_3x_4
            x[1] & x[2] & ~x[3] & ~x[4] |  // x_1x_2x_3'x_4'
            ~x[1] & x[2] & x[3] & ~x[4];   // x_1'x_2x_3x_4'

endmodule"
N/A,N/A,-0.1,27.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x_not;
assign x_not = ~x;

assign f = (x_not[4] & x_not[3] & x_not[1]) | 
           (x[4] & x[3] & x[2]) | 
           (x[4] & x[3] & x_not[1]) | 
           (x[4] & x_not[3] & x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,28.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (    ~x[3] & ~x[4] & x[1]) | (~x[3] & x[4] & ~x[1]) | (x[3] & x[4] & ~x[2]) | (x[3] & ~x[4] & x[1]);

endmodule"
N/A,N/A,-0.1,29.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & ~x[2] & x[1]) | (~x[4] & x[3] & x[2] & ~x[1]);

endmodule"
N/A,N/A,-0.1,30.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = ((x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1])); 

endmodule"
N/A,N/A,-0.1,31.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4]) & (x[1] | x[2]) | (~x[3] & ~x[4] & x[1]) | (x[3] & x[4] & ~x[2]) | (~x[3] & x[4] & ~x[1]);

endmodule"
N/A,N/A,-0.1,32.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[1] & ~x[2] & ~x[3] & ~x[4]) | 
          (~x[1] & x[2] & x[3] & ~x[4]) | 
          (x[1] & x[2] & x[3] & x[4]) | 
          (~x[1] & ~x[2] & x[3] & x[4]) | 
          (x[1] & ~x[2] & x[3] & x[4]) | 
          (~x[1] & x[2] & ~x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,33.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[4] & ~x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,34.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1]);

endmodule"
N/A,N/A,-0.1,35.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[3] & x[4] & ~x[1]) | (~x[3] & ~x[4] & x[1]);

endmodule"
N/A,N/A,-0.1,36.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x_not;

assign x_not = ~x;

assign f = (x_not[4] & x_not[3] & x_not[2] & x_not[1]) |
           (x_not[4] & x_not[3] & x[2] & x_not[1]) |
           (x[4] & x[3] & x[2] & x_not[1]) |
           (x[4] & x[3] & x_not[2] & x_not[1]) |
           (x[4] & x_not[3] & x[2] & x[1]) |
           (x[4] & x_not[3] & x_not[2] & x[1]);

endmodule"
N/A,N/A,-1,37.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3&n/a]) & (~x[2]) & (~x[1]) | (x[3]) & (x[4]) & (~x[1]) | (x[3]) & (x[4]) & (x[2]) | (~x[3]) & (~x[4]) & (~x[2]) & (~x[1]) | (x[3]) & (~x[4]) & (~x[2]) & (~x[1]);

endmodule"
N/A,N/A,-0.1,38.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (x[4] & ~x[3] & x[1]) | (~x[4] & x[3] & x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,39.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[3] & x[4] & ~x[1]) | (~x[1] & ~x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,40.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-1,41.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3) | (~x[4] & ~x[3] & ~x[2] & x[1]) | (x[4] & ~x[3] & x[2]) | (x[4] & x[3] & ~x[2] & ~x[1]);

endmodule"
N/A,N/A,-0.1,42.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] &x[2] & ~x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[3] & x[4] & (x[1] | x[2])) | (~x[1] & ~x[2] & x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,43.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1] & ~x[2]);

endmodule"
N/A,N/A,-0.1,44.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[4] & ~x[3]) | (~x[1] & ~x[2] & ~x[3]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,45.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x_not;

assign x_not[1] = ~x[1];
assign x_not[2] = ~x[2];
assign x_not[3] = ~x[3];
assign x_not[4] = ~x[4];

assign f = (x_not[1] & x_not[2] & x_not[3] & x_not[4]) |
           (x[1] & x[2] & x[3] & x[4]) |
           (x[1] & x[2] & x_not[3] & x_not[4]) |
           (x_not[1] & x_not[2] & x[3] & x[4]) |
           (x[1] & x_not[2] & x[3] & x_not[4]);

endmodule"
N/A,N/A,-0.1,46.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3] & x[1] & ~x[2]) | (~x[3] & ~x[4] & ~x[2] & x[1]) | (x[3] & x[4] & x[2]) | (x[3] & ~x[4] & ~x[1]);

endmodule"
N/A,N/A,-0.1,47.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,48.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4]) & (x[1] | x[2]) | (~x[3] & ~x[4] & x[1]) | (x[3] & x[4] & ~x[2]);

endmodule"
N/A,N/A,-1,49.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2)n/a & ~x[3] & ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,50.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | ((x[1] & ~x[2]) & x[3]) | ((~x[1] & ~x[2]) & ~x[3] & ~x[4]) | ((x[1] & x[2]) & x[3] & x[4]) | ((~x[1] & x[2]) & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,51.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = x[1] & ~x[2] & ~x[3] & ~x[4] | 
           ~x[1] & x[2] & x[3] & x[4] | 
           x[1] & x[2] & x[3] & ~x[4] | 
           ~x[1] & ~x[2] & x[3] & ~x[4] | 
           x[1] & ~x[2] & x[3] & x[4];

endmodule"
N/A,N/A,-1,52.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3) & ~x[2] & ~x[1]) | (~x[4] & ~x[3] & ~x[2] & x[1]) | (x[4] & x[3] & x[2] & ~x[1]) | (x[4] & ~x[3] & x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,53.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x_not;

assign x_not[1] = ~x[1];
assign x_not[2] = ~x[2];
assign x_not[3] = ~x[3];
assign x_not[4] = ~x[4];

assign f = (x_not[1] & x_not[2] & x_not[3] & x_not[4]) |
           (x[1] & x[2] & x[3] & x_not[4]) |
           (x[1] & x[2] & x_not[3] & x[4]) |
           (x[1] & x_not[2] & x_not[3] & x_not[4]) |
           (x_not[1] & x_not[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,54.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) & (    x[3] | x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & ~x[2] & x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,55.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = ((x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & x[4]) | (~x[1] & x[2] & x[3] & ~x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]));

endmodule"
N/A,N/A,-1,56.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3&n/a]) & ~x[4] & ~x[1]) | (~x[3] & ~x[4] & x[1]) | (x[3] & x[4] & x[2]) | (x[3] & ~x[4] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-1,57.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x2) & ~x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & x[2] & ~x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,58.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & ~x[3] & ~x[2] & ~x[1]) | 
           (~x[4] & x[3] & x[2] & x[1]) | 
           (x[4] & x[3] & ~x[2] & ~x[1]) | 
           (x[4] & x[3] & x[2] & ~x[1]) | 
           (x[4] & x[3] & x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,59.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,60.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1] & ~x[2]);

endmodule"
N/A,N/A,-1,61.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3)n/a & ~x[2] & ~x[1]) | (~x[4] & ~x[3] & ~x[2] & ~x[1]) | (x[4] & x[3] & x[2] & ~x[1]) | (x[4] & ~x[3] & x[2] & x[1]) | (~x[4] & x[3] & x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,62.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,63.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [3:0] row1, row2, row3, row4;

assign row1 = 4'b1001; // x_3'x_4' row
assign row2 = 4'b0000; // x_3'x_4 row
assign row3 = 4'b1110; // x_3x_4 row
assign row4 = 4'b1101; // x_3x_4' row

assign f = (x[4] ? (x[3] ? row3 : row2) : (x[3] ? row4 : row1)) >> (2 * x[2] + x[1]) & 1;

endmodule"
N/A,N/A,-0.1,64.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1]);

endmodule"
N/A,N/A,-0.1,65.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[4] & x[1]) | (~x[3] & ~x[2] & ~x[4]) | (x[3] & x[4] & ~x[2]);

endmodule"
N/A,N/A,-0.1,66.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3] & x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,67.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4]) & (x[1]) & (~x[2]) | (~x[4]) & (~x[3]) & (~x[2]) & (x[1]) | (x[4]) & (x[3]) & (~x[2]) & (~x[1]) | (x[4]) & (x[3]) & (x[2]) & (x[1]);

endmodule"
N/A,N/A,-1,68.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x```[2] & ~x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[3] & x[4] & (x[1] | x[2])) | (~x[1] & x[2] & x[3] & ~x[4]);

endmodule"
N/A,N/A,-1,69.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] &x[2) & ~x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & ~x[4]) | (x[1] & x[2] & x[3] & x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,70.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3]) & (x[1] | x[2]) | (~x[4] & ~x[3] & (x[1] ^ x[2]));

endmodule"
N/A,N/A,-0.1,71.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x;
assign f = (x[4] & ~x[3] & ~x[1]) | (x[4] & x[3] & x[2]) | (~x[4] & ~x[3] & x[1]) | (~x[4] & x[3] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,72.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & ~x[4]) | (x[1] & ~x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,73.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & x[4]) | (~x[1] & ~x[2] & x[3]) | (~x[1] & ~x[4]); 

endmodule"
N/A,N/A,-0.1,74.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = x[1] & ~x[2] & ~x[3] & ~x[4] |  // x_1'x_2'x_3'x_4'
            x[1] & ~x[2] & x[3] & x[4] |   // x_1'x_2x_3x_4
            ~x[1] & x[2] & x[3] & ~x[4] |  // x_1x_2x_3'x_4'
            x[1] & x[2] & x[3] & ~x[4] |   // x_1x_2x_3x_4'
            x[1] & x[2] & ~x[3] & x[4];    // x_1x_2'x_3x_4

endmodule"
N/A,N/A,-0.1,75.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[3] & x[4] & x[1]) | (x[3] & x[4] & x[2]) | (x[3] & ~x[4] & x[1]) | (~x[3] & ~x[4] & x[1]) | (~x[3] & ~x[4] & ~x[2] & ~x[1]);

endmodule"
N/A,N/A,-1,76.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3&n/a]) & ~x[4] & ~x[1]) | (~x[3] & ~x[4] & x[1]) | (x[3] & x[4] & x[2]) | (x[3] & ~x[4] & ~x[2] & x[1]);

endmodule"
N/A,N/A,-0.1,77.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | ((x[3] & x[4]) & ~x[2]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & ~x[2] & ~x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,78.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4]==1) & (x[3]==0) & (x[1]==0) | 
           (x[4]==0) & (x[3]==1) & (x[2]==1) | 
           (x[4]==0) & (x[3]==0) & (x[1]==1) | 
           (x[4]==1) & (x[3]==1) & (x[2]==0) & (x[1]==0);

endmodule"
N/A,N/A,-0.1,79.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = ((x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]));

endmodule"
N/A,N/A,-0.1,80.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire w1, w2, w3, w4;

// Group 1: x_3'x_4' and x_1'x_2'
assign w1 = ~x[3] & ~x[4] & ~x[1] & ~x[2];

// Group 2: x_3x_4 and x_1'x_2
assign w2 = x[3] & x[4] & ~x[1] & x[2];

// Group 3: x_3x_4 and x_1x_2
assign w3 = x[3] & x[4] & x[1] & x[2];

// Group 4: x_3x_4' and x_1'x_2'
assign w4 = x[3] & ~x[4] & ~x[1] & ~x[2];

// OR all the groups together to form the function f
assign f = w1 | w2 | w3 | w4;

endmodule"
N/A,N/A,-1,81.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2)n/a | (x[3] & x[4])) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,82.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[4]) & (x[3] | (~x[1] & ~x[2])) | (~x[3] & ~x[4] & x[1]); 

endmodule"
N/A,N/A,-0.1,83.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3]) & ((x[1] | x[2])) | (~x[4] & ~x[3] & (x[1] ^ x[2]));

endmodule"
N/A,N/A,-0.1,84.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,85.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3] & x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,86.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,87.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) & (x[3] | ~x[4]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,88.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[1] & x[4]) | (~x[1] & ~x[2] & ~x[3]) | (x[2] & x[3] & ~x[4]) | (x[1] & ~x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,89.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [3:0] kmap; // Intermediate wires for the Karnaugh map

// Assign the values from the Karnaugh map to the intermediate wires
assign kmap[0] = x[4] & ~x[3] & ~x[1] | ~x[4] & x[3] & x[1] | x[4] & x[3] & ~x[2];
assign kmap[1] = x[4] & ~x[3] & x[2] | x[4] & x[3] & x[2] & ~x[1];
assign kmap[2] = x[4] & x[3] & x[2] & x[1];
assign kmap[3] = ~x[4] & x[3] & ~x[2] & x[1] | x[4] & ~x[3] & ~x[2] & x[1];

// Combine the intermediate wires to form the output function
assign f = kmap[0] | kmap[1] | kmap[2] | kmap[3];

endmodule"
N/A,N/A,-0.1,90.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4]) & (x[3] | ~x[2]) | (~x[4] & ~x[3] & x[1]);

endmodule"
N/A,N/A,-0.1,91.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[1] & ~x[4]) | (~x[1] & ~x[2] & x[3]) | (~x[1] & x[3] & x[4]);

endmodule"
N/A,N/A,-1,92.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[3] & x[4)]) | (~x[1] & ~x[2] & x[3]) | (~x[1] & x[4]);

endmodule"
N/A,N/A,-0.1,93.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f =(x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,94.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[3]) & (x[4] | ~x[2]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]);

endmodule"
N/A,N/A,-1,95.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3)n/a | (x[1] & ~x[2])) | (~x[4] & ~x[3] & x[1] & ~x[2]) | (x[4] & ~x[3] & x[2] & x[1]) | (~x[4] & x[3] & x[2] & ~x[1]);

endmodule"
N/A,N/A,-0.1,96.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = x[4] & (~x[3] & ~x[2] & ~x[1] | x[3] & x[2] & x[1] | x[3] & x[2] & ~x[1] | ~x[3] & x[2] & x[1]) | ~x[4] & (~x[3] & ~x[2] & x[1] | x[3] & ~x[2] & ~x[1]); 

endmodule"
N/A,N/A,-0.1,97.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x[2]) | (x[4] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (~x[1] & x[2] & x[3] & x[4]);

endmodule"
N/A,N/A,-1,98.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


wire [4:1] x[4:1] = x;

assign f = (x[4] & ~x[3] & ~x[1]) | (~x[4] & x[3] & x[2]) | (x[4] & x[3] & ~x[2]) | (~x[4] & ~x[3] & x[1]);

endmodule"
N/A,N/A,-1,99.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & x2) | (x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3]) | (x[1] & ~x[2] & ~x[3] & x[4]);

endmodule"
N/A,N/A,-0.1,100.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[1] & ~x[2] & x[3]) | (~x[1] & ~x[2] & ~x[3] & ~x[4]) | (x[1] & x[2] & x[3] & ~x[4]) | (~x[1] & ~x[2] & x[3] & x[4]) | (x[1] & ~x[2] & ~x[3] & ~x[4]);

endmodule"
N/A,N/A,-0.1,101.0,1,"// Consider the function f shown in the Karnaugh map below. Implement this function.
//         x_1'x_2'	x_1'x_2 	x_1x_2		x_1x_2'
// x_3'x_4'	1		0		0		1
// x_3'x_4		0		0		0		0
// x_3x_4  	1		1		1		0
// x_3x_4'		1		1		0		1

// Hint: Be careful of the ordering of the x[4:1] input bits in the Karnaugh map.

module top_module (
    input [4:1] x,
    output f
);


assign f = (x[4] & x[3]) & (x[2] | x[1]) | (~x[4] & ~x[3] & ~x[2] & x[1]) | (~x[4] & x[3] & x[2] & ~x[1]);

endmodule"
