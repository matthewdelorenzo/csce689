Using GPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/prompt_tb_files/adder/prompt1_adder_32.v
Prompt str:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
Loading LLM model...
Loaded LLM:  codellama/CodeLlama-13b-hf
Initializing MCTS tree/LLM env...
Episode not stated yet!
Simulations per episode:  100
********-- EPISODE-1--************
Env seed:  459160
----GREEDY LLM OUTPUT - ITERATION:  0  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_temp;

    assign sum_temp = in1 + in2 + cin;
    assign sum = sum_temp[31:0];
    assign cout = sum_temp[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962  2533
  29918  7382 29936    13    13  1678  3566  2533 29918  7382   353   297
  29896   718   297 29906   718  4670 29936    13  1678  3566  2533   353
   2533 29918  7382 29961 29941 29896 29901 29900  1385    13  1678  3566
  11196   353  2533 29918  7382 29961 29941 29906  1385    13    13   355
   5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,    13,  1678,  3566,  2533, 29918,  7382,   353,   297, 29896,
           718,   297, 29906,   718,  4670, 29936,    13,  1678,  3566,  2533,
           353,  2533, 29918,  7382, 29961, 29941, 29896, 29901, 29900,  1385,
            13,  1678,  3566, 11196,   353,  2533, 29918,  7382, 29961, 29941,
         29906,  1385,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  59
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_temp;

    assign sum_temp = in1 + in2 + cin;
    assign sum = sum_temp[31:0];
    assign cout = sum_temp[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.708036

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  1  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] s;

    assign s = cin + in1 + in2;
    assign sum = s[31:0];
    assign cout = s[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962   269
  29936    13    13  1678  3566   269   353  4670   718   297 29896   718
    297 29906 29936    13  1678  3566  2533   353   269 29961 29941 29896
  29901 29900  1385    13  1678  3566 11196   353   269 29961 29941 29906
   1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,   269, 29936,    13,    13,
          1678,  3566,   269,   353,  4670,   718,   297, 29896,   718,   297,
         29906, 29936,    13,  1678,  3566,  2533,   353,   269, 29961, 29941,
         29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,   353,   269,
         29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  51
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] s;

    assign s = cin + in1 + in2;
    assign sum = s[31:0];
    assign cout = s[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.704313

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  2  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;
    wire [32:0] temp2;

    assign temp = in1 + in2;
    assign temp2 = temp + cin;
    assign sum = temp2[31:0];
    assign cout = temp2[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  5694
  29936    13  1678  8014   518 29941 29906 29901 29900 29962  5694 29906
  29936    13    13  1678  3566  5694   353   297 29896   718   297 29906
  29936    13  1678  3566  5694 29906   353  5694   718  4670 29936    13
   1678  3566  2533   353  5694 29906 29961 29941 29896 29901 29900  1385
     13  1678  3566 11196   353  5694 29906 29961 29941 29906  1385    13
     13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  5694, 29936,    13,  1678,
          8014,   518, 29941, 29906, 29901, 29900, 29962,  5694, 29906, 29936,
            13,    13,  1678,  3566,  5694,   353,   297, 29896,   718,   297,
         29906, 29936,    13,  1678,  3566,  5694, 29906,   353,  5694,   718,
          4670, 29936,    13,  1678,  3566,  2533,   353,  5694, 29906, 29961,
         29941, 29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,   353,
          5694, 29906, 29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  73
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;
    wire [32:0] temp2;

    assign temp = in1 + in2;
    assign temp2 = temp + cin;
    assign sum = temp2[31:0];
    assign cout = temp2[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  3  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;

    assign temp = in1 + in2 + cin;
    assign sum = temp[31:0];
    assign cout = temp[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  5694
  29936    13    13  1678  3566  5694   353   297 29896   718   297 29906
    718  4670 29936    13  1678  3566  2533   353  5694 29961 29941 29896
  29901 29900  1385    13  1678  3566 11196   353  5694 29961 29941 29906
   1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  5694, 29936,    13,    13,
          1678,  3566,  5694,   353,   297, 29896,   718,   297, 29906,   718,
          4670, 29936,    13,  1678,  3566,  2533,   353,  5694, 29961, 29941,
         29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,   353,  5694,
         29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  51
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;

    assign temp = in1 + in2 + cin;
    assign sum = temp[31:0];
    assign cout = temp[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  4  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp;
  wire [32:0] temp_sum;

  assign temp = in1 + in2;
  assign temp_sum = {temp[31], temp};
  assign sum = temp_sum[31:0];
  assign cout = temp_sum[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  5694
  29936    13 29871  8014   518 29941 29906 29901 29900 29962  5694 29918
   2083 29936    13    13 29871  3566  5694   353   297 29896   718   297
  29906 29936    13 29871  3566  5694 29918  2083   353   426  7382 29961
  29941 29896  1402  5694  3400    13 29871  3566  2533   353  5694 29918
   2083 29961 29941 29896 29901 29900  1385    13 29871  3566 11196   353
   5694 29918  2083 29961 29941 29906  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  5694, 29936,    13, 29871,
          8014,   518, 29941, 29906, 29901, 29900, 29962,  5694, 29918,  2083,
         29936,    13,    13, 29871,  3566,  5694,   353,   297, 29896,   718,
           297, 29906, 29936,    13, 29871,  3566,  5694, 29918,  2083,   353,
           426,  7382, 29961, 29941, 29896,  1402,  5694,  3400,    13, 29871,
          3566,  2533,   353,  5694, 29918,  2083, 29961, 29941, 29896, 29901,
         29900,  1385,    13, 29871,  3566, 11196,   353,  5694, 29918,  2083,
         29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  81
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp;
  wire [32:0] temp_sum;

  assign temp = in1 + in2;
  assign temp_sum = {temp[31], temp};
  assign sum = temp_sum[31:0];
  assign cout = temp_sum[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  5  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.749344

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  6  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [32:0] sum_temp;

assign sum_temp = in1 + in2 + cin;
assign sum = sum_temp[31:0];
assign cout = sum_temp[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29906 29901 29900 29962  2533 29918
   7382 29936    13    13 16645  2533 29918  7382   353   297 29896   718
    297 29906   718  4670 29936    13 16645  2533   353  2533 29918  7382
  29961 29941 29896 29901 29900  1385    13 16645 11196   353  2533 29918
   7382 29961 29941 29906  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29906, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
            13, 16645,  2533, 29918,  7382,   353,   297, 29896,   718,   297,
         29906,   718,  4670, 29936,    13, 16645,  2533,   353,  2533, 29918,
          7382, 29961, 29941, 29896, 29901, 29900,  1385,    13, 16645, 11196,
           353,  2533, 29918,  7382, 29961, 29941, 29906,  1385,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  55
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [32:0] sum_temp;

assign sum_temp = in1 + in2 + cin;
assign sum = sum_temp[31:0];
assign cout = sum_temp[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.714122

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  7  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //assign sum = sum_internal;
  //assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13    13
  29871   849 16645  2533   353  2533 29918  7564 29936    13 29871   849
  16645 11196   353 11196 29918  7564 29936    13    13 29871   849  1202
  29918 29941 29906 29918  2966 29918 29896   594   672 29918 29941 29906
  29918 29896 29898  2083 29892 11196 29892   297 29896 29892   297 29906
  29892  4670   416    13 29871   788 29918 29941 29906 29918  2966 29918
  29906   594   672 29918 29941 29906 29918 29906 29898  2083 29892 11196
  29892   297 29896 29892   297 29906 29892  4670   416    13    13   355
   5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13, 29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,
           849, 16645,  2533,   353,  2533, 29918,  7564, 29936,    13, 29871,
           849, 16645, 11196,   353, 11196, 29918,  7564, 29936,    13,    13,
         29871,   849,  1202, 29918, 29941, 29906, 29918,  2966, 29918, 29896,
           594,   672, 29918, 29941, 29906, 29918, 29896, 29898,  2083, 29892,
         11196, 29892,   297, 29896, 29892,   297, 29906, 29892,  4670,   416,
            13, 29871,   788, 29918, 29941, 29906, 29918,  2966, 29918, 29906,
           594,   672, 29918, 29941, 29906, 29918, 29906, 29898,  2083, 29892,
         11196, 29892,   297, 29896, 29892,   297, 29906, 29892,  4670,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  107
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //assign sum = sum_internal;
  //assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: add_32_bit_2\n2 error(s) during elaboration.\n*** These modules were missing:\n        add_32_bit_2 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //assign sum = sum_internal;
  //assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module add_32_bit_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module add_32_bit_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13    13
  29871   849 16645  2533   353  2533 29918  7564 29936    13 29871   849
  16645 11196   353 11196 29918  7564 29936    13    13 29871   849  1202
  29918 29941 29906 29918  2966 29918 29896   594   672 29918 29941 29906
  29918 29896 29898  2083 29892 11196 29892   297 29896 29892   297 29906
  29892  4670   416    13 29871   788 29918 29941 29906 29918  2966 29918
  29906   594   672 29918 29941 29906 29918 29906 29898  2083 29892 11196
  29892   297 29896 29892   297 29906 29892  4670   416    13    13   355
   5453    13    13   458  4002   647   263 29871 29941 29906 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29941 29906  2586
  10970   313   262 29896   322   297 29906 29897   322   263  2323  8677
  29899   262  1881  2586 29892  4670 29889    13   458  1576 14391   526
    263 29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900
  29962  2533 29892   322   263  2323  8677 29899   449  1962  2586 29892
  11196 29889    13   458  1576  3883   881  3667   675   278 10970   313
    262 29896   322   297 29906 29897   322   278  4670  2586   304  4017
    278  1962  2533   322 11196  1819 29889    13  5453   788 29918 29941
  29906 29918  2966 29918 29896 29898  4905   518 29941 29896 29901 29900
  29962  2533 29892    13   462   418  1962 11196 29892    13   462   418
   1881   518 29941 29896 29901 29900 29962   297 29896 29892   297 29906
  29892    13   462   418  1881  4670   416    13    13 29871  8014   518
  29941 29896 29901 29900 29962  2533 29918  7564 29936    13 29871  8014
  11196 29918  7564 29936    13    13 29871  3566  2533   353  2533 29918
   7564 29936    13 29871  3566 11196   353 11196 29918  7564 29936    13
     13 29871   849  1202 29918 29941 29906 29918  2966 29918 29896   594
    672 29918 29941 29906 29918 29896 29898  2083 29892 11196 29892   297
  29896 29892   297 29906 29892  4670   416    13 29871   788 29918 29941
  29906 29918  2966 29918 29906   594   672 29918 29941 29906 29918 29906
  29898  2083 29892 11196 29892   297 29896 29892   297 29906 29892  4670
    416    13    13   355  5453    13    13   458  4002   647   263 29871
  29941 29906 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29941 29906  2586 10970   313   262 29896   322   297 29906 29897
    322   263  2323  8677 29899   262  1881  2586 29892  4670 29889    13
    458  1576 14391   526   263 29871 29941 29906  2586   995 29892   518
  29941 29896 29901 29900 29962  2533 29892   322   263  2323  8677 29899
    449  1962  2586 29892 11196 29889    13   458  1576  3883   881  3667
    675   278 10970   313   262 29896   322   297 29906 29897   322   278
   4670  2586   304  4017   278  1962  2533   322 11196  1819 29889    13
   5453   788 29918 29941 29906 29918  2966 29918 29906 29898  4905   518
  29941 29896 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29941 29896 29901 29900 29962   297
  29896 29892   297 29906 29892    13   462   418  1881  4670   416    13
     13 29871  8014   518 29941 29896 29901 29900 29962  2533 29918  7564
  29936    13 29871  8014 11196 29918  7564 29936    13    13 29871  3566
   2533   353  2533 29918  7564 29936    13 29871  3566 11196   353 11196
  29918  7564 29936    13    13 29871   849  1202 29918 29941 29906 29918
   2966 29918 29896   594   672 29918 29941 29906 29918 29896 29898  2083
  29892 11196 29892   297 29896 29892   297 29906 29892  4670   416    13
  29871   788 29918 29941 29906 29918  2966 29918 29906   594   672 29918
  29941 29906 29918 29906 29898  2083 29892 11196 29892   297 29896 29892
    297 29906 29892  4670   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
         29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,   849,
         16645,  2533,   353,  2533, 29918,  7564, 29936,    13, 29871,   849,
         16645, 11196,   353, 11196, 29918,  7564, 29936,    13,    13, 29871,
           849,  1202, 29918, 29941, 29906, 29918,  2966, 29918, 29896,   594,
           672, 29918, 29941, 29906, 29918, 29896, 29898,  2083, 29892, 11196,
         29892,   297, 29896, 29892,   297, 29906, 29892,  4670,   416,    13,
         29871,   788, 29918, 29941, 29906, 29918,  2966, 29918, 29906,   594,
           672, 29918, 29941, 29906, 29918, 29906, 29898,  2083, 29892, 11196,
         29892,   297, 29896, 29892,   297, 29906, 29892,  4670,   416,    13,
            13,   355,  5453,    13,    13,   458,  4002,   647,   263, 29871,
         29941, 29906, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,
          1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,
           263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,
           449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,
           881,  3667,   675,   278, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,
          2533,   322, 11196,  1819, 29889,    13,  5453,   788, 29918, 29941,
         29906, 29918,  2966, 29918, 29896, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29918,  7564, 29936,    13, 29871,  8014,
         11196, 29918,  7564, 29936,    13,    13, 29871,  3566,  2533,   353,
          2533, 29918,  7564, 29936,    13, 29871,  3566, 11196,   353, 11196,
         29918,  7564, 29936,    13,    13, 29871,   849,  1202, 29918, 29941,
         29906, 29918,  2966, 29918, 29896,   594,   672, 29918, 29941, 29906,
         29918, 29896, 29898,  2083, 29892, 11196, 29892,   297, 29896, 29892,
           297, 29906, 29892,  4670,   416,    13, 29871,   788, 29918, 29941,
         29906, 29918,  2966, 29918, 29906,   594,   672, 29918, 29941, 29906,
         29918, 29906, 29898,  2083, 29892, 11196, 29892,   297, 29896, 29892,
           297, 29906, 29892,  4670,   416,    13,    13,   355,  5453,    13,
            13,   458,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   788, 29918, 29941, 29906, 29918,  2966, 29918,
         29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13, 29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29918,  7564, 29936,    13, 29871,  8014, 11196, 29918,  7564, 29936,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918,  7564, 29936,
            13, 29871,  3566, 11196,   353, 11196, 29918,  7564, 29936,    13,
            13, 29871,   849,  1202, 29918, 29941, 29906, 29918,  2966, 29918,
         29896,   594,   672, 29918, 29941, 29906, 29918, 29896, 29898,  2083,
         29892, 11196, 29892,   297, 29896, 29892,   297, 29906, 29892,  4670,
           416,    13, 29871,   788, 29918, 29941, 29906, 29918,  2966, 29918,
         29906,   594,   672, 29918, 29941, 29906, 29918, 29906, 29898,  2083,
         29892, 11196, 29892,   297, 29896, 29892,   297, 29906, 29892,  4670,
           416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  619
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //assign sum = sum_internal;
  //assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module add_32_bit_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module add_32_bit_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  //add_32_bit_1 adder_32_1(sum, cout, in1, in2, cin);
  add_32_bit_2 adder_32_2(sum, cout, in1, in2, cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  4
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: You can not instantiate module add_32_bit_2 within itself.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57:      : The offending instance is adder_32_2 within add_32_bit_1.adder_32_2.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: You can not instantiate module add_32_bit_2 within itself.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57:      : The offending instance is adder_32_2 within tb_adder_32.uut.adder_32_2.\n4 error(s) during elaboration.\n'
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  8  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_temp = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);
    assign cout = cout_temp;

    assign sum = sum_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1402
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_temp = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);
    assign cout = cout_temp;

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.748014

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  9  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566 11196
    353 11196 29918  7382 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382
  29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7382 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7382 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7382   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918,  7382,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566 11196
    353 11196 29918  7382 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382
  29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7382 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7382 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7382   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29896 29945 29901 29900 29962
   2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13
     13  1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566
  11196   353 11196 29918  7382 29936    13    13  1678   594   672 29918
  29947   594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961
  29955 29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13  1678   594   672 29918 29947   594   672 29918 29947 29918 29906
  29898  2083 29918  7382 29961 29896 29945 29901 29947  1402 11196 29918
   7382 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918  7382   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   385
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
   1678  8014   518 29955 29901 29900 29962  2533 29918  7382 29936    13
   1678  8014 11196 29918  7382 29936    13    13  1678  3566  2533   353
   2533 29918  7382 29936    13  1678  3566 11196   353 11196 29918  7382
  29936    13    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29941 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13  1678   594   672 29918
  29946   594   672 29918 29946 29918 29906 29898  2083 29918  7382 29961
  29955 29901 29946  1402 11196 29918  7382 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
   7382   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,  7382,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,
          8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,
          2083, 29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918,  7382,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1437
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  10  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  //wire [31:0] sum_wire;
  //wire cout_wire;

  //assign sum = sum_wire;
  //assign cout = cout_wire;

  //assign sum_wire = in1 + in2 + cin;
  //assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871   849 22376   518 29941 29896 29901 29900 29962  2533 29918 22376
  29936    13 29871   849 22376 11196 29918 22376 29936    13    13 29871
    849 16645  2533   353  2533 29918 22376 29936    13 29871   849 16645
  11196   353 11196 29918 22376 29936    13    13 29871   849 16645  2533
  29918 22376   353   297 29896   718   297 29906   718  4670 29936    13
  29871   849 16645 11196 29918 22376   353   313   262 29896 29961 29941
  29896 29962   669   297 29906 29961 29941 29896  2314   891   313   262
  29896 29961 29941 29896 29962   669  4670 29897   891   313   262 29906
  29961 29941 29896 29962   669  4670   416    13    13 29871  3566  2533
  29918 22376   353   297 29896   718   297 29906   718  4670 29936    13
  29871  3566 11196 29918 22376   353   313   262 29896 29961 29941 29896
  29962   669   297 29906 29961 29941 29896  2314   891   313   262 29896
  29961 29941 29896 29962   669  4670 29897   891   313   262 29906 29961
  29941 29896 29962   669  4670   416    13    13 29871  3566  2533   353
   2533 29918 22376 29936    13 29871  3566 11196   353 11196 29918 22376
  29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13, 29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,
           849, 22376,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,
         22376, 29936,    13, 29871,   849, 22376, 11196, 29918, 22376, 29936,
            13,    13, 29871,   849, 16645,  2533,   353,  2533, 29918, 22376,
         29936,    13, 29871,   849, 16645, 11196,   353, 11196, 29918, 22376,
         29936,    13,    13, 29871,   849, 16645,  2533, 29918, 22376,   353,
           297, 29896,   718,   297, 29906,   718,  4670, 29936,    13, 29871,
           849, 16645, 11196, 29918, 22376,   353,   313,   262, 29896, 29961,
         29941, 29896, 29962,   669,   297, 29906, 29961, 29941, 29896,  2314,
           891,   313,   262, 29896, 29961, 29941, 29896, 29962,   669,  4670,
         29897,   891,   313,   262, 29906, 29961, 29941, 29896, 29962,   669,
          4670,   416,    13,    13, 29871,  3566,  2533, 29918, 22376,   353,
           297, 29896,   718,   297, 29906,   718,  4670, 29936,    13, 29871,
          3566, 11196, 29918, 22376,   353,   313,   262, 29896, 29961, 29941,
         29896, 29962,   669,   297, 29906, 29961, 29941, 29896,  2314,   891,
           313,   262, 29896, 29961, 29941, 29896, 29962,   669,  4670, 29897,
           891,   313,   262, 29906, 29961, 29941, 29896, 29962,   669,  4670,
           416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918, 22376,
         29936,    13, 29871,  3566, 11196,   353, 11196, 29918, 22376, 29936,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  207
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  //wire [31:0] sum_wire;
  //wire cout_wire;

  //assign sum = sum_wire;
  //assign cout = cout_wire;

  //assign sum_wire = in1 + in2 + cin;
  //assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  11  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 + in2 + cin;
    assign cout = sum_temp[1];

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1346
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 + in2 + cin;
    assign cout = sum_temp[1];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  12  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918  7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13 16645  2533   353  2533
  29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         22376, 11196, 29918,  7382, 29936,    13,    13,   328,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,   328,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,
            13, 16645,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  125
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918  7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13 16645  2533   353  2533
  29918  7382 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  22376   518 29896 29945 29901 29900 29962  2533 29918  7382 29936    13
  22376 11196 29918  7382 29936    13    13   328   672 29918 29947   594
    672 29918 29947 29918 29900 29898  2083 29918  7382 29961 29955 29901
  29900  1402 11196 29918  7382 29892   297 29896 29961 29955 29901 29900
   1402   297 29906 29961 29955 29901 29900  1402  4670   416    13   328
    672 29918 29947   594   672 29918 29947 29918 29896 29898  2083 29918
   7382 29961 29896 29945 29901 29947  1402 11196 29892   297 29896 29961
  29896 29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947
   1402 11196 29918  7382   416    13    13 16645  2533   353  2533 29918
   7382 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 22376   518 29955 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918  7382
  29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896 29961
  29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402  4670
    416    13   328   672 29918 29946   594   672 29918 29946 29918 29896
  29898  2083 29918  7382 29961 29955 29901 29946  1402 11196 29892   297
  29896 29961 29955 29901 29946  1402   297 29906 29961 29955 29901 29946
   1402 11196 29918  7382   416    13    13 16645  2533   353  2533 29918
   7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 22376,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 22376,
         11196, 29918,  7382, 29936,    13,    13,   328,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,   328,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
         16645,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29896, 29953,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896, 29953,
         29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
         22376,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29918,  7382,
         29936,    13, 22376, 11196, 29918,  7382, 29936,    13,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29900, 29898,
          2083, 29918,  7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,
          2083, 29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,
           416,    13,    13, 16645,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13, 22376,   518, 29955, 29901,
         29900, 29962,  2533, 29918,  7382, 29936,    13, 22376, 11196, 29918,
          7382, 29936,    13,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29900, 29898,  2083, 29918,  7382, 29961, 29941,
         29901, 29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961,
         29941, 29901, 29900,  1402,   297, 29906, 29961, 29941, 29901, 29900,
          1402,  4670,   416,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29955,
         29901, 29946,  1402, 11196, 29892,   297, 29896, 29961, 29955, 29901,
         29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,  1402, 11196,
         29918,  7382,   416,    13,    13, 16645,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  640
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

wire [3:0] sum_temp;
wire cout_temp;

adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

wire [1:0] sum_temp;
wire cout_temp;

adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

wire [0:0] sum_temp;
wire cout_temp;

assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
assign cout_temp = (in1[0] & in2[0]) | (cin & (in1[0] | in2[0]));

assign sum = sum_temp;
assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1368
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

wire [3:0] sum_temp;
wire cout_temp;

adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

wire [1:0] sum_temp;
wire cout_temp;

adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

wire [0:0] sum_temp;
wire cout_temp;

assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
assign cout_temp = (in1[0] & in2[0]) | (cin & (in1[0] | in2[0]));

assign sum = sum_temp;
assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.753941

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.57
Delay value for the chip design is:  1197.83
Product:  364823.0831
Score (1/chip area):  0.11087362615742738
----GREEDY LLM OUTPUT - ITERATION:  13  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13  1678  3566 11196
    353 11196 29918  7564 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7564
  29961 29896 29945 29901 29900  1402 11196 29918  7564 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7564   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7564, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918,  7564, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918,  7564,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13  1678  3566 11196
    353 11196 29918  7564 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7564
  29961 29896 29945 29901 29900  1402 11196 29918  7564 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7564   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29896 29945 29901 29900 29962
   2533 29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13
     13  1678  3566  2533   353  2533 29918  7564 29936    13  1678  3566
  11196   353 11196 29918  7564 29936    13    13  1678   594   672 29918
  29947   594   672 29918 29947 29918 29896 29898  2083 29918  7564 29961
  29955 29901 29900  1402 11196 29918  7564 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13  1678   594   672 29918 29947   594   672 29918 29947 29918 29906
  29898  2083 29918  7564 29961 29896 29945 29901 29947  1402 11196 29918
   7564 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918  7564   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   385
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
   1678  8014   518 29955 29901 29900 29962  2533 29918  7564 29936    13
   1678  8014 11196 29918  7564 29936    13    13  1678  3566  2533   353
   2533 29918  7564 29936    13  1678  3566 11196   353 11196 29918  7564
  29936    13    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7564 29961 29941 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13  1678   594   672 29918
  29946   594   672 29918 29946 29918 29906 29898  2083 29918  7564 29961
  29955 29901 29946  1402 11196 29918  7564 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
   7564   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
          1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7564, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,  7564,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7564,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7564,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,  1678,
          8014, 11196, 29918,  7564, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918,  7564, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7564,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
          1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7564, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7564, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7564,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,
          2083, 29918,  7564, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918,  7564,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    full_adder fa_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    full_adder fa_2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

endmodule

//Design a full adder.
//There are three inputs, a, b, and cin.
//The outputs are two bits, sum and cout.
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal[0];
    assign cout = cout_internal;

    half_adder ha_1(sum_internal[0], cout_internal, a, b);
    half_adder ha_2(sum_internal[1], cout_internal, cin, cout_internal);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1390
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    full_adder fa_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    full_adder fa_2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

endmodule

//Design a full adder.
//There are three inputs, a, b, and cin.
//The outputs are two bits, sum and cout.
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal[0];
    assign cout = cout_internal;

    half_adder ha_1(sum_internal[0], cout_internal, a, b);
    half_adder ha_2(sum_internal[1], cout_internal, cin, cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  65
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: half_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: half_adder\n65 error(s) during elaboration.\n*** These modules were missing:\n        half_adder referenced 64 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    full_adder fa_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    full_adder fa_2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

endmodule

//Design a full adder.
//There are three inputs, a, b, and cin.
//The outputs are two bits, sum and cout.
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal[0];
    assign cout = cout_internal;

    half_adder ha_1(sum_internal[0], cout_internal, a, b);
    half_adder ha_2(sum_internal[1], cout_internal, cin, cout_internal);

endmodule

//Design a half adder.
//There are two inputs, a and b.
//The outputs are two bits, sum and cout.
//The module should utilize the inputs (a and b) to obtain the output sum and cout values.
module half_adder(output sum,
                      output cout,
                      input a, b);

    assign sum = a ^ b;
    assign cout = a & b;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    assign diff = diff_internal;
    assign cout = cout_internal;

    subtractor_16 sub_16_1(diff_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    subtractor_16 sub_16_2(diff_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit subtractor.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_16(output [15:0] diff,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] diff_internal;
    wire cout_internal;

    assign diff = diff_internal;
    assign cout = cout_internal;

    subtractor_8 sub_8_1(diff_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    subtractor_8 sub_8_2(diff_internal[15:8], cout_internal, in1[15:8], in2[15:8
[[  849  4002   647 ... 29945 29901 29947]]
tensor([[  849,  4002,   647,  ..., 29945, 29901, 29947]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    full_adder fa_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    full_adder fa_2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

endmodule

//Design a full adder.
//There are three inputs, a, b, and cin.
//The outputs are two bits, sum and cout.
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal[0];
    assign cout = cout_internal;

    half_adder ha_1(sum_internal[0], cout_internal, a, b);
    half_adder ha_2(sum_internal[1], cout_internal, cin, cout_internal);

endmodule

//Design a half adder.
//There are two inputs, a and b.
//The outputs are two bits, sum and cout.
//The module should utilize the inputs (a and b) to obtain the output sum and cout values.
module half_adder(output sum,
                      output cout,
                      input a, b);

    assign sum = a ^ b;
    assign cout = a & b;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    assign diff = diff_internal;
    assign cout = cout_internal;

    subtractor_16 sub_16_1(diff_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    subtractor_16 sub_16_2(diff_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit subtractor.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_16(output [15:0] diff,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] diff_internal;
    wire cout_internal;

    assign diff = diff_internal;
    assign cout = cout_internal;

    subtractor_8 sub_8_1(diff_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    subtractor_8 sub_8_2(diff_internal[15:8], cout_internal, in1[15:8], in2[15:8
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:169: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  14  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  //Adding 32 bits
  //32-bit adder
  adder_32_bit adder_32_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
  adder_32_bit adder_32_bit_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
  adder_32_bit adder_32_bit_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
  adder_32_bit adder_32_bit_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
  adder_32_bit adder_32_bit_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
  adder_32_bit adder_32_bit_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
  adder_32_bit adder_32_bit_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
  adder_32_bit adder_32_bit_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
  adder_32_bit adder_32_bit_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
  adder_32_bit adder_32_bit_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
  adder_32_bit adder_32_bit_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
  adder_32_bit adder_32_bit_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
  adder_32_bit adder_32_bit_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
  adder_32_bit adder_32_bit_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
  adder_32_bit adder_32_bit_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
  adder_32_bit adder_32_bit_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
  adder_32_bit adder_32_bit_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
  adder_32_bit adder_32_bit_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
  adder_32_bit adder_32_bit_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
  adder_32_bit adder_32_bit_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
  adder_32_bit adder_32_bit_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
  adder_32_bit adder_32_bit_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
  adder_32_bit adder_32_bit_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
  adder_32_bit adder_32_bit_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
  adder_32_bit adder_32_bit_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
  adder_32_bit adder_32_bit_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
  adder_32_bit adder_32_bit_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
  adder_32_bit adder_32_bit_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
  adder_32_bit adder_32_bit_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
  adder_32_bit adder_32_bit_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
  adder_32_bit adder_32_bit_31(sum_w[31], cout_w, in1[31], in2[31], cout_w);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1524
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  //Adding 32 bits
  //32-bit adder
  adder_32_bit adder_32_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
  adder_32_bit adder_32_bit_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
  adder_32_bit adder_32_bit_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
  adder_32_bit adder_32_bit_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
  adder_32_bit adder_32_bit_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
  adder_32_bit adder_32_bit_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
  adder_32_bit adder_32_bit_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
  adder_32_bit adder_32_bit_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
  adder_32_bit adder_32_bit_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
  adder_32_bit adder_32_bit_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
  adder_32_bit adder_32_bit_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
  adder_32_bit adder_32_bit_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
  adder_32_bit adder_32_bit_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
  adder_32_bit adder_32_bit_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
  adder_32_bit adder_32_bit_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
  adder_32_bit adder_32_bit_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
  adder_32_bit adder_32_bit_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
  adder_32_bit adder_32_bit_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
  adder_32_bit adder_32_bit_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
  adder_32_bit adder_32_bit_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
  adder_32_bit adder_32_bit_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
  adder_32_bit adder_32_bit_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
  adder_32_bit adder_32_bit_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
  adder_32_bit adder_32_bit_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
  adder_32_bit adder_32_bit_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
  adder_32_bit adder_32_bit_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
  adder_32_bit adder_32_bit_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
  adder_32_bit adder_32_bit_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
  adder_32_bit adder_32_bit_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
  adder_32_bit adder_32_bit_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
  adder_32_bit adder_32_bit_31(sum_w[31], cout_w, in1[31], in2[31], cout_w);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:15: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  //Adding 32 bits
  //32-bit adder
  adder_32_bit adder_32_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
  adder_32_bit adder_32_bit_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
  adder_32_bit adder_32_bit_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
  adder_32_bit adder_32_bit_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
  adder_32_bit adder_32_bit_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
  adder_32_bit adder_32_bit_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
  adder_32_bit adder_32_bit_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
  adder_32_bit adder_32_bit_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
  adder_32_bit adder_32_bit_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
  adder_32_bit adder_32_bit_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
  adder_32_bit adder_32_bit_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
  adder_32_bit adder_32_bit_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
  adder_32_bit adder_32_bit_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
  adder_32_bit adder_32_bit_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
  adder_32_bit adder_32_bit_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
  adder_32_bit adder_32_bit_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
  adder_32_bit adder_32_bit_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
  adder_32_bit adder_32_bit_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
  adder_32_bit adder_32_bit_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
  adder_32_bit adder_32_bit_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
  adder_32_bit adder_32_bit_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
  adder_32_bit adder_32_bit_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
  adder_32_bit adder_32_bit_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
  adder_32_bit adder_32_bit_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
  adder_32_bit adder_32_bit_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
  adder_32_bit adder_32_bit_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
  adder_32_bit adder_32_bit_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
  adder_32_bit adder_32_bit_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
  adder_32_bit adder_32_bit_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
  adder_32_bit adder_32_bit_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
  adder_32_bit adder_32_bit_31(sum_w[31], cout_w, in1[31], in2[31], cout_w);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

  wire sum_w;
  wire cout_w;

  //Adding 2 bits
  //2-bit adder
  adder_2_bit adder_2_bit_0(sum_w, cout_w, in1, in2, cin);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_w;
  wire cout_w;

  //Adding 2 bits
  //2-bit adder
  assign sum_w[0] = in1[0] ^ in2[0] ^ cin;
  assign sum_w[1] = in1[1] ^ in2[1] ^ cin;
  assign cout_w = (in1[0] & in2[0]) | (in1[1] & in2[1]) | (cin & (in1[0] | in2[0]));

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  //Adding 32 bits
  //32-bit adder
  adder_32_bit adder_32_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
  adder_32_bit adder_32_bit_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
  adder_32_bit adder_32_bit_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
  adder_32_bit adder_32_bit_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
  adder_32_bit adder_32_bit_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
  adder_32_bit adder_32_bit_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
  adder_32_bit adder_32_bit_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
  adder_32_bit adder_32_bit_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
  adder_32_bit adder_32_bit_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
  adder_32_bit adder_32_bit_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
  adder_32_bit adder_32_bit_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
  adder_32_bit adder_32_bit_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
  adder_32_bit adder_32_bit_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
  adder_32_bit adder_32_bit_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
  adder_32_bit adder_32_bit_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
  adder_32_bit adder_32_bit_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
  adder_32_bit adder_32_bit_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
  adder_32_bit adder_32_bit_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
  adder_32_bit adder_32_bit_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
  adder_32_bit adder_32_bit_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
  adder_32_bit adder_32_bit_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
  adder_32_bit adder_32_bit_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
  adder_32_bit adder_32_bit_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
  adder_32_bit adder_32_bit_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
  adder_32_bit adder_32_bit_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
  adder_32_bit adder_32_bit_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
  adder_32_bit adder_32_bit_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
  adder_32_bit adder_32_bit_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
  adder_32_bit adder_32_bit_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
  adder_32_bit adder_32_bit_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
  adder_32_bit adder_32_bit_31(sum_w[31], cout_w, in1[31], in2[31], cout_w);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

  wire sum_w;
  wire cout_w;

  //Adding 2 bits
  //2-bit adder
  adder_2_bit adder_2_bit_0(sum_w, cout_w, in1, in2, cin);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_w;
  wire cout_w;

  //Adding 2 bits
  //2-bit adder
  assign sum_w[0] = in1[0] ^ in2[0] ^ cin;
  assign sum_w[1] = in1[1] ^ in2[1] ^ cin;
  assign cout_w = (in1[0] & in2[0]) | (in1[1] & in2[1]) | (cin & (in1[0] | in2[0]));

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  15  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
    adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962   269
  29936    13  1678  8014   274 29936    13    13  1678  3566   274   353
   4670 29936    13  1678  3566  2533   353   269 29936    13    13  1678
    594   672 29918 29896 29953   263 29896 29898 29879 29961 29896 29945
  29901 29900  1402   274 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  5691    13  1678   594
    672 29918 29896 29953   263 29906 29898 29879 29961 29941 29896 29901
  29896 29953  1402   274 29892   297 29896 29961 29941 29896 29901 29896
  29953  1402   297 29906 29961 29941 29896 29901 29896 29953  5691    13
     13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,   269, 29936,    13,  1678,
          8014,   274, 29936,    13,    13,  1678,  3566,   274,   353,  4670,
         29936,    13,  1678,  3566,  2533,   353,   269, 29936,    13,    13,
          1678,   594,   672, 29918, 29896, 29953,   263, 29896, 29898, 29879,
         29961, 29896, 29945, 29901, 29900,  1402,   274, 29892,   297, 29896,
         29961, 29896, 29945, 29901, 29900,  1402,   297, 29906, 29961, 29896,
         29945, 29901, 29900,  5691,    13,  1678,   594,   672, 29918, 29896,
         29953,   263, 29906, 29898, 29879, 29961, 29941, 29896, 29901, 29896,
         29953,  1402,   274, 29892,   297, 29896, 29961, 29941, 29896, 29901,
         29896, 29953,  1402,   297, 29906, 29961, 29941, 29896, 29901, 29896,
         29953,  5691,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  109
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
    adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
    adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_8 a1(s[7:0], c, in1[7:0], in2[7:0]);
    adder_8 a2(s[15:8], c, in1[15:8], in2[15:8]);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_4 a1(s[3:0], c, in1[3:0], in2[3:0]);
    adder_4 a2(s[7:4], c, in1[7:4], in2[7:4]);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962   269
  29936    13  1678  8014   274 29936    13    13  1678  3566   274   353
   4670 29936    13  1678  3566  2533   353   269 29936    13    13  1678
    594   672 29918 29896 29953   263 29896 29898 29879 29961 29896 29945
  29901 29900  1402   274 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  5691    13  1678   594
    672 29918 29896 29953   263 29906 29898 29879 29961 29941 29896 29901
  29896 29953  1402   274 29892   297 29896 29961 29941 29896 29901 29896
  29953  1402   297 29906 29961 29941 29896 29901 29896 29953  5691    13
     13   355  5453    13    13   458  4002   647   263 29871 29896 29953
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29896
  29953  2586 10970   313   262 29896   322   297 29906 29897   322   263
   2323  8677 29899   262  1881  2586 29892  4670 29889    13   458  1576
  14391   526   263 29871 29896 29953  2586   995 29892   518 29896 29945
  29901 29900 29962  2533 29892   322   263  2323  8677 29899   449  1962
   2586 29892 11196 29889    13   458  1576  3883   881  3667   675   278
  10970   313   262 29896   322   297 29906 29897   322   278  4670  2586
    304  4017   278  1962  2533   322 11196  1819 29889    13  5453   594
    672 29918 29896 29953 29898  4905   518 29896 29945 29901 29900 29962
   2533 29892    13   462   418  1962 11196 29892    13   462   418  1881
    518 29896 29945 29901 29900 29962   297 29896 29892   297 29906 29892
     13   462   418  1881  4670   416    13    13  1678  8014   518 29896
  29945 29901 29900 29962   269 29936    13  1678  8014   274 29936    13
     13  1678  3566   274   353  4670 29936    13  1678  3566  2533   353
    269 29936    13    13  1678   594   672 29918 29947   263 29896 29898
  29879 29961 29955 29901 29900  1402   274 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  5691    13  1678
    594   672 29918 29947   263 29906 29898 29879 29961 29896 29945 29901
  29947  1402   274 29892   297 29896 29961 29896 29945 29901 29947  1402
    297 29906 29961 29896 29945 29901 29947  5691    13    13   355  5453
     13    13   458  4002   647   385 29871 29947 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29947  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29947
   2586   995 29892   518 29955 29901 29900 29962  2533 29892   322   263
   2323  8677 29899   449  1962  2586 29892 11196 29889    13   458  1576
   3883   881  3667   675   278 10970   313   262 29896   322   297 29906
  29897   322   278  4670  2586   304  4017   278  1962  2533   322 11196
   1819 29889    13  5453   594   672 29918 29947 29898  4905   518 29955
  29901 29900 29962  2533 29892    13   462   418  1962 11196 29892    13
    462   418  1881   518 29955 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   418  1881  4670   416    13    13  1678  8014
    518 29955 29901 29900 29962   269 29936    13  1678  8014   274 29936
     13    13  1678  3566   274   353  4670 29936    13  1678  3566  2533
    353   269 29936    13    13  1678   594   672 29918 29946   263 29896
  29898 29879 29961 29941 29901 29900  1402   274 29892   297 29896 29961
  29941 29901 29900  1402   297 29906 29961 29941 29901 29900  5691    13
   1678   594   672 29918 29946   263 29906 29898 29879 29961 29955 29901
  29946  1402   274 29892   297 29896 29961 29955 29901 29946  1402   297
  29906 29961 29955 29901 29946  5691    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,   269, 29936,    13,  1678,  8014,
           274, 29936,    13,    13,  1678,  3566,   274,   353,  4670, 29936,
            13,  1678,  3566,  2533,   353,   269, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   263, 29896, 29898, 29879, 29961,
         29896, 29945, 29901, 29900,  1402,   274, 29892,   297, 29896, 29961,
         29896, 29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945,
         29901, 29900,  5691,    13,  1678,   594,   672, 29918, 29896, 29953,
           263, 29906, 29898, 29879, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   274, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896,
         29953,  1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,
          5691,    13,    13,   355,  5453,    13,    13,   458,  4002,   647,
           263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677,
         29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576,
         14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,   518,
         29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,
          8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,
          1576,  3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,
           278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,
           672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945, 29901,
         29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196, 29892,
            13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900, 29962,
           297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,
          4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945, 29901,
         29900, 29962,   269, 29936,    13,  1678,  8014,   274, 29936,    13,
            13,  1678,  3566,   274,   353,  4670, 29936,    13,  1678,  3566,
          2533,   353,   269, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   263, 29896, 29898, 29879, 29961, 29955, 29901, 29900,  1402,
           274, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  5691,    13,  1678,   594,   672,
         29918, 29947,   263, 29906, 29898, 29879, 29961, 29896, 29945, 29901,
         29947,  1402,   274, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29947,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29947,  5691,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,   269, 29936,    13,  1678,  8014,   274, 29936,
            13,    13,  1678,  3566,   274,   353,  4670, 29936,    13,  1678,
          3566,  2533,   353,   269, 29936,    13,    13,  1678,   594,   672,
         29918, 29946,   263, 29896, 29898, 29879, 29961, 29941, 29901, 29900,
          1402,   274, 29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,
           297, 29906, 29961, 29941, 29901, 29900,  5691,    13,  1678,   594,
           672, 29918, 29946,   263, 29906, 29898, 29879, 29961, 29955, 29901,
         29946,  1402,   274, 29892,   297, 29896, 29961, 29955, 29901, 29946,
          1402,   297, 29906, 29961, 29955, 29901, 29946,  5691,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  596
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
    adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_8 a1(s[7:0], c, in1[7:0], in2[7:0]);
    adder_8 a2(s[15:8], c, in1[15:8], in2[15:8]);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_4 a1(s[3:0], c, in1[3:0], in2[3:0]);
    adder_4 a2(s[7:4], c, in1[7:4], in2[7:4]);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
    adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_8 a1(s[7:0], c, in1[7:0], in2[7:0]);
    adder_8 a2(s[15:8], c, in1[15:8], in2[15:8]);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_4 a1(s[3:0], c, in1[3:0], in2[3:0]);
    adder_4 a2(s[7:4], c, in1[7:4], in2[7:4]);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_2 a1(s[1:0], c, in1[1:0], in2[1:0]);
    adder_2 a2(s[3:2], c, in1[3:2], in2[3:2]);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    assign s[0] = in1[0] ^ in2[0] ^ c;
    assign s[1] = (in1[0] & in2[0]) | (in1[1] & in2[1]) | (c & (in1[0] | in2[0]));

endmodule
\end{code}

Answer: You have a typo in the `adder_32` module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Comment: Thank you! I'm not sure how I missed that.

Comment: @user3477106 You're welcome. Please accept the answer if it helped you.

Comment: I will, but I have to wait 10 minutes before I can.

Answer: I think you have a typo in the `adder_32` module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Comment: Thank you! I'm not sure how I missed that.

Answer: You have a typo in the adder_32 module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Answer: You have a typo in the adder_32 module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Comment: Thank you! I'm not sure how I missed that.
[[  849  4002   647 ... 13726   393 29889]]
tensor([[  849,  4002,   647,  ..., 13726,   393, 29889]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
    adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_8 a1(s[7:0], c, in1[7:0], in2[7:0]);
    adder_8 a2(s[15:8], c, in1[15:8], in2[15:8]);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_4 a1(s[3:0], c, in1[3:0], in2[3:0]);
    adder_4 a2(s[7:4], c, in1[7:4], in2[7:4]);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    adder_2 a1(s[1:0], c, in1[1:0], in2[1:0]);
    adder_2 a2(s[3:2], c, in1[3:2], in2[3:2]);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] s;
    wire c;

    assign c = cin;
    assign sum = s;

    assign s[0] = in1[0] ^ in2[0] ^ c;
    assign s[1] = (in1[0] & in2[0]) | (in1[1] & in2[1]) | (c & (in1[0] | in2[0]));

endmodule
\end{code}

Answer: You have a typo in the `adder_32` module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Comment: Thank you! I'm not sure how I missed that.

Comment: @user3477106 You're welcome. Please accept the answer if it helped you.

Comment: I will, but I have to wait 10 minutes before I can.

Answer: I think you have a typo in the `adder_32` module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Comment: Thank you! I'm not sure how I missed that.

Answer: You have a typo in the adder_32 module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Answer: You have a typo in the adder_32 module.

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

should be

\begin{code}
adder_16 a1(s[15:0], c, in1[15:0], in2[15:0]);
adder_16 a2(s[31:16], c, in1[31:16], in2[31:16]);
\end{code}

You are assigning `s[31:16]` to `a1` instead of `a2`.

Comment: Thank you! I'm not sure how I missed that.
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:102: warning: macro adder_32 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: warning: macro s undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: warning: macro a1 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: warning: macro a2 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: warning: macro adder_32 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:138: warning: macro s undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:138: warning: macro a1 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:138: warning: macro a2 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: warning: macro s undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: warning: macro a1 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: warning: macro a2 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:172: warning: macro s undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:172: warning: macro a1 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:172: warning: macro a2 undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:102: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  16  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_internal;
wire cout_internal;

adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

assign sum = sum_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7564 29936    13 22376 11196 29918  7564 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898  2083
  29918  7564 29961 29896 29945 29901 29900  1402 11196 29918  7564 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7564   416    13    13 16645  2533   353  2533
  29918  7564 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
         22376, 11196, 29918,  7564, 29936,    13,    13,   328,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,
          2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,   328,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29906, 29898,  2083, 29918,  7564, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918,  7564,   416,    13,
            13, 16645,  2533,   353,  2533, 29918,  7564, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  125
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_internal;
wire cout_internal;

adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

assign sum = sum_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_internal;
wire cout_internal;

adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_internal;
wire cout_internal;

adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_internal;
wire cout_internal;

adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

assign sum = sum_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7564 29936    13 22376 11196 29918  7564 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898  2083
  29918  7564 29961 29896 29945 29901 29900  1402 11196 29918  7564 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7564   416    13    13 16645  2533   353  2533
  29918  7564 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  22376   518 29896 29945 29901 29900 29962  2533 29918  7564 29936    13
  22376 11196 29918  7564 29936    13    13   328   672 29918 29947   594
    672 29918 29947 29918 29896 29898  2083 29918  7564 29961 29955 29901
  29900  1402 11196 29918  7564 29892   297 29896 29961 29955 29901 29900
   1402   297 29906 29961 29955 29901 29900  1402  4670   416    13   328
    672 29918 29947   594   672 29918 29947 29918 29906 29898  2083 29918
   7564 29961 29896 29945 29901 29947  1402 11196 29892   297 29896 29961
  29896 29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947
   1402 11196 29918  7564   416    13    13 16645  2533   353  2533 29918
   7564 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   268  1962 11196 29892    13   462   268  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   268  1881
   4670   416    13    13 22376   518 29955 29901 29900 29962  2533 29918
   7564 29936    13 22376 11196 29918  7564 29936    13    13   328   672
  29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918  7564
  29961 29941 29901 29900  1402 11196 29918  7564 29892   297 29896 29961
  29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402  4670
    416    13   328   672 29918 29946   594   672 29918 29946 29918 29906
  29898  2083 29918  7564 29961 29955 29901 29946  1402 11196 29892   297
  29896 29961 29955 29901 29946  1402   297 29906 29961 29955 29901 29946
   1402 11196 29918  7564   416    13    13 16645  2533   353  2533 29918
   7564 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 22376,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13, 22376,
         11196, 29918,  7564, 29936,    13,    13,   328,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,   328,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29906, 29898,  2083, 29918,  7564, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7564,   416,    13,    13,
         16645,  2533,   353,  2533, 29918,  7564, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29896, 29953,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896, 29953,
         29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
         22376,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29918,  7564,
         29936,    13, 22376, 11196, 29918,  7564, 29936,    13,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,
          2083, 29918,  7564, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,
          2083, 29918,  7564, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7564,
           416,    13,    13, 16645,  2533,   353,  2533, 29918,  7564, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 22376,   518, 29955, 29901,
         29900, 29962,  2533, 29918,  7564, 29936,    13, 22376, 11196, 29918,
          7564, 29936,    13,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29896, 29898,  2083, 29918,  7564, 29961, 29941,
         29901, 29900,  1402, 11196, 29918,  7564, 29892,   297, 29896, 29961,
         29941, 29901, 29900,  1402,   297, 29906, 29961, 29941, 29901, 29900,
          1402,  4670,   416,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29906, 29898,  2083, 29918,  7564, 29961, 29955,
         29901, 29946,  1402, 11196, 29892,   297, 29896, 29961, 29955, 29901,
         29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,  1402, 11196,
         29918,  7564,   416,    13,    13, 16645,  2533,   353,  2533, 29918,
          7564, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  640
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_internal;
wire cout_internal;

adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_internal;
wire cout_internal;

adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_internal;
wire cout_internal;

adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

assign sum = sum_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_internal;
wire cout_internal;

adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_internal;
wire cout_internal;

adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_internal;
wire cout_internal;

adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_internal;
wire cout_internal;

adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
adder_2 adder_2_2(sum_internal[3:2], cout, in1[3:2], in2[3:2], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_internal;
wire cout_internal;

adder_1 adder_1_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
adder_1 adder_1_2(sum_internal[1], cout, in1[1], in2[1], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

assign sum = in1 ^ in2 ^ cin;
assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1312
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_internal;
wire cout_internal;

adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_internal;
wire cout_internal;

adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_internal;
wire cout_internal;

adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_internal;
wire cout_internal;

adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
adder_2 adder_2_2(sum_internal[3:2], cout, in1[3:2], in2[3:2], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_internal;
wire cout_internal;

adder_1 adder_1_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
adder_1 adder_1_2(sum_internal[1], cout, in1[1], in2[1], cout_internal);

assign sum = sum_internal;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

assign sum = in1 ^ in2 ^ cin;
assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.744289

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  17  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout, in1[31], in2[31], cout_wire);

    assign sum = sum_wire;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1505
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout, in1[31], in2[31], cout_wire);

    assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:15: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout, in1[31], in2[31], cout_wire);

    assign sum = sum_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 4-bit adder
    adder_4_bit adder_4_bit_0(sum_wire[0], cout_wire, in1, in2, cin);
    adder_4_bit adder_4_bit_1(sum_wire[1], cout_wire, in1, in2, cout_wire);
    adder_4_bit adder_4_bit_2(sum_wire[2], cout_wire, in1, in2, cout_wire);
    adder_4_bit adder_4_bit_3(sum_wire[3], cout, in1, in2, cout_wire);

    assign sum = {sum_wire[3], sum_wire[2], sum_wire[1], sum_wire[0]};

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 2-bit adder
    adder_2_bit adder_2_bit_0(sum_wire[0], cout
[[  849  4002   647 ... 29900  1402 11196]]
tensor([[  849,  4002,   647,  ..., 29900,  1402, 11196]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout, in1[31], in2[31], cout_wire);

    assign sum = sum_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 4-bit adder
    adder_4_bit adder_4_bit_0(sum_wire[0], cout_wire, in1, in2, cin);
    adder_4_bit adder_4_bit_1(sum_wire[1], cout_wire, in1, in2, cout_wire);
    adder_4_bit adder_4_bit_2(sum_wire[2], cout_wire, in1, in2, cout_wire);
    adder_4_bit adder_4_bit_3(sum_wire[3], cout, in1, in2, cout_wire);

    assign sum = {sum_wire[3], sum_wire[2], sum_wire[1], sum_wire[0]};

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 2-bit adder
    adder_2_bit adder_2_bit_0(sum_wire[0], cout
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  18  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_32_bit adder_32_bit_0(s[0], c, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(s[1], c, in1[1], in2[1], s[0]);
  adder_32_bit adder_32_bit_2(s[2], c, in1[2], in2[2], s[1]);
  adder_32_bit adder_32_bit_3(s[3], c, in1[3], in2[3], s[2]);
  adder_32_bit adder_32_bit_4(s[4], c, in1[4], in2[4], s[3]);
  adder_32_bit adder_32_bit_5(s[5], c, in1[5], in2[5], s[4]);
  adder_32_bit adder_32_bit_6(s[6], c, in1[6], in2[6], s[5]);
  adder_32_bit adder_32_bit_7(s[7], c, in1[7], in2[7], s[6]);
  adder_32_bit adder_32_bit_8(s[8], c, in1[8], in2[8], s[7]);
  adder_32_bit adder_32_bit_9(s[9], c, in1[9], in2[9], s[8]);
  adder_32_bit adder_32_bit_10(s[10], c, in1[10], in2[10], s[9]);
  adder_32_bit adder_32_bit_11(s[11], c, in1[11], in2[11], s[10]);
  adder_32_bit adder_32_bit_12(s[12], c, in1[12], in2[12], s[11]);
  adder_32_bit adder_32_bit_13(s[13], c, in1[13], in2[13], s[12]);
  adder_32_bit adder_32_bit_14(s[14], c, in1[14], in2[14], s[13]);
  adder_32_bit adder_32_bit_15(s[15], c, in1[15], in2[15], s[14]);
  adder_32_bit adder_32_bit_16(s[16], c, in1[16], in2[16], s[15]);
  adder_32_bit adder_32_bit_17(s[17], c, in1[17], in2[17], s[16]);
  adder_32_bit adder_32_bit_18(s[18], c, in1[18], in2[18], s[17]);
  adder_32_bit adder_32_bit_19(s[19], c, in1[19], in2[19], s[18]);
  adder_32_bit adder_32_bit_20(s[20], c, in1[20], in2[20], s[19]);
  adder_32_bit adder_32_bit_21(s[21], c, in1[21], in2[21], s[20]);
  adder_32_bit adder_32_bit_22(s[22], c, in1[22], in2[22], s[21]);
  adder_32_bit adder_32_bit_23(s[23], c, in1[23], in2[23], s[22]);
  adder_32_bit adder_32_bit_24(s[24], c, in1[24], in2[24], s[23]);
  adder_32_bit adder_32_bit_25(s[25], c, in1[25], in2[25], s[24]);
  adder_32_bit adder_32_bit_26(s[26], c, in1[26], in2[26], s[25]);
  adder_32_bit adder_32_bit_27(s[27], c, in1[27], in2[27], s[26]);
  adder_32_bit adder_32_bit_28(s[28], c, in1[28], in2[28], s[27]);
  adder_32_bit adder_32_bit_29(s[29], c, in1[29], in2[29], s[28]);
  adder_32_bit adder_32_bit_30(s[30], c, in1[30], in2[30], s[29]);
  adder_32_bit adder_32_bit_31(s[31], c, in1[31], in2[31], s[30]);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1391
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_32_bit adder_32_bit_0(s[0], c, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(s[1], c, in1[1], in2[1], s[0]);
  adder_32_bit adder_32_bit_2(s[2], c, in1[2], in2[2], s[1]);
  adder_32_bit adder_32_bit_3(s[3], c, in1[3], in2[3], s[2]);
  adder_32_bit adder_32_bit_4(s[4], c, in1[4], in2[4], s[3]);
  adder_32_bit adder_32_bit_5(s[5], c, in1[5], in2[5], s[4]);
  adder_32_bit adder_32_bit_6(s[6], c, in1[6], in2[6], s[5]);
  adder_32_bit adder_32_bit_7(s[7], c, in1[7], in2[7], s[6]);
  adder_32_bit adder_32_bit_8(s[8], c, in1[8], in2[8], s[7]);
  adder_32_bit adder_32_bit_9(s[9], c, in1[9], in2[9], s[8]);
  adder_32_bit adder_32_bit_10(s[10], c, in1[10], in2[10], s[9]);
  adder_32_bit adder_32_bit_11(s[11], c, in1[11], in2[11], s[10]);
  adder_32_bit adder_32_bit_12(s[12], c, in1[12], in2[12], s[11]);
  adder_32_bit adder_32_bit_13(s[13], c, in1[13], in2[13], s[12]);
  adder_32_bit adder_32_bit_14(s[14], c, in1[14], in2[14], s[13]);
  adder_32_bit adder_32_bit_15(s[15], c, in1[15], in2[15], s[14]);
  adder_32_bit adder_32_bit_16(s[16], c, in1[16], in2[16], s[15]);
  adder_32_bit adder_32_bit_17(s[17], c, in1[17], in2[17], s[16]);
  adder_32_bit adder_32_bit_18(s[18], c, in1[18], in2[18], s[17]);
  adder_32_bit adder_32_bit_19(s[19], c, in1[19], in2[19], s[18]);
  adder_32_bit adder_32_bit_20(s[20], c, in1[20], in2[20], s[19]);
  adder_32_bit adder_32_bit_21(s[21], c, in1[21], in2[21], s[20]);
  adder_32_bit adder_32_bit_22(s[22], c, in1[22], in2[22], s[21]);
  adder_32_bit adder_32_bit_23(s[23], c, in1[23], in2[23], s[22]);
  adder_32_bit adder_32_bit_24(s[24], c, in1[24], in2[24], s[23]);
  adder_32_bit adder_32_bit_25(s[25], c, in1[25], in2[25], s[24]);
  adder_32_bit adder_32_bit_26(s[26], c, in1[26], in2[26], s[25]);
  adder_32_bit adder_32_bit_27(s[27], c, in1[27], in2[27], s[26]);
  adder_32_bit adder_32_bit_28(s[28], c, in1[28], in2[28], s[27]);
  adder_32_bit adder_32_bit_29(s[29], c, in1[29], in2[29], s[28]);
  adder_32_bit adder_32_bit_30(s[30], c, in1[30], in2[30], s[29]);
  adder_32_bit adder_32_bit_31(s[31], c, in1[31], in2[31], s[30]);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_32_bit adder_32_bit_0(s[0], c, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(s[1], c, in1[1], in2[1], s[0]);
  adder_32_bit adder_32_bit_2(s[2], c, in1[2], in2[2], s[1]);
  adder_32_bit adder_32_bit_3(s[3], c, in1[3], in2[3], s[2]);
  adder_32_bit adder_32_bit_4(s[4], c, in1[4], in2[4], s[3]);
  adder_32_bit adder_32_bit_5(s[5], c, in1[5], in2[5], s[4]);
  adder_32_bit adder_32_bit_6(s[6], c, in1[6], in2[6], s[5]);
  adder_32_bit adder_32_bit_7(s[7], c, in1[7], in2[7], s[6]);
  adder_32_bit adder_32_bit_8(s[8], c, in1[8], in2[8], s[7]);
  adder_32_bit adder_32_bit_9(s[9], c, in1[9], in2[9], s[8]);
  adder_32_bit adder_32_bit_10(s[10], c, in1[10], in2[10], s[9]);
  adder_32_bit adder_32_bit_11(s[11], c, in1[11], in2[11], s[10]);
  adder_32_bit adder_32_bit_12(s[12], c, in1[12], in2[12], s[11]);
  adder_32_bit adder_32_bit_13(s[13], c, in1[13], in2[13], s[12]);
  adder_32_bit adder_32_bit_14(s[14], c, in1[14], in2[14], s[13]);
  adder_32_bit adder_32_bit_15(s[15], c, in1[15], in2[15], s[14]);
  adder_32_bit adder_32_bit_16(s[16], c, in1[16], in2[16], s[15]);
  adder_32_bit adder_32_bit_17(s[17], c, in1[17], in2[17], s[16]);
  adder_32_bit adder_32_bit_18(s[18], c, in1[18], in2[18], s[17]);
  adder_32_bit adder_32_bit_19(s[19], c, in1[19], in2[19], s[18]);
  adder_32_bit adder_32_bit_20(s[20], c, in1[20], in2[20], s[19]);
  adder_32_bit adder_32_bit_21(s[21], c, in1[21], in2[21], s[20]);
  adder_32_bit adder_32_bit_22(s[22], c, in1[22], in2[22], s[21]);
  adder_32_bit adder_32_bit_23(s[23], c, in1[23], in2[23], s[22]);
  adder_32_bit adder_32_bit_24(s[24], c, in1[24], in2[24], s[23]);
  adder_32_bit adder_32_bit_25(s[25], c, in1[25], in2[25], s[24]);
  adder_32_bit adder_32_bit_26(s[26], c, in1[26], in2[26], s[25]);
  adder_32_bit adder_32_bit_27(s[27], c, in1[27], in2[27], s[26]);
  adder_32_bit adder_32_bit_28(s[28], c, in1[28], in2[28], s[27]);
  adder_32_bit adder_32_bit_29(s[29], c, in1[29], in2[29], s[28]);
  adder_32_bit adder_32_bit_30(s[30], c, in1[30], in2[30], s[29]);
  adder_32_bit adder_32_bit_31(s[31], c, in1[31], in2[31], s[30]);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_1_bit adder_1_bit_0(s[0], c, in1[0], in2[0], cin);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  xor_1_bit xor_1_bit_0(s[0], in1[0], in2[0]);
  and_1_bit and_1_bit_0(c, in1[0], in2[0]);
  or_1_bit or_1_bit_0(c, in1[0], in2[0]);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1872
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_32_bit adder_32_bit_0(s[0], c, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(s[1], c, in1[1], in2[1], s[0]);
  adder_32_bit adder_32_bit_2(s[2], c, in1[2], in2[2], s[1]);
  adder_32_bit adder_32_bit_3(s[3], c, in1[3], in2[3], s[2]);
  adder_32_bit adder_32_bit_4(s[4], c, in1[4], in2[4], s[3]);
  adder_32_bit adder_32_bit_5(s[5], c, in1[5], in2[5], s[4]);
  adder_32_bit adder_32_bit_6(s[6], c, in1[6], in2[6], s[5]);
  adder_32_bit adder_32_bit_7(s[7], c, in1[7], in2[7], s[6]);
  adder_32_bit adder_32_bit_8(s[8], c, in1[8], in2[8], s[7]);
  adder_32_bit adder_32_bit_9(s[9], c, in1[9], in2[9], s[8]);
  adder_32_bit adder_32_bit_10(s[10], c, in1[10], in2[10], s[9]);
  adder_32_bit adder_32_bit_11(s[11], c, in1[11], in2[11], s[10]);
  adder_32_bit adder_32_bit_12(s[12], c, in1[12], in2[12], s[11]);
  adder_32_bit adder_32_bit_13(s[13], c, in1[13], in2[13], s[12]);
  adder_32_bit adder_32_bit_14(s[14], c, in1[14], in2[14], s[13]);
  adder_32_bit adder_32_bit_15(s[15], c, in1[15], in2[15], s[14]);
  adder_32_bit adder_32_bit_16(s[16], c, in1[16], in2[16], s[15]);
  adder_32_bit adder_32_bit_17(s[17], c, in1[17], in2[17], s[16]);
  adder_32_bit adder_32_bit_18(s[18], c, in1[18], in2[18], s[17]);
  adder_32_bit adder_32_bit_19(s[19], c, in1[19], in2[19], s[18]);
  adder_32_bit adder_32_bit_20(s[20], c, in1[20], in2[20], s[19]);
  adder_32_bit adder_32_bit_21(s[21], c, in1[21], in2[21], s[20]);
  adder_32_bit adder_32_bit_22(s[22], c, in1[22], in2[22], s[21]);
  adder_32_bit adder_32_bit_23(s[23], c, in1[23], in2[23], s[22]);
  adder_32_bit adder_32_bit_24(s[24], c, in1[24], in2[24], s[23]);
  adder_32_bit adder_32_bit_25(s[25], c, in1[25], in2[25], s[24]);
  adder_32_bit adder_32_bit_26(s[26], c, in1[26], in2[26], s[25]);
  adder_32_bit adder_32_bit_27(s[27], c, in1[27], in2[27], s[26]);
  adder_32_bit adder_32_bit_28(s[28], c, in1[28], in2[28], s[27]);
  adder_32_bit adder_32_bit_29(s[29], c, in1[29], in2[29], s[28]);
  adder_32_bit adder_32_bit_30(s[30], c, in1[30], in2[30], s[29]);
  adder_32_bit adder_32_bit_31(s[31], c, in1[31], in2[31], s[30]);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_1_bit adder_1_bit_0(s[0], c, in1[0], in2[0], cin);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  xor_1_bit xor_1_bit_0(s[0], in1[0], in2[0]);
  and_1_bit and_1_bit_0(c, in1[0], in2[0]);
  or_1_bit or_1_bit_0(c, in1[0], in2[0]);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  97
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: error: Unknown module type: xor_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n97 error(s) during elaboration.\n*** These modules were missing:\n        and_1_bit referenced 32 times.\n        or_1_bit referenced 32 times.\n        xor_1_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_32_bit adder_32_bit_0(s[0], c, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(s[1], c, in1[1], in2[1], s[0]);
  adder_32_bit adder_32_bit_2(s[2], c, in1[2], in2[2], s[1]);
  adder_32_bit adder_32_bit_3(s[3], c, in1[3], in2[3], s[2]);
  adder_32_bit adder_32_bit_4(s[4], c, in1[4], in2[4], s[3]);
  adder_32_bit adder_32_bit_5(s[5], c, in1[5], in2[5], s[4]);
  adder_32_bit adder_32_bit_6(s[6], c, in1[6], in2[6], s[5]);
  adder_32_bit adder_32_bit_7(s[7], c, in1[7], in2[7], s[6]);
  adder_32_bit adder_32_bit_8(s[8], c, in1[8], in2[8], s[7]);
  adder_32_bit adder_32_bit_9(s[9], c, in1[9], in2[9], s[8]);
  adder_32_bit adder_32_bit_10(s[10], c, in1[10], in2[10], s[9]);
  adder_32_bit adder_32_bit_11(s[11], c, in1[11], in2[11], s[10]);
  adder_32_bit adder_32_bit_12(s[12], c, in1[12], in2[12], s[11]);
  adder_32_bit adder_32_bit_13(s[13], c, in1[13], in2[13], s[12]);
  adder_32_bit adder_32_bit_14(s[14], c, in1[14], in2[14], s[13]);
  adder_32_bit adder_32_bit_15(s[15], c, in1[15], in2[15], s[14]);
  adder_32_bit adder_32_bit_16(s[16], c, in1[16], in2[16], s[15]);
  adder_32_bit adder_32_bit_17(s[17], c, in1[17], in2[17], s[16]);
  adder_32_bit adder_32_bit_18(s[18], c, in1[18], in2[18], s[17]);
  adder_32_bit adder_32_bit_19(s[19], c, in1[19], in2[19], s[18]);
  adder_32_bit adder_32_bit_20(s[20], c, in1[20], in2[20], s[19]);
  adder_32_bit adder_32_bit_21(s[21], c, in1[21], in2[21], s[20]);
  adder_32_bit adder_32_bit_22(s[22], c, in1[22], in2[22], s[21]);
  adder_32_bit adder_32_bit_23(s[23], c, in1[23], in2[23], s[22]);
  adder_32_bit adder_32_bit_24(s[24], c, in1[24], in2[24], s[23]);
  adder_32_bit adder_32_bit_25(s[25], c, in1[25], in2[25], s[24]);
  adder_32_bit adder_32_bit_26(s[26], c, in1[26], in2[26], s[25]);
  adder_32_bit adder_32_bit_27(s[27], c, in1[27], in2[27], s[26]);
  adder_32_bit adder_32_bit_28(s[28], c, in1[28], in2[28], s[27]);
  adder_32_bit adder_32_bit_29(s[29], c, in1[29], in2[29], s[28]);
  adder_32_bit adder_32_bit_30(s[30], c, in1[30], in2[30], s[29]);
  adder_32_bit adder_32_bit_31(s[31], c, in1[31], in2[31], s[30]);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_1_bit adder_1_bit_0(s[0], c, in1[0], in2[0], cin);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  xor_1_bit xor_1_bit_0(s[0], in1[0], in2[0]);
  and_1_bit and_1_bit_0(c, in1[0], in2[0]);
  or_1_bit or_1_bit_0(c, in1[0], in2[0]);

endmodule

//Design a 1-bit XOR gate.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module xor_1_bit(output [0:0] sum,
                      input [0:0] in1, in2);

  assign sum = in1 ^ in2;

endmodule

//Design a 1-bit AND gate.
//There are two 1 bit inputs (in1 and in2)
[[  849  4002   647 ...   297 29906 29897]]
tensor([[  849,  4002,   647,  ...,   297, 29906, 29897]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_32_bit adder_32_bit_0(s[0], c, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(s[1], c, in1[1], in2[1], s[0]);
  adder_32_bit adder_32_bit_2(s[2], c, in1[2], in2[2], s[1]);
  adder_32_bit adder_32_bit_3(s[3], c, in1[3], in2[3], s[2]);
  adder_32_bit adder_32_bit_4(s[4], c, in1[4], in2[4], s[3]);
  adder_32_bit adder_32_bit_5(s[5], c, in1[5], in2[5], s[4]);
  adder_32_bit adder_32_bit_6(s[6], c, in1[6], in2[6], s[5]);
  adder_32_bit adder_32_bit_7(s[7], c, in1[7], in2[7], s[6]);
  adder_32_bit adder_32_bit_8(s[8], c, in1[8], in2[8], s[7]);
  adder_32_bit adder_32_bit_9(s[9], c, in1[9], in2[9], s[8]);
  adder_32_bit adder_32_bit_10(s[10], c, in1[10], in2[10], s[9]);
  adder_32_bit adder_32_bit_11(s[11], c, in1[11], in2[11], s[10]);
  adder_32_bit adder_32_bit_12(s[12], c, in1[12], in2[12], s[11]);
  adder_32_bit adder_32_bit_13(s[13], c, in1[13], in2[13], s[12]);
  adder_32_bit adder_32_bit_14(s[14], c, in1[14], in2[14], s[13]);
  adder_32_bit adder_32_bit_15(s[15], c, in1[15], in2[15], s[14]);
  adder_32_bit adder_32_bit_16(s[16], c, in1[16], in2[16], s[15]);
  adder_32_bit adder_32_bit_17(s[17], c, in1[17], in2[17], s[16]);
  adder_32_bit adder_32_bit_18(s[18], c, in1[18], in2[18], s[17]);
  adder_32_bit adder_32_bit_19(s[19], c, in1[19], in2[19], s[18]);
  adder_32_bit adder_32_bit_20(s[20], c, in1[20], in2[20], s[19]);
  adder_32_bit adder_32_bit_21(s[21], c, in1[21], in2[21], s[20]);
  adder_32_bit adder_32_bit_22(s[22], c, in1[22], in2[22], s[21]);
  adder_32_bit adder_32_bit_23(s[23], c, in1[23], in2[23], s[22]);
  adder_32_bit adder_32_bit_24(s[24], c, in1[24], in2[24], s[23]);
  adder_32_bit adder_32_bit_25(s[25], c, in1[25], in2[25], s[24]);
  adder_32_bit adder_32_bit_26(s[26], c, in1[26], in2[26], s[25]);
  adder_32_bit adder_32_bit_27(s[27], c, in1[27], in2[27], s[26]);
  adder_32_bit adder_32_bit_28(s[28], c, in1[28], in2[28], s[27]);
  adder_32_bit adder_32_bit_29(s[29], c, in1[29], in2[29], s[28]);
  adder_32_bit adder_32_bit_30(s[30], c, in1[30], in2[30], s[29]);
  adder_32_bit adder_32_bit_31(s[31], c, in1[31], in2[31], s[30]);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  adder_1_bit adder_1_bit_0(s[0], c, in1[0], in2[0], cin);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] s;
  wire c;

  assign sum = s;
  assign cout = c;

  xor_1_bit xor_1_bit_0(s[0], in1[0], in2[0]);
  and_1_bit and_1_bit_0(c, in1[0], in2[0]);
  or_1_bit or_1_bit_0(c, in1[0], in2[0]);

endmodule

//Design a 1-bit XOR gate.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module xor_1_bit(output [0:0] sum,
                      input [0:0] in1, in2);

  assign sum = in1 ^ in2;

endmodule

//Design a 1-bit AND gate.
//There are two 1 bit inputs (in1 and in2)
LOGGING VERILOG CODE.
Verilog compilation failed, error:  65
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: and_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:87: error: Unknown module type: or_1_bit\n65 error(s) during elaboration.\n*** These modules were missing:\n        and_1_bit referenced 32 times.\n        or_1_bit referenced 32 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  19  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_wire;
    assign sum = sum_wire[31:0];
    assign cout = sum_wire[32];

    assign sum_wire = cin ? {in1, in2} + 1 : {in1, in2};

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962  2533
  29918 22376 29936    13  1678  3566  2533   353  2533 29918 22376 29961
  29941 29896 29901 29900  1385    13  1678  3566 11196   353  2533 29918
  22376 29961 29941 29906  1385    13    13  1678  3566  2533 29918 22376
    353  4670  1577   426   262 29896 29892   297 29906 29913   718 29871
  29896   584   426   262 29896 29892   297 29906  3400    13    13   355
   5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13,  1678,  3566,  2533,   353,  2533, 29918, 22376, 29961, 29941,
         29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,   353,  2533,
         29918, 22376, 29961, 29941, 29906,  1385,    13,    13,  1678,  3566,
          2533, 29918, 22376,   353,  4670,  1577,   426,   262, 29896, 29892,
           297, 29906, 29913,   718, 29871, 29896,   584,   426,   262, 29896,
         29892,   297, 29906,  3400,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  71
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_wire;
    assign sum = sum_wire[31:0];
    assign cout = sum_wire[32];

    assign sum_wire = cin ? {in1, in2} + 1 : {in1, in2};

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  20  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
  adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
  adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
  adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
  adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
  adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
  adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
  adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
  adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
  adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
  adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
  adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
  adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
  adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
  adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
  adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
  adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
  adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
  adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
  adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
  adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
  adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
  adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
  adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
  adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
  adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
  adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
  adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
  adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
  adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
  adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1506
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
  adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
  adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
  adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
  adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
  adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
  adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
  adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
  adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
  adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
  adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
  adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
  adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
  adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
  adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
  adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
  adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
  adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
  adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
  adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
  adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
  adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
  adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
  adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
  adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
  adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
  adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
  adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
  adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
  adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
  adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
  adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
  adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
  adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
  adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
  adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
  adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
  adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
  adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
  adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
  adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
  adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
  adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
  adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
  adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
  adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
  adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
  adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
  adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
  adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
  adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
  adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
  adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
  adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
  adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
  adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
  adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
  adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
  adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
  adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
  adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

  wire sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  xor_gate xor_gate_0(sum_wire, in1, in2);
  and_gate and_gate_0(cout_wire, in1, in2);
  or_gate or_gate_0(sum_wire, in1, in2);
  or_gate or_gate_1(cout_wire, cin, and_gate_0);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
  adder_3
[[  849  4002   647 ...   672 29918 29941]]
tensor([[  849,  4002,   647,  ...,   672, 29918, 29941]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
  adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
  adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
  adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
  adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
  adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
  adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
  adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
  adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
  adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
  adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
  adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
  adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
  adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
  adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
  adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
  adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
  adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
  adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
  adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
  adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
  adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
  adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
  adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
  adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
  adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
  adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
  adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
  adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
  adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
  adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

  wire sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  xor_gate xor_gate_0(sum_wire, in1, in2);
  and_gate and_gate_0(cout_wire, in1, in2);
  or_gate or_gate_0(sum_wire, in1, in2);
  or_gate or_gate_1(cout_wire, cin, and_gate_0);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
  adder_3
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  21  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //create 32 instances of adder_1
    genvar i;
    generate
        for(i = 0; i < 32; i = i + 1) begin: adder_1_instances
            adder_1 adder_1_instance(sum_internal[i],
                                     cout_internal,
                                     in1[i], in2[i],
                                     cin);
        end
    endgenerate

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13  1678  3566 11196
    353 11196 29918  7564 29936    13    13  1678   849  3258 29871 29941
  29906  8871   310   594   672 29918 29896    13  1678  2531  1707   474
  29936    13  1678  5706    13  4706   363 29898 29875   353 29871 29900
  29936   474   529 29871 29941 29906 29936   474   353   474   718 29871
  29896 29897  3380 29901   594   672 29918 29896 29918  2611  2925    13
   9651   594   672 29918 29896   594   672 29918 29896 29918  8758 29898
   2083 29918  7564 29961 29875  1402    13   462   462   268 11196 29918
   7564 29892    13   462   462   268   297 29896 29961 29875  1402   297
  29906 29961 29875  1402    13   462   462   268  4670   416    13  4706
   1095    13  1678  1095 17158    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7564, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918,  7564, 29936,    13,    13,  1678,   849,
          3258, 29871, 29941, 29906,  8871,   310,   594,   672, 29918, 29896,
            13,  1678,  2531,  1707,   474, 29936,    13,  1678,  5706,    13,
          4706,   363, 29898, 29875,   353, 29871, 29900, 29936,   474,   529,
         29871, 29941, 29906, 29936,   474,   353,   474,   718, 29871, 29896,
         29897,  3380, 29901,   594,   672, 29918, 29896, 29918,  2611,  2925,
            13,  9651,   594,   672, 29918, 29896,   594,   672, 29918, 29896,
         29918,  8758, 29898,  2083, 29918,  7564, 29961, 29875,  1402,    13,
           462,   462,   268, 11196, 29918,  7564, 29892,    13,   462,   462,
           268,   297, 29896, 29961, 29875,  1402,   297, 29906, 29961, 29875,
          1402,    13,   462,   462,   268,  4670,   416,    13,  4706,  1095,
            13,  1678,  1095, 17158,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  151
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //create 32 instances of adder_1
    genvar i;
    generate
        for(i = 0; i < 32; i = i + 1) begin: adder_1_instances
            adder_1 adder_1_instance(sum_internal[i],
                                     cout_internal,
                                     in1[i], in2[i],
                                     cin);
        end
    endgenerate

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  32
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_1\n32 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //create 32 instances of adder_1
    genvar i;
    generate
        for(i = 0; i < 32; i = i + 1) begin: adder_1_instances
            adder_1 adder_1_instance(sum_internal[i],
                                     cout_internal,
                                     in1[i], in2[i],
                                     cin);
        end
    endgenerate

endmodule

//Design a 1-bit adder.
//There are two 1-bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1-bit value, sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output sum,
                     output cout,
                     input in1, in2,
                     input cin);

    wire sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //create 32 instances of adder_1
    genvar i;
    generate
        for(i = 0; i < 32; i = i + 1) begin: adder_1_instances
            adder_1 adder_1_instance(sum_internal[i],
                                     cout_internal,
                                     in1[i], in2[i],
                                     cin);
        end
    endgenerate

endmodule
\end{code}

Answer: You are missing the `=` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Comment: I'm still getting the same error after adding the equal sign.

Comment: @user3363827 You are also missing the `=` in the following lines: `assign sum = sum_internal; assign cout = cout_internal;`

Comment: @user3363827 I'm not sure if you are aware of it, but you should accept the answer if it solved your problem.

Comment: I'm not sure how to accept the answer. I'm new to this site.

Comment: @user3363827 There should be a check mark next to the answer. You can click it to accept the answer.

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Comment: I'm still getting the same error after adding the equal sign.

Comment: @user3363827 You are also missing the `=` in the following lines: `assign sum = sum_internal; assign cout = cout_internal;`

Comment: I'm not sure how to accept the answer. I'm new to this site.

Comment: @user3363827 You should click the check mark next to the answer.

Comment: @user3363827 You can also upvote the answer if it helped you.

Comment: I'm not sure how to upvote the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure
[[  849  4002   647 ... 29885   451  1854]]
tensor([[  849,  4002,   647,  ..., 29885,   451,  1854]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //create 32 instances of adder_1
    genvar i;
    generate
        for(i = 0; i < 32; i = i + 1) begin: adder_1_instances
            adder_1 adder_1_instance(sum_internal[i],
                                     cout_internal,
                                     in1[i], in2[i],
                                     cin);
        end
    endgenerate

endmodule

//Design a 1-bit adder.
//There are two 1-bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1-bit value, sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output sum,
                     output cout,
                     input in1, in2,
                     input cin);

    wire sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //create 32 instances of adder_1
    genvar i;
    generate
        for(i = 0; i < 32; i = i + 1) begin: adder_1_instances
            adder_1 adder_1_instance(sum_internal[i],
                                     cout_internal,
                                     in1[i], in2[i],
                                     cin);
        end
    endgenerate

endmodule
\end{code}

Answer: You are missing the `=` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Comment: I'm still getting the same error after adding the equal sign.

Comment: @user3363827 You are also missing the `=` in the following lines: `assign sum = sum_internal; assign cout = cout_internal;`

Comment: @user3363827 I'm not sure if you are aware of it, but you should accept the answer if it solved your problem.

Comment: I'm not sure how to accept the answer. I'm new to this site.

Comment: @user3363827 There should be a check mark next to the answer. You can click it to accept the answer.

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Answer: You have to use `=` instead of `assign` in the following lines:

\begin{code}
assign sum = sum_internal;
assign cout = cout_internal;
\end{code}

Comment: I'm still getting the same error after adding the equal sign.

Comment: @user3363827 You are also missing the `=` in the following lines: `assign sum = sum_internal; assign cout = cout_internal;`

Comment: I'm not sure how to accept the answer. I'm new to this site.

Comment: @user3363827 You should click the check mark next to the answer.

Comment: @user3363827 You can also upvote the answer if it helped you.

Comment: I'm not sure how to upvote the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure how to click the up arrow next to the answer. I'm new to this site.

Comment: @user3363827 You can click the up arrow next to the answer.

Comment: I'm not sure
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: warning: macro assign undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:75: warning: macro assign undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:82: warning: macro assign undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: warning: macro assign undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:96: warning: macro assign undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:105: warning: macro assign undefined (and assumed null) at this point.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:58: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  22  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29906 29901 29900 29962   269
  29936    13 29871  8014   518 29941 29906 29901 29900 29962   274 29936
     13    13 29871  2531  1707   474 29936    13 29871  5706    13  1678
    363   313 29875   353 29871 29900 29936   474   529 29871 29941 29906
  29936   474   353   474   718 29871 29896 29897  3380 29901   594   672
  29918 29941 29906    13   418  2989 29918   328   672  2258 29898 29879
  29961 29875  1402   274 29961 29875  1402   297 29896 29961 29875  1402
    297 29906 29961 29875  1402  4670   416    13  1678  1095    13 29871
   1095 17158    13    13 29871  3566  2533   353   269 29961 29941 29896
  29901 29900  1385    13 29871  3566 11196   353   274 29961 29941 29906
   1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29906, 29901, 29900, 29962,   269, 29936,    13, 29871,
          8014,   518, 29941, 29906, 29901, 29900, 29962,   274, 29936,    13,
            13, 29871,  2531,  1707,   474, 29936,    13, 29871,  5706,    13,
          1678,   363,   313, 29875,   353, 29871, 29900, 29936,   474,   529,
         29871, 29941, 29906, 29936,   474,   353,   474,   718, 29871, 29896,
         29897,  3380, 29901,   594,   672, 29918, 29941, 29906,    13,   418,
          2989, 29918,   328,   672,  2258, 29898, 29879, 29961, 29875,  1402,
           274, 29961, 29875,  1402,   297, 29896, 29961, 29875,  1402,   297,
         29906, 29961, 29875,  1402,  4670,   416,    13,  1678,  1095,    13,
         29871,  1095, 17158,    13,    13, 29871,  3566,  2533,   353,   269,
         29961, 29941, 29896, 29901, 29900,  1385,    13, 29871,  3566, 11196,
           353,   274, 29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  123
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  32
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n32 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: subtractor_32
      full_adder fa(s[i], c[i], in1[i], ~in2[i], cin);
    end
  endgenerate

  assign diff = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] prod, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output prod and cout values.
module multiplier_32(output [31:0] prod,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: multiplier_32
      for (j = 0; j < 32; j = j + 1) begin: multiplier_32
        full_adder fa(s[i+j], c[i+j], in1[i], in2[j], cin);
      end
    end
  endgenerate

  assign prod = s[31:0];
  assign cout = c[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29906 29901 29900 29962   269
  29936    13 29871  8014   518 29941 29906 29901 29900 29962   274 29936
     13    13 29871  2531  1707   474 29936    13 29871  5706    13  1678
    363   313 29875   353 29871 29900 29936   474   529 29871 29941 29906
  29936   474   353   474   718 29871 29896 29897  3380 29901   594   672
  29918 29941 29906    13   418  2989 29918   328   672  2258 29898 29879
  29961 29875  1402   274 29961 29875  1402   297 29896 29961 29875  1402
    297 29906 29961 29875  1402  4670   416    13  1678  1095    13 29871
   1095 17158    13    13 29871  3566  2533   353   269 29961 29941 29896
  29901 29900  1385    13 29871  3566 11196   353   274 29961 29941 29906
   1385    13    13   355  5453    13    13   458  4002   647   263 29871
  29941 29906 29899  2966 23197   272 29889    13   458  8439   526  1023
  29871 29941 29906  2586 10970   313   262 29896   322   297 29906 29897
    322   263  2323  8677 29899   262  1881  2586 29892  4670 29889    13
    458  1576 14391   526   263 29871 29941 29906  2586   995 29892   518
  29941 29896 29901 29900 29962  2923 29892   322   263  2323  8677 29899
    449  1962  2586 29892 11196 29889    13   458  1576  3883   881  3667
    675   278 10970   313   262 29896   322   297 29906 29897   322   278
   4670  2586   304  4017   278  1962  2923   322 11196  1819 29889    13
   5453 23197   272 29918 29941 29906 29898  4905   518 29941 29896 29901
  29900 29962  2923 29892    13   462  9651  1962 11196 29892    13   462
   9651  1881   518 29941 29896 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462  9651  1881  4670   416    13    13 29871  8014
    518 29941 29906 29901 29900 29962   269 29936    13 29871  8014   518
  29941 29906 29901 29900 29962   274 29936    13    13 29871  2531  1707
    474 29936    13 29871  5706    13  1678   363   313 29875   353 29871
  29900 29936   474   529 29871 29941 29906 29936   474   353   474   718
  29871 29896 29897  3380 29901 23197   272 29918 29941 29906    13   418
   2989 29918   328   672  2258 29898 29879 29961 29875  1402   274 29961
  29875  1402   297 29896 29961 29875  1402  3695   262 29906 29961 29875
   1402  4670   416    13  1678  1095    13 29871  1095 17158    13    13
  29871  3566  2923   353   269 29961 29941 29896 29901 29900  1385    13
  29871  3566 11196   353   274 29961 29941 29906  1385    13    13   355
   5453    13    13   458  4002   647   263 29871 29941 29906 29899  2966
   6674  4926 29889    13   458  8439   526  1023 29871 29941 29906  2586
  10970   313   262 29896   322   297 29906 29897   322   263  2323  8677
  29899   262  1881  2586 29892  4670 29889    13   458  1576 14391   526
    263 29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900
  29962 11859 29892   322   263  2323  8677 29899   449  1962  2586 29892
  11196 29889    13   458  1576  3883   881  3667   675   278 10970   313
    262 29896   322   297 29906 29897   322   278  4670  2586   304  4017
    278  1962 11859   322 11196  1819 29889    13  5453  6674  4926 29918
  29941 29906 29898  4905   518 29941 29896 29901 29900 29962 11859 29892
     13   462  9651  1962 11196 29892    13   462  9651  1881   518 29941
  29896 29901 29900 29962   297 29896 29892   297 29906 29892    13   462
   9651  1881  4670   416    13    13 29871  8014   518 29941 29906 29901
  29900 29962   269 29936    13 29871  8014   518 29941 29906 29901 29900
  29962   274 29936    13    13 29871  2531  1707   474 29892   432 29936
     13 29871  5706    13  1678   363   313 29875   353 29871 29900 29936
    474   529 29871 29941 29906 29936   474   353   474   718 29871 29896
  29897  3380 29901  6674  4926 29918 29941 29906    13   418   363   313
  29926   353 29871 29900 29936   432   529 29871 29941 29906 29936   432
    353   432   718 29871 29896 29897  3380 29901  6674  4926 29918 29941
  29906    13  4706  2989 29918   328   672  2258 29898 29879 29961 29875
  29974 29926  1402   274 29961 29875 29974 29926  1402   297 29896 29961
  29875  1402   297 29906 29961 29926  1402  4670   416    13   418  1095
     13  1678  1095    13 29871  1095 17158    13    13 29871  3566 11859
    353   269 29961 29941 29896 29901 29900  1385    13 29871  3566 11196
    353   274 29961 29941 29906  1385    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29906, 29901, 29900, 29962,   269, 29936,    13, 29871,  8014,
           518, 29941, 29906, 29901, 29900, 29962,   274, 29936,    13,    13,
         29871,  2531,  1707,   474, 29936,    13, 29871,  5706,    13,  1678,
           363,   313, 29875,   353, 29871, 29900, 29936,   474,   529, 29871,
         29941, 29906, 29936,   474,   353,   474,   718, 29871, 29896, 29897,
          3380, 29901,   594,   672, 29918, 29941, 29906,    13,   418,  2989,
         29918,   328,   672,  2258, 29898, 29879, 29961, 29875,  1402,   274,
         29961, 29875,  1402,   297, 29896, 29961, 29875,  1402,   297, 29906,
         29961, 29875,  1402,  4670,   416,    13,  1678,  1095,    13, 29871,
          1095, 17158,    13,    13, 29871,  3566,  2533,   353,   269, 29961,
         29941, 29896, 29901, 29900,  1385,    13, 29871,  3566, 11196,   353,
           274, 29961, 29941, 29906,  1385,    13,    13,   355,  5453,    13,
            13,   458,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
         23197,   272, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2923,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2923,   322, 11196,  1819,
         29889,    13,  5453, 23197,   272, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,    13,   462,
          9651,  1962, 11196, 29892,    13,   462,  9651,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,  9651,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29906, 29901, 29900, 29962,   269, 29936,    13, 29871,
          8014,   518, 29941, 29906, 29901, 29900, 29962,   274, 29936,    13,
            13, 29871,  2531,  1707,   474, 29936,    13, 29871,  5706,    13,
          1678,   363,   313, 29875,   353, 29871, 29900, 29936,   474,   529,
         29871, 29941, 29906, 29936,   474,   353,   474,   718, 29871, 29896,
         29897,  3380, 29901, 23197,   272, 29918, 29941, 29906,    13,   418,
          2989, 29918,   328,   672,  2258, 29898, 29879, 29961, 29875,  1402,
           274, 29961, 29875,  1402,   297, 29896, 29961, 29875,  1402,  3695,
           262, 29906, 29961, 29875,  1402,  4670,   416,    13,  1678,  1095,
            13, 29871,  1095, 17158,    13,    13, 29871,  3566,  2923,   353,
           269, 29961, 29941, 29896, 29901, 29900,  1385,    13, 29871,  3566,
         11196,   353,   274, 29961, 29941, 29906,  1385,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29941, 29906,
         29899,  2966,  6674,  4926, 29889,    13,   458,  8439,   526,  1023,
         29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900,
         29962, 11859, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962, 11859,   322,
         11196,  1819, 29889,    13,  5453,  6674,  4926, 29918, 29941, 29906,
         29898,  4905,   518, 29941, 29896, 29901, 29900, 29962, 11859, 29892,
            13,   462,  9651,  1962, 11196, 29892,    13,   462,  9651,  1881,
           518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,  9651,  1881,  4670,   416,    13,    13,
         29871,  8014,   518, 29941, 29906, 29901, 29900, 29962,   269, 29936,
            13, 29871,  8014,   518, 29941, 29906, 29901, 29900, 29962,   274,
         29936,    13,    13, 29871,  2531,  1707,   474, 29892,   432, 29936,
            13, 29871,  5706,    13,  1678,   363,   313, 29875,   353, 29871,
         29900, 29936,   474,   529, 29871, 29941, 29906, 29936,   474,   353,
           474,   718, 29871, 29896, 29897,  3380, 29901,  6674,  4926, 29918,
         29941, 29906,    13,   418,   363,   313, 29926,   353, 29871, 29900,
         29936,   432,   529, 29871, 29941, 29906, 29936,   432,   353,   432,
           718, 29871, 29896, 29897,  3380, 29901,  6674,  4926, 29918, 29941,
         29906,    13,  4706,  2989, 29918,   328,   672,  2258, 29898, 29879,
         29961, 29875, 29974, 29926,  1402,   274, 29961, 29875, 29974, 29926,
          1402,   297, 29896, 29961, 29875,  1402,   297, 29906, 29961, 29926,
          1402,  4670,   416,    13,   418,  1095,    13,  1678,  1095,    13,
         29871,  1095, 17158,    13,    13, 29871,  3566, 11859,   353,   269,
         29961, 29941, 29896, 29901, 29900,  1385,    13, 29871,  3566, 11196,
           353,   274, 29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  704
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: subtractor_32
      full_adder fa(s[i], c[i], in1[i], ~in2[i], cin);
    end
  endgenerate

  assign diff = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] prod, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output prod and cout values.
module multiplier_32(output [31:0] prod,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: multiplier_32
      for (j = 0; j < 32; j = j + 1) begin: multiplier_32
        full_adder fa(s[i+j], c[i+j], in1[i], in2[j], cin);
      end
    end
  endgenerate

  assign prod = s[31:0];
  assign cout = c[32];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  64
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n1088 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 1088 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: subtractor_32
      full_adder fa(s[i], c[i], in1[i], ~in2[i], cin);
    end
  endgenerate

  assign diff = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] prod, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output prod and cout values.
module multiplier_32(output [31:0] prod,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: multiplier_32
      for (j = 0; j < 32; j = j + 1) begin: multiplier_32
        full_adder fa(s[i+j], c[i+j], in1[i], in2[j], cin);
      end
    end
  endgenerate

  assign prod = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quot, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quot and cout values.
module divider_32(output [31:0] quot,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: divider_32
      for (j = 0; j < 32; j = j + 1) begin: divider_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign quot = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rem, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rem and cout values.
module modulus_32(output [31:0] rem,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: modulus_32
      for (j = 0; j < 32; j = j + 1) begin: modulus_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign rem = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit left shifter.
//There is a 32 bit input (in) and a 5-bit input, [4:0] shift.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift) to obtain the output out and cout values.
module left_shifter_32(output [31:0] out,
                               output cout,
                               input [31:0] in,
                               input [4:0] shift);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: left_shifter_32
      full_adder fa(s[i], c[i], in[i], in[i-1], c[i-1]);
    end
  endgenerate

  assign out = s[31:0];
  assign cout = c[32];

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1602
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: subtractor_32
      full_adder fa(s[i], c[i], in1[i], ~in2[i], cin);
    end
  endgenerate

  assign diff = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] prod, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output prod and cout values.
module multiplier_32(output [31:0] prod,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: multiplier_32
      for (j = 0; j < 32; j = j + 1) begin: multiplier_32
        full_adder fa(s[i+j], c[i+j], in1[i], in2[j], cin);
      end
    end
  endgenerate

  assign prod = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quot, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quot and cout values.
module divider_32(output [31:0] quot,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: divider_32
      for (j = 0; j < 32; j = j + 1) begin: divider_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign quot = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rem, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rem and cout values.
module modulus_32(output [31:0] rem,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: modulus_32
      for (j = 0; j < 32; j = j + 1) begin: modulus_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign rem = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit left shifter.
//There is a 32 bit input (in) and a 5-bit input, [4:0] shift.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift) to obtain the output out and cout values.
module left_shifter_32(output [31:0] out,
                               output cout,
                               input [31:0] in,
                               input [4:0] shift);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: left_shifter_32
      full_adder fa(s[i], c[i], in[i], in[i-1], c[i-1]);
    end
  endgenerate

  assign out = s[31:0];
  assign cout = c[32];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  96
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n3168 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 3168 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: subtractor_32
      full_adder fa(s[i], c[i], in1[i], ~in2[i], cin);
    end
  endgenerate

  assign diff = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] prod, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output prod and cout values.
module multiplier_32(output [31:0] prod,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: multiplier_32
      for (j = 0; j < 32; j = j + 1) begin: multiplier_32
        full_adder fa(s[i+j], c[i+j], in1[i], in2[j], cin);
      end
    end
  endgenerate

  assign prod = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quot, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quot and cout values.
module divider_32(output [31:0] quot,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: divider_32
      for (j = 0; j < 32; j = j + 1) begin: divider_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign quot = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rem, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rem and cout values.
module modulus_32(output [31:0] rem,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: modulus_32
      for (j = 0; j < 32; j = j + 1) begin: modulus_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign rem = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit left shifter.
//There is a 32 bit input (in) and a 5-bit input, [4:0] shift.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift) to obtain the output out and cout values.
module left_shifter_32(output [31:0] out,
                               output cout,
                               input [31:0] in,
                               input [4:0] shift);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: left_shifter_32
      full_adder fa(s[i], c[i], in[i], in[i-1], c[i-1]);
    end
  endgenerate

  assign out = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit right shifter.
//There is a 32 bit input (in) and a 5-bit input, [4:0] shift.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift) to obtain the output out and cout values.
module right_shifter_32(output [31:0] out,
                                output cout,
                                input [31:0] in,
                                input [4:0] shift);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: right_shifter_32
      full_adder fa(s[i], c[i], in[i], in[i+1], c[i+1]);
    end
  endgenerate

  assign out = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit sign-extender.
//There is a 32 bit input (in) and a single input bit, sign.
//The outputs are a 32 bit value, [31:0] out.
//The module should utilize the inputs (in and sign) to obtain the output out values.
module sign_extender_32(output [31:0] out,
                                input [31:0] in,
                                input sign);

  assign out = {sign, in};

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2).
//The outputs are a 
[[  849  4002   647 ...   526   263 29871]]
tensor([[  849,  4002,   647,  ...,   526,   263, 29871]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: adder_32
      full_adder fa(s[i], c[i], in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: subtractor_32
      full_adder fa(s[i], c[i], in1[i], ~in2[i], cin);
    end
  endgenerate

  assign diff = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] prod, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output prod and cout values.
module multiplier_32(output [31:0] prod,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: multiplier_32
      for (j = 0; j < 32; j = j + 1) begin: multiplier_32
        full_adder fa(s[i+j], c[i+j], in1[i], in2[j], cin);
      end
    end
  endgenerate

  assign prod = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quot, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quot and cout values.
module divider_32(output [31:0] quot,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: divider_32
      for (j = 0; j < 32; j = j + 1) begin: divider_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign quot = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rem, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rem and cout values.
module modulus_32(output [31:0] rem,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [32:0] s;
  wire [32:0] c;

  genvar i, j;
  generate
    for (i = 0; i < 32; i = i + 1) begin: modulus_32
      for (j = 0; j < 32; j = j + 1) begin: modulus_32
        full_adder fa(s[i+j], c[i+j], in1[i], ~in2[j], cin);
      end
    end
  endgenerate

  assign rem = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit left shifter.
//There is a 32 bit input (in) and a 5-bit input, [4:0] shift.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift) to obtain the output out and cout values.
module left_shifter_32(output [31:0] out,
                               output cout,
                               input [31:0] in,
                               input [4:0] shift);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: left_shifter_32
      full_adder fa(s[i], c[i], in[i], in[i-1], c[i-1]);
    end
  endgenerate

  assign out = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit right shifter.
//There is a 32 bit input (in) and a 5-bit input, [4:0] shift.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift) to obtain the output out and cout values.
module right_shifter_32(output [31:0] out,
                                output cout,
                                input [31:0] in,
                                input [4:0] shift);

  wire [32:0] s;
  wire [32:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: right_shifter_32
      full_adder fa(s[i], c[i], in[i], in[i+1], c[i+1]);
    end
  endgenerate

  assign out = s[31:0];
  assign cout = c[32];

endmodule

//Design a 32-bit sign-extender.
//There is a 32 bit input (in) and a single input bit, sign.
//The outputs are a 32 bit value, [31:0] out.
//The module should utilize the inputs (in and sign) to obtain the output out values.
module sign_extender_32(output [31:0] out,
                                input [31:0] in,
                                input sign);

  assign out = {sign, in};

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2).
//The outputs are a 
LOGGING VERILOG CODE.
Verilog compilation failed, error:  128
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:91: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n3200 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 3200 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  23  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 22376 29961 29896 29945 29901 29900  1402 11196
  29918 22376 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 22376 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 22376   416    13    13
  29871  3566  2533   353  2533 29918 22376 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13, 29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 22376,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 22376, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 22376 29961 29896 29945 29901 29900  1402 11196
  29918 22376 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 22376 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 22376   416    13    13
  29871  3566  2533   353  2533 29918 22376 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29896 29945 29901 29900
  29962  2533 29918 22376 29936    13 29871  8014 11196 29918 22376 29936
     13    13 29871   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918 22376 29961 29955 29901 29900  1402 11196 29918
  22376 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13 29871   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918 22376 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  22376   416    13    13 29871  3566  2533   353  2533 29918 22376 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13 29871  8014   518 29955 29901 29900 29962  2533 29918 22376
  29936    13 29871  8014 11196 29918 22376 29936    13    13 29871   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
  22376 29961 29941 29901 29900  1402 11196 29918 22376 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918 22376 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 22376   416    13    13 29871  3566  2533
    353  2533 29918 22376 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
         29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         22376, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         22376,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         22376, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 22376, 29936,    13, 29871,  8014,
         11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 22376,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 22376, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 22376, 29936,    13, 29871,  8014,
         11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 22376,   416,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918, 22376, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_wire;
  wire cout_wire;

  adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_wire[3:2], cout, in1[3:2], in2[3:2], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_wire;
  wire cout_wire;

  adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_wire[1], cout, in1[1], in2[1], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 ^ in2 ^ cin;
  assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_wire;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1371
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_wire;
  wire cout_wire;

  adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_wire[3:2], cout, in1[3:2], in2[3:2], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_wire;
  wire cout_wire;

  adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_wire[1], cout, in1[1], in2[1], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 ^ in2 ^ cin;
  assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.750239

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  24  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918 29893 29936    13  1678  8014 11196 29918 29893 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918 29893 29961 29955 29901 29900  1402 11196 29918
  29893 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918 29893 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  29893   416    13    13  1678  3566  2533   353  2533 29918 29893 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918 29893
  29936    13  1678  8014 11196 29918 29893 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
  29893 29961 29941 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918 29893 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 29893   416    13    13  1678  3566  2533
    353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,  8014,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,  8014,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
         29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 29893,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

    assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout, in1[1], in2[1], cout_w);

    assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum_w = in1 ^ in2 ^ cin;
    assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

    assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout, in1[1], in2[1], cout_w);

    assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum_w = in1 ^ in2 ^ cin;
    assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.754132

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  25  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13    13
   1678  3566  2533   353  2533 29918 22376 29936    13  1678  3566 11196
    353 11196 29918 22376 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918 22376
  29961 29896 29945 29901 29900  1402 11196 29918 22376 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918 22376 29961 29941
  29896 29901 29896 29953  1402 11196 29918 22376 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 22376   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13,  1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 22376, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 22376, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
         22376, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         22376, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 22376,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wire;
    wire cout_wire;

    assign diff = diff_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(diff_wire[15:0], cout_wire, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_wire[31:16], cout_wire, in1[31:16], ~in2[31:16], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_wire;
    wire cout_wire;

    assign product = product_wire;
    assign cout = cout_wire;

    multiplier_16 multiplier_16_1(product_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13    13
   1678  3566  2533   353  2533 29918 22376 29936    13  1678  3566 11196
    353 11196 29918 22376 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918 22376
  29961 29896 29945 29901 29900  1402 11196 29918 22376 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918 22376 29961 29941
  29896 29901 29896 29953  1402 11196 29918 22376 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 22376   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29941 29906 29899  2966 23197   272
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2923
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2923   322 11196  1819 29889    13  5453 23197   272 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   2923 29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13
     13  1678  3566  2923   353  2923 29918 22376 29936    13  1678  3566
  11196   353 11196 29918 22376 29936    13    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29896 29898 12765 29918
  22376 29961 29896 29945 29901 29900  1402 11196 29918 22376 29892   297
  29896 29961 29896 29945 29901 29900  1402  3695   262 29906 29961 29896
  29945 29901 29900  1402  4670   416    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29906 29898 12765 29918 22376
  29961 29941 29896 29901 29896 29953  1402 11196 29918 22376 29892   297
  29896 29961 29941 29896 29901 29896 29953  1402  3695   262 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 22376   416    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13  1678  8014   518 29941 29896
  29901 29900 29962  3234 29918 22376 29936    13  1678  8014 11196 29918
  22376 29936    13    13  1678  3566  3234   353  3234 29918 22376 29936
     13  1678  3566 11196   353 11196 29918 22376 29936    13    13  1678
   6674  4926 29918 29896 29953  6674  4926 29918 29896 29953 29918 29896
  29898  4704 29918 22376 29961 29896 29945 29901 29900  1402 11196 29918
  22376 29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906
  29961 29896 29945 29901 29900  1402  4670   416    13  1678  6674  4926
  29918 29896 29953  6674  4926 29918 29896 29953 29918 29906 29898  4704
  29918 22376 29961 29941 29896 29901 29896 29953  1402 11196 29918 22376
  29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906
  29961 29941 29896 29901 29896 29953  1402 11196 29918 22376   416    13
     13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
          1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 22376, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 22376, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918, 22376,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 22376,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272,
         29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995,
         29892,   518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2923,   322, 11196,  1819, 29889,    13,
          5453, 23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941,
         29896, 29901, 29900, 29962,  2923, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941,
         29896, 29901, 29900, 29962,  2923, 29918, 22376, 29936,    13,  1678,
          8014, 11196, 29918, 22376, 29936,    13,    13,  1678,  3566,  2923,
           353,  2923, 29918, 22376, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918, 22376, 29936,    13,    13,  1678,   594,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,
         12765, 29918, 22376, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 22376, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,  3695,   262, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898, 12765, 29918, 22376,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
          3695,   262, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 22376,   416,    13,    13,   355,  5453,    13,    13,
           458,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,  6674,
          4926, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  3234, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  3234,   322, 11196,  1819, 29889,
            13,  5453,  6674,  4926, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  3234, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  3234, 29918, 22376, 29936,    13,
          1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,  3566,
          3234,   353,  3234, 29918, 22376, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 22376, 29936,    13,    13,  1678,  6674,  4926,
         29918, 29896, 29953,  6674,  4926, 29918, 29896, 29953, 29918, 29896,
         29898,  4704, 29918, 22376, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,  6674,  4926, 29918, 29896, 29953,  6674,
          4926, 29918, 29896, 29953, 29918, 29906, 29898,  4704, 29918, 22376,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 22376,   416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  721
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wire;
    wire cout_wire;

    assign diff = diff_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(diff_wire[15:0], cout_wire, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_wire[31:16], cout_wire, in1[31:16], ~in2[31:16], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_wire;
    wire cout_wire;

    assign product = product_wire;
    assign cout = cout_wire;

    multiplier_16 multiplier_16_1(product_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wire;
    wire cout_wire;

    assign diff = diff_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(diff_wire[15:0], cout_wire, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_wire[31:16], cout_wire, in1[31:16], ~in2[31:16], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_wire;
    wire cout_wire;

    assign product = product_wire;
    assign cout = cout_wire;

    multiplier_16 multiplier_16_1(product_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_wire;
    wire cout_wire;

    assign quotient = quotient_wire;
    assign cout = cout_wire;

    divider_16 divider_16_1(quotient_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_wire;
    wire cout_wire;

    assign remainder = remainder_wire;
    assign cout = cout_wire;

    modulus_16 modulus_16_1(remainder_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] compare, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output compare and cout values.
module comparator_32(output [31:0] compare,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] compare_wire;
    wire cout_wire;

    assign compare = compare_wire;
    assign cout = cout_wire;

    comparator_16 comparator_16_1(compare_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_2(compare_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1600
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wire;
    wire cout_wire;

    assign diff = diff_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(diff_wire[15:0], cout_wire, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_wire[31:16], cout_wire, in1[31:16], ~in2[31:16], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_wire;
    wire cout_wire;

    assign product = product_wire;
    assign cout = cout_wire;

    multiplier_16 multiplier_16_1(product_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_wire;
    wire cout_wire;

    assign quotient = quotient_wire;
    assign cout = cout_wire;

    divider_16 divider_16_1(quotient_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_wire;
    wire cout_wire;

    assign remainder = remainder_wire;
    assign cout = cout_wire;

    modulus_16 modulus_16_1(remainder_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] compare, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output compare and cout values.
module comparator_32(output [31:0] compare,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] compare_wire;
    wire cout_wire;

    assign compare = compare_wire;
    assign cout = cout_wire;

    comparator_16 comparator_16_1(compare_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_2(compare_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:77: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:96: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:97: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        comparator_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wire;
    wire cout_wire;

    assign diff = diff_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(diff_wire[15:0], cout_wire, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_wire[31:16], cout_wire, in1[31:16], ~in2[31:16], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_wire;
    wire cout_wire;

    assign product = product_wire;
    assign cout = cout_wire;

    multiplier_16 multiplier_16_1(product_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_wire;
    wire cout_wire;

    assign quotient = quotient_wire;
    assign cout = cout_wire;

    divider_16 divider_16_1(quotient_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_wire;
    wire cout_wire;

    assign remainder = remainder_wire;
    assign cout = cout_wire;

    modulus_16 modulus_16_1(remainder_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] compare, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output compare and cout values.
module comparator_32(output [31:0] compare,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] compare_wire;
    wire cout_wire;

    assign compare = compare_wire;
    assign cout = cout_wire;

    comparator_16 comparator_16_1(compare_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_2(compare_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_wire;
    wire cout_wire;

    assign shift = shift_wire;
    assign cout = cout_wire;

    shifter_16 shifter_16_1(shift_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_2(shift_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [3
[[  849  4002   647 ...  8014   518 29941]]
tensor([[  849,  4002,   647,  ...,  8014,   518, 29941]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wire;
    wire cout_wire;

    assign diff = diff_wire;
    assign cout = cout_wire;

    adder_16 adder_16_1(diff_wire[15:0], cout_wire, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_wire[31:16], cout_wire, in1[31:16], ~in2[31:16], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_wire;
    wire cout_wire;

    assign product = product_wire;
    assign cout = cout_wire;

    multiplier_16 multiplier_16_1(product_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_wire;
    wire cout_wire;

    assign quotient = quotient_wire;
    assign cout = cout_wire;

    divider_16 divider_16_1(quotient_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_wire;
    wire cout_wire;

    assign remainder = remainder_wire;
    assign cout = cout_wire;

    modulus_16 modulus_16_1(remainder_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] compare, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output compare and cout values.
module comparator_32(output [31:0] compare,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] compare_wire;
    wire cout_wire;

    assign compare = compare_wire;
    assign cout = cout_wire;

    comparator_16 comparator_16_1(compare_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_2(compare_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_wire;
    wire cout_wire;

    assign shift = shift_wire;
    assign cout = cout_wire;

    shifter_16 shifter_16_1(shift_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_2(shift_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [3
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:150: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  26  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.770268

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  27  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;
    wire [31:0] temp2;
    wire [31:0] temp3;
    wire [31:0] temp4;
    wire [31:0] temp5;
    wire [31:0] temp6;
    wire [31:0] temp7;
    wire [31:0] temp8;
    wire [31:0] temp9;
    wire [31:0] temp10;
    wire [31:0] temp11;
    wire [31:0] temp12;
    wire [31:0] temp13;
    wire [31:0] temp14;
    wire [31:0] temp15;
    wire [31:0] temp16;
    wire [31:0] temp17;
    wire [31:0] temp18;
    wire [31:0] temp19;
    wire [31:0] temp20;
    wire [31:0] temp21;
    wire [31:0] temp22;
    wire [31:0] temp23;
    wire [31:0] temp24;
    wire [31:0] temp25;
    wire [31:0] temp26;
    wire [31:0] temp27;
    wire [31:0] temp28;
    wire [31:0] temp29;
    wire [31:0] temp30;
    wire [31:0] temp31;
    wire [31:0] temp32;
    wire [31:0] temp33;
    wire [31:0] temp34;
    wire [31:0] temp35;
    wire [31:0] temp36;
    wire [31:0] temp37;
    wire [31:0] temp38;
    wire [31:0] temp39;
    wire [31:0] temp40;
    wire [31:0] temp41;
    wire [31:0] temp42;
    wire [31:0] temp43;
    wire [31:0] temp44;
    wire [31:0] temp45;
    wire [31:0] temp46;
    wire [31:0] temp47;
    wire [31:0] temp48;
    wire [31:0] temp49;
    wire [31:0] temp50;
    wire [31:0] temp51;
    wire [31:0] temp52;
    wire [31:0] temp53;
    wire [31:0] temp54;
    wire [31:0] temp55;
    wire [31:0] temp56;
    wire [31:0] temp57;
    wire [31:0] temp58;
    wire [31:0] temp59;
    wire [31:0] temp60;
    wire [31:0] temp61;
    wire [31:0] temp62;
    wire [31:0] temp63;
    wire [31:0] temp64;
    wire [31:0] temp65;
    wire [31:0] temp66;
    wire [31:0] temp67;
    wire [31:0] temp68;
    wire [31:0] temp69;
    wire [31:0] temp70;
    wire [31:0] temp71;
    wire [31:0] temp72;
    wire [31:0] temp73;
    wire [31:0] temp74;
    wire [31:0] temp75;
    wire [31:0] temp76;
    wire [31:0] temp77;
    wire [31:0] temp78;
    wire [31:0] temp79;
    wire [31:0] temp80;
    wire [31:0] temp81;
    wire [31:0] temp82;
    wire [31:0] temp83;
    wire [31:0] temp84;
    wire [31:0] temp85;
    wire [31:0] temp86;
    wire [31:0] temp87;
    wire [31:0] temp88;
    wire [31:0] temp89;
    wire [31:0] temp90;
    wire [31:0] temp91;
    wire [31:0] temp92;
    wire [31:0] temp93;
    wire [31:0] temp94;
    wire [31:0] temp95;
    wire [31:0] temp96;
    wire [31:0] temp97;
    wire [31:0] temp98;
    wire [31:0] temp99;
    wire [31:0] temp100;
    wire [31:0] temp101;
    wire [31:0] temp102;
    wire [31:0] temp103;
    wire [31:0] temp104;
    wire [31:0] temp105;
    wire [31:0] temp106;
    wire [31:0] temp107;
    wire [31:0] temp108;
    wire [31:0] temp109;
    wire [31:0] temp110;
    wire [31:0] temp111;
    wire [31:0] temp112;
    wire [31:0] temp113;
    wire [31:0] temp114;
    wire [31:0] temp115;
    wire [31:0] temp116;
    wire [31:0] temp117;
    wire [31:0] temp118;
    wire [31:0] temp119;
    wire [31:0] temp120;
    wire [31:0] temp121;
    wire [31:0] temp122;
    wire [31:0] temp123;
    wire [31:0] temp124;
    wire [31:0] temp125;
    wire [31:0] temp126;
    wire [31:0] temp127;
    wire [31:0] temp128;
    wire [31:0] temp129;
    wire [31:0] temp130;
    wire [31:0] temp131;
    wire [31:0] temp132;
    wire [31:0] temp133;
    wire [31:0] temp134;
    wire [31:0] temp135;
    wire [31:0] temp136;
    wire [31:0] temp137;
    wire [31:0] temp138;
    wire [31:0] temp139;
    wire [31:0] temp140;
    wire [31:0] temp141;
    wire [31:0] temp142;
    wire [31:0] temp143;
    wire [31:0] temp144;
    wire [31:0] temp145;
    wire [31:0] temp146;
    wire [31:0] temp147;
    wire [31:0] temp148;
    wire [31:0] temp149;
    wire [31:0] temp150;
    wire [31:0] temp151;
    wire [31:0] temp152;
    wire [31:0] temp153;
    wire [31:0] temp154;
[[  849  4002   647 ... 29945 29946 29936]]
tensor([[    1,   849,  4002,  ..., 29945, 29946, 29936]], device='cuda:0')
Checking if done:
tokens generated:  2047
Calling isPromptComplete: 
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;
    wire [31:0] temp2;
    wire [31:0] temp3;
    wire [31:0] temp4;
    wire [31:0] temp5;
    wire [31:0] temp6;
    wire [31:0] temp7;
    wire [31:0] temp8;
    wire [31:0] temp9;
    wire [31:0] temp10;
    wire [31:0] temp11;
    wire [31:0] temp12;
    wire [31:0] temp13;
    wire [31:0] temp14;
    wire [31:0] temp15;
    wire [31:0] temp16;
    wire [31:0] temp17;
    wire [31:0] temp18;
    wire [31:0] temp19;
    wire [31:0] temp20;
    wire [31:0] temp21;
    wire [31:0] temp22;
    wire [31:0] temp23;
    wire [31:0] temp24;
    wire [31:0] temp25;
    wire [31:0] temp26;
    wire [31:0] temp27;
    wire [31:0] temp28;
    wire [31:0] temp29;
    wire [31:0] temp30;
    wire [31:0] temp31;
    wire [31:0] temp32;
    wire [31:0] temp33;
    wire [31:0] temp34;
    wire [31:0] temp35;
    wire [31:0] temp36;
    wire [31:0] temp37;
    wire [31:0] temp38;
    wire [31:0] temp39;
    wire [31:0] temp40;
    wire [31:0] temp41;
    wire [31:0] temp42;
    wire [31:0] temp43;
    wire [31:0] temp44;
    wire [31:0] temp45;
    wire [31:0] temp46;
    wire [31:0] temp47;
    wire [31:0] temp48;
    wire [31:0] temp49;
    wire [31:0] temp50;
    wire [31:0] temp51;
    wire [31:0] temp52;
    wire [31:0] temp53;
    wire [31:0] temp54;
    wire [31:0] temp55;
    wire [31:0] temp56;
    wire [31:0] temp57;
    wire [31:0] temp58;
    wire [31:0] temp59;
    wire [31:0] temp60;
    wire [31:0] temp61;
    wire [31:0] temp62;
    wire [31:0] temp63;
    wire [31:0] temp64;
    wire [31:0] temp65;
    wire [31:0] temp66;
    wire [31:0] temp67;
    wire [31:0] temp68;
    wire [31:0] temp69;
    wire [31:0] temp70;
    wire [31:0] temp71;
    wire [31:0] temp72;
    wire [31:0] temp73;
    wire [31:0] temp74;
    wire [31:0] temp75;
    wire [31:0] temp76;
    wire [31:0] temp77;
    wire [31:0] temp78;
    wire [31:0] temp79;
    wire [31:0] temp80;
    wire [31:0] temp81;
    wire [31:0] temp82;
    wire [31:0] temp83;
    wire [31:0] temp84;
    wire [31:0] temp85;
    wire [31:0] temp86;
    wire [31:0] temp87;
    wire [31:0] temp88;
    wire [31:0] temp89;
    wire [31:0] temp90;
    wire [31:0] temp91;
    wire [31:0] temp92;
    wire [31:0] temp93;
    wire [31:0] temp94;
    wire [31:0] temp95;
    wire [31:0] temp96;
    wire [31:0] temp97;
    wire [31:0] temp98;
    wire [31:0] temp99;
    wire [31:0] temp100;
    wire [31:0] temp101;
    wire [31:0] temp102;
    wire [31:0] temp103;
    wire [31:0] temp104;
    wire [31:0] temp105;
    wire [31:0] temp106;
    wire [31:0] temp107;
    wire [31:0] temp108;
    wire [31:0] temp109;
    wire [31:0] temp110;
    wire [31:0] temp111;
    wire [31:0] temp112;
    wire [31:0] temp113;
    wire [31:0] temp114;
    wire [31:0] temp115;
    wire [31:0] temp116;
    wire [31:0] temp117;
    wire [31:0] temp118;
    wire [31:0] temp119;
    wire [31:0] temp120;
    wire [31:0] temp121;
    wire [31:0] temp122;
    wire [31:0] temp123;
    wire [31:0] temp124;
    wire [31:0] temp125;
    wire [31:0] temp126;
    wire [31:0] temp127;
    wire [31:0] temp128;
    wire [31:0] temp129;
    wire [31:0] temp130;
    wire [31:0] temp131;
    wire [31:0] temp132;
    wire [31:0] temp133;
    wire [31:0] temp134;
    wire [31:0] temp135;
    wire [31:0] temp136;
    wire [31:0] temp137;
    wire [31:0] temp138;
    wire [31:0] temp139;
    wire [31:0] temp140;
    wire [31:0] temp141;
    wire [31:0] temp142;
    wire [31:0] temp143;
    wire [31:0] temp144;
    wire [31:0] temp145;
    wire [31:0] temp146;
    wire [31:0] temp147;
    wire [31:0] temp148;
    wire [31:0] temp149;
    wire [31:0] temp150;
    wire [31:0] temp151;
    wire [31:0] temp152;
    wire [31:0] temp153;
    wire [31:0] temp154;

[[  849  4002   647 ... 29946 29936    13]]
tensor([[  849,  4002,   647,  ..., 29946, 29936,    13]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp;
    wire [31:0] temp2;
    wire [31:0] temp3;
    wire [31:0] temp4;
    wire [31:0] temp5;
    wire [31:0] temp6;
    wire [31:0] temp7;
    wire [31:0] temp8;
    wire [31:0] temp9;
    wire [31:0] temp10;
    wire [31:0] temp11;
    wire [31:0] temp12;
    wire [31:0] temp13;
    wire [31:0] temp14;
    wire [31:0] temp15;
    wire [31:0] temp16;
    wire [31:0] temp17;
    wire [31:0] temp18;
    wire [31:0] temp19;
    wire [31:0] temp20;
    wire [31:0] temp21;
    wire [31:0] temp22;
    wire [31:0] temp23;
    wire [31:0] temp24;
    wire [31:0] temp25;
    wire [31:0] temp26;
    wire [31:0] temp27;
    wire [31:0] temp28;
    wire [31:0] temp29;
    wire [31:0] temp30;
    wire [31:0] temp31;
    wire [31:0] temp32;
    wire [31:0] temp33;
    wire [31:0] temp34;
    wire [31:0] temp35;
    wire [31:0] temp36;
    wire [31:0] temp37;
    wire [31:0] temp38;
    wire [31:0] temp39;
    wire [31:0] temp40;
    wire [31:0] temp41;
    wire [31:0] temp42;
    wire [31:0] temp43;
    wire [31:0] temp44;
    wire [31:0] temp45;
    wire [31:0] temp46;
    wire [31:0] temp47;
    wire [31:0] temp48;
    wire [31:0] temp49;
    wire [31:0] temp50;
    wire [31:0] temp51;
    wire [31:0] temp52;
    wire [31:0] temp53;
    wire [31:0] temp54;
    wire [31:0] temp55;
    wire [31:0] temp56;
    wire [31:0] temp57;
    wire [31:0] temp58;
    wire [31:0] temp59;
    wire [31:0] temp60;
    wire [31:0] temp61;
    wire [31:0] temp62;
    wire [31:0] temp63;
    wire [31:0] temp64;
    wire [31:0] temp65;
    wire [31:0] temp66;
    wire [31:0] temp67;
    wire [31:0] temp68;
    wire [31:0] temp69;
    wire [31:0] temp70;
    wire [31:0] temp71;
    wire [31:0] temp72;
    wire [31:0] temp73;
    wire [31:0] temp74;
    wire [31:0] temp75;
    wire [31:0] temp76;
    wire [31:0] temp77;
    wire [31:0] temp78;
    wire [31:0] temp79;
    wire [31:0] temp80;
    wire [31:0] temp81;
    wire [31:0] temp82;
    wire [31:0] temp83;
    wire [31:0] temp84;
    wire [31:0] temp85;
    wire [31:0] temp86;
    wire [31:0] temp87;
    wire [31:0] temp88;
    wire [31:0] temp89;
    wire [31:0] temp90;
    wire [31:0] temp91;
    wire [31:0] temp92;
    wire [31:0] temp93;
    wire [31:0] temp94;
    wire [31:0] temp95;
    wire [31:0] temp96;
    wire [31:0] temp97;
    wire [31:0] temp98;
    wire [31:0] temp99;
    wire [31:0] temp100;
    wire [31:0] temp101;
    wire [31:0] temp102;
    wire [31:0] temp103;
    wire [31:0] temp104;
    wire [31:0] temp105;
    wire [31:0] temp106;
    wire [31:0] temp107;
    wire [31:0] temp108;
    wire [31:0] temp109;
    wire [31:0] temp110;
    wire [31:0] temp111;
    wire [31:0] temp112;
    wire [31:0] temp113;
    wire [31:0] temp114;
    wire [31:0] temp115;
    wire [31:0] temp116;
    wire [31:0] temp117;
    wire [31:0] temp118;
    wire [31:0] temp119;
    wire [31:0] temp120;
    wire [31:0] temp121;
    wire [31:0] temp122;
    wire [31:0] temp123;
    wire [31:0] temp124;
    wire [31:0] temp125;
    wire [31:0] temp126;
    wire [31:0] temp127;
    wire [31:0] temp128;
    wire [31:0] temp129;
    wire [31:0] temp130;
    wire [31:0] temp131;
    wire [31:0] temp132;
    wire [31:0] temp133;
    wire [31:0] temp134;
    wire [31:0] temp135;
    wire [31:0] temp136;
    wire [31:0] temp137;
    wire [31:0] temp138;
    wire [31:0] temp139;
    wire [31:0] temp140;
    wire [31:0] temp141;
    wire [31:0] temp142;
    wire [31:0] temp143;
    wire [31:0] temp144;
    wire [31:0] temp145;
    wire [31:0] temp146;
    wire [31:0] temp147;
    wire [31:0] temp148;
    wire [31:0] temp149;
    wire [31:0] temp150;
    wire [31:0] temp151;
    wire [31:0] temp152;
    wire [31:0] temp153;
    wire [31:0] temp154;

LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:164: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  28  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196
    353 11196 29918 29893 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29900 29898  2083 29918 29893
  29961 29896 29945 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918 29893 29961 29941
  29896 29901 29896 29953  1402 11196 29918 29893 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 29893   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 29893,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196
    353 11196 29918 29893 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29900 29898  2083 29918 29893
  29961 29896 29945 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918 29893 29961 29941
  29896 29901 29896 29953  1402 11196 29918 29893 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 29893   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29896 29945 29901 29900 29962
   2533 29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13
     13  1678  3566  2533   353  2533 29918 29893 29936    13  1678  3566
  11196   353 11196 29918 29893 29936    13    13  1678   594   672 29918
  29947   594   672 29918 29947 29918 29900 29898  2083 29918 29893 29961
  29955 29901 29900  1402 11196 29918 29893 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13  1678   594   672 29918 29947   594   672 29918 29947 29918 29896
  29898  2083 29918 29893 29961 29896 29945 29901 29947  1402 11196 29918
  29893 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918 29893   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   385
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   268  1962 11196
  29892    13   462   268  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   268  1881  4670   416    13    13
   1678  8014   518 29955 29901 29900 29962  2533 29918 29893 29936    13
   1678  8014 11196 29918 29893 29936    13    13  1678  3566  2533   353
   2533 29918 29893 29936    13  1678  3566 11196   353 11196 29918 29893
  29936    13    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29900 29898  2083 29918 29893 29961 29941 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13  1678   594   672 29918
  29946   594   672 29918 29946 29918 29896 29898  2083 29918 29893 29961
  29955 29901 29946  1402 11196 29918 29893 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
  29893   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900,
         29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918, 29893,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,
          8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         29893,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   268,  1962, 11196, 29892,    13,   462,   268,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   268,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083,
         29918, 29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,
          2083, 29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918, 29893,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    assign sum_w = in1 ^ in2 ^ cin;
    assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1437
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    assign sum_w = in1 ^ in2 ^ cin;
    assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  29  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum_temp = in1 + in2;
  assign cout_temp = cin ^ (in1[31] & in2[31]) ^ (in1[31] & sum_temp[31]) ^ (in2[31] & sum_temp[31]);

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871  3566  2533 29918  7382   353   297 29896   718   297 29906 29936
     13 29871  3566 11196 29918  7382   353  4670  6228   313   262 29896
  29961 29941 29896 29962   669   297 29906 29961 29941 29896  2314  6228
    313   262 29896 29961 29941 29896 29962   669  2533 29918  7382 29961
  29941 29896  2314  6228   313   262 29906 29961 29941 29896 29962   669
   2533 29918  7382 29961 29941 29896  5691    13    13 29871  3566  2533
    353  2533 29918  7382 29936    13 29871  3566 11196   353 11196 29918
   7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
          3566,  2533, 29918,  7382,   353,   297, 29896,   718,   297, 29906,
         29936,    13, 29871,  3566, 11196, 29918,  7382,   353,  4670,  6228,
           313,   262, 29896, 29961, 29941, 29896, 29962,   669,   297, 29906,
         29961, 29941, 29896,  2314,  6228,   313,   262, 29896, 29961, 29941,
         29896, 29962,   669,  2533, 29918,  7382, 29961, 29941, 29896,  2314,
          6228,   313,   262, 29906, 29961, 29941, 29896, 29962,   669,  2533,
         29918,  7382, 29961, 29941, 29896,  5691,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  112
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum_temp = in1 + in2;
  assign cout_temp = cin ^ (in1[31] & in2[31]) ^ (in1[31] & sum_temp[31]) ^ (in2[31] & sum_temp[31]);

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  30  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] sum_wire;

  assign sum = sum_wire[31:0];
  assign cout = sum_wire[32];

  assign sum_wire = in1 + in2 + cin;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29906 29901 29900 29962  2533
  29918 22376 29936    13    13 29871  3566  2533   353  2533 29918 22376
  29961 29941 29896 29901 29900  1385    13 29871  3566 11196   353  2533
  29918 22376 29961 29941 29906  1385    13    13 29871  3566  2533 29918
  22376   353   297 29896   718   297 29906   718  4670 29936    13    13
    355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29906, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 22376, 29961,
         29941, 29896, 29901, 29900,  1385,    13, 29871,  3566, 11196,   353,
          2533, 29918, 22376, 29961, 29941, 29906,  1385,    13,    13, 29871,
          3566,  2533, 29918, 22376,   353,   297, 29896,   718,   297, 29906,
           718,  4670, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  60
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [32:0] sum_wire;

  assign sum = sum_wire[31:0];
  assign cout = sum_wire[32];

  assign sum_wire = in1 + in2 + cin;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.708532

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  31  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign sum_temp[1] = in1[1] ^ in2[1] ^ cin;
    assign sum_temp[2] = in1[2] ^ in2[2] ^ cin;
    assign sum_temp[3] = in1[3] ^ in2[3] ^ cin;
    assign sum_temp[4] = in1[4] ^ in2[4] ^ cin;
    assign sum_temp[5] = in1[5] ^ in2[5] ^ cin;
    assign sum_temp[6] = in1[6] ^ in2[6] ^ cin;
    assign sum_temp[7] = in1[7] ^ in2[7] ^ cin;
    assign sum_temp[8] = in1[8] ^ in2[8] ^ cin;
    assign sum_temp[9] = in1[9] ^ in2[9] ^ cin;
    assign sum_temp[10] = in1[10] ^ in2[10] ^ cin;
    assign sum_temp[11] = in1[11] ^ in2[11] ^ cin;
    assign sum_temp[12] = in1[12] ^ in2[12] ^ cin;
    assign sum_temp[13] = in1[13] ^ in2[13] ^ cin;
    assign sum_temp[14] = in1[14] ^ in2[14] ^ cin;
    assign sum_temp[15] = in1[15] ^ in2[15] ^ cin;
    assign sum_temp[16] = in1[16] ^ in2[16] ^ cin;
    assign sum_temp[17] = in1[17] ^ in2[17] ^ cin;
    assign sum_temp[18] = in1[18] ^ in2[18] ^ cin;
    assign sum_temp[19] = in1[19] ^ in2[19] ^ cin;
    assign sum_temp[20] = in1[20] ^ in2[20] ^ cin;
    assign sum_temp[21] = in1[21] ^ in2[21] ^ cin;
    assign sum_temp[22] = in1[22] ^ in2[22] ^ cin;
    assign sum_temp[23] = in1[23] ^ in2[23] ^ cin;
    assign sum_temp[24] = in1[24] ^ in2[24] ^ cin;
    assign sum_temp[25] = in1[25] ^ in2[25] ^ cin;
    assign sum_temp[26] = in1[26] ^ in2[26] ^ cin;
    assign sum_temp[27] = in1[27] ^ in2[27] ^ cin;
    assign sum_temp[28] = in1[28] ^ in2[28] ^ cin;
    assign sum_temp[29] = in1[29] ^ in2[29] ^ cin;
    assign sum_temp[30] = in1[30] ^ in2[30] ^ cin;
    assign sum_temp[31] = in1[31] ^ in2[31] ^ cin;

    assign cout_temp = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  922
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign sum_temp[1] = in1[1] ^ in2[1] ^ cin;
    assign sum_temp[2] = in1[2] ^ in2[2] ^ cin;
    assign sum_temp[3] = in1[3] ^ in2[3] ^ cin;
    assign sum_temp[4] = in1[4] ^ in2[4] ^ cin;
    assign sum_temp[5] = in1[5] ^ in2[5] ^ cin;
    assign sum_temp[6] = in1[6] ^ in2[6] ^ cin;
    assign sum_temp[7] = in1[7] ^ in2[7] ^ cin;
    assign sum_temp[8] = in1[8] ^ in2[8] ^ cin;
    assign sum_temp[9] = in1[9] ^ in2[9] ^ cin;
    assign sum_temp[10] = in1[10] ^ in2[10] ^ cin;
    assign sum_temp[11] = in1[11] ^ in2[11] ^ cin;
    assign sum_temp[12] = in1[12] ^ in2[12] ^ cin;
    assign sum_temp[13] = in1[13] ^ in2[13] ^ cin;
    assign sum_temp[14] = in1[14] ^ in2[14] ^ cin;
    assign sum_temp[15] = in1[15] ^ in2[15] ^ cin;
    assign sum_temp[16] = in1[16] ^ in2[16] ^ cin;
    assign sum_temp[17] = in1[17] ^ in2[17] ^ cin;
    assign sum_temp[18] = in1[18] ^ in2[18] ^ cin;
    assign sum_temp[19] = in1[19] ^ in2[19] ^ cin;
    assign sum_temp[20] = in1[20] ^ in2[20] ^ cin;
    assign sum_temp[21] = in1[21] ^ in2[21] ^ cin;
    assign sum_temp[22] = in1[22] ^ in2[22] ^ cin;
    assign sum_temp[23] = in1[23] ^ in2[23] ^ cin;
    assign sum_temp[24] = in1[24] ^ in2[24] ^ cin;
    assign sum_temp[25] = in1[25] ^ in2[25] ^ cin;
    assign sum_temp[26] = in1[26] ^ in2[26] ^ cin;
    assign sum_temp[27] = in1[27] ^ in2[27] ^ cin;
    assign sum_temp[28] = in1[28] ^ in2[28] ^ cin;
    assign sum_temp[29] = in1[29] ^ in2[29] ^ cin;
    assign sum_temp[30] = in1[30] ^ in2[30] ^ cin;
    assign sum_temp[31] = in1[31] ^ in2[31] ^ cin;

    assign cout_temp = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  32  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //32-bit full adder
  full_adder fa_0(sum[0], cout_internal, in1[0], in2[0], cin);
  full_adder fa_1(sum[1], sum_internal[0], in1[1], in2[1], cout_internal);
  full_adder fa_2(sum[2], sum_internal[1], in1[2], in2[2], sum_internal[0]);
  full_adder fa_3(sum[3], sum_internal[2], in1[3], in2[3], sum_internal[1]);
  full_adder fa_4(sum[4], sum_internal[3], in1[4], in2[4], sum_internal[2]);
  full_adder fa_5(sum[5], sum_internal[4], in1[5], in2[5], sum_internal[3]);
  full_adder fa_6(sum[6], sum_internal[5], in1[6], in2[6], sum_internal[4]);
  full_adder fa_7(sum[7], sum_internal[6], in1[7], in2[7], sum_internal[5]);
  full_adder fa_8(sum[8], sum_internal[7], in1[8], in2[8], sum_internal[6]);
  full_adder fa_9(sum[9], sum_internal[8], in1[9], in2[9], sum_internal[7]);
  full_adder fa_10(sum[10], sum_internal[9], in1[10], in2[10], sum_internal[8]);
  full_adder fa_11(sum[11], sum_internal[10], in1[11], in2[11], sum_internal[9]);
  full_adder fa_12(sum[12], sum_internal[11], in1[12], in2[12], sum_internal[10]);
  full_adder fa_13(sum[13], sum_internal[12], in1[13], in2[13], sum_internal[11]);
  full_adder fa_14(sum[14], sum_internal[13], in1[14], in2[14], sum_internal[12]);
  full_adder fa_15(sum[15], sum_internal[14], in1[15], in2[15], sum_internal[13]);
  full_adder fa_16(sum[16], sum_internal[15], in1[16], in2[16], sum_internal[14]);
  full_adder fa_17(sum[17], sum_internal[16], in1[17], in2[17], sum_internal[15]);
  full_adder fa_18(sum[18], sum_internal[17], in1[18], in2[18], sum_internal[16]);
  full_adder fa_19(sum[19], sum_internal[18], in1[19], in2[19], sum_internal[17]);
  full_adder fa_20(sum[20], sum_internal[19], in1[20], in2[20], sum_internal[18]);
  full_adder fa_21(sum[21], sum_internal[20], in1[21], in2[21], sum_internal[19]);
  full_adder fa_22(sum[22], sum_internal[21], in1[22], in2[22], sum_internal[20]);
  full_adder fa_23(sum[23], sum_internal[22], in1[23], in2[23], sum_internal[21]);
  full_adder fa_24(sum[24], sum_internal[23], in1[24], in2[24], sum_internal[22]);
  full_adder fa_25(sum[25], sum_internal[24], in1[25], in2[25], sum_internal[23]);
  full_adder fa_26(sum[26], sum_internal[25], in1[26], in2[26], sum_internal[24]);
  full_adder fa_27(sum[27], sum_internal[26], in1[27], in2[27], sum_internal[25]);
  full_adder fa_28(sum[28], sum_internal[27], in1[28], in2[28], sum_internal[26]);
  full_adder fa_29(sum[29], sum_internal[28], in1[29], in2[29], sum_internal[27]);
  full_adder fa_30(sum[30], sum_internal[29], in1[30], in2[30], sum_internal[28]);
  full_adder fa_31(sum[31], sum_internal[30], in1[31], in2[31], sum_internal[29]);

  assign cout = sum_internal[30];

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1321
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //32-bit full adder
  full_adder fa_0(sum[0], cout_internal, in1[0], in2[0], cin);
  full_adder fa_1(sum[1], sum_internal[0], in1[1], in2[1], cout_internal);
  full_adder fa_2(sum[2], sum_internal[1], in1[2], in2[2], sum_internal[0]);
  full_adder fa_3(sum[3], sum_internal[2], in1[3], in2[3], sum_internal[1]);
  full_adder fa_4(sum[4], sum_internal[3], in1[4], in2[4], sum_internal[2]);
  full_adder fa_5(sum[5], sum_internal[4], in1[5], in2[5], sum_internal[3]);
  full_adder fa_6(sum[6], sum_internal[5], in1[6], in2[6], sum_internal[4]);
  full_adder fa_7(sum[7], sum_internal[6], in1[7], in2[7], sum_internal[5]);
  full_adder fa_8(sum[8], sum_internal[7], in1[8], in2[8], sum_internal[6]);
  full_adder fa_9(sum[9], sum_internal[8], in1[9], in2[9], sum_internal[7]);
  full_adder fa_10(sum[10], sum_internal[9], in1[10], in2[10], sum_internal[8]);
  full_adder fa_11(sum[11], sum_internal[10], in1[11], in2[11], sum_internal[9]);
  full_adder fa_12(sum[12], sum_internal[11], in1[12], in2[12], sum_internal[10]);
  full_adder fa_13(sum[13], sum_internal[12], in1[13], in2[13], sum_internal[11]);
  full_adder fa_14(sum[14], sum_internal[13], in1[14], in2[14], sum_internal[12]);
  full_adder fa_15(sum[15], sum_internal[14], in1[15], in2[15], sum_internal[13]);
  full_adder fa_16(sum[16], sum_internal[15], in1[16], in2[16], sum_internal[14]);
  full_adder fa_17(sum[17], sum_internal[16], in1[17], in2[17], sum_internal[15]);
  full_adder fa_18(sum[18], sum_internal[17], in1[18], in2[18], sum_internal[16]);
  full_adder fa_19(sum[19], sum_internal[18], in1[19], in2[19], sum_internal[17]);
  full_adder fa_20(sum[20], sum_internal[19], in1[20], in2[20], sum_internal[18]);
  full_adder fa_21(sum[21], sum_internal[20], in1[21], in2[21], sum_internal[19]);
  full_adder fa_22(sum[22], sum_internal[21], in1[22], in2[22], sum_internal[20]);
  full_adder fa_23(sum[23], sum_internal[22], in1[23], in2[23], sum_internal[21]);
  full_adder fa_24(sum[24], sum_internal[23], in1[24], in2[24], sum_internal[22]);
  full_adder fa_25(sum[25], sum_internal[24], in1[25], in2[25], sum_internal[23]);
  full_adder fa_26(sum[26], sum_internal[25], in1[26], in2[26], sum_internal[24]);
  full_adder fa_27(sum[27], sum_internal[26], in1[27], in2[27], sum_internal[25]);
  full_adder fa_28(sum[28], sum_internal[27], in1[28], in2[28], sum_internal[26]);
  full_adder fa_29(sum[29], sum_internal[28], in1[29], in2[29], sum_internal[27]);
  full_adder fa_30(sum[30], sum_internal[29], in1[30], in2[30], sum_internal[28]);
  full_adder fa_31(sum[31], sum_internal[30], in1[31], in2[31], sum_internal[29]);

  assign cout = sum_internal[30];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:15: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //32-bit full adder
  full_adder fa_0(sum[0], cout_internal, in1[0], in2[0], cin);
  full_adder fa_1(sum[1], sum_internal[0], in1[1], in2[1], cout_internal);
  full_adder fa_2(sum[2], sum_internal[1], in1[2], in2[2], sum_internal[0]);
  full_adder fa_3(sum[3], sum_internal[2], in1[3], in2[3], sum_internal[1]);
  full_adder fa_4(sum[4], sum_internal[3], in1[4], in2[4], sum_internal[2]);
  full_adder fa_5(sum[5], sum_internal[4], in1[5], in2[5], sum_internal[3]);
  full_adder fa_6(sum[6], sum_internal[5], in1[6], in2[6], sum_internal[4]);
  full_adder fa_7(sum[7], sum_internal[6], in1[7], in2[7], sum_internal[5]);
  full_adder fa_8(sum[8], sum_internal[7], in1[8], in2[8], sum_internal[6]);
  full_adder fa_9(sum[9], sum_internal[8], in1[9], in2[9], sum_internal[7]);
  full_adder fa_10(sum[10], sum_internal[9], in1[10], in2[10], sum_internal[8]);
  full_adder fa_11(sum[11], sum_internal[10], in1[11], in2[11], sum_internal[9]);
  full_adder fa_12(sum[12], sum_internal[11], in1[12], in2[12], sum_internal[10]);
  full_adder fa_13(sum[13], sum_internal[12], in1[13], in2[13], sum_internal[11]);
  full_adder fa_14(sum[14], sum_internal[13], in1[14], in2[14], sum_internal[12]);
  full_adder fa_15(sum[15], sum_internal[14], in1[15], in2[15], sum_internal[13]);
  full_adder fa_16(sum[16], sum_internal[15], in1[16], in2[16], sum_internal[14]);
  full_adder fa_17(sum[17], sum_internal[16], in1[17], in2[17], sum_internal[15]);
  full_adder fa_18(sum[18], sum_internal[17], in1[18], in2[18], sum_internal[16]);
  full_adder fa_19(sum[19], sum_internal[18], in1[19], in2[19], sum_internal[17]);
  full_adder fa_20(sum[20], sum_internal[19], in1[20], in2[20], sum_internal[18]);
  full_adder fa_21(sum[21], sum_internal[20], in1[21], in2[21], sum_internal[19]);
  full_adder fa_22(sum[22], sum_internal[21], in1[22], in2[22], sum_internal[20]);
  full_adder fa_23(sum[23], sum_internal[22], in1[23], in2[23], sum_internal[21]);
  full_adder fa_24(sum[24], sum_internal[23], in1[24], in2[24], sum_internal[22]);
  full_adder fa_25(sum[25], sum_internal[24], in1[25], in2[25], sum_internal[23]);
  full_adder fa_26(sum[26], sum_internal[25], in1[26], in2[26], sum_internal[24]);
  full_adder fa_27(sum[27], sum_internal[26], in1[27], in2[27], sum_internal[25]);
  full_adder fa_28(sum[28], sum_internal[27], in1[28], in2[28], sum_internal[26]);
  full_adder fa_29(sum[29], sum_internal[28], in1[29], in2[29], sum_internal[27]);
  full_adder fa_30(sum[30], sum_internal[29], in1[30], in2[30], sum_internal[28]);
  full_adder fa_31(sum[31], sum_internal[30], in1[31], in2[31], sum_internal[29]);

  assign cout = sum_internal[30];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //32-bit full subtractor
  full_subtractor fs_0(sum[0], cout_internal, in1[0], in2[0], cin);
  full_subtractor fs_1(sum[1], sum_internal[0], in1[1], in2[1], cout_internal);
  full_subtractor fs_2(sum[2], sum_internal[1], in1[2], in2[2], sum_internal[0]);
  full_subtractor fs_3(sum[3], sum_internal[2], in1[3], in2[3], sum_internal[1]);
  full_subtractor fs_4(sum[4], sum_internal[3], in1[4], in2[4], sum_internal[2]);
  full_subtractor fs_5(sum[5], sum_internal[4], in1[5], in2[5], sum_internal[3]);
  full_subtractor fs_6(sum[6], sum_internal[5], in1[6], in2[6], sum_internal[4]);
  full_subtractor fs_7(sum[7], sum_internal[6], in1[7], in2[7], sum_internal[5]);
  full_subtractor fs_8(sum[8], sum_internal[7], in1[8], in2[8], sum_internal[6]);
  full_subtractor fs_9(sum[9], sum_internal[8], in1[9], in2[9], sum_internal[7]);
  full_subtractor fs_10(sum[10], sum_internal[9], in1[10], in2[10], sum_internal[8]);
  full_subtractor fs_11(sum[11], sum_internal[10], in1[11], in2[11], sum_internal[9]);
  full_subtractor fs_12(sum[12], sum_internal[11], in1[12], in2[12], sum_internal[10]);
  full_subtractor fs_13(sum[13], sum_internal[12], in1[13], in2[13], sum_internal[11]);
  full_subtractor fs_14(sum[14],
[[  849  4002   647 ... 29896 29946  1402]]
tensor([[  849,  4002,   647,  ..., 29896, 29946,  1402]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //32-bit full adder
  full_adder fa_0(sum[0], cout_internal, in1[0], in2[0], cin);
  full_adder fa_1(sum[1], sum_internal[0], in1[1], in2[1], cout_internal);
  full_adder fa_2(sum[2], sum_internal[1], in1[2], in2[2], sum_internal[0]);
  full_adder fa_3(sum[3], sum_internal[2], in1[3], in2[3], sum_internal[1]);
  full_adder fa_4(sum[4], sum_internal[3], in1[4], in2[4], sum_internal[2]);
  full_adder fa_5(sum[5], sum_internal[4], in1[5], in2[5], sum_internal[3]);
  full_adder fa_6(sum[6], sum_internal[5], in1[6], in2[6], sum_internal[4]);
  full_adder fa_7(sum[7], sum_internal[6], in1[7], in2[7], sum_internal[5]);
  full_adder fa_8(sum[8], sum_internal[7], in1[8], in2[8], sum_internal[6]);
  full_adder fa_9(sum[9], sum_internal[8], in1[9], in2[9], sum_internal[7]);
  full_adder fa_10(sum[10], sum_internal[9], in1[10], in2[10], sum_internal[8]);
  full_adder fa_11(sum[11], sum_internal[10], in1[11], in2[11], sum_internal[9]);
  full_adder fa_12(sum[12], sum_internal[11], in1[12], in2[12], sum_internal[10]);
  full_adder fa_13(sum[13], sum_internal[12], in1[13], in2[13], sum_internal[11]);
  full_adder fa_14(sum[14], sum_internal[13], in1[14], in2[14], sum_internal[12]);
  full_adder fa_15(sum[15], sum_internal[14], in1[15], in2[15], sum_internal[13]);
  full_adder fa_16(sum[16], sum_internal[15], in1[16], in2[16], sum_internal[14]);
  full_adder fa_17(sum[17], sum_internal[16], in1[17], in2[17], sum_internal[15]);
  full_adder fa_18(sum[18], sum_internal[17], in1[18], in2[18], sum_internal[16]);
  full_adder fa_19(sum[19], sum_internal[18], in1[19], in2[19], sum_internal[17]);
  full_adder fa_20(sum[20], sum_internal[19], in1[20], in2[20], sum_internal[18]);
  full_adder fa_21(sum[21], sum_internal[20], in1[21], in2[21], sum_internal[19]);
  full_adder fa_22(sum[22], sum_internal[21], in1[22], in2[22], sum_internal[20]);
  full_adder fa_23(sum[23], sum_internal[22], in1[23], in2[23], sum_internal[21]);
  full_adder fa_24(sum[24], sum_internal[23], in1[24], in2[24], sum_internal[22]);
  full_adder fa_25(sum[25], sum_internal[24], in1[25], in2[25], sum_internal[23]);
  full_adder fa_26(sum[26], sum_internal[25], in1[26], in2[26], sum_internal[24]);
  full_adder fa_27(sum[27], sum_internal[26], in1[27], in2[27], sum_internal[25]);
  full_adder fa_28(sum[28], sum_internal[27], in1[28], in2[28], sum_internal[26]);
  full_adder fa_29(sum[29], sum_internal[28], in1[29], in2[29], sum_internal[27]);
  full_adder fa_30(sum[30], sum_internal[29], in1[30], in2[30], sum_internal[28]);
  full_adder fa_31(sum[31], sum_internal[30], in1[31], in2[31], sum_internal[29]);

  assign cout = sum_internal[30];

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  //32-bit full subtractor
  full_subtractor fs_0(sum[0], cout_internal, in1[0], in2[0], cin);
  full_subtractor fs_1(sum[1], sum_internal[0], in1[1], in2[1], cout_internal);
  full_subtractor fs_2(sum[2], sum_internal[1], in1[2], in2[2], sum_internal[0]);
  full_subtractor fs_3(sum[3], sum_internal[2], in1[3], in2[3], sum_internal[1]);
  full_subtractor fs_4(sum[4], sum_internal[3], in1[4], in2[4], sum_internal[2]);
  full_subtractor fs_5(sum[5], sum_internal[4], in1[5], in2[5], sum_internal[3]);
  full_subtractor fs_6(sum[6], sum_internal[5], in1[6], in2[6], sum_internal[4]);
  full_subtractor fs_7(sum[7], sum_internal[6], in1[7], in2[7], sum_internal[5]);
  full_subtractor fs_8(sum[8], sum_internal[7], in1[8], in2[8], sum_internal[6]);
  full_subtractor fs_9(sum[9], sum_internal[8], in1[9], in2[9], sum_internal[7]);
  full_subtractor fs_10(sum[10], sum_internal[9], in1[10], in2[10], sum_internal[8]);
  full_subtractor fs_11(sum[11], sum_internal[10], in1[11], in2[11], sum_internal[9]);
  full_subtractor fs_12(sum[12], sum_internal[11], in1[12], in2[12], sum_internal[10]);
  full_subtractor fs_13(sum[13], sum_internal[12], in1[13], in2[13], sum_internal[11]);
  full_subtractor fs_14(sum[14],
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:78: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  33  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
    355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7564,   416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  120
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
    355  5453    13    13   458  4002   647   263 29871 29896 29953 29899
   2966   594   672 29889    13   458  8439   526  1023 29871 29896 29953
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29896 29953  2586   995 29892   518 29896 29945 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29896 29953 29898  4905   518 29896 29945 29901 29900 29962  2533
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29896 29945 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13  1678  8014   518 29896 29945
  29901 29900 29962  2533 29918  7564 29936    13  1678  8014 11196 29918
   7564 29936    13    13  1678   594   672 29918 29947   594   672 29918
  29947 29918 29896 29898  2083 29918  7564 29961 29955 29901 29900  1402
  11196 29918  7564 29892   297 29896 29961 29955 29901 29900  1402   297
  29906 29961 29955 29901 29900  1402  4670   416    13  1678   594   672
  29918 29947   594   672 29918 29947 29918 29906 29898  2083 29918  7564
  29961 29896 29945 29901 29947  1402 11196 29892   297 29896 29961 29896
  29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947  1402
  11196 29918  7564   416    13    13   355  5453    13    13   458  4002
    647   385 29871 29947 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29947  2586 10970   313   262 29896   322   297 29906
  29897   322   263  2323  8677 29899   262  1881  2586 29892  4670 29889
     13   458  1576 14391   526   263 29871 29947  2586   995 29892   518
  29955 29901 29900 29962  2533 29892   322   263  2323  8677 29899   449
   1962  2586 29892 11196 29889    13   458  1576  3883   881  3667   675
    278 10970   313   262 29896   322   297 29906 29897   322   278  4670
   2586   304  4017   278  1962  2533   322 11196  1819 29889    13  5453
    594   672 29918 29947 29898  4905   518 29955 29901 29900 29962  2533
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29955 29901 29900 29962   297 29896 29892   297 29906 29892    13   462
    418  1881  4670   416    13    13  1678  8014   518 29955 29901 29900
  29962  2533 29918  7564 29936    13  1678  8014 11196 29918  7564 29936
     13    13  1678   594   672 29918 29946   594   672 29918 29946 29918
  29896 29898  2083 29918  7564 29961 29941 29901 29900  1402 11196 29918
   7564 29892   297 29896 29961 29941 29901 29900  1402   297 29906 29961
  29941 29901 29900  1402  4670   416    13  1678   594   672 29918 29946
    594   672 29918 29946 29918 29906 29898  2083 29918  7564 29961 29955
  29901 29946  1402 11196 29892   297 29896 29961 29955 29901 29946  1402
    297 29906 29961 29955 29901 29946  1402 11196 29918  7564   416    13
     13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
          1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7564,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,  1678,  8014,
         11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7564,   416,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,  1678,  8014,
         11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7564,   416,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  625
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    adder_1 adder_1_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_internal[1], cout, in1[1], in2[1], cout_internal);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1289
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    adder_1 adder_1_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_internal[1], cout, in1[1], in2[1], cout_internal);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  34  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29896 29945 29901 29900
  29962  2533 29918 29893 29936    13 29871  8014 11196 29918 29893 29936
     13    13 29871   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918 29893 29961 29955 29901 29900  1402 11196 29918
  29893 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13 29871   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918 29893 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  29893   416    13    13 29871  3566  2533   353  2533 29918 29893 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13 29871  8014   518 29955 29901 29900 29962  2533 29918 29893
  29936    13 29871  8014 11196 29918 29893 29936    13    13 29871   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
  29893 29961 29941 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918 29893 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 29893   416    13    13 29871  3566  2533
    353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 29893,   416,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

  assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_w;
  wire cout_w;

  adder_1 adder_1_1(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1 adder_1_2(sum_w[1], cout, in1[1], in2[1], cout_w);

  assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] sum_w;
  wire cout_w;

  assign sum_w = in1 ^ in2 ^ cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

  assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_w;
  wire cout_w;

  adder_1 adder_1_1(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1 adder_1_2(sum_w[1], cout, in1[1], in2[1], cout_w);

  assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] sum_w;
  wire cout_w;

  assign sum_w = in1 ^ in2 ^ cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.756864

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  35  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   849 29871 29941 29906 29899  2966   594   672    13 29871   594
    672 29918 29941 29906 29918  2966   594   672 29918 29941 29906 29918
   2966 29918 29900 29898  2083 29918 29893 29892 11196 29918 29893 29892
    297 29896 29892   297 29906 29892  4670   416    13    13 29871   849
   3566 14391    13 29871  3566  2533   353  2533 29918 29893 29936    13
  29871  3566 11196   353 11196 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           849, 29871, 29941, 29906, 29899,  2966,   594,   672,    13, 29871,
           594,   672, 29918, 29941, 29906, 29918,  2966,   594,   672, 29918,
         29941, 29906, 29918,  2966, 29918, 29900, 29898,  2083, 29918, 29893,
         29892, 11196, 29918, 29893, 29892,   297, 29896, 29892,   297, 29906,
         29892,  4670,   416,    13,    13, 29871,   849,  3566, 14391,    13,
         29871,  3566,  2533,   353,  2533, 29918, 29893, 29936,    13, 29871,
          3566, 11196,   353, 11196, 29918, 29893, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  94
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_32_bit\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                           output cout,
                           input [15:0] in1, in2,
                           input cin);

  wire [15:0] sum_w;
  wire cout_w;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   849 29871 29941 29906 29899  2966   594   672    13 29871   594
    672 29918 29941 29906 29918  2966   594   672 29918 29941 29906 29918
   2966 29918 29900 29898  2083 29918 29893 29892 11196 29918 29893 29892
    297 29896 29892   297 29906 29892  4670   416    13    13 29871   849
   3566 14391    13 29871  3566  2533   353  2533 29918 29893 29936    13
  29871  3566 11196   353 11196 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29941
  29906 29918  2966 29898  4905   518 29941 29896 29901 29900 29962  2533
  29892    13   462   965  1962 11196 29892    13   462   965  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   965  1881  4670   416    13    13 29871  8014   518 29941 29896
  29901 29900 29962  2533 29918 29893 29936    13 29871  8014 11196 29918
  29893 29936    13    13 29871   849 29871 29896 29953 29899  2966   594
    672    13 29871   594   672 29918 29896 29953 29918  2966   594   672
  29918 29896 29953 29918  2966 29918 29900 29898  2083 29918 29893 29961
  29896 29945 29901 29900  1402 11196 29918 29893 29892   297 29896 29961
  29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900
   1402  4670   416    13 29871   594   672 29918 29896 29953 29918  2966
    594   672 29918 29896 29953 29918  2966 29918 29896 29898  2083 29918
  29893 29961 29941 29896 29901 29896 29953  1402 11196 29918 29893 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871   849  3566 14391    13 29871  3566  2533   353  2533 29918 29893
  29936    13 29871  3566 11196   353 11196 29918 29893 29936    13    13
    355  5453    13    13   458  4002   647   263 29871 29896 29953 29899
   2966   594   672 29889    13   458  8439   526  1023 29871 29896 29953
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29896 29953  2586   995 29892   518 29896 29945 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29896 29953 29918  2966 29898  4905   518 29896 29945 29901 29900
  29962  2533 29892    13   462   965  1962 11196 29892    13   462   965
   1881   518 29896 29945 29901 29900 29962   297 29896 29892   297 29906
  29892    13   462   965  1881  4670   416    13    13 29871  8014   518
  29896 29945 29901 29900 29962  2533 29918 29893 29936    13 29871  8014
  11196 29918 29893 29936    13    13 29871   849 29871 29947 29899  2966
    594   672    13 29871   594   672 29918 29947 29918  2966   594   672
  29918 29947 29918  2966 29918 29900 29898  2083 29918 29893 29961 29955
  29901 29900  1402 11196 29918 29893 29892   297 29896 29961 29955 29901
  29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416    13
  29871   594   672 29918 29947 29918  2966   594   672 29918 29947 29918
   2966 29918 29896 29898  2083 29918 29893 29961 29896 29945 29901 29947
   1402 11196 29918 29893 29892   297 29896 29961 29896 29945 29901 29947
   1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918 29893
    416    13    13 29871   849  3566 14391    13 29871  3566  2533   353
   2533 29918 29893 29936    13 29871  3566 11196   353 11196 29918 29893
  29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   849,
         29871, 29941, 29906, 29899,  2966,   594,   672,    13, 29871,   594,
           672, 29918, 29941, 29906, 29918,  2966,   594,   672, 29918, 29941,
         29906, 29918,  2966, 29918, 29900, 29898,  2083, 29918, 29893, 29892,
         11196, 29918, 29893, 29892,   297, 29896, 29892,   297, 29906, 29892,
          4670,   416,    13,    13, 29871,   849,  3566, 14391,    13, 29871,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13, 29871,  3566,
         11196,   353, 11196, 29918, 29893, 29936,    13,    13,   355,  5453,
            13,    13,   458,  4002,   647,   263, 29871, 29941, 29906, 29899,
          2966,   594,   672, 29889,    13,   458,  8439,   526,  1023, 29871,
         29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,
          4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941,
         29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29918,
          2966, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,    13,   462,   965,  1962, 11196, 29892,    13,   462,   965,
          1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   965,  1881,  4670,   416,    13,
            13, 29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29918, 29893, 29936,    13, 29871,  8014, 11196, 29918, 29893, 29936,
            13,    13, 29871,   849, 29871, 29896, 29953, 29899,  2966,   594,
           672,    13, 29871,   594,   672, 29918, 29896, 29953, 29918,  2966,
           594,   672, 29918, 29896, 29953, 29918,  2966, 29918, 29900, 29898,
          2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871,   594,   672, 29918, 29896, 29953, 29918,  2966,
           594,   672, 29918, 29896, 29953, 29918,  2966, 29918, 29896, 29898,
          2083, 29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29941, 29896, 29901,
         29896, 29953,  1402,   297, 29906, 29961, 29941, 29896, 29901, 29896,
         29953,  1402, 11196, 29918, 29893,   416,    13,    13, 29871,   849,
          3566, 14391,    13, 29871,  3566,  2533,   353,  2533, 29918, 29893,
         29936,    13, 29871,  3566, 11196,   353, 11196, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   263,
         29871, 29896, 29953, 29899,  2966,   594,   672, 29889,    13,   458,
          8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29896, 29953,  2586,   995, 29892,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,   672,
         29918, 29896, 29953, 29918,  2966, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   965,  1962, 11196,
         29892,    13,   462,   965,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   965,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   849, 29871, 29947,
         29899,  2966,   594,   672,    13, 29871,   594,   672, 29918, 29947,
         29918,  2966,   594,   672, 29918, 29947, 29918,  2966, 29918, 29900,
         29898,  2083, 29918, 29893, 29961, 29955, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,
           297, 29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,
         29871,   594,   672, 29918, 29947, 29918,  2966,   594,   672, 29918,
         29947, 29918,  2966, 29918, 29896, 29898,  2083, 29918, 29893, 29961,
         29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893, 29892,   297,
         29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906, 29961,
         29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,   416,    13,
            13, 29871,   849,  3566, 14391,    13, 29871,  3566,  2533,   353,
          2533, 29918, 29893, 29936,    13, 29871,  3566, 11196,   353, 11196,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  711
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                           output cout,
                           input [15:0] in1, in2,
                           input cin);

  wire [15:0] sum_w;
  wire cout_w;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  5
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_8_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:58: error: Unknown module type: adder_8_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_8_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:58: error: Unknown module type: adder_8_bit\n5 error(s) during elaboration.\n*** These modules were missing:\n        adder_8_bit referenced 4 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                           output cout,
                           input [15:0] in1, in2,
                           input cin);

  wire [15:0] sum_w;
  wire cout_w;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                          output cout,
                          input [7:0] in1, in2,
                          input cin);

  wire [7:0] sum_w;
  wire cout_w;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                           output cout,
                           input [3:0] in1, in2,
                           input cin);

  wire [3:0] sum_w;
  wire cout_w;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                           output cout,
                           input [1:0] in1, in2,
                           input cin);

  wire [1:0] sum_w;
  wire cout_w;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1575
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                           output cout,
                           input [15:0] in1, in2,
                           input cin);

  wire [15:0] sum_w;
  wire cout_w;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                          output cout,
                          input [7:0] in1, in2,
                          input cin);

  wire [7:0] sum_w;
  wire cout_w;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                           output cout,
                           input [3:0] in1, in2,
                           input cin);

  wire [3:0] sum_w;
  wire cout_w;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                           output cout,
                           input [1:0] in1, in2,
                           input cin);

  wire [1:0] sum_w;
  wire cout_w;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:123: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:124: error: Unknown module type: adder_1_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_1_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                           output cout,
                           input [15:0] in1, in2,
                           input cin);

  wire [15:0] sum_w;
  wire cout_w;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                          output cout,
                          input [7:0] in1, in2,
                          input cin);

  wire [7:0] sum_w;
  wire cout_w;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                           output cout,
                           input [3:0] in1, in2,
                           input cin);

  wire [3:0] sum_w;
  wire cout_w;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                           output cout,
                           input [1:0] in1, in2,
                           input cin);

  wire [1:0] sum_w;
  wire cout_w;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                           output cout,
                           input [0:0] in1, in2,
                           input cin);

  wire [0:0] sum_w;
  wire cout_w;

  // 1-bit adder
  assign sum_w = in1 + in2 + cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  // 32-bit subtractor
  subtractor_32_bit subtractor_32_bit_0(diff_w, cout_w, in1, in2, cin);

  // assign outputs
  assign diff = diff_w;
  assign
[[  849  4002   647 ...    13 29871  3566]]
tensor([[  849,  4002,   647,  ...,    13, 29871,  3566]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_w, cout_w, in1, in2, cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] sum_w;
  wire cout_w;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                           output cout,
                           input [15:0] in1, in2,
                           input cin);

  wire [15:0] sum_w;
  wire cout_w;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                          output cout,
                          input [7:0] in1, in2,
                          input cin);

  wire [7:0] sum_w;
  wire cout_w;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                           output cout,
                           input [3:0] in1, in2,
                           input cin);

  wire [3:0] sum_w;
  wire cout_w;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                           output cout,
                           input [1:0] in1, in2,
                           input cin);

  wire [1:0] sum_w;
  wire cout_w;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                           output cout,
                           input [0:0] in1, in2,
                           input cin);

  wire [0:0] sum_w;
  wire cout_w;

  // 1-bit adder
  assign sum_w = in1 + in2 + cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

  // assign outputs
  assign sum = sum_w;
  assign cout = cout_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  // 32-bit subtractor
  subtractor_32_bit subtractor_32_bit_0(diff_w, cout_w, in1, in2, cin);

  // assign outputs
  assign diff = diff_w;
  assign
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:171: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  36  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962   269
  29936    13 29871  8014   518 29941 29896 29901 29900 29962   274 29936
     13    13 29871  2531  1707   474 29936    13 29871  5706    13  1678
    363   313 29875   353 29871 29900 29936   474   529 29871 29941 29906
  29936   474   353   474   718 29871 29896 29897  3380 29901  2531 29918
    328   672    13   418   594   672 29918 29896   594   672 29918 29896
  29918  2611 29898    13  4706   869  2083 29898 29879 29961 29875 11724
     13  4706   869 13147 29898 29883 29961 29875 11724    13  4706   869
    262 29896 29898   262 29896 29961 29875 11724    13  4706   869   262
  29906 29898   262 29906 29961 29875 11724    13  4706   869 16381 29898
  16381 29897    13   418  3482    13  1678  1095    13 29871  1095 17158
     13    13 29871  3566  2533   353   269 29936    13 29871  3566 11196
    353   274 29961 29941 29896  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,   269, 29936,    13, 29871,
          8014,   518, 29941, 29896, 29901, 29900, 29962,   274, 29936,    13,
            13, 29871,  2531,  1707,   474, 29936,    13, 29871,  5706,    13,
          1678,   363,   313, 29875,   353, 29871, 29900, 29936,   474,   529,
         29871, 29941, 29906, 29936,   474,   353,   474,   718, 29871, 29896,
         29897,  3380, 29901,  2531, 29918,   328,   672,    13,   418,   594,
           672, 29918, 29896,   594,   672, 29918, 29896, 29918,  2611, 29898,
            13,  4706,   869,  2083, 29898, 29879, 29961, 29875, 11724,    13,
          4706,   869, 13147, 29898, 29883, 29961, 29875, 11724,    13,  4706,
           869,   262, 29896, 29898,   262, 29896, 29961, 29875, 11724,    13,
          4706,   869,   262, 29906, 29898,   262, 29906, 29961, 29875, 11724,
            13,  4706,   869, 16381, 29898, 16381, 29897,    13,   418,  3482,
            13,  1678,  1095,    13, 29871,  1095, 17158,    13,    13, 29871,
          3566,  2533,   353,   269, 29936,    13, 29871,  3566, 11196,   353,
           274, 29961, 29941, 29896,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  152
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  32
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n32 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962   269
  29936    13 29871  8014   518 29941 29896 29901 29900 29962   274 29936
     13    13 29871  2531  1707   474 29936    13 29871  5706    13  1678
    363   313 29875   353 29871 29900 29936   474   529 29871 29941 29906
  29936   474   353   474   718 29871 29896 29897  3380 29901  2531 29918
    328   672    13   418   594   672 29918 29896   594   672 29918 29896
  29918  2611 29898    13  4706   869  2083 29898 29879 29961 29875 11724
     13  4706   869 13147 29898 29883 29961 29875 11724    13  4706   869
    262 29896 29898   262 29896 29961 29875 11724    13  4706   869   262
  29906 29898   262 29906 29961 29875 11724    13  4706   869 16381 29898
  16381 29897    13   418  3482    13  1678  1095    13 29871  1095 17158
     13    13 29871  3566  2533   353   269 29936    13 29871  3566 11196
    353   274 29961 29941 29896  1385    13    13   355  5453    13    13
    458  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29918
  29896 29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29941 29896 29901 29900
  29962   269 29936    13 29871  8014   518 29941 29896 29901 29900 29962
    274 29936    13    13 29871  2531  1707   474 29936    13 29871  5706
     13  1678   363   313 29875   353 29871 29900 29936   474   529 29871
  29941 29906 29936   474   353   474   718 29871 29896 29897  3380 29901
   2531 29918   328   672    13   418   594   672 29918 29896   594   672
  29918 29896 29918  2611 29898    13  4706   869  2083 29898 29879 29961
  29875 11724    13  4706   869 13147 29898 29883 29961 29875 11724    13
   4706   869   262 29896 29898   262 29896 29961 29875 11724    13  4706
    869   262 29906 29898   262 29906 29961 29875 11724    13  4706   869
  16381 29898 16381 29897    13   418  3482    13  1678  1095    13 29871
   1095 17158    13    13 29871  3566  2533   353   269 29936    13 29871
   3566 11196   353   274 29961 29941 29896  1385    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29941
  29906 29918 29906 29898  4905   518 29941 29896 29901 29900 29962  2533
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13 29871  8014   518 29941 29896
  29901 29900 29962   269 29936    13 29871  8014   518 29941 29896 29901
  29900 29962   274 29936    13    13 29871  2531  1707   474 29936    13
  29871  5706    13  1678   363   313 29875   353 29871 29900 29936   474
    529 29871 29941 29906 29936   474   353   474   718 29871 29896 29897
   3380 29901  2531 29918   328   672    13   418   594   672 29918 29896
    594   672 29918 29896 29918  2611 29898    13  4706   869  2083 29898
  29879 29961 29875 11724    13  4706   869 13147 29898 29883 29961 29875
  11724    13  4706   869   262 29896 29898   262 29896 29961 29875 11724
     13  4706   869   262 29906 29898   262 29906 29961 29875 11724    13
   4706   869 16381 29898 16381 29897    13   418  3482    13  1678  1095
     13 29871  1095 17158    13    13 29871  3566  2533   353   269 29936
     13 29871  3566 11196   353   274 29961 29941 29896  1385    13    13
    355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,   269, 29936,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,   274, 29936,    13,    13,
         29871,  2531,  1707,   474, 29936,    13, 29871,  5706,    13,  1678,
           363,   313, 29875,   353, 29871, 29900, 29936,   474,   529, 29871,
         29941, 29906, 29936,   474,   353,   474,   718, 29871, 29896, 29897,
          3380, 29901,  2531, 29918,   328,   672,    13,   418,   594,   672,
         29918, 29896,   594,   672, 29918, 29896, 29918,  2611, 29898,    13,
          4706,   869,  2083, 29898, 29879, 29961, 29875, 11724,    13,  4706,
           869, 13147, 29898, 29883, 29961, 29875, 11724,    13,  4706,   869,
           262, 29896, 29898,   262, 29896, 29961, 29875, 11724,    13,  4706,
           869,   262, 29906, 29898,   262, 29906, 29961, 29875, 11724,    13,
          4706,   869, 16381, 29898, 16381, 29897,    13,   418,  3482,    13,
          1678,  1095,    13, 29871,  1095, 17158,    13,    13, 29871,  3566,
          2533,   353,   269, 29936,    13, 29871,  3566, 11196,   353,   274,
         29961, 29941, 29896,  1385,    13,    13,   355,  5453,    13,    13,
           458,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29918, 29896, 29898,
          4905,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906,
         29892,    13,   462,   418,  1881,  4670,   416,    13,    13, 29871,
          8014,   518, 29941, 29896, 29901, 29900, 29962,   269, 29936,    13,
         29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,   274, 29936,
            13,    13, 29871,  2531,  1707,   474, 29936,    13, 29871,  5706,
            13,  1678,   363,   313, 29875,   353, 29871, 29900, 29936,   474,
           529, 29871, 29941, 29906, 29936,   474,   353,   474,   718, 29871,
         29896, 29897,  3380, 29901,  2531, 29918,   328,   672,    13,   418,
           594,   672, 29918, 29896,   594,   672, 29918, 29896, 29918,  2611,
         29898,    13,  4706,   869,  2083, 29898, 29879, 29961, 29875, 11724,
            13,  4706,   869, 13147, 29898, 29883, 29961, 29875, 11724,    13,
          4706,   869,   262, 29896, 29898,   262, 29896, 29961, 29875, 11724,
            13,  4706,   869,   262, 29906, 29898,   262, 29906, 29961, 29875,
         11724,    13,  4706,   869, 16381, 29898, 16381, 29897,    13,   418,
          3482,    13,  1678,  1095,    13, 29871,  1095, 17158,    13,    13,
         29871,  3566,  2533,   353,   269, 29936,    13, 29871,  3566, 11196,
           353,   274, 29961, 29941, 29896,  1385,    13,    13,   355,  5453,
            13,    13,   458,  4002,   647,   263, 29871, 29941, 29906, 29899,
          2966,   594,   672, 29889,    13,   458,  8439,   526,  1023, 29871,
         29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,
          4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941,
         29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29918,
         29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13, 29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,   269,
         29936,    13, 29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,
           274, 29936,    13,    13, 29871,  2531,  1707,   474, 29936,    13,
         29871,  5706,    13,  1678,   363,   313, 29875,   353, 29871, 29900,
         29936,   474,   529, 29871, 29941, 29906, 29936,   474,   353,   474,
           718, 29871, 29896, 29897,  3380, 29901,  2531, 29918,   328,   672,
            13,   418,   594,   672, 29918, 29896,   594,   672, 29918, 29896,
         29918,  2611, 29898,    13,  4706,   869,  2083, 29898, 29879, 29961,
         29875, 11724,    13,  4706,   869, 13147, 29898, 29883, 29961, 29875,
         11724,    13,  4706,   869,   262, 29896, 29898,   262, 29896, 29961,
         29875, 11724,    13,  4706,   869,   262, 29906, 29898,   262, 29906,
         29961, 29875, 11724,    13,  4706,   869, 16381, 29898, 16381, 29897,
            13,   418,  3482,    13,  1678,  1095,    13, 29871,  1095, 17158,
            13,    13, 29871,  3566,  2533,   353,   269, 29936,    13, 29871,
          3566, 11196,   353,   274, 29961, 29941, 29896,  1385,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  756
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  96
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n96 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 96 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_3(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_4(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_5(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1662
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_3(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_4(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_5(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  192
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n192 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 192 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_3(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_4(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_5(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_6(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in
[[  849  4002   647 ... 10970   313   262]]
tensor([[  849,  4002,   647,  ..., 10970,   313,   262]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_2(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_3(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_4(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_5(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_6(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire [31:0] c;

  genvar i;
  generate
    for (i = 0; i < 32; i = i + 1) begin: gen_adder
      adder_1 adder_1_inst(
        .sum(s[i]),
        .cout(c[i]),
        .in1(in1[i]),
        .in2(in2[i]),
        .cin(cin)
      );
    end
  endgenerate

  assign sum = s;
  assign cout = c[31];

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in
LOGGING VERILOG CODE.
Verilog compilation failed, error:  224
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:136: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:196: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_1\n224 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 224 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  37  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] s;

    assign s = {in1, in2} + cin;
    assign sum = s[31:0];
    assign cout = s[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962   269
  29936    13    13  1678  3566   269   353   426   262 29896 29892   297
  29906 29913   718  4670 29936    13  1678  3566  2533   353   269 29961
  29941 29896 29901 29900  1385    13  1678  3566 11196   353   269 29961
  29941 29906  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,   269, 29936,    13,    13,
          1678,  3566,   269,   353,   426,   262, 29896, 29892,   297, 29906,
         29913,   718,  4670, 29936,    13,  1678,  3566,  2533,   353,   269,
         29961, 29941, 29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,
           353,   269, 29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  53
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] s;

    assign s = {in1, in2} + cin;
    assign sum = s[31:0];
    assign cout = s[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  38  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 22376 29961 29896 29945 29901 29900  1402 11196
  29918 22376 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 22376 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 22376   416    13    13
  29871  3566  2533   353  2533 29918 22376 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13, 29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 22376,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 22376, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 22376 29961 29896 29945 29901 29900  1402 11196
  29918 22376 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 22376 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 22376   416    13    13
  29871  3566  2533   353  2533 29918 22376 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29896 29945 29901 29900
  29962  2533 29918 22376 29936    13 29871  8014 11196 29918 22376 29936
     13    13 29871   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918 22376 29961 29955 29901 29900  1402 11196 29918
  22376 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13 29871   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918 22376 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  22376   416    13    13 29871  3566  2533   353  2533 29918 22376 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13 29871  8014   518 29955 29901 29900 29962  2533 29918 22376
  29936    13 29871  8014 11196 29918 22376 29936    13    13 29871   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
  22376 29961 29941 29901 29900  1402 11196 29918 22376 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918 22376 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 22376   416    13    13 29871  3566  2533
    353  2533 29918 22376 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
         29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         22376, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         22376,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         22376, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 22376, 29936,    13, 29871,  8014,
         11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 22376,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 22376, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 22376, 29936,    13, 29871,  8014,
         11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 22376,   416,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918, 22376, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_wire;
  wire cout_wire;

  adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_wire[3:2], cout, in1[3:2], in2[3:2], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_wire;
  wire cout_wire;

  adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_wire[1], cout, in1[1], in2[1], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout = sum_wire[0] ^ cin;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1349
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

  assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_wire;
  wire cout_wire;

  adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_wire[3:2], cout, in1[3:2], in2[3:2], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_wire;
  wire cout_wire;

  adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_wire[1], cout, in1[1], in2[1], cout_wire);

  assign sum = sum_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout = sum_wire[0] ^ cin;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  39  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918  7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13 16645  2533   353  2533
  29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         22376, 11196, 29918,  7382, 29936,    13,    13,   328,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,   328,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,
            13, 16645,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  125
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918  7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13 16645  2533   353  2533
  29918  7382 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  22376   518 29896 29945 29901 29900 29962  2533 29918  7382 29936    13
  22376 11196 29918  7382 29936    13    13   328   672 29918 29947   594
    672 29918 29947 29918 29900 29898  2083 29918  7382 29961 29955 29901
  29900  1402 11196 29918  7382 29892   297 29896 29961 29955 29901 29900
   1402   297 29906 29961 29955 29901 29900  1402  4670   416    13   328
    672 29918 29947   594   672 29918 29947 29918 29896 29898  2083 29918
   7382 29961 29896 29945 29901 29947  1402 11196 29892   297 29896 29961
  29896 29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947
   1402 11196 29918  7382   416    13    13 16645  2533   353  2533 29918
   7382 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   268  1962 11196 29892    13   462   268  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   268  1881
   4670   416    13    13 22376   518 29955 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918  7382
  29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896 29961
  29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402  4670
    416    13   328   672 29918 29946   594   672 29918 29946 29918 29896
  29898  2083 29918  7382 29961 29955 29901 29946  1402 11196 29892   297
  29896 29961 29955 29901 29946  1402   297 29906 29961 29955 29901 29946
   1402 11196 29918  7382   416    13    13 16645  2533   353  2533 29918
   7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 22376,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 22376,
         11196, 29918,  7382, 29936,    13,    13,   328,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,   328,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
         16645,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29896, 29953,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896, 29953,
         29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
         22376,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29918,  7382,
         29936,    13, 22376, 11196, 29918,  7382, 29936,    13,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29900, 29898,
          2083, 29918,  7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,
          2083, 29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,
           416,    13,    13, 16645,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 22376,   518, 29955, 29901,
         29900, 29962,  2533, 29918,  7382, 29936,    13, 22376, 11196, 29918,
          7382, 29936,    13,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29900, 29898,  2083, 29918,  7382, 29961, 29941,
         29901, 29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961,
         29941, 29901, 29900,  1402,   297, 29906, 29961, 29941, 29901, 29900,
          1402,  4670,   416,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29955,
         29901, 29946,  1402, 11196, 29892,   297, 29896, 29961, 29955, 29901,
         29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,  1402, 11196,
         29918,  7382,   416,    13,    13, 16645,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  640
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_temp;
wire cout_temp;

adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_temp;
wire cout_temp;

adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

wire [0:0] sum_temp;
wire cout_temp;

assign sum_temp = in1 ^ in2 ^ cin;
assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1351
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_temp;
wire cout_temp;

adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_temp;
wire cout_temp;

adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_temp;
wire cout_temp;

adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_temp;
wire cout_temp;

adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

wire [0:0] sum_temp;
wire cout_temp;

assign sum_temp = in1 ^ in2 ^ cin;
assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.762157

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  40  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] s;

    assign s = in1 + in2 + cin;
    assign sum = s[31:0];
    assign cout = s[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962   269
  29936    13    13  1678  3566   269   353   297 29896   718   297 29906
    718  4670 29936    13  1678  3566  2533   353   269 29961 29941 29896
  29901 29900  1385    13  1678  3566 11196   353   269 29961 29941 29906
   1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,   269, 29936,    13,    13,
          1678,  3566,   269,   353,   297, 29896,   718,   297, 29906,   718,
          4670, 29936,    13,  1678,  3566,  2533,   353,   269, 29961, 29941,
         29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,   353,   269,
         29961, 29941, 29906,  1385,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  51
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] s;

    assign s = in1 + in2 + cin;
    assign sum = s[31:0];
    assign cout = s[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.717635

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  41  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13    13
   1678  3566  2533   353  2533 29918 22376 29936    13  1678  3566 11196
    353 11196 29918 22376 29936    13    13  1678   849 29871 29896 29899
   2966   594   672    13  1678   594   672 29918 29896   594   672 29918
  29896 29918 29900 29898  2083 29918 22376 29961 29900  1402 11196 29918
  22376 29892   297 29896 29961 29900  1402   297 29906 29961 29900  1402
   4670   416    13    13  1678   849 29871 29941 29896 29899  2966   594
    672    13  1678   594   672 29918 29941 29896   594   672 29918 29941
  29896 29918 29900 29898  2083 29918 22376 29961 29896 29901 29941 29896
   1402 11196 29918 22376 29892   297 29896 29961 29896 29901 29941 29896
   1402   297 29906 29961 29896 29901 29941 29896  1402 11196 29918 22376
    416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13,  1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 22376, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 22376, 29936,    13,    13,  1678,   849,
         29871, 29896, 29899,  2966,   594,   672,    13,  1678,   594,   672,
         29918, 29896,   594,   672, 29918, 29896, 29918, 29900, 29898,  2083,
         29918, 22376, 29961, 29900,  1402, 11196, 29918, 22376, 29892,   297,
         29896, 29961, 29900,  1402,   297, 29906, 29961, 29900,  1402,  4670,
           416,    13,    13,  1678,   849, 29871, 29941, 29896, 29899,  2966,
           594,   672,    13,  1678,   594,   672, 29918, 29941, 29896,   594,
           672, 29918, 29941, 29896, 29918, 29900, 29898,  2083, 29918, 22376,
         29961, 29896, 29901, 29941, 29896,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29896, 29901, 29941, 29896,  1402,   297, 29906,
         29961, 29896, 29901, 29941, 29896,  1402, 11196, 29918, 22376,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  147
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_31\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 1 times.\n        adder_31 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit subtractor
    subtractor_1 subtractor_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit subtractor
    subtractor_31 subtractor_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit multiplier
    multiplier_1 multiplier_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit multiplier
    multiplier_31 multiplier_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13    13
   1678  3566  2533   353  2533 29918 22376 29936    13  1678  3566 11196
    353 11196 29918 22376 29936    13    13  1678   849 29871 29896 29899
   2966   594   672    13  1678   594   672 29918 29896   594   672 29918
  29896 29918 29900 29898  2083 29918 22376 29961 29900  1402 11196 29918
  22376 29892   297 29896 29961 29900  1402   297 29906 29961 29900  1402
   4670   416    13    13  1678   849 29871 29941 29896 29899  2966   594
    672    13  1678   594   672 29918 29941 29896   594   672 29918 29941
  29896 29918 29900 29898  2083 29918 22376 29961 29896 29901 29941 29896
   1402 11196 29918 22376 29892   297 29896 29961 29896 29901 29941 29896
   1402   297 29906 29961 29896 29901 29941 29896  1402 11196 29918 22376
    416    13    13   355  5453    13    13   458  4002   647   263 29871
  29941 29906 29899  2966 23197   272 29889    13   458  8439   526  1023
  29871 29941 29906  2586 10970   313   262 29896   322   297 29906 29897
    322   263  2323  8677 29899   262  1881  2586 29892  4670 29889    13
    458  1576 14391   526   263 29871 29941 29906  2586   995 29892   518
  29941 29896 29901 29900 29962  2533 29892   322   263  2323  8677 29899
    449  1962  2586 29892 11196 29889    13   458  1576  3883   881  3667
    675   278 10970   313   262 29896   322   297 29906 29897   322   278
   4670  2586   304  4017   278  1962  2533   322 11196  1819 29889    13
   5453 23197   272 29918 29941 29906 29898  4905   518 29941 29896 29901
  29900 29962  2533 29892    13   462   418  1962 11196 29892    13   462
    418  1881   518 29941 29896 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   418  1881  4670   416    13    13  1678  8014
    518 29941 29896 29901 29900 29962  2533 29918 22376 29936    13  1678
   8014 11196 29918 22376 29936    13    13  1678  3566  2533   353  2533
  29918 22376 29936    13  1678  3566 11196   353 11196 29918 22376 29936
     13    13  1678   849 29871 29896 29899  2966 23197   272    13  1678
  23197   272 29918 29896 23197   272 29918 29896 29918 29900 29898  2083
  29918 22376 29961 29900  1402 11196 29918 22376 29892   297 29896 29961
  29900  1402   297 29906 29961 29900  1402  4670   416    13    13  1678
    849 29871 29941 29896 29899  2966 23197   272    13  1678 23197   272
  29918 29941 29896 23197   272 29918 29941 29896 29918 29900 29898  2083
  29918 22376 29961 29896 29901 29941 29896  1402 11196 29918 22376 29892
    297 29896 29961 29896 29901 29941 29896  1402   297 29906 29961 29896
  29901 29941 29896  1402 11196 29918 22376   416    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966  6674
   4926 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453  6674  4926 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29941 29896 29901 29900
  29962  2533 29918 22376 29936    13  1678  8014 11196 29918 22376 29936
     13    13  1678  3566  2533   353  2533 29918 22376 29936    13  1678
   3566 11196   353 11196 29918 22376 29936    13    13  1678   849 29871
  29896 29899  2966  6674  4926    13  1678  6674  4926 29918 29896  6674
   4926 29918 29896 29918 29900 29898  2083 29918 22376 29961 29900  1402
  11196 29918 22376 29892   297 29896 29961 29900  1402   297 29906 29961
  29900  1402  4670   416    13    13  1678   849 29871 29941 29896 29899
   2966  6674  4926    13  1678  6674  4926 29918 29941 29896  6674  4926
  29918 29941 29896 29918 29900 29898  2083 29918 22376 29961 29896 29901
  29941 29896  1402 11196 29918 22376 29892   297 29896 29961 29896 29901
  29941 29896  1402   297 29906 29961 29896 29901 29941 29896  1402 11196
  29918 22376   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
          1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 22376, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 22376, 29936,    13,    13,  1678,   849, 29871,
         29896, 29899,  2966,   594,   672,    13,  1678,   594,   672, 29918,
         29896,   594,   672, 29918, 29896, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29900,  1402, 11196, 29918, 22376, 29892,   297, 29896,
         29961, 29900,  1402,   297, 29906, 29961, 29900,  1402,  4670,   416,
            13,    13,  1678,   849, 29871, 29941, 29896, 29899,  2966,   594,
           672,    13,  1678,   594,   672, 29918, 29941, 29896,   594,   672,
         29918, 29941, 29896, 29918, 29900, 29898,  2083, 29918, 22376, 29961,
         29896, 29901, 29941, 29896,  1402, 11196, 29918, 22376, 29892,   297,
         29896, 29961, 29896, 29901, 29941, 29896,  1402,   297, 29906, 29961,
         29896, 29901, 29941, 29896,  1402, 11196, 29918, 22376,   416,    13,
            13,   355,  5453,    13,    13,   458,  4002,   647,   263, 29871,
         29941, 29906, 29899,  2966, 23197,   272, 29889,    13,   458,  8439,
           526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,
          1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,
           263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,
           449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,
           881,  3667,   675,   278, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,
          2533,   322, 11196,  1819, 29889,    13,  5453, 23197,   272, 29918,
         29941, 29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,
           418,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896,
         29892,   297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,
            13,    13,  1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29918, 22376, 29936,    13,  1678,  8014, 11196, 29918, 22376,
         29936,    13,    13,  1678,  3566,  2533,   353,  2533, 29918, 22376,
         29936,    13,  1678,  3566, 11196,   353, 11196, 29918, 22376, 29936,
            13,    13,  1678,   849, 29871, 29896, 29899,  2966, 23197,   272,
            13,  1678, 23197,   272, 29918, 29896, 23197,   272, 29918, 29896,
         29918, 29900, 29898,  2083, 29918, 22376, 29961, 29900,  1402, 11196,
         29918, 22376, 29892,   297, 29896, 29961, 29900,  1402,   297, 29906,
         29961, 29900,  1402,  4670,   416,    13,    13,  1678,   849, 29871,
         29941, 29896, 29899,  2966, 23197,   272,    13,  1678, 23197,   272,
         29918, 29941, 29896, 23197,   272, 29918, 29941, 29896, 29918, 29900,
         29898,  2083, 29918, 22376, 29961, 29896, 29901, 29941, 29896,  1402,
         11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29901, 29941,
         29896,  1402,   297, 29906, 29961, 29896, 29901, 29941, 29896,  1402,
         11196, 29918, 22376,   416,    13,    13,   355,  5453,    13,    13,
           458,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,  6674,
          4926, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,  6674,  4926, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
          1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 22376, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 22376, 29936,    13,    13,  1678,   849, 29871,
         29896, 29899,  2966,  6674,  4926,    13,  1678,  6674,  4926, 29918,
         29896,  6674,  4926, 29918, 29896, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29900,  1402, 11196, 29918, 22376, 29892,   297, 29896,
         29961, 29900,  1402,   297, 29906, 29961, 29900,  1402,  4670,   416,
            13,    13,  1678,   849, 29871, 29941, 29896, 29899,  2966,  6674,
          4926,    13,  1678,  6674,  4926, 29918, 29941, 29896,  6674,  4926,
         29918, 29941, 29896, 29918, 29900, 29898,  2083, 29918, 22376, 29961,
         29896, 29901, 29941, 29896,  1402, 11196, 29918, 22376, 29892,   297,
         29896, 29961, 29896, 29901, 29941, 29896,  1402,   297, 29906, 29961,
         29896, 29901, 29941, 29896,  1402, 11196, 29918, 22376,   416,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  737
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit subtractor
    subtractor_1 subtractor_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit subtractor
    subtractor_31 subtractor_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit multiplier
    multiplier_1 multiplier_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit multiplier
    multiplier_31 multiplier_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:63: error: Unknown module type: multiplier_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:66: error: Unknown module type: multiplier_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: subtractor_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: subtractor_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_31\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 1 times.\n        adder_31 referenced 1 times.\n        multiplier_1 referenced 1 times.\n        multiplier_31 referenced 1 times.\n        subtractor_1 referenced 1 times.\n        subtractor_31 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit subtractor
    subtractor_1 subtractor_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit subtractor
    subtractor_31 subtractor_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit multiplier
    multiplier_1 multiplier_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit multiplier
    multiplier_31 multiplier_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit divider
    divider_1 divider_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit divider
    divider_31 divider_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit modulus
    modulus_1 modulus_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit modulus
    modulus_31 modulus_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit comparator
    comparator_1 comparator_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit comparator
    comparator_31 comparator_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1622
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit subtractor
    subtractor_1 subtractor_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit subtractor
    subtractor_31 subtractor_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit multiplier
    multiplier_1 multiplier_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit multiplier
    multiplier_31 multiplier_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit divider
    divider_1 divider_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit divider
    divider_31 divider_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit modulus
    modulus_1 modulus_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit modulus
    modulus_31 modulus_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit comparator
    comparator_1 comparator_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit comparator
    comparator_31 comparator_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:132: error: Unknown module type: comparator_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:135: error: Unknown module type: comparator_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: divider_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: divider_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: modulus_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:112: error: Unknown module type: modulus_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:63: error: Unknown module type: multiplier_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:66: error: Unknown module type: multiplier_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: subtractor_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: subtractor_31\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_31\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 1 times.\n        adder_31 referenced 1 times.\n        comparator_1 referenced 1 times.\n        comparator_31 referenced 1 times.\n        divider_1 referenced 1 times.\n        divider_31 referenced 1 times.\n        modulus_1 referenced 1 times.\n        modulus_31 referenced 1 times.\n        multiplier_1 referenced 1 times.\n        multiplier_31 referenced 1 times.\n        subtractor_1 referenced 1 times.\n        subtractor_31 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit subtractor
    subtractor_1 subtractor_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit subtractor
    subtractor_31 subtractor_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit multiplier
    multiplier_1 multiplier_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit multiplier
    multiplier_31 multiplier_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit divider
    divider_1 divider_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit divider
    divider_31 divider_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit modulus
    modulus_1 modulus_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit modulus
    modulus_31 modulus_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit comparator
    comparator_1 comparator_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit comparator
    comparator_31 comparator_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit comparator
    comparator_1 comparator_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit comparator
    comparator_31 comparator_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [3
[[  849  4002   647 ...  1881   518 29941]]
tensor([[  849,  4002,   647,  ...,  1881,   518, 29941]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit adder
    adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit adder
    adder_31 adder_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit subtractor
    subtractor_1 subtractor_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit subtractor
    subtractor_31 subtractor_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit multiplier
    multiplier_1 multiplier_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit multiplier
    multiplier_31 multiplier_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit divider
    divider_1 divider_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit divider
    divider_31 divider_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit modulus
    modulus_1 modulus_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit modulus
    modulus_31 modulus_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit comparator
    comparator_1 comparator_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit comparator
    comparator_31 comparator_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    // 1-bit comparator
    comparator_1 comparator_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 31-bit comparator
    comparator_31 comparator_31_0(sum_wire[1:31], cout_wire, in1[1:31], in2[1:31], cout_wire);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [3
LOGGING VERILOG CODE.
Verilog compilation failed, error:  5
Compilation output:  b"/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:143: error: 'comparator_32' has already been declared in this scope.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:120:      : It was declared here as a module.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:160: Module comparator_32 was already declared here: /mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:120\n\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:166: error: 'comparator_32' has already been declared in this scope.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:120:      : It was declared here as a module.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:168: syntax error\nI give up.\n"
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  42  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13 29871   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29896 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  116
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_w;
  wire cout_w;

  adder_16 adder_16_0(diff_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13 29871   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29896 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13   355  5453    13    13
    458  4002   647   263 29871 29941 29906 29899  2966 23197   272 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2923 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2923
    322 11196  1819 29889    13  5453 23197   272 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2923 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2923
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898 12765 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402  3695
    262 29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871
    594   672 29918 29896 29953   594   672 29918 29896 29953 29918 29896
  29898 12765 29961 29941 29896 29901 29896 29953  1402 11196 29892   297
  29896 29961 29941 29896 29901 29896 29953  1402  3695   262 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13 29871  8014   518 29941 29896
  29901 29900 29962  3234 29918 29893 29936    13 29871  8014 11196 29918
  29893 29936    13    13 29871  6674  4926 29918 29896 29953  6674  4926
  29918 29896 29953 29918 29900 29898  4704 29918 29893 29961 29896 29945
  29901 29900  1402 11196 29918 29893 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13 29871  6674  4926 29918 29896 29953  6674  4926 29918 29896
  29953 29918 29896 29898  4704 29961 29941 29896 29901 29896 29953  1402
  11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918 29893   416
     13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29896, 29898,  2083, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   263, 29871, 29941,
         29906, 29899,  2966, 23197,   272, 29889,    13,   458,  8439,   526,
          1023, 29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901,
         29900, 29962,  2923, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2923,
           322, 11196,  1819, 29889,    13,  5453, 23197,   272, 29918, 29941,
         29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2923,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13, 29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2923,
         29918, 29893, 29936,    13, 29871,  8014, 11196, 29918, 29893, 29936,
            13,    13, 29871,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29900, 29898, 12765, 29918, 29893, 29961,
         29896, 29945, 29901, 29900,  1402, 11196, 29918, 29893, 29892,   297,
         29896, 29961, 29896, 29945, 29901, 29900,  1402,  3695,   262, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898, 12765, 29961, 29941, 29896, 29901, 29896, 29953,
          1402, 11196, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896,
         29953,  1402,  3695,   262, 29906, 29961, 29941, 29896, 29901, 29896,
         29953,  1402, 11196, 29918, 29893,   416,    13,    13,   355,  5453,
            13,    13,   458,  4002,   647,   263, 29871, 29941, 29906, 29899,
          2966,  6674,  4926, 29889,    13,   458,  8439,   526,  1023, 29871,
         29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,
          4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941,
         29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,
          3234, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  3234,   322, 11196,
          1819, 29889,    13,  5453,  6674,  4926, 29918, 29941, 29906, 29898,
          4905,   518, 29941, 29896, 29901, 29900, 29962,  3234, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906,
         29892,    13,   462,   418,  1881,  4670,   416,    13,    13, 29871,
          8014,   518, 29941, 29896, 29901, 29900, 29962,  3234, 29918, 29893,
         29936,    13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13,
         29871,  6674,  4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896,
         29953, 29918, 29900, 29898,  4704, 29918, 29893, 29961, 29896, 29945,
         29901, 29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961,
         29896, 29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945,
         29901, 29900,  1402,  4670,   416,    13, 29871,  6674,  4926, 29918,
         29896, 29953,  6674,  4926, 29918, 29896, 29953, 29918, 29896, 29898,
          4704, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  650
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_w;
  wire cout_w;

  adder_16 adder_16_0(diff_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_w;
  wire cout_w;

  adder_16 adder_16_0(diff_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit left shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module left_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  left_shift_16 left_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  left_shift_16 left_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1442
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_w;
  wire cout_w;

  adder_16 adder_16_0(diff_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit left shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module left_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  left_shift_16 left_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  left_shift_16 left_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:64: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:98: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:99: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:81: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:82: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        divider_16 referenced 2 times.\n        left_shift_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_w;
  wire cout_w;

  adder_16 adder_16_0(diff_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit left shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module left_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  left_shift_16 left_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  left_shift_16 left_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule

//Design a 32-bit right shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module right_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  right_shift_16 right_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  right_shift_16 right_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule

//Design a 32-bit signed right shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module signed_right_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  signed_right_shift_16 signed_right_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  signed_right_shift_16 signed_right_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule

//Design a 32-bit signed left shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values
[[  849  4002   647 ...   322 11196  1819]]
tensor([[  849,  4002,   647,  ...,   322, 11196,  1819]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_w;
  wire cout_w;

  adder_16 adder_16_0(diff_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit left shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module left_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  left_shift_16 left_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  left_shift_16 left_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule

//Design a 32-bit right shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module right_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  right_shift_16 right_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  right_shift_16 right_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule

//Design a 32-bit signed right shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values.
module signed_right_shift_32(output [31:0] out,
                      output cout,
                      input [31:0] in,
                      input [4:0] shift_amount);

  wire [31:0] out_w;
  wire cout_w;

  signed_right_shift_16 signed_right_shift_16_0(out_w[15:0], cout_w, in[15:0], shift_amount);
  signed_right_shift_16 signed_right_shift_16_1(out[31:16], cout, in[31:16], shift_amount);

endmodule

//Design a 32-bit signed left shift.
//There is a single 32 bit input (in) and a single shift amount input, shift_amount.
//The outputs are a 32 bit value, [31:0] out, and a single carry-out output bit, cout.
//The module should utilize the inputs (in and shift_amount) to obtain the output out and cout values
LOGGING VERILOG CODE.
Verilog compilation failed, error:  24
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:64: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:98: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:99: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:81: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:82: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: right_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: right_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:132: error: Unknown module type: signed_right_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:133: error: Unknown module type: signed_right_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n24 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        divider_16 referenced 2 times.\n        left_shift_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        right_shift_16 referenced 2 times.\n        signed_right_shift_16 referenced 2 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  43  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_temp;
    wire cout_temp;

    multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign product = product_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2923 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2923   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29941 29896 29901 29900
  29962  2923 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678 23197   272 29918 29896 29953 23197   272 29918 29896
  29953 29918 29900 29898 12765 29918  7382 29961 29896 29945 29901 29900
   1402 11196 29918  7382 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416    13
   1678 23197   272 29918 29896 29953 23197   272 29918 29896 29953 29918
  29896 29898 12765 29918  7382 29961 29941 29896 29901 29896 29953  1402
  11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382   416
     13    13  1678  3566  2923   353  2923 29918  7382 29936    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13  1678  8014   518 29941 29896
  29901 29900 29962  3234 29918  7382 29936    13  1678  8014 11196 29918
   7382 29936    13    13  1678  6674  4926 29918 29896 29953  6674  4926
  29918 29896 29953 29918 29900 29898  4704 29918  7382 29961 29896 29945
  29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13  1678  6674  4926 29918 29896 29953  6674  4926 29918 29896
  29953 29918 29896 29898  4704 29918  7382 29961 29941 29896 29901 29896
  29953  1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953
   1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918
   7382   416    13    13  1678  3566  3234   353  3234 29918  7382 29936
     13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2923,   322, 11196,  1819, 29889,    13,  5453,
         23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678, 23197,   272, 29918,
         29896, 29953, 23197,   272, 29918, 29896, 29953, 29918, 29900, 29898,
         12765, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678, 23197,   272, 29918, 29896, 29953, 23197,   272,
         29918, 29896, 29953, 29918, 29896, 29898, 12765, 29918,  7382, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2923,   353,  2923, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   263,
         29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,    13,   458,
          8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941,
         29896, 29901, 29900, 29962,  3234, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  3234,   322, 11196,  1819, 29889,    13,  5453,  6674,  4926,
         29918, 29941, 29906, 29898,  4905,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29892,    13,   462,   418,  1962, 11196, 29892,    13,
           462,   418,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297,
         29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,  4670,
           416,    13,    13,  1678,  8014,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29918,  7382, 29936,    13,  1678,  8014, 11196, 29918,
          7382, 29936,    13,    13,  1678,  6674,  4926, 29918, 29896, 29953,
          6674,  4926, 29918, 29896, 29953, 29918, 29900, 29898,  4704, 29918,
          7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,
          1678,  6674,  4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896,
         29953, 29918, 29896, 29898,  4704, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
          1678,  3566,  3234,   353,  3234, 29918,  7382, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  686
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_temp;
    wire cout_temp;

    multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign product = product_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_temp;
    wire cout_temp;

    multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_temp;
    wire cout_temp;

    divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign quotient = quotient_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module comparator_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    comparator_16 comparator_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_temp;
    wire cout_temp;

    shifter_16 shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign shift = shift_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1534
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_temp;
    wire cout_temp;

    multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_temp;
    wire cout_temp;

    divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign quotient = quotient_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module comparator_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    comparator_16 comparator_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_temp;
    wire cout_temp;

    shifter_16 shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign shift = shift_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:70: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:71: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: shifter_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: shifter_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        comparator_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        shifter_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_temp;
    wire cout_temp;

    multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_temp;
    wire cout_temp;

    divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign quotient = quotient_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module comparator_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    comparator_16 comparator_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_temp;
    wire cout_temp;

    shifter_16 shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign shift = shift_temp;

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] rotate_temp;
    wire cout_temp;

    rotator_16 rotator_16_0(rotate_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    rotator_16 rotator_16_1(rotate_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign rotate = rotate_temp;

endmodule

//Design a 32-bit barrel shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module barrel_shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_temp;
    wire cout_temp;

    barrel_shifter_16 barrel_shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    barrel_sh
[[  849  4002   647 ...  2674 29918   845]]
tensor([[  849,  4002,   647,  ...,  2674, 29918,   845]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_temp;
    wire cout_temp;

    multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_temp;
    wire cout_temp;

    divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign quotient = quotient_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module comparator_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_temp;
    wire cout_temp;

    comparator_16 comparator_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign diff = diff_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_temp;
    wire cout_temp;

    shifter_16 shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign shift = shift_temp;

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] rotate_temp;
    wire cout_temp;

    rotator_16 rotator_16_0(rotate_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    rotator_16 rotator_16_1(rotate_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign rotate = rotate_temp;

endmodule

//Design a 32-bit barrel shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module barrel_shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] shift_temp;
    wire cout_temp;

    barrel_shifter_16 barrel_shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    barrel_sh
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:147: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  44  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566 11196
    353 11196 29918  7382 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382
  29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7382 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7382 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7382   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918,  7382,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566 11196
    353 11196 29918  7382 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382
  29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7382 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7382 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7382   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29896 29945 29901 29900 29962
   2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13
     13  1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566
  11196   353 11196 29918  7382 29936    13    13  1678   594   672 29918
  29947   594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961
  29955 29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13  1678   594   672 29918 29947   594   672 29918 29947 29918 29906
  29898  2083 29918  7382 29961 29896 29945 29901 29947  1402 11196 29918
   7382 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918  7382   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
   1678  8014   518 29955 29901 29900 29962  2533 29918  7382 29936    13
   1678  8014 11196 29918  7382 29936    13    13  1678  3566  2533   353
   2533 29918  7382 29936    13  1678  3566 11196   353 11196 29918  7382
  29936    13    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29941 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13  1678   594   672 29918
  29946   594   672 29918 29946 29918 29906 29898  2083 29918  7382 29961
  29955 29901 29946  1402 11196 29918  7382 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
   7382   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,  7382,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,
          8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,
          2083, 29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918,  7382,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_temp = (in1[0] & in2[0]) | (cin & (in1[0] | in2[0]));

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1454
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_temp = (in1[0] & in2[0]) | (cin & (in1[0] | in2[0]));

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  45  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7564,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7564, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

    assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

    assign sum = sum_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7564 29936    13  1678  8014 11196 29918  7564 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918  7564 29961 29955 29901 29900  1402 11196 29918
   7564 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918  7564 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7564   416    13    13  1678  3566  2533   353  2533 29918  7564 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7564
  29936    13  1678  8014 11196 29918  7564 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
   7564 29961 29941 29901 29900  1402 11196 29918  7564 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918  7564 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7564   416    13    13  1678  3566  2533
    353  2533 29918  7564 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
          1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7564,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7564, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,  1678,  8014,
         11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7564,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7564, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,  1678,  8014,
         11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7564,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7564, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

    assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

    assign sum = sum_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

    assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout, in1[3:2], in2[3:2], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    adder_1 adder_1_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_internal[1], cout, in1[1], in2[1], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_internal;
    wire cout_internal;

    assign sum_internal = in1 ^ in2 ^ cin;
    assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_internal;
    assign cout = cout_internal;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_internal;
    wire cout_internal;

    adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_internal[15:8], cout, in1[15:8], in2[15:8], cout_internal);

    assign sum = sum_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_internal;
    wire cout_internal;

    adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_internal[7:4], cout, in1[7:4], in2[7:4], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_internal;
    wire cout_internal;

    adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_internal[3:2], cout, in1[3:2], in2[3:2], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_internal;
    wire cout_internal;

    adder_1 adder_1_1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_internal[1], cout, in1[1], in2[1], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_internal;
    wire cout_internal;

    assign sum_internal = in1 ^ in2 ^ cin;
    assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_internal;
    assign cout = cout_internal;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.748166

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  46  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 + in2;
    assign cout_temp = cin | (in1 & in2);

    assign sum = sum_temp + cout_temp;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533 29918  7382   353   297 29896   718   297 29906 29936
     13  1678  3566 11196 29918  7382   353  4670   891   313   262 29896
    669   297 29906   416    13    13  1678  3566  2533   353  2533 29918
   7382   718 11196 29918  7382 29936    13  1678  3566 11196   353   313
    262 29896   669   297 29906 29897   891   313   262 29896   669  4670
  29897   891   313   262 29906   669  4670   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
          3566,  2533, 29918,  7382,   353,   297, 29896,   718,   297, 29906,
         29936,    13,  1678,  3566, 11196, 29918,  7382,   353,  4670,   891,
           313,   262, 29896,   669,   297, 29906,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382,   718, 11196, 29918,  7382,
         29936,    13,  1678,  3566, 11196,   353,   313,   262, 29896,   669,
           297, 29906, 29897,   891,   313,   262, 29896,   669,  4670, 29897,
           891,   313,   262, 29906,   669,  4670,   416,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  94
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 + in2;
    assign cout_temp = cin | (in1 & in2);

    assign sum = sum_temp + cout_temp;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  47  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    //Generate the sum of the 32 bits
    assign sum_internal = in1 + in2 + cin;

    //Generate the carry out
    assign cout_internal = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    //Assign the outputs
    assign sum = sum_internal;
    assign cout = cout_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   849  5631   403   278  2533   310   278 29871 29941 29906  9978
     13  1678  3566  2533 29918  7564   353   297 29896   718   297 29906
    718  4670 29936    13    13  1678   849  5631   403   278  8677   714
     13  1678  3566 11196 29918  7564   353   313   262 29896 29961 29941
  29896 29962   669   297 29906 29961 29941 29896  2314   891   313   262
  29896 29961 29941 29896 29962   669  4670 29897   891   313   262 29906
  29961 29941 29896 29962   669  4670   416    13    13  1678   849  7900
    647   278 14391    13  1678  3566  2533   353  2533 29918  7564 29936
     13  1678  3566 11196   353 11196 29918  7564 29936    13    13   355
   5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
           849,  5631,   403,   278,  2533,   310,   278, 29871, 29941, 29906,
          9978,    13,  1678,  3566,  2533, 29918,  7564,   353,   297, 29896,
           718,   297, 29906,   718,  4670, 29936,    13,    13,  1678,   849,
          5631,   403,   278,  8677,   714,    13,  1678,  3566, 11196, 29918,
          7564,   353,   313,   262, 29896, 29961, 29941, 29896, 29962,   669,
           297, 29906, 29961, 29941, 29896,  2314,   891,   313,   262, 29896,
         29961, 29941, 29896, 29962,   669,  4670, 29897,   891,   313,   262,
         29906, 29961, 29941, 29896, 29962,   669,  4670,   416,    13,    13,
          1678,   849,  7900,   647,   278, 14391,    13,  1678,  3566,  2533,
           353,  2533, 29918,  7564, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918,  7564, 29936,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  131
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    //Generate the sum of the 32 bits
    assign sum_internal = in1 + in2 + cin;

    //Generate the carry out
    assign cout_internal = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    //Assign the outputs
    assign sum = sum_internal;
    assign cout = cout_internal;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  48  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.756247

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  49  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;

    assign s1 = in1[0] ^ in2[0] ^ cin;
    assign s2 = in1[1] ^ in2[1] ^ s1;
    assign s3 = in1[2] ^ in2[2] ^ s2;
    assign s4 = in1[3] ^ in2[3] ^ s3;
    assign s5 = in1[4] ^ in2[4] ^ s4;
    assign s6 = in1[5] ^ in2[5] ^ s5;
    assign s7 = in1[6] ^ in2[6] ^ s6;
    assign s8 = in1[7] ^ in2[7] ^ s7;
    assign s9 = in1[8] ^ in2[8] ^ s8;
    assign s10 = in1[9] ^ in2[9] ^ s9;
    assign s11 = in1[10] ^ in2[10] ^ s10;
    assign s12 = in1[11] ^ in2[11] ^ s11;
    assign s13 = in1[12] ^ in2[12] ^ s12;
    assign s14 = in1[13] ^ in2[13] ^ s13;
    assign s15 = in1[14] ^ in2[14] ^ s14;
    assign s16 = in1[15] ^ in2[15] ^ s15;
    assign s17 = in1[16] ^ in2[16] ^ s16;
    assign s18 = in1[17] ^ in2[17] ^ s17;
    assign s19 = in1[18] ^ in2[18] ^ s18;
    assign s20 = in1[19] ^ in2[19] ^ s19;
    assign s21 = in1[20] ^ in2[20] ^ s20;
    assign s22 = in1[21] ^ in2[21] ^ s21;
    assign s23 = in1[22] ^ in2[22] ^ s22;
    assign s24 = in1[23] ^ in2[23] ^ s23;
    assign s25 = in1[24] ^ in2[24] ^ s24;
    assign s26 = in1[25] ^ in2[25] ^ s25;
    assign s27 = in1[26] ^ in2[26] ^ s26;
    assign s28 = in1[27] ^ in2[27] ^ s27;
    assign s29 = in1[28] ^ in2[28] ^ s28;
    assign s30 = in1[29] ^ in2[29] ^ s29;
    assign s31 = in1[30] ^ in2[30] ^ s30;
    assign s32 = in1[31] ^ in2[31] ^ s31;

    assign sum[0] = s1;
    assign sum[1] = s2;
    assign sum[2] = s3;
    assign sum[3] = s4;
    assign sum[4] = s5;
    assign sum[5] = s6;
    assign sum[6] = s7;
    assign sum[7] = s8;
    assign sum[8] = s9;
    assign sum[9] = s10;
    assign sum[10] = s11;
    assign sum[11] = s12;
    assign sum[12] = s13;
    assign sum[13] = s14;
    assign sum[14] = s15;
    assign sum[15] = s16;
    assign sum[16] = s17;
    assign sum[17] = s18;
    assign sum[18] = s19;
    assign sum[19] = s20;
    assign sum[20] = s21;
    assign sum[21] = s22;
    assign sum[22] = s23;
    assign sum[23] = s24;
    assign sum[24] = s25;
    assign sum[25] = s26;
    assign sum[26] = s27;
    assign sum[27] = s28;
    assign sum[28] = s29;
    assign sum[29] = s30;
    assign sum[30] = s31;
    assign sum[31] = s32;

    assign cout = s32;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1301
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;

    assign s1 = in1[0] ^ in2[0] ^ cin;
    assign s2 = in1[1] ^ in2[1] ^ s1;
    assign s3 = in1[2] ^ in2[2] ^ s2;
    assign s4 = in1[3] ^ in2[3] ^ s3;
    assign s5 = in1[4] ^ in2[4] ^ s4;
    assign s6 = in1[5] ^ in2[5] ^ s5;
    assign s7 = in1[6] ^ in2[6] ^ s6;
    assign s8 = in1[7] ^ in2[7] ^ s7;
    assign s9 = in1[8] ^ in2[8] ^ s8;
    assign s10 = in1[9] ^ in2[9] ^ s9;
    assign s11 = in1[10] ^ in2[10] ^ s10;
    assign s12 = in1[11] ^ in2[11] ^ s11;
    assign s13 = in1[12] ^ in2[12] ^ s12;
    assign s14 = in1[13] ^ in2[13] ^ s13;
    assign s15 = in1[14] ^ in2[14] ^ s14;
    assign s16 = in1[15] ^ in2[15] ^ s15;
    assign s17 = in1[16] ^ in2[16] ^ s16;
    assign s18 = in1[17] ^ in2[17] ^ s17;
    assign s19 = in1[18] ^ in2[18] ^ s18;
    assign s20 = in1[19] ^ in2[19] ^ s19;
    assign s21 = in1[20] ^ in2[20] ^ s20;
    assign s22 = in1[21] ^ in2[21] ^ s21;
    assign s23 = in1[22] ^ in2[22] ^ s22;
    assign s24 = in1[23] ^ in2[23] ^ s23;
    assign s25 = in1[24] ^ in2[24] ^ s24;
    assign s26 = in1[25] ^ in2[25] ^ s25;
    assign s27 = in1[26] ^ in2[26] ^ s26;
    assign s28 = in1[27] ^ in2[27] ^ s27;
    assign s29 = in1[28] ^ in2[28] ^ s28;
    assign s30 = in1[29] ^ in2[29] ^ s29;
    assign s31 = in1[30] ^ in2[30] ^ s30;
    assign s32 = in1[31] ^ in2[31] ^ s31;

    assign sum[0] = s1;
    assign sum[1] = s2;
    assign sum[2] = s3;
    assign sum[3] = s4;
    assign sum[4] = s5;
    assign sum[5] = s6;
    assign sum[6] = s7;
    assign sum[7] = s8;
    assign sum[8] = s9;
    assign sum[9] = s10;
    assign sum[10] = s11;
    assign sum[11] = s12;
    assign sum[12] = s13;
    assign sum[13] = s14;
    assign sum[14] = s15;
    assign sum[15] = s16;
    assign sum[16] = s17;
    assign sum[17] = s18;
    assign sum[18] = s19;
    assign sum[19] = s20;
    assign sum[20] = s21;
    assign sum[21] = s22;
    assign sum[22] = s23;
    assign sum[23] = s24;
    assign sum[24] = s25;
    assign sum[25] = s26;
    assign sum[26] = s27;
    assign sum[27] = s28;
    assign sum[28] = s29;
    assign sum[29] = s30;
    assign sum[30] = s31;
    assign sum[31] = s32;

    assign cout = s32;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  50  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   849  5631   403 29871 29941 29906  2989   788   414    13 29871
   2531  1707   474 29936    13 29871  5706    13  1678   363   313 29875
  29922 29900 29936   474 29966 29941 29906 29936   474 29922 29875 29974
  29896 29897  3380 29901   594   672 29918 29941 29906 29918  1271    13
    418  2989 29918   328   672 13515 29898  2083 29918  7382 29961 29875
   1402 11196 29918  7382 29892   297 29896 29961 29875  1402   297 29906
  29961 29875  1402  4670   416    13  1678  1095    13 29871  1095 17158
     13    13 29871  3566  2533   353  2533 29918  7382 29936    13 29871
   3566 11196   353 11196 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
           849,  5631,   403, 29871, 29941, 29906,  2989,   788,   414,    13,
         29871,  2531,  1707,   474, 29936,    13, 29871,  5706,    13,  1678,
           363,   313, 29875, 29922, 29900, 29936,   474, 29966, 29941, 29906,
         29936,   474, 29922, 29875, 29974, 29896, 29897,  3380, 29901,   594,
           672, 29918, 29941, 29906, 29918,  1271,    13,   418,  2989, 29918,
           328,   672, 13515, 29898,  2083, 29918,  7382, 29961, 29875,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29875,  1402,   297,
         29906, 29961, 29875,  1402,  4670,   416,    13,  1678,  1095,    13,
         29871,  1095, 17158,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13, 29871,  3566, 11196,   353, 11196, 29918,
          7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  129
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  32
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n32 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  //Generate 32 full subtractors
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: subtractor_32_block
      full_subtractor FA(diff_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign diff = diff_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  //Generate 32 full multipliers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: multiplier_32_block
      full_multiplier FA(product_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign product = product_temp;
  assign cout = cout_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   849  5631   403 29871 29941 29906  2989   788   414    13 29871
   2531  1707   474 29936    13 29871  5706    13  1678   363   313 29875
  29922 29900 29936   474 29966 29941 29906 29936   474 29922 29875 29974
  29896 29897  3380 29901   594   672 29918 29941 29906 29918  1271    13
    418  2989 29918   328   672 13515 29898  2083 29918  7382 29961 29875
   1402 11196 29918  7382 29892   297 29896 29961 29875  1402   297 29906
  29961 29875  1402  4670   416    13  1678  1095    13 29871  1095 17158
     13    13 29871  3566  2533   353  2533 29918  7382 29936    13 29871
   3566 11196   353 11196 29918  7382 29936    13    13   355  5453    13
     13   458  4002   647   263 29871 29941 29906 29899  2966 23197   272
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2923
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2923   322 11196  1819 29889    13  5453 23197   272 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518 29941 29896 29901 29900 29962
   2923 29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13
     13 29871   849  5631   403 29871 29941 29906  2989 23197   943    13
  29871  2531  1707   474 29936    13 29871  5706    13  1678   363   313
  29875 29922 29900 29936   474 29966 29941 29906 29936   474 29922 29875
  29974 29896 29897  3380 29901 23197   272 29918 29941 29906 29918  1271
     13   418  2989 29918  1491 29873 28891 13515 29898 12765 29918  7382
  29961 29875  1402 11196 29918  7382 29892   297 29896 29961 29875  1402
    297 29906 29961 29875  1402  4670   416    13  1678  1095    13 29871
   1095 17158    13    13 29871  3566  2923   353  2923 29918  7382 29936
     13 29871  3566 11196   353 11196 29918  7382 29936    13    13   355
   5453    13    13   458  4002   647   263 29871 29941 29906 29899  2966
   6674  4926 29889    13   458  8439   526  1023 29871 29941 29906  2586
  10970   313   262 29896   322   297 29906 29897   322   263  2323  8677
  29899   262  1881  2586 29892  4670 29889    13   458  1576 14391   526
    263 29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900
  29962  3234 29892   322   263  2323  8677 29899   449  1962  2586 29892
  11196 29889    13   458  1576  3883   881  3667   675   278 10970   313
    262 29896   322   297 29906 29897   322   278  4670  2586   304  4017
    278  1962  3234   322 11196  1819 29889    13  5453  6674  4926 29918
  29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234 29892
     13   462   418  1962 11196 29892    13   462   418  1881   518 29941
  29896 29901 29900 29962   297 29896 29892   297 29906 29892    13   462
    418  1881  4670   416    13    13 29871  8014   518 29941 29896 29901
  29900 29962  3234 29918  7382 29936    13 29871  8014 11196 29918  7382
  29936    13    13 29871   849  5631   403 29871 29941 29906  2989  6674
  27801    13 29871  2531  1707   474 29936    13 29871  5706    13  1678
    363   313 29875 29922 29900 29936   474 29966 29941 29906 29936   474
  29922 29875 29974 29896 29897  3380 29901  6674  4926 29918 29941 29906
  29918  1271    13   418  2989 29918 18056  4926 13515 29898  4704 29918
   7382 29961 29875  1402 11196 29918  7382 29892   297 29896 29961 29875
   1402   297 29906 29961 29875  1402  4670   416    13  1678  1095    13
  29871  1095 17158    13    13 29871  3566  3234   353  3234 29918  7382
  29936    13 29871  3566 11196   353 11196 29918  7382 29936    13    13
    355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,   849,
          5631,   403, 29871, 29941, 29906,  2989,   788,   414,    13, 29871,
          2531,  1707,   474, 29936,    13, 29871,  5706,    13,  1678,   363,
           313, 29875, 29922, 29900, 29936,   474, 29966, 29941, 29906, 29936,
           474, 29922, 29875, 29974, 29896, 29897,  3380, 29901,   594,   672,
         29918, 29941, 29906, 29918,  1271,    13,   418,  2989, 29918,   328,
           672, 13515, 29898,  2083, 29918,  7382, 29961, 29875,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29875,  1402,   297, 29906,
         29961, 29875,  1402,  4670,   416,    13,  1678,  1095,    13, 29871,
          1095, 17158,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13, 29871,  3566, 11196,   353, 11196, 29918,  7382,
         29936,    13,    13,   355,  5453,    13,    13,   458,  4002,   647,
           263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,    13,
           458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677,
         29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576,
         14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518,
         29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,   263,  2323,
          8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,
          1576,  3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,
           278,  1962,  2923,   322, 11196,  1819, 29889,    13,  5453, 23197,
           272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896, 29901,
         29900, 29962,  2923, 29892,    13,   462,   418,  1962, 11196, 29892,
            13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900, 29962,
           297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,
          4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896, 29901,
         29900, 29962,  2923, 29918,  7382, 29936,    13, 29871,  8014, 11196,
         29918,  7382, 29936,    13,    13, 29871,   849,  5631,   403, 29871,
         29941, 29906,  2989, 23197,   943,    13, 29871,  2531,  1707,   474,
         29936,    13, 29871,  5706,    13,  1678,   363,   313, 29875, 29922,
         29900, 29936,   474, 29966, 29941, 29906, 29936,   474, 29922, 29875,
         29974, 29896, 29897,  3380, 29901, 23197,   272, 29918, 29941, 29906,
         29918,  1271,    13,   418,  2989, 29918,  1491, 29873, 28891, 13515,
         29898, 12765, 29918,  7382, 29961, 29875,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29875,  1402,   297, 29906, 29961, 29875,
          1402,  4670,   416,    13,  1678,  1095,    13, 29871,  1095, 17158,
            13,    13, 29871,  3566,  2923,   353,  2923, 29918,  7382, 29936,
            13, 29871,  3566, 11196,   353, 11196, 29918,  7382, 29936,    13,
            13,   355,  5453,    13,    13,   458,  4002,   647,   263, 29871,
         29941, 29906, 29899,  2966,  6674,  4926, 29889,    13,   458,  8439,
           526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,
          1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,
           263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941, 29896,
         29901, 29900, 29962,  3234, 29892,   322,   263,  2323,  8677, 29899,
           449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,
           881,  3667,   675,   278, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,
          3234,   322, 11196,  1819, 29889,    13,  5453,  6674,  4926, 29918,
         29941, 29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,
          3234, 29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,
           418,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896,
         29892,   297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,
            13,    13, 29871,  8014,   518, 29941, 29896, 29901, 29900, 29962,
          3234, 29918,  7382, 29936,    13, 29871,  8014, 11196, 29918,  7382,
         29936,    13,    13, 29871,   849,  5631,   403, 29871, 29941, 29906,
          2989,  6674, 27801,    13, 29871,  2531,  1707,   474, 29936,    13,
         29871,  5706,    13,  1678,   363,   313, 29875, 29922, 29900, 29936,
           474, 29966, 29941, 29906, 29936,   474, 29922, 29875, 29974, 29896,
         29897,  3380, 29901,  6674,  4926, 29918, 29941, 29906, 29918,  1271,
            13,   418,  2989, 29918, 18056,  4926, 13515, 29898,  4704, 29918,
          7382, 29961, 29875,  1402, 11196, 29918,  7382, 29892,   297, 29896,
         29961, 29875,  1402,   297, 29906, 29961, 29875,  1402,  4670,   416,
            13,  1678,  1095,    13, 29871,  1095, 17158,    13,    13, 29871,
          3566,  3234,   353,  3234, 29918,  7382, 29936,    13, 29871,  3566,
         11196,   353, 11196, 29918,  7382, 29936,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  684
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  //Generate 32 full subtractors
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: subtractor_32_block
      full_subtractor FA(diff_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign diff = diff_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  //Generate 32 full multipliers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: multiplier_32_block
      full_multiplier FA(product_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign product = product_temp;
  assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  96
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n96 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n        full_multiplier referenced 32 times.\n        full_subtractor referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  //Generate 32 full subtractors
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: subtractor_32_block
      full_subtractor FA(diff_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign diff = diff_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  //Generate 32 full multipliers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: multiplier_32_block
      full_multiplier FA(product_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign product = product_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  //Generate 32 full dividers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: divider_32_block
      full_divider FA(quotient_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign quotient = quotient_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  //Generate 32 full moduli
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: modulus_32_block
      full_modulus FA(remainder_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign remainder = remainder_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] comparison_temp;
  wire cout_temp;

  //Generate 32 full comparators
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: comparator_32_block
      full_comparator FA(comparison_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign comparison = comparison_temp;
  assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1525
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  //Generate 32 full subtractors
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: subtractor_32_block
      full_subtractor FA(diff_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign diff = diff_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  //Generate 32 full multipliers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: multiplier_32_block
      full_multiplier FA(product_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign product = product_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  //Generate 32 full dividers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: divider_32_block
      full_divider FA(quotient_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign quotient = quotient_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  //Generate 32 full moduli
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: modulus_32_block
      full_modulus FA(remainder_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign remainder = remainder_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] comparison_temp;
  wire cout_temp;

  //Generate 32 full comparators
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: comparator_32_block
      full_comparator FA(comparison_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign comparison = comparison_temp;
  assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  192
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:142: error: Unknown module type: full_comparator\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:92: error: Unknown module type: full_divider\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: full_modulus\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:67: error: Unknown module type: full_multiplier\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_subtractor\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n192 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n        full_comparator referenced 32 times.\n        full_divider referenced 32 times.\n        full_modulus referenced 32 times.\n        full_multiplier referenced 32 times.\n        full_subtractor referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  //Generate 32 full subtractors
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: subtractor_32_block
      full_subtractor FA(diff_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign diff = diff_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  //Generate 32 full multipliers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: multiplier_32_block
      full_multiplier FA(product_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign product = product_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  //Generate 32 full dividers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: divider_32_block
      full_divider FA(quotient_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign quotient = quotient_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  //Generate 32 full moduli
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: modulus_32_block
      full_modulus FA(remainder_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign remainder = remainder_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] comparison_temp;
  wire cout_temp;

  //Generate 32 full comparators
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: comparator_32_block
      full_comparator FA(comparison_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign comparison = comparison_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  //Generate 32 full shifters
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: shifter_32_block
      full_shifter FA(shift_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign shift = shift_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] rotate_temp;
  wire cout_temp;

  //Generate 32 full rotators
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: rotator_32_block
      full_rotator FA(rotate_temp[i], cout_temp, in1[i], in
[[  849  4002   647 ... 29875  1402   297]]
tensor([[  849,  4002,   647,  ..., 29875,  1402,   297]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  //Generate 32 full adders
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: adder_32_block
      full_adder FA(sum_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  //Generate 32 full subtractors
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: subtractor_32_block
      full_subtractor FA(diff_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign diff = diff_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  //Generate 32 full multipliers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: multiplier_32_block
      full_multiplier FA(product_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign product = product_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  //Generate 32 full dividers
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: divider_32_block
      full_divider FA(quotient_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign quotient = quotient_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  //Generate 32 full moduli
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: modulus_32_block
      full_modulus FA(remainder_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign remainder = remainder_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] comparison_temp;
  wire cout_temp;

  //Generate 32 full comparators
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: comparator_32_block
      full_comparator FA(comparison_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign comparison = comparison_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  //Generate 32 full shifters
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: shifter_32_block
      full_shifter FA(shift_temp[i], cout_temp, in1[i], in2[i], cin);
    end
  endgenerate

  assign shift = shift_temp;
  assign cout = cout_temp;

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] rotate_temp;
  wire cout_temp;

  //Generate 32 full rotators
  genvar i;
  generate
    for (i=0; i<32; i=i+1) begin: rotator_32_block
      full_rotator FA(rotate_temp[i], cout_temp, in1[i], in
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:192: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  51  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196
    353 11196 29918 29893 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29900 29898  2083 29918 29893
  29961 29896 29945 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918 29893 29961 29941
  29896 29901 29896 29953  1402 11196 29918 29893 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 29893   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 29893,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196
    353 11196 29918 29893 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29900 29898  2083 29918 29893
  29961 29896 29945 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918 29893 29961 29941
  29896 29901 29896 29953  1402 11196 29918 29893 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 29893   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29896 29945 29901 29900 29962
   2533 29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13
     13  1678  3566  2533   353  2533 29918 29893 29936    13  1678  3566
  11196   353 11196 29918 29893 29936    13    13  1678   594   672 29918
  29947   594   672 29918 29947 29918 29900 29898  2083 29918 29893 29961
  29955 29901 29900  1402 11196 29918 29893 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13  1678   594   672 29918 29947   594   672 29918 29947 29918 29896
  29898  2083 29918 29893 29961 29896 29945 29901 29947  1402 11196 29918
  29893 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918 29893   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   385
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   268  1962 11196
  29892    13   462   268  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   268  1881  4670   416    13    13
   1678  8014   518 29955 29901 29900 29962  2533 29918 29893 29936    13
   1678  8014 11196 29918 29893 29936    13    13  1678  3566  2533   353
   2533 29918 29893 29936    13  1678  3566 11196   353 11196 29918 29893
  29936    13    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29900 29898  2083 29918 29893 29961 29941 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13  1678   594   672 29918
  29946   594   672 29918 29946 29918 29896 29898  2083 29918 29893 29961
  29955 29901 29946  1402 11196 29918 29893 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
  29893   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900,
         29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918, 29893,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,
          8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         29893,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   268,  1962, 11196, 29892,    13,   462,   268,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   268,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083,
         29918, 29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,
          2083, 29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918, 29893,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    assign sum_w[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_w = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1457
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout_w, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout_w, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout_w, in1[7:4], in2[7:4], cout_w);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout_w, in1[3:2], in2[3:2], cout_w);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    assign sum_w[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_w = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  52  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13  1678  3566 11196
    353 11196 29918  7564 29936    13    13  1678   849  6730   594   672
     13  1678   594   672 29918 29896 29953   594   672 29918 29896 29953
  29918 29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402
  11196 29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402
    297 29906 29961 29896 29945 29901 29900  1402  4670   416    13    13
   1678   849 11863   594   672    13  1678   594   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896
  29961 29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896
  29901 29896 29953  1402 11196 29918  7564   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7564, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918,  7564, 29936,    13,    13,  1678,   849,
          6730,   594,   672,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7564,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,
            13,  1678,   849, 11863,   594,   672,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29906,
         29898,  2083, 29918,  7564, 29961, 29941, 29896, 29901, 29896, 29953,
          1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29941, 29896,
         29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896, 29901,
         29896, 29953,  1402, 11196, 29918,  7564,   416,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  154
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13  1678  3566 11196
    353 11196 29918  7564 29936    13    13  1678   849  6730   594   672
     13  1678   594   672 29918 29896 29953   594   672 29918 29896 29953
  29918 29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402
  11196 29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402
    297 29906 29961 29896 29945 29901 29900  1402  4670   416    13    13
   1678   849 11863   594   672    13  1678   594   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896
  29961 29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896
  29901 29896 29953  1402 11196 29918  7564   416    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29941 29896 29901 29900
  29962  2533 29918  7564 29936    13  1678  8014 11196 29918  7564 29936
     13    13  1678  3566  2533   353  2533 29918  7564 29936    13  1678
   3566 11196   353 11196 29918  7564 29936    13    13  1678   849  6730
    594   672    13  1678   594   672 29918 29896 29953   594   672 29918
  29896 29953 29918 29896 29898  2083 29918  7564 29961 29896 29945 29901
  29900  1402 11196 29918  7564 29892   297 29896 29961 29896 29945 29901
  29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416
     13    13  1678   849 11863   594   672    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29918
   7564 29961 29941 29896 29901 29896 29953  1402 11196 29918  7564 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  2533
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13  1678  8014   518 29941 29896
  29901 29900 29962  2533 29918  7564 29936    13  1678  8014 11196 29918
   7564 29936    13    13  1678  3566  2533   353  2533 29918  7564 29936
     13  1678  3566 11196   353 11196 29918  7564 29936    13    13  1678
    849  6730   594   672    13  1678   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918  7564 29961 29896
  29945 29901 29900  1402 11196 29918  7564 29892   297 29896 29961 29896
  29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402
   4670   416    13    13  1678   849 11863   594   672    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29918
   7564 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7564   416
     13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
          1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7564, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7564, 29936,    13,    13,  1678,   849,  6730,
           594,   672,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,  7564,
         29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,    13,
          1678,   849, 11863,   594,   672,    13,  1678,   594,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,
          2083, 29918,  7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918,  7564, 29892,   297, 29896, 29961, 29941, 29896, 29901,
         29896, 29953,  1402,   297, 29906, 29961, 29941, 29896, 29901, 29896,
         29953,  1402, 11196, 29918,  7564,   416,    13,    13,   355,  5453,
            13,    13,   458,  4002,   647,   263, 29871, 29941, 29906, 29899,
          2966, 23197,   272, 29889,    13,   458,  8439,   526,  1023, 29871,
         29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,
          4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941,
         29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453, 23197,   272, 29918, 29941, 29906, 29898,
          4905,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906,
         29892,    13,   462,   418,  1881,  4670,   416,    13,    13,  1678,
          8014,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564,
         29936,    13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,
          1678,  3566,  2533,   353,  2533, 29918,  7564, 29936,    13,  1678,
          3566, 11196,   353, 11196, 29918,  7564, 29936,    13,    13,  1678,
           849,  6730,   594,   672,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,    13,  1678,   849, 11863,   594,   672,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29906, 29898,  2083, 29918,  7564, 29961, 29941, 29896, 29901, 29896,
         29953,  1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7564,   416,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   263, 29871, 29941,
         29906, 29899,  2966,  6674,  4926, 29889,    13,   458,  8439,   526,
          1023, 29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,  6674,  4926, 29918, 29941,
         29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13,  1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29918,  7564, 29936,    13,  1678,  8014, 11196, 29918,  7564, 29936,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7564, 29936,
            13,  1678,  3566, 11196,   353, 11196, 29918,  7564, 29936,    13,
            13,  1678,   849,  6730,   594,   672,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,    13,  1678,   849, 11863,   594,   672,    13,
          1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29906, 29898,  2083, 29918,  7564, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7564, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7564,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  758
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:63: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:66: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 6 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1665
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:132: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:135: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:112: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:63: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:66: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 12 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module right_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit left rotate.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize
[[ 849 4002  647 ...  881 3667  675]]
tensor([[ 849, 4002,  647,  ...,  881, 3667,  675]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module right_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    assign sum = sum_internal;
    assign cout = cout_internal;

    //First adder
    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);

    //Second adder
    adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 32-bit left rotate.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize
LOGGING VERILOG CODE.
Verilog compilation failed, error:  21
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:86: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:132: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:135: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:112: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:63: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:66: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:155: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:158: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_16\n21 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 14 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  53  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_temp;
    assign sum_temp = in1 + in2 + cin;
    assign sum = sum_temp[31:0];
    assign cout = sum_temp[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962  2533
  29918  7382 29936    13  1678  3566  2533 29918  7382   353   297 29896
    718   297 29906   718  4670 29936    13  1678  3566  2533   353  2533
  29918  7382 29961 29941 29896 29901 29900  1385    13  1678  3566 11196
    353  2533 29918  7382 29961 29941 29906  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  3566,  2533, 29918,  7382,   353,   297, 29896,   718,
           297, 29906,   718,  4670, 29936,    13,  1678,  3566,  2533,   353,
          2533, 29918,  7382, 29961, 29941, 29896, 29901, 29900,  1385,    13,
          1678,  3566, 11196,   353,  2533, 29918,  7382, 29961, 29941, 29906,
          1385,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  58
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_temp;
    assign sum_temp = in1 + in2 + cin;
    assign sum = sum_temp[31:0];
    assign cout = sum_temp[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.716632

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  54  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   849 16645  2533   353  2533 29918 29893 29936    13  1678   849
  16645 11196   353 11196 29918 29893 29936    13    13  1678  3566  2533
    353  2533 29918 29893 29936    13  1678  3566 11196   353 11196 29918
  29893 29936    13    13  1678   594   672 29918 29941 29906 29918 29896
    594   672 29918 29941 29906 29918 29896 29918  2611 29898  2083 29918
  29893 29892 11196 29918 29893 29892   297 29896 29892   297 29906 29892
   4670   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
           849, 16645,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,
           849, 16645, 11196,   353, 11196, 29918, 29893, 29936,    13,    13,
          1678,  3566,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,
          3566, 11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,
           594,   672, 29918, 29941, 29906, 29918, 29896,   594,   672, 29918,
         29941, 29906, 29918, 29896, 29918,  2611, 29898,  2083, 29918, 29893,
         29892, 11196, 29918, 29893, 29892,   297, 29896, 29892,   297, 29906,
         29892,  4670,   416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  100
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_1\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_1 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   849 16645  2533   353  2533 29918 29893 29936    13  1678   849
  16645 11196   353 11196 29918 29893 29936    13    13  1678  3566  2533
    353  2533 29918 29893 29936    13  1678  3566 11196   353 11196 29918
  29893 29936    13    13  1678   594   672 29918 29941 29906 29918 29896
    594   672 29918 29941 29906 29918 29896 29918  2611 29898  2083 29918
  29893 29892 11196 29918 29893 29892   297 29896 29892   297 29906 29892
   4670   416    13    13   355  5453    13    13  5453   594   672 29918
  29941 29906 29918 29896 29898  4905   518 29941 29896 29901 29900 29962
   2533 29892    13   462   418  1962 11196 29892    13   462   418  1881
    518 29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892
     13   462   418  1881  4670   416    13    13  1678  8014   518 29941
  29896 29901 29900 29962  2533 29918 29893 29936    13  1678  8014 11196
  29918 29893 29936    13    13  1678  3566  2533   353  2533 29918 29893
  29936    13  1678  3566 11196   353 11196 29918 29893 29936    13    13
   1678   594   672 29918 29941 29906 29918 29906   594   672 29918 29941
  29906 29918 29906 29918  2611 29898  2083 29918 29893 29892 11196 29918
  29893 29892   297 29896 29961 29941 29900 29901 29900  1402   297 29906
  29961 29941 29900 29901 29900  1402  4670   416    13    13   355  5453
     13    13  5453   594   672 29918 29941 29906 29918 29906 29898  4905
    518 29941 29896 29901 29900 29962  2533 29892    13   462   418  1962
  11196 29892    13   462   418  1881   518 29941 29900 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29941 29896 29901 29900 29962  2533 29918
  29893 29936    13  1678  8014 11196 29918 29893 29936    13    13  1678
   3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196   353
  11196 29918 29893 29936    13    13  1678   594   672 29918 29941 29906
  29918 29941   594   672 29918 29941 29906 29918 29941 29918  2611 29898
   2083 29918 29893 29892 11196 29918 29893 29892   297 29896 29961 29906
  29929 29901 29900  1402   297 29906 29961 29906 29929 29901 29900  1402
   4670   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,   849,
         16645,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,   849,
         16645, 11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29941, 29906, 29918, 29896,   594,   672, 29918, 29941,
         29906, 29918, 29896, 29918,  2611, 29898,  2083, 29918, 29893, 29892,
         11196, 29918, 29893, 29892,   297, 29896, 29892,   297, 29906, 29892,
          4670,   416,    13,    13,   355,  5453,    13,    13,  5453,   594,
           672, 29918, 29941, 29906, 29918, 29896, 29898,  4905,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,
          8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29941, 29906, 29918, 29906,   594,   672, 29918, 29941, 29906, 29918,
         29906, 29918,  2611, 29898,  2083, 29918, 29893, 29892, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29941, 29900, 29901, 29900,  1402,
           297, 29906, 29961, 29941, 29900, 29901, 29900,  1402,  4670,   416,
            13,    13,   355,  5453,    13,    13,  5453,   594,   672, 29918,
         29941, 29906, 29918, 29906, 29898,  4905,   518, 29941, 29896, 29901,
         29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196, 29892,
            13,   462,   418,  1881,   518, 29941, 29900, 29901, 29900, 29962,
           297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,
          4670,   416,    13,    13,  1678,  8014,   518, 29941, 29896, 29901,
         29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,  8014, 11196,
         29918, 29893, 29936,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,  1678,  3566, 11196,   353, 11196, 29918,
         29893, 29936,    13,    13,  1678,   594,   672, 29918, 29941, 29906,
         29918, 29941,   594,   672, 29918, 29941, 29906, 29918, 29941, 29918,
          2611, 29898,  2083, 29918, 29893, 29892, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29906, 29929, 29901, 29900,  1402,   297, 29906,
         29961, 29906, 29929, 29901, 29900,  1402,  4670,   416,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  376
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:49: error: Unknown module type: adder_32_3\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_3 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule

module adder_32_3(output [31:0] sum,
                      output cout,
                      input [29:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_4 adder_32_4_inst(sum_w, cout_w, in1[28:0], in2[28:0], cin);

endmodule

module adder_32_4(output [31:0] sum,
                      output cout,
                      input [28:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_5 adder_32_5_inst(sum_w, cout_w, in1[27:0], in2[27:0], cin);

endmodule

module adder_32_5(output [31:0] sum,
                      output cout,
                      input [27:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_6 adder_32_6_inst(sum_w, cout_w, in1[26:0], in2[26:0], cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   849 16645  2533   353  2533 29918 29893 29936    13  1678   849
  16645 11196   353 11196 29918 29893 29936    13    13  1678  3566  2533
    353  2533 29918 29893 29936    13  1678  3566 11196   353 11196 29918
  29893 29936    13    13  1678   594   672 29918 29941 29906 29918 29896
    594   672 29918 29941 29906 29918 29896 29918  2611 29898  2083 29918
  29893 29892 11196 29918 29893 29892   297 29896 29892   297 29906 29892
   4670   416    13    13   355  5453    13    13  5453   594   672 29918
  29941 29906 29918 29896 29898  4905   518 29941 29896 29901 29900 29962
   2533 29892    13   462   418  1962 11196 29892    13   462   418  1881
    518 29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892
     13   462   418  1881  4670   416    13    13  1678  8014   518 29941
  29896 29901 29900 29962  2533 29918 29893 29936    13  1678  8014 11196
  29918 29893 29936    13    13  1678  3566  2533   353  2533 29918 29893
  29936    13  1678  3566 11196   353 11196 29918 29893 29936    13    13
   1678   594   672 29918 29941 29906 29918 29906   594   672 29918 29941
  29906 29918 29906 29918  2611 29898  2083 29918 29893 29892 11196 29918
  29893 29892   297 29896 29961 29941 29900 29901 29900  1402   297 29906
  29961 29941 29900 29901 29900  1402  4670   416    13    13   355  5453
     13    13  5453   594   672 29918 29941 29906 29918 29906 29898  4905
    518 29941 29896 29901 29900 29962  2533 29892    13   462   418  1962
  11196 29892    13   462   418  1881   518 29941 29900 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29941 29896 29901 29900 29962  2533 29918
  29893 29936    13  1678  8014 11196 29918 29893 29936    13    13  1678
   3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196   353
  11196 29918 29893 29936    13    13  1678   594   672 29918 29941 29906
  29918 29941   594   672 29918 29941 29906 29918 29941 29918  2611 29898
   2083 29918 29893 29892 11196 29918 29893 29892   297 29896 29961 29906
  29929 29901 29900  1402   297 29906 29961 29906 29929 29901 29900  1402
   4670   416    13    13   355  5453    13    13  5453   594   672 29918
  29941 29906 29918 29941 29898  4905   518 29941 29896 29901 29900 29962
   2533 29892    13   462   418  1962 11196 29892    13   462   418  1881
    518 29906 29929 29901 29900 29962   297 29896 29892   297 29906 29892
     13   462   418  1881  4670   416    13    13  1678  8014   518 29941
  29896 29901 29900 29962  2533 29918 29893 29936    13  1678  8014 11196
  29918 29893 29936    13    13  1678  3566  2533   353  2533 29918 29893
  29936    13  1678  3566 11196   353 11196 29918 29893 29936    13    13
   1678   594   672 29918 29941 29906 29918 29946   594   672 29918 29941
  29906 29918 29946 29918  2611 29898  2083 29918 29893 29892 11196 29918
  29893 29892   297 29896 29961 29906 29947 29901 29900  1402   297 29906
  29961 29906 29947 29901 29900  1402  4670   416    13    13   355  5453
     13    13  5453   594   672 29918 29941 29906 29918 29946 29898  4905
    518 29941 29896 29901 29900 29962  2533 29892    13   462   418  1962
  11196 29892    13   462   418  1881   518 29906 29947 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29941 29896 29901 29900 29962  2533 29918
  29893 29936    13  1678  8014 11196 29918 29893 29936    13    13  1678
   3566  2533   353  2533 29918 29893 29936    13  1678  3566 11196   353
  11196 29918 29893 29936    13    13  1678   594   672 29918 29941 29906
  29918 29945   594   672 29918 29941 29906 29918 29945 29918  2611 29898
   2083 29918 29893 29892 11196 29918 29893 29892   297 29896 29961 29906
  29955 29901 29900  1402   297 29906 29961 29906 29955 29901 29900  1402
   4670   416    13    13   355  5453    13    13  5453   594   672 29918
  29941 29906 29918 29945 29898  4905   518 29941 29896 29901 29900 29962
   2533 29892    13   462   418  1962 11196 29892    13   462   418  1881
    518 29906 29955 29901 29900 29962   297 29896 29892   297 29906 29892
     13   462   418  1881  4670   416    13    13  1678  8014   518 29941
  29896 29901 29900 29962  2533 29918 29893 29936    13  1678  8014 11196
  29918 29893 29936    13    13  1678  3566  2533   353  2533 29918 29893
  29936    13  1678  3566 11196   353 11196 29918 29893 29936    13    13
   1678   594   672 29918 29941 29906 29918 29953   594   672 29918 29941
  29906 29918 29953 29918  2611 29898  2083 29918 29893 29892 11196 29918
  29893 29892   297 29896 29961 29906 29953 29901 29900  1402   297 29906
  29961 29906 29953 29901 29900  1402  4670   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,   849,
         16645,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,   849,
         16645, 11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29941, 29906, 29918, 29896,   594,   672, 29918, 29941,
         29906, 29918, 29896, 29918,  2611, 29898,  2083, 29918, 29893, 29892,
         11196, 29918, 29893, 29892,   297, 29896, 29892,   297, 29906, 29892,
          4670,   416,    13,    13,   355,  5453,    13,    13,  5453,   594,
           672, 29918, 29941, 29906, 29918, 29896, 29898,  4905,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,
          8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  3566,  2533,
           353,  2533, 29918, 29893, 29936,    13,  1678,  3566, 11196,   353,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29941, 29906, 29918, 29906,   594,   672, 29918, 29941, 29906, 29918,
         29906, 29918,  2611, 29898,  2083, 29918, 29893, 29892, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29941, 29900, 29901, 29900,  1402,
           297, 29906, 29961, 29941, 29900, 29901, 29900,  1402,  4670,   416,
            13,    13,   355,  5453,    13,    13,  5453,   594,   672, 29918,
         29941, 29906, 29918, 29906, 29898,  4905,   518, 29941, 29896, 29901,
         29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196, 29892,
            13,   462,   418,  1881,   518, 29941, 29900, 29901, 29900, 29962,
           297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,
          4670,   416,    13,    13,  1678,  8014,   518, 29941, 29896, 29901,
         29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,  8014, 11196,
         29918, 29893, 29936,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,  1678,  3566, 11196,   353, 11196, 29918,
         29893, 29936,    13,    13,  1678,   594,   672, 29918, 29941, 29906,
         29918, 29941,   594,   672, 29918, 29941, 29906, 29918, 29941, 29918,
          2611, 29898,  2083, 29918, 29893, 29892, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29906, 29929, 29901, 29900,  1402,   297, 29906,
         29961, 29906, 29929, 29901, 29900,  1402,  4670,   416,    13,    13,
           355,  5453,    13,    13,  5453,   594,   672, 29918, 29941, 29906,
         29918, 29941, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,
           418,  1881,   518, 29906, 29929, 29901, 29900, 29962,   297, 29896,
         29892,   297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,
            13,    13,  1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29918, 29893, 29936,    13,  1678,  8014, 11196, 29918, 29893,
         29936,    13,    13,  1678,  3566,  2533,   353,  2533, 29918, 29893,
         29936,    13,  1678,  3566, 11196,   353, 11196, 29918, 29893, 29936,
            13,    13,  1678,   594,   672, 29918, 29941, 29906, 29918, 29946,
           594,   672, 29918, 29941, 29906, 29918, 29946, 29918,  2611, 29898,
          2083, 29918, 29893, 29892, 11196, 29918, 29893, 29892,   297, 29896,
         29961, 29906, 29947, 29901, 29900,  1402,   297, 29906, 29961, 29906,
         29947, 29901, 29900,  1402,  4670,   416,    13,    13,   355,  5453,
            13,    13,  5453,   594,   672, 29918, 29941, 29906, 29918, 29946,
         29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29906, 29947, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
          1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,
         29893, 29936,    13,  1678,  8014, 11196, 29918, 29893, 29936,    13,
            13,  1678,  3566,  2533,   353,  2533, 29918, 29893, 29936,    13,
          1678,  3566, 11196,   353, 11196, 29918, 29893, 29936,    13,    13,
          1678,   594,   672, 29918, 29941, 29906, 29918, 29945,   594,   672,
         29918, 29941, 29906, 29918, 29945, 29918,  2611, 29898,  2083, 29918,
         29893, 29892, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29906,
         29955, 29901, 29900,  1402,   297, 29906, 29961, 29906, 29955, 29901,
         29900,  1402,  4670,   416,    13,    13,   355,  5453,    13,    13,
          5453,   594,   672, 29918, 29941, 29906, 29918, 29945, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29906,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29941, 29906, 29918, 29953,   594,   672, 29918, 29941,
         29906, 29918, 29953, 29918,  2611, 29898,  2083, 29918, 29893, 29892,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29906, 29953, 29901,
         29900,  1402,   297, 29906, 29961, 29906, 29953, 29901, 29900,  1402,
          4670,   416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  790
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule

module adder_32_3(output [31:0] sum,
                      output cout,
                      input [29:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_4 adder_32_4_inst(sum_w, cout_w, in1[28:0], in2[28:0], cin);

endmodule

module adder_32_4(output [31:0] sum,
                      output cout,
                      input [28:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_5 adder_32_5_inst(sum_w, cout_w, in1[27:0], in2[27:0], cin);

endmodule

module adder_32_5(output [31:0] sum,
                      output cout,
                      input [27:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_6 adder_32_6_inst(sum_w, cout_w, in1[26:0], in2[26:0], cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:94: error: Unknown module type: adder_32_6\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_6 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule

module adder_32_3(output [31:0] sum,
                      output cout,
                      input [29:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_4 adder_32_4_inst(sum_w, cout_w, in1[28:0], in2[28:0], cin);

endmodule

module adder_32_4(output [31:0] sum,
                      output cout,
                      input [28:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_5 adder_32_5_inst(sum_w, cout_w, in1[27:0], in2[27:0], cin);

endmodule

module adder_32_5(output [31:0] sum,
                      output cout,
                      input [27:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_6 adder_32_6_inst(sum_w, cout_w, in1[26:0], in2[26:0], cin);

endmodule

module adder_32_6(output [31:0] sum,
                      output cout,
                      input [26:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_7 adder_32_7_inst(sum_w, cout_w, in1[25:0], in2[25:0], cin);

endmodule

module adder_32_7(output [31:0] sum,
                      output cout,
                      input [25:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_8 adder_32_8_inst(sum_w, cout_w, in1[24:0], in2[24:0], cin);

endmodule

module adder_32_8(output [31:0] sum,
                      output cout,
                      input [24:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_9 adder_32_9_inst(sum_w, cout_w, in1[23:0], in2[23:0], cin);

endmodule

module adder_32_9(output [31:0] sum,
                      output cout,
                      input [23:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_10 adder_32_10_inst(sum_w, cout_w, in1[22:0], in2[22:0], cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1344
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule

module adder_32_3(output [31:0] sum,
                      output cout,
                      input [29:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_4 adder_32_4_inst(sum_w, cout_w, in1[28:0], in2[28:0], cin);

endmodule

module adder_32_4(output [31:0] sum,
                      output cout,
                      input [28:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_5 adder_32_5_inst(sum_w, cout_w, in1[27:0], in2[27:0], cin);

endmodule

module adder_32_5(output [31:0] sum,
                      output cout,
                      input [27:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_6 adder_32_6_inst(sum_w, cout_w, in1[26:0], in2[26:0], cin);

endmodule

module adder_32_6(output [31:0] sum,
                      output cout,
                      input [26:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_7 adder_32_7_inst(sum_w, cout_w, in1[25:0], in2[25:0], cin);

endmodule

module adder_32_7(output [31:0] sum,
                      output cout,
                      input [25:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_8 adder_32_8_inst(sum_w, cout_w, in1[24:0], in2[24:0], cin);

endmodule

module adder_32_8(output [31:0] sum,
                      output cout,
                      input [24:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_9 adder_32_9_inst(sum_w, cout_w, in1[23:0], in2[23:0], cin);

endmodule

module adder_32_9(output [31:0] sum,
                      output cout,
                      input [23:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_10 adder_32_10_inst(sum_w, cout_w, in1[22:0], in2[22:0], cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:154: error: Unknown module type: adder_32_10\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_10 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  4  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule

module adder_32_3(output [31:0] sum,
                      output cout,
                      input [29:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_4 adder_32_4_inst(sum_w, cout_w, in1[28:0], in2[28:0], cin);

endmodule

module adder_32_4(output [31:0] sum,
                      output cout,
                      input [28:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_5 adder_32_5_inst(sum_w, cout_w, in1[27:0], in2[27:0], cin);

endmodule

module adder_32_5(output [31:0] sum,
                      output cout,
                      input [27:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_6 adder_32_6_inst(sum_w, cout_w, in1[26:0], in2[26:0], cin);

endmodule

module adder_32_6(output [31:0] sum,
                      output cout,
                      input [26:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_7 adder_32_7_inst(sum_w, cout_w, in1[25:0], in2[25:0], cin);

endmodule

module adder_32_7(output [31:0] sum,
                      output cout,
                      input [25:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_8 adder_32_8_inst(sum_w, cout_w, in1[24:0], in2[24:0], cin);

endmodule

module adder_32_8(output [31:0] sum,
                      output cout,
                      input [24:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_9 adder_32_9_inst(sum_w, cout_w, in1[23:0], in2[23:0], cin);

endmodule

module adder_32_9(output [31:0] sum,
                      output cout,
                      input [23:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_10 adder_32_10_inst(sum_w, cout_w, in1[22:0], in2[22:0], cin);

endmodule

module adder_32_10(output [31:0] sum,
                      output cout,
                      input [22:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_11 adder_32_11_inst(sum_w, cout_w, in1[21:0], in2[21:0], cin);

endmodule

module adder_32_11(output [31:0] sum,
                      output cout,
                      input [21:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_12 adder_32_12_inst(sum_w, cout_w, in1[20:0], in2[20:0], cin);

endmodule

module adder_32_12(output [31:0] sum,
                      output cout,
                      input [20:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_13 adder_32_13_inst(sum_w, cout_w, in1[19:0], in2[19:0], cin);

endmodule

module adder_32_13(output [31:0] sum,
                      output cout,
                      input [19:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_14 adder_32_14_inst(sum_w, cout_w, in1[18:0], in2[18:0], cin);

endmodule

module adder_32_14(output [31:0] sum,
                      output cout,
                      input [18:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_15 adder_32_15_inst(sum_w, cout_w, in1[17:0], in2[17:0], cin);

end
[[ 849 4002  647 ...   13   13  355]]
tensor([[ 849, 4002,  647,  ...,   13,   13,  355]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    //assign sum = sum_w;
    //assign cout = cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_1 adder_32_1_inst(sum_w, cout_w, in1, in2, cin);

endmodule

module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_2 adder_32_2_inst(sum_w, cout_w, in1[30:0], in2[30:0], cin);

endmodule

module adder_32_2(output [31:0] sum,
                      output cout,
                      input [30:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_3 adder_32_3_inst(sum_w, cout_w, in1[29:0], in2[29:0], cin);

endmodule

module adder_32_3(output [31:0] sum,
                      output cout,
                      input [29:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_4 adder_32_4_inst(sum_w, cout_w, in1[28:0], in2[28:0], cin);

endmodule

module adder_32_4(output [31:0] sum,
                      output cout,
                      input [28:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_5 adder_32_5_inst(sum_w, cout_w, in1[27:0], in2[27:0], cin);

endmodule

module adder_32_5(output [31:0] sum,
                      output cout,
                      input [27:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_6 adder_32_6_inst(sum_w, cout_w, in1[26:0], in2[26:0], cin);

endmodule

module adder_32_6(output [31:0] sum,
                      output cout,
                      input [26:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_7 adder_32_7_inst(sum_w, cout_w, in1[25:0], in2[25:0], cin);

endmodule

module adder_32_7(output [31:0] sum,
                      output cout,
                      input [25:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_8 adder_32_8_inst(sum_w, cout_w, in1[24:0], in2[24:0], cin);

endmodule

module adder_32_8(output [31:0] sum,
                      output cout,
                      input [24:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_9 adder_32_9_inst(sum_w, cout_w, in1[23:0], in2[23:0], cin);

endmodule

module adder_32_9(output [31:0] sum,
                      output cout,
                      input [23:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_10 adder_32_10_inst(sum_w, cout_w, in1[22:0], in2[22:0], cin);

endmodule

module adder_32_10(output [31:0] sum,
                      output cout,
                      input [22:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_11 adder_32_11_inst(sum_w, cout_w, in1[21:0], in2[21:0], cin);

endmodule

module adder_32_11(output [31:0] sum,
                      output cout,
                      input [21:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_12 adder_32_12_inst(sum_w, cout_w, in1[20:0], in2[20:0], cin);

endmodule

module adder_32_12(output [31:0] sum,
                      output cout,
                      input [20:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_13 adder_32_13_inst(sum_w, cout_w, in1[19:0], in2[19:0], cin);

endmodule

module adder_32_13(output [31:0] sum,
                      output cout,
                      input [19:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_14 adder_32_14_inst(sum_w, cout_w, in1[18:0], in2[18:0], cin);

endmodule

module adder_32_14(output [31:0] sum,
                      output cout,
                      input [18:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    assign sum = sum_w;
    assign cout = cout_w;

    adder_32_15 adder_32_15_inst(sum_w, cout_w, in1[17:0], in2[17:0], cin);

end
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:231: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  55  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29896 29945 29901 29900
  29962  2533 29918 29893 29936    13 29871  8014 11196 29918 29893 29936
     13    13 29871   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918 29893 29961 29955 29901 29900  1402 11196 29918
  29893 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13 29871   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918 29893 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  29893   416    13    13 29871  3566  2533   353  2533 29918 29893 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13 29871  8014   518 29955 29901 29900 29962  2533 29918 29893
  29936    13 29871  8014 11196 29918 29893 29936    13    13 29871   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
  29893 29961 29941 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918 29893 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 29893   416    13    13 29871  3566  2533
    353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 29893,   416,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

  assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_w;
  wire cout_w;

  adder_1 adder_1_1(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1 adder_1_2(sum_w[1], cout, in1[1], in2[1], cout_w);

  assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_w;
  wire cout_w;

  assign sum_w = in1 ^ in2 ^ cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

  assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_w;
  wire cout_w;

  adder_1 adder_1_1(sum_w[0], cout_w, in1[0], in2[0], cin);
  adder_1 adder_1_2(sum_w[1], cout, in1[1], in2[1], cout_w);

  assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_w;
  wire cout_w;

  assign sum_w = in1 ^ in2 ^ cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.787975

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  56  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566 11196
    353 11196 29918  7382 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29961 29896
  29945 29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29896
  29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402
   4670   416    13  1678   594   672 29918 29896 29953   594   672 29918
  29896 29953 29918 29906 29898  2083 29961 29941 29896 29901 29896 29953
   1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402
    297 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382
    416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  135
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], ~in2[31:16], cout_temp);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    multiplier_16 multiplier_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13  1678  3566 11196
    353 11196 29918  7382 29936    13    13  1678   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29961 29896
  29945 29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29896
  29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402
   4670   416    13  1678   594   672 29918 29896 29953   594   672 29918
  29896 29953 29918 29906 29898  2083 29961 29941 29896 29901 29896 29953
   1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402
    297 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382
    416    13    13   355  5453    13    13   458  4002   647   263 29871
  29941 29906 29899  2966 23197   272 29889    13   458  8439   526  1023
  29871 29941 29906  2586 10970   313   262 29896   322   297 29906 29897
    322   263  2323  8677 29899   262  1881  2586 29892  4670 29889    13
    458  1576 14391   526   263 29871 29941 29906  2586   995 29892   518
  29941 29896 29901 29900 29962  2533 29892   322   263  2323  8677 29899
    449  1962  2586 29892 11196 29889    13   458  1576  3883   881  3667
    675   278 10970   313   262 29896   322   297 29906 29897   322   278
   4670  2586   304  4017   278  1962  2533   322 11196  1819 29889    13
   5453 23197   272 29918 29941 29906 29898  4905   518 29941 29896 29901
  29900 29962  2533 29892    13   462   418  1962 11196 29892    13   462
    418  1881   518 29941 29896 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   418  1881  4670   416    13    13  1678  8014
    518 29941 29896 29901 29900 29962  2533 29918  7382 29936    13  1678
   8014 11196 29918  7382 29936    13    13  1678  3566  2533   353  2533
  29918  7382 29936    13  1678  3566 11196   353 11196 29918  7382 29936
     13    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29896 29898  2083 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402  3695
    262 29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678
    594   672 29918 29896 29953   594   672 29918 29896 29953 29918 29906
  29898  2083 29961 29941 29896 29901 29896 29953  1402 11196 29892   297
  29896 29961 29941 29896 29901 29896 29953  1402  3695   262 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  2533
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13  1678  8014   518 29941 29896
  29901 29900 29962  2533 29918  7382 29936    13  1678  8014 11196 29918
   7382 29936    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13  1678  3566 11196   353 11196 29918  7382 29936    13    13  1678
   6674  4926 29918 29896 29953  6674  4926 29918 29896 29953 29918 29896
  29898  2083 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13  1678  6674  4926 29918 29896
  29953  6674  4926 29918 29896 29953 29918 29906 29898  2083 29961 29941
  29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941 29896
  29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896 29953
   1402 11196 29918  7382   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,  1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941, 29896, 29901,
         29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941, 29896,
         29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896, 29901,
         29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29941, 29906,
         29899,  2966, 23197,   272, 29889,    13,   458,  8439,   526,  1023,
         29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453, 23197,   272, 29918, 29941, 29906,
         29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
          1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,
          7382, 29936,    13,  1678,  8014, 11196, 29918,  7382, 29936,    13,
            13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,    13,
          1678,  3566, 11196,   353, 11196, 29918,  7382, 29936,    13,    13,
          1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,  3695,   262, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297,
         29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,  3695,   262,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
          6674,  4926, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,  3566,  2533,   353,
          2533, 29918,  7382, 29936,    13,  1678,  3566, 11196,   353, 11196,
         29918,  7382, 29936,    13,    13,  1678,  6674,  4926, 29918, 29896,
         29953,  6674,  4926, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,  1678,
          6674,  4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896, 29953,
         29918, 29906, 29898,  2083, 29961, 29941, 29896, 29901, 29896, 29953,
          1402, 11196, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896,
         29953,  1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,
          1402, 11196, 29918,  7382,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  703
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], ~in2[31:16], cout_temp);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    multiplier_16 multiplier_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], ~in2[31:16], cout_temp);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    multiplier_16 multiplier_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    divider_16 divider_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    modulus_16 modulus_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    left_shift_16 left_shift_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1557
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], ~in2[31:16], cout_temp);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    multiplier_16 multiplier_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    divider_16 divider_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    modulus_16 modulus_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    left_shift_16 left_shift_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:76: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:77: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:96: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:97: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        divider_16 referenced 2 times.\n        left_shift_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], ~in2[31:16], cout_temp);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    multiplier_16 multiplier_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    divider_16 divider_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    modulus_16 modulus_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    left_shift_16 left_shift_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module right_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    right_shift_16 right_shift_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    right_shift_16 right_shift_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit signed less than.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module signed_less_than_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    signed_less_than_16 signed
[[  849  4002   647 ... 29896 29953  8794]]
tensor([[  849,  4002,   647,  ..., 29896, 29953,  8794]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], ~in2[31:16], cout_temp);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    multiplier_16 multiplier_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    divider_16 divider_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    modulus_16 modulus_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module left_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    left_shift_16 left_shift_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module right_shift_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    right_shift_16 right_shift_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    right_shift_16 right_shift_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 32-bit signed less than.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module signed_less_than_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum = sum_temp;
    assign cout = cout_temp;

    signed_less_than_16 signed
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  57  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_w;
wire cout_w;

adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
  29893 29936    13 22376 11196 29918 29893 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918 29893 29961 29896 29945 29901 29900  1402 11196 29918 29893 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918 29893 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13 16645  2533   353  2533
  29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         22376, 11196, 29918, 29893, 29936,    13,    13,   328,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,   328,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29896, 29898,  2083, 29918, 29893, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,
            13, 16645,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  125
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_w;
wire cout_w;

adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_w;
wire cout_w;

adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_w;
wire cout_w;

adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_w;
wire cout_w;

adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
  29893 29936    13 22376 11196 29918 29893 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918 29893 29961 29896 29945 29901 29900  1402 11196 29918 29893 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918 29893 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13 16645  2533   353  2533
  29918 29893 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  22376   518 29896 29945 29901 29900 29962  2533 29918 29893 29936    13
  22376 11196 29918 29893 29936    13    13   328   672 29918 29947   594
    672 29918 29947 29918 29900 29898  2083 29918 29893 29961 29955 29901
  29900  1402 11196 29918 29893 29892   297 29896 29961 29955 29901 29900
   1402   297 29906 29961 29955 29901 29900  1402  4670   416    13   328
    672 29918 29947   594   672 29918 29947 29918 29896 29898  2083 29918
  29893 29961 29896 29945 29901 29947  1402 11196 29892   297 29896 29961
  29896 29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947
   1402 11196 29918 29893   416    13    13 16645  2533   353  2533 29918
  29893 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   268  1962 11196 29892    13   462   268  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   268  1881
   4670   416    13    13 22376   518 29955 29901 29900 29962  2533 29918
  29893 29936    13 22376 11196 29918 29893 29936    13    13   328   672
  29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918 29893
  29961 29941 29901 29900  1402 11196 29918 29893 29892   297 29896 29961
  29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402  4670
    416    13   328   672 29918 29946   594   672 29918 29946 29918 29896
  29898  2083 29918 29893 29961 29955 29901 29946  1402 11196 29892   297
  29896 29961 29955 29901 29946  1402   297 29906 29961 29955 29901 29946
   1402 11196 29918 29893   416    13    13 16645  2533   353  2533 29918
  29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 22376,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 22376,
         11196, 29918, 29893, 29936,    13,    13,   328,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,   328,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29918, 29893, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,    13,
         16645,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29896, 29953,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896, 29953,
         29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
         22376,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29918, 29893,
         29936,    13, 22376, 11196, 29918, 29893, 29936,    13,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29900, 29898,
          2083, 29918, 29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
         29893, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,
          2083, 29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,
           416,    13,    13, 16645,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 22376,   518, 29955, 29901,
         29900, 29962,  2533, 29918, 29893, 29936,    13, 22376, 11196, 29918,
         29893, 29936,    13,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29900, 29898,  2083, 29918, 29893, 29961, 29941,
         29901, 29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961,
         29941, 29901, 29900,  1402,   297, 29906, 29961, 29941, 29901, 29900,
          1402,  4670,   416,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29896, 29898,  2083, 29918, 29893, 29961, 29955,
         29901, 29946,  1402, 11196, 29892,   297, 29896, 29961, 29955, 29901,
         29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,  1402, 11196,
         29918, 29893,   416,    13,    13, 16645,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  640
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_w;
wire cout_w;

adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_w;
wire cout_w;

adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_w;
wire cout_w;

adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_w;
wire cout_w;

adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_w;
wire cout_w;

adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_w;
wire cout_w;

adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_w;
wire cout_w;

adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_w;
wire cout_w;

adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_w[1], cout, in1[1], in2[1], cout_w);

assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

wire [0:0] sum_w;
wire cout_w;

assign sum_w = in1 ^ in2 ^ cin;
assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

assign sum = sum_w;
assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1351
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_w;
wire cout_w;

adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_w;
wire cout_w;

adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_w;
wire cout_w;

adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_w;
wire cout_w;

adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_w;
wire cout_w;

adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_w[1], cout, in1[1], in2[1], cout_w);

assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

wire [0:0] sum_w;
wire cout_w;

assign sum_w = in1 ^ in2 ^ cin;
assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

assign sum = sum_w;
assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.761755

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  58  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29896 29945 29901 29900
  29962  2533 29918 29893 29936    13 29871  8014 11196 29918 29893 29936
     13    13 29871   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918 29893 29961 29955 29901 29900  1402 11196 29918
  29893 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13 29871   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918 29893 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  29893   416    13    13 29871  3566  2533   353  2533 29918 29893 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   385 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13 29871  8014   518 29955 29901 29900 29962  2533 29918 29893
  29936    13 29871  8014 11196 29918 29893 29936    13    13 29871   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
  29893 29961 29941 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918 29893 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 29893   416    13    13 29871  3566  2533
    353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   385,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 29893,   416,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

  assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_w;
  wire cout_w;

  assign sum_w[0] = in1[0] ^ in2[0] ^ cin;
  assign sum_w[1] = in1[1] ^ in2[1] ^ cin;
  assign cout_w = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);
  assign cout = cout_w;

  assign sum = sum_w;

endmodule
\end{code}

Comment: What is the question?

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct.
[[  849  4002   647 ...   338  1959 29889]]
tensor([[  849,  4002,   647,  ...,   338,  1959, 29889]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

  assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

  assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

  assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_w;
  wire cout_w;

  assign sum_w[0] = in1[0] ^ in2[0] ^ cin;
  assign sum_w[1] = in1[1] ^ in2[1] ^ cin;
  assign cout_w = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);
  assign cout = cout_w;

  assign sum = sum_w;

endmodule
\end{code}

Comment: What is the question?

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct. I am not sure if I am using the correct logic.

Comment: I am not sure if my code is correct.
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:99: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  59  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    // 32-bit full adder
    full_adder fa_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    full_adder fa_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
    full_adder fa_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
    full_adder fa_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
    full_adder fa_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
    full_adder fa_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
    full_adder fa_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
    full_adder fa_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
    full_adder fa_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
    full_adder fa_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
    full_adder fa_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
    full_adder fa_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
    full_adder fa_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
    full_adder fa_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
    full_adder fa_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
    full_adder fa_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
    full_adder fa_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
    full_adder fa_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
    full_adder fa_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
    full_adder fa_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
    full_adder fa_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
    full_adder fa_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
    full_adder fa_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
    full_adder fa_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
    full_adder fa_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
    full_adder fa_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
    full_adder fa_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
    full_adder fa_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
    full_adder fa_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
    full_adder fa_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
    full_adder fa_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
    full_adder fa_31(sum_w[31], cout, in1[31], in2[31], cout_w);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1227
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    // 32-bit full adder
    full_adder fa_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    full_adder fa_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
    full_adder fa_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
    full_adder fa_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
    full_adder fa_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
    full_adder fa_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
    full_adder fa_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
    full_adder fa_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
    full_adder fa_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
    full_adder fa_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
    full_adder fa_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
    full_adder fa_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
    full_adder fa_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
    full_adder fa_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
    full_adder fa_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
    full_adder fa_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
    full_adder fa_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
    full_adder fa_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
    full_adder fa_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
    full_adder fa_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
    full_adder fa_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
    full_adder fa_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
    full_adder fa_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
    full_adder fa_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
    full_adder fa_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
    full_adder fa_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
    full_adder fa_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
    full_adder fa_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
    full_adder fa_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
    full_adder fa_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
    full_adder fa_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
    full_adder fa_31(sum_w[31], cout, in1[31], in2[31], cout_w);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:15: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    // 32-bit full adder
    full_adder fa_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    full_adder fa_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
    full_adder fa_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
    full_adder fa_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
    full_adder fa_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
    full_adder fa_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
    full_adder fa_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
    full_adder fa_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
    full_adder fa_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
    full_adder fa_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
    full_adder fa_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
    full_adder fa_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
    full_adder fa_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
    full_adder fa_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
    full_adder fa_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
    full_adder fa_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
    full_adder fa_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
    full_adder fa_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
    full_adder fa_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
    full_adder fa_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
    full_adder fa_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
    full_adder fa_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
    full_adder fa_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
    full_adder fa_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
    full_adder fa_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
    full_adder fa_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
    full_adder fa_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
    full_adder fa_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
    full_adder fa_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
    full_adder fa_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
    full_adder fa_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
    full_adder fa_31(sum_w[31], cout, in1[31], in2[31], cout_w);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

    wire [31:0] diff_w;
    wire cout_w;

    // 32-bit full subtractor
    full_subtractor fs_0(diff_w[0], cout_w, in1[0], in2[0], cin);
    full_subtractor fs_1(diff_w[1], cout_w, in1[1], in2[1], cout_w);
    full_subtractor fs_2(diff_w[2], cout_w, in1[2], in2[2], cout_w);
    full_subtractor fs_3(diff_w[3], cout_w, in1[3], in2[3], cout_w);
    full_subtractor fs_4(diff_w[4], cout_w, in1[4], in2[4], cout_w);
    full_subtractor fs_5(diff_w[5], cout_w, in1[5], in2[5], cout_w);
    full_subtractor fs_6(diff_w[6], cout_w, in1[6], in2[6], cout_w);
    full_subtractor fs_7(diff_w[7], cout_w, in1[7], in2[7], cout_w);
    full_subtractor fs_8(diff_w[8], cout_w, in1[8], in2[8], cout_w);
    full_subtractor fs_9(diff_w[9], cout_w, in1[9], in2[9], cout_w);
    full_subtractor fs_10(diff_w[10], cout_w, in1[10], in2[10], cout_w);
    full_subtractor fs_11(diff_w[11], cout_w, in1[11], in2[11], cout_w);
    full_subtractor fs_12(diff_w[12], cout_w, in1[12], in2[12], cout_w);
    full_subtractor fs_13(diff_w[13], cout_w, in1[13], in2[13], cout_w);
    full_subtractor fs_14(diff_w[14], cout_w, in1[14], in2[14], cout_w);
    full_subtractor fs_15(diff_w[15], cout_w, in1[15], in2[15], cout_w);
    full_subtractor fs_16(diff_w[16], cout_w, in1[16], in2[16], cout_w);
    full_subtractor fs_17(diff_w[17], cout
[[  849  4002   647 ... 29955  1402 11196]]
tensor([[  849,  4002,   647,  ..., 29955,  1402, 11196]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    // 32-bit full adder
    full_adder fa_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    full_adder fa_1(sum_w[1], cout_w, in1[1], in2[1], cout_w);
    full_adder fa_2(sum_w[2], cout_w, in1[2], in2[2], cout_w);
    full_adder fa_3(sum_w[3], cout_w, in1[3], in2[3], cout_w);
    full_adder fa_4(sum_w[4], cout_w, in1[4], in2[4], cout_w);
    full_adder fa_5(sum_w[5], cout_w, in1[5], in2[5], cout_w);
    full_adder fa_6(sum_w[6], cout_w, in1[6], in2[6], cout_w);
    full_adder fa_7(sum_w[7], cout_w, in1[7], in2[7], cout_w);
    full_adder fa_8(sum_w[8], cout_w, in1[8], in2[8], cout_w);
    full_adder fa_9(sum_w[9], cout_w, in1[9], in2[9], cout_w);
    full_adder fa_10(sum_w[10], cout_w, in1[10], in2[10], cout_w);
    full_adder fa_11(sum_w[11], cout_w, in1[11], in2[11], cout_w);
    full_adder fa_12(sum_w[12], cout_w, in1[12], in2[12], cout_w);
    full_adder fa_13(sum_w[13], cout_w, in1[13], in2[13], cout_w);
    full_adder fa_14(sum_w[14], cout_w, in1[14], in2[14], cout_w);
    full_adder fa_15(sum_w[15], cout_w, in1[15], in2[15], cout_w);
    full_adder fa_16(sum_w[16], cout_w, in1[16], in2[16], cout_w);
    full_adder fa_17(sum_w[17], cout_w, in1[17], in2[17], cout_w);
    full_adder fa_18(sum_w[18], cout_w, in1[18], in2[18], cout_w);
    full_adder fa_19(sum_w[19], cout_w, in1[19], in2[19], cout_w);
    full_adder fa_20(sum_w[20], cout_w, in1[20], in2[20], cout_w);
    full_adder fa_21(sum_w[21], cout_w, in1[21], in2[21], cout_w);
    full_adder fa_22(sum_w[22], cout_w, in1[22], in2[22], cout_w);
    full_adder fa_23(sum_w[23], cout_w, in1[23], in2[23], cout_w);
    full_adder fa_24(sum_w[24], cout_w, in1[24], in2[24], cout_w);
    full_adder fa_25(sum_w[25], cout_w, in1[25], in2[25], cout_w);
    full_adder fa_26(sum_w[26], cout_w, in1[26], in2[26], cout_w);
    full_adder fa_27(sum_w[27], cout_w, in1[27], in2[27], cout_w);
    full_adder fa_28(sum_w[28], cout_w, in1[28], in2[28], cout_w);
    full_adder fa_29(sum_w[29], cout_w, in1[29], in2[29], cout_w);
    full_adder fa_30(sum_w[30], cout_w, in1[30], in2[30], cout_w);
    full_adder fa_31(sum_w[31], cout, in1[31], in2[31], cout_w);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

    wire [31:0] diff_w;
    wire cout_w;

    // 32-bit full subtractor
    full_subtractor fs_0(diff_w[0], cout_w, in1[0], in2[0], cin);
    full_subtractor fs_1(diff_w[1], cout_w, in1[1], in2[1], cout_w);
    full_subtractor fs_2(diff_w[2], cout_w, in1[2], in2[2], cout_w);
    full_subtractor fs_3(diff_w[3], cout_w, in1[3], in2[3], cout_w);
    full_subtractor fs_4(diff_w[4], cout_w, in1[4], in2[4], cout_w);
    full_subtractor fs_5(diff_w[5], cout_w, in1[5], in2[5], cout_w);
    full_subtractor fs_6(diff_w[6], cout_w, in1[6], in2[6], cout_w);
    full_subtractor fs_7(diff_w[7], cout_w, in1[7], in2[7], cout_w);
    full_subtractor fs_8(diff_w[8], cout_w, in1[8], in2[8], cout_w);
    full_subtractor fs_9(diff_w[9], cout_w, in1[9], in2[9], cout_w);
    full_subtractor fs_10(diff_w[10], cout_w, in1[10], in2[10], cout_w);
    full_subtractor fs_11(diff_w[11], cout_w, in1[11], in2[11], cout_w);
    full_subtractor fs_12(diff_w[12], cout_w, in1[12], in2[12], cout_w);
    full_subtractor fs_13(diff_w[13], cout_w, in1[13], in2[13], cout_w);
    full_subtractor fs_14(diff_w[14], cout_w, in1[14], in2[14], cout_w);
    full_subtractor fs_15(diff_w[15], cout_w, in1[15], in2[15], cout_w);
    full_subtractor fs_16(diff_w[16], cout_w, in1[16], in2[16], cout_w);
    full_subtractor fs_17(diff_w[17], cout
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:82: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  60  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1506
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

    assign sum = (in1 ^ in2 ^ cin);
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    subtractor_32_bit subtractor_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    subtractor_32_bit subtractor_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    subtractor_32_bit subtractor_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    subtractor_32_bit subtractor_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
   
[[ 849 4002  647 ...  416   13 1678]]
tensor([[ 849, 4002,  647,  ...,  416,   13, 1678]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                      output cout,
                      input in1, in2,
                      input cin);

    assign sum = (in1 ^ in2 ^ cin);
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    subtractor_32_bit subtractor_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    subtractor_32_bit subtractor_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    subtractor_32_bit subtractor_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    subtractor_32_bit subtractor_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
   
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:84: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  61  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;
    wire [31:0] c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31;

    assign s0 = in1[0] ^ in2[0] ^ cin;
    assign c0 = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

    assign s1 = in1[1] ^ in2[1] ^ c0[0];
    assign c1 = (in1[1] & in2[1]) | (in1[1] & c0[0]) | (in2[1] & c0[0]);

    assign s2 = in1[2] ^ in2[2] ^ c1[0];
    assign c2 = (in1[2] & in2[2]) | (in1[2] & c1[0]) | (in2[2] & c1[0]);

    assign s3 = in1[3] ^ in2[3] ^ c2[0];
    assign c3 = (in1[3] & in2[3]) | (in1[3] & c2[0]) | (in2[3] & c2[0]);

    assign s4 = in1[4] ^ in2[4] ^ c3[0];
    assign c4 = (in1[4] & in2[4]) | (in1[4] & c3[0]) | (in2[4] & c3[0]);

    assign s5 = in1[5] ^ in2[5] ^ c4[0];
    assign c5 = (in1[5] & in2[5]) | (in1[5] & c4[0]) | (in2[5] & c4[0]);

    assign s6 = in1[6] ^ in2[6] ^ c5[0];
    assign c6 = (in1[6] & in2[6]) | (in1[6] & c5[0]) | (in2[6] & c5[0]);

    assign s7 = in1[7] ^ in2[7] ^ c6[0];
    assign c7 = (in1[7] & in2[7]) | (in1[7] & c6[0]) | (in2[7] & c6[0]);

    assign s8 = in1[8] ^ in2[8] ^ c7[0];
    assign c8 = (in1[8] & in2[8]) | (in1[8] & c7[0]) | (in2[8] & c7[0]);

    assign s9 = in1[9] ^ in2[9] ^ c8[0];
    assign c9 = (in1[9] & in2[9]) | (in1[9] & c8[0]) | (in2[9] & c8[0]);

    assign s10 = in1[10] ^ in2[10] ^ c9[0];
    assign c10 = (in1[10] & in2[10]) | (in1[10] & c9[0]) | (in2[10] & c9[0]);

    assign s11 = in1[11] ^ in2[11] ^ c10[0];
    assign c11 = (in1[11] & in2[11]) | (in1[11] & c10[0]) | (in2[11] & c10[0]);

    assign s12 = in1[12] ^ in2[12] ^ c11[0];
    assign c12 = (in1[12] & in2[12]) | (in1[12] & c11[0]) | (in2[12] & c11[0]);

    assign s13 = in1[13] ^ in2[13] ^ c12[0];
    assign c13 = (in1[13] & in2[13]) | (in1[13] & c12[0]) | (in2[13] & c12[0]);

    assign s14 = in1[14] ^ in2[14] ^ c13[0];
    assign c14 = (in1[14] & in2[14]) | (in1[14] & c13[0]) | (in2[14] & c13[0]);

    assign s15 = in1[15] ^ in2[15] ^ c14[0];
    assign c15 = (in1[15] & in2[15]) | (in1[15] & c14[0]) | (in2[15] & c14[0]);

    assign s16 = in1[16] ^ in2[16] ^ c15[0];
    assign c16 = (in1[16] & in2[16]) | (in1[16] & c15[0]) | (in2[16] & c15[0]);

    assign s17 = in1[17] ^ in2[17] ^ c16[0];
    assign c17 = (in1[17] & in2[17]) | (in1[17] & c16[0]) | (in2[17] & c16[0]);

    assign s18 = in1[18] ^ in2[18] ^ c17[0];
    assign c18 = (in1[18] & in2[18]) | (in1[18] & c17[0]) | (in2[18] & c17[0]);

    assign s19 = in1[19] ^ in2[19] ^ c18[0];
    assign c19 = (in1[19] & in2[19]) | (in1[19] & c18[0]) | (in2[19] & c18[0]);

    assign s20 = in1[20] ^ in2[20] ^ c19[0];
    assign c20 = (in1[20] & in2[20]) | (in1[20] & c19[0]) | (in2[20] & c19[0]);

    assign s21 = in1[21] ^ in2[21] ^ c20[0];
    assign c21 = (in1[21] & in2[21]) | (in1[21] & c20[0]) | (in2[21] & c20[0]);

    assign s22 = in1[22] ^ in2[22] ^ c21[0];
    assign c22 = (in1[22] & in2[22]) | (in1[22] & c21[0]) | (in2[22] & c21[0]);

    assign s23 = in1[23] ^ in2[23] ^ c22[0];
    assign c23 = (in1[23] & in2[23]) | (in1[23] & c22[0]) | (in2[23] & c22[0]);

    assign s24 = in1[24] ^ in2[2
[[  849  4002   647 ... 29906 29961 29906]]
tensor([[    1,   849,  4002,  ..., 29906, 29961, 29906]], device='cuda:0')
Checking if done:
tokens generated:  2047
Calling isPromptComplete: 
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;
    wire [31:0] c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31;

    assign s0 = in1[0] ^ in2[0] ^ cin;
    assign c0 = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

    assign s1 = in1[1] ^ in2[1] ^ c0[0];
    assign c1 = (in1[1] & in2[1]) | (in1[1] & c0[0]) | (in2[1] & c0[0]);

    assign s2 = in1[2] ^ in2[2] ^ c1[0];
    assign c2 = (in1[2] & in2[2]) | (in1[2] & c1[0]) | (in2[2] & c1[0]);

    assign s3 = in1[3] ^ in2[3] ^ c2[0];
    assign c3 = (in1[3] & in2[3]) | (in1[3] & c2[0]) | (in2[3] & c2[0]);

    assign s4 = in1[4] ^ in2[4] ^ c3[0];
    assign c4 = (in1[4] & in2[4]) | (in1[4] & c3[0]) | (in2[4] & c3[0]);

    assign s5 = in1[5] ^ in2[5] ^ c4[0];
    assign c5 = (in1[5] & in2[5]) | (in1[5] & c4[0]) | (in2[5] & c4[0]);

    assign s6 = in1[6] ^ in2[6] ^ c5[0];
    assign c6 = (in1[6] & in2[6]) | (in1[6] & c5[0]) | (in2[6] & c5[0]);

    assign s7 = in1[7] ^ in2[7] ^ c6[0];
    assign c7 = (in1[7] & in2[7]) | (in1[7] & c6[0]) | (in2[7] & c6[0]);

    assign s8 = in1[8] ^ in2[8] ^ c7[0];
    assign c8 = (in1[8] & in2[8]) | (in1[8] & c7[0]) | (in2[8] & c7[0]);

    assign s9 = in1[9] ^ in2[9] ^ c8[0];
    assign c9 = (in1[9] & in2[9]) | (in1[9] & c8[0]) | (in2[9] & c8[0]);

    assign s10 = in1[10] ^ in2[10] ^ c9[0];
    assign c10 = (in1[10] & in2[10]) | (in1[10] & c9[0]) | (in2[10] & c9[0]);

    assign s11 = in1[11] ^ in2[11] ^ c10[0];
    assign c11 = (in1[11] & in2[11]) | (in1[11] & c10[0]) | (in2[11] & c10[0]);

    assign s12 = in1[12] ^ in2[12] ^ c11[0];
    assign c12 = (in1[12] & in2[12]) | (in1[12] & c11[0]) | (in2[12] & c11[0]);

    assign s13 = in1[13] ^ in2[13] ^ c12[0];
    assign c13 = (in1[13] & in2[13]) | (in1[13] & c12[0]) | (in2[13] & c12[0]);

    assign s14 = in1[14] ^ in2[14] ^ c13[0];
    assign c14 = (in1[14] & in2[14]) | (in1[14] & c13[0]) | (in2[14] & c13[0]);

    assign s15 = in1[15] ^ in2[15] ^ c14[0];
    assign c15 = (in1[15] & in2[15]) | (in1[15] & c14[0]) | (in2[15] & c14[0]);

    assign s16 = in1[16] ^ in2[16] ^ c15[0];
    assign c16 = (in1[16] & in2[16]) | (in1[16] & c15[0]) | (in2[16] & c15[0]);

    assign s17 = in1[17] ^ in2[17] ^ c16[0];
    assign c17 = (in1[17] & in2[17]) | (in1[17] & c16[0]) | (in2[17] & c16[0]);

    assign s18 = in1[18] ^ in2[18] ^ c17[0];
    assign c18 = (in1[18] & in2[18]) | (in1[18] & c17[0]) | (in2[18] & c17[0]);

    assign s19 = in1[19] ^ in2[19] ^ c18[0];
    assign c19 = (in1[19] & in2[19]) | (in1[19] & c18[0]) | (in2[19] & c18[0]);

    assign s20 = in1[20] ^ in2[20] ^ c19[0];
    assign c20 = (in1[20] & in2[20]) | (in1[20] & c19[0]) | (in2[20] & c19[0]);

    assign s21 = in1[21] ^ in2[21] ^ c20[0];
    assign c21 = (in1[21] & in2[21]) | (in1[21] & c20[0]) | (in2[21] & c20[0]);

    assign s22 = in1[22] ^ in2[22] ^ c21[0];
    assign c22 = (in1[22] & in2[22]) | (in1[22] & c21[0]) | (in2[22] & c21[0]);

    assign s23 = in1[23] ^ in2[23] ^ c22[0];
    assign c23 = (in1[23] & in2[23]) | (in1[23] & c22[0]) | (in2[23] & c22[0]);

    assign s24 = in1[24] ^ in2[24
[[  849  4002   647 ... 29961 29906 29946]]
tensor([[  849,  4002,   647,  ..., 29961, 29906, 29946]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;
    wire [31:0] c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31;

    assign s0 = in1[0] ^ in2[0] ^ cin;
    assign c0 = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

    assign s1 = in1[1] ^ in2[1] ^ c0[0];
    assign c1 = (in1[1] & in2[1]) | (in1[1] & c0[0]) | (in2[1] & c0[0]);

    assign s2 = in1[2] ^ in2[2] ^ c1[0];
    assign c2 = (in1[2] & in2[2]) | (in1[2] & c1[0]) | (in2[2] & c1[0]);

    assign s3 = in1[3] ^ in2[3] ^ c2[0];
    assign c3 = (in1[3] & in2[3]) | (in1[3] & c2[0]) | (in2[3] & c2[0]);

    assign s4 = in1[4] ^ in2[4] ^ c3[0];
    assign c4 = (in1[4] & in2[4]) | (in1[4] & c3[0]) | (in2[4] & c3[0]);

    assign s5 = in1[5] ^ in2[5] ^ c4[0];
    assign c5 = (in1[5] & in2[5]) | (in1[5] & c4[0]) | (in2[5] & c4[0]);

    assign s6 = in1[6] ^ in2[6] ^ c5[0];
    assign c6 = (in1[6] & in2[6]) | (in1[6] & c5[0]) | (in2[6] & c5[0]);

    assign s7 = in1[7] ^ in2[7] ^ c6[0];
    assign c7 = (in1[7] & in2[7]) | (in1[7] & c6[0]) | (in2[7] & c6[0]);

    assign s8 = in1[8] ^ in2[8] ^ c7[0];
    assign c8 = (in1[8] & in2[8]) | (in1[8] & c7[0]) | (in2[8] & c7[0]);

    assign s9 = in1[9] ^ in2[9] ^ c8[0];
    assign c9 = (in1[9] & in2[9]) | (in1[9] & c8[0]) | (in2[9] & c8[0]);

    assign s10 = in1[10] ^ in2[10] ^ c9[0];
    assign c10 = (in1[10] & in2[10]) | (in1[10] & c9[0]) | (in2[10] & c9[0]);

    assign s11 = in1[11] ^ in2[11] ^ c10[0];
    assign c11 = (in1[11] & in2[11]) | (in1[11] & c10[0]) | (in2[11] & c10[0]);

    assign s12 = in1[12] ^ in2[12] ^ c11[0];
    assign c12 = (in1[12] & in2[12]) | (in1[12] & c11[0]) | (in2[12] & c11[0]);

    assign s13 = in1[13] ^ in2[13] ^ c12[0];
    assign c13 = (in1[13] & in2[13]) | (in1[13] & c12[0]) | (in2[13] & c12[0]);

    assign s14 = in1[14] ^ in2[14] ^ c13[0];
    assign c14 = (in1[14] & in2[14]) | (in1[14] & c13[0]) | (in2[14] & c13[0]);

    assign s15 = in1[15] ^ in2[15] ^ c14[0];
    assign c15 = (in1[15] & in2[15]) | (in1[15] & c14[0]) | (in2[15] & c14[0]);

    assign s16 = in1[16] ^ in2[16] ^ c15[0];
    assign c16 = (in1[16] & in2[16]) | (in1[16] & c15[0]) | (in2[16] & c15[0]);

    assign s17 = in1[17] ^ in2[17] ^ c16[0];
    assign c17 = (in1[17] & in2[17]) | (in1[17] & c16[0]) | (in2[17] & c16[0]);

    assign s18 = in1[18] ^ in2[18] ^ c17[0];
    assign c18 = (in1[18] & in2[18]) | (in1[18] & c17[0]) | (in2[18] & c17[0]);

    assign s19 = in1[19] ^ in2[19] ^ c18[0];
    assign c19 = (in1[19] & in2[19]) | (in1[19] & c18[0]) | (in2[19] & c18[0]);

    assign s20 = in1[20] ^ in2[20] ^ c19[0];
    assign c20 = (in1[20] & in2[20]) | (in1[20] & c19[0]) | (in2[20] & c19[0]);

    assign s21 = in1[21] ^ in2[21] ^ c20[0];
    assign c21 = (in1[21] & in2[21]) | (in1[21] & c20[0]) | (in2[21] & c20[0]);

    assign s22 = in1[22] ^ in2[22] ^ c21[0];
    assign c22 = (in1[22] & in2[22]) | (in1[22] & c21[0]) | (in2[22] & c21[0]);

    assign s23 = in1[23] ^ in2[23] ^ c22[0];
    assign c23 = (in1[23] & in2[23]) | (in1[23] & c22[0]) | (in2[23] & c22[0]);

    assign s24 = in1[24] ^ in2[24
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:85: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  62  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13    13
  29871   849 29871 29941 29906 29899  2966   594   672    13 29871   594
    672 29918 29941 29906 29918  7564   594   672 29918 29941 29906 29918
   7564 29918  2611 29898  2083 29918  7564 29892 11196 29918  7564 29892
    297 29896 29892   297 29906 29892  4670   416    13    13 29871  3566
   2533   353  2533 29918  7564 29936    13 29871  3566 11196   353 11196
  29918  7564 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13, 29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,
           849, 29871, 29941, 29906, 29899,  2966,   594,   672,    13, 29871,
           594,   672, 29918, 29941, 29906, 29918,  7564,   594,   672, 29918,
         29941, 29906, 29918,  7564, 29918,  2611, 29898,  2083, 29918,  7564,
         29892, 11196, 29918,  7564, 29892,   297, 29896, 29892,   297, 29906,
         29892,  4670,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7564, 29936,    13, 29871,  3566, 11196,   353, 11196, 29918,
          7564, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  89
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_32_internal\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_internal referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_internal(output [31:0] sum,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 16-bit adder
  adder_16_internal adder_16_internal_inst1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16_internal adder_16_internal_inst2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_internal(output [15:0] sum,
                                output cout,
                                input [15:0] in1, in2,
                                input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  // 8-bit adder
  adder_8_internal adder_8_internal_inst1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8_internal adder_8_internal_inst2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13    13
  29871   849 29871 29941 29906 29899  2966   594   672    13 29871   594
    672 29918 29941 29906 29918  7564   594   672 29918 29941 29906 29918
   7564 29918  2611 29898  2083 29918  7564 29892 11196 29918  7564 29892
    297 29896 29892   297 29906 29892  4670   416    13    13 29871  3566
   2533   353  2533 29918  7564 29936    13 29871  3566 11196   353 11196
  29918  7564 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29941 29906 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29941 29906  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29941 29906  2586   995
  29892   518 29941 29896 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29941 29906 29918  7564 29898  4905
    518 29941 29896 29901 29900 29962  2533 29892    13   462 18884  1962
  11196 29892    13   462 18884  1881   518 29941 29896 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462 18884  1881  4670   416
     13    13 29871  8014   518 29941 29896 29901 29900 29962  2533 29918
   7564 29936    13 29871  8014 11196 29918  7564 29936    13    13 29871
    849 29871 29896 29953 29899  2966   594   672    13 29871   594   672
  29918 29896 29953 29918  7564   594   672 29918 29896 29953 29918  7564
  29918  2611 29896 29898  2083 29918  7564 29961 29896 29945 29901 29900
   1402 11196 29918  7564 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416    13
  29871   594   672 29918 29896 29953 29918  7564   594   672 29918 29896
  29953 29918  7564 29918  2611 29906 29898  2083 29918  7564 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7564   416    13    13 29871  3566  2533
    353  2533 29918  7564 29936    13 29871  3566 11196   353 11196 29918
   7564 29936    13    13   355  5453    13    13   458  4002   647   263
  29871 29896 29953 29899  2966   594   672 29889    13   458  8439   526
   1023 29871 29896 29953  2586 10970   313   262 29896   322   297 29906
  29897   322   263  2323  8677 29899   262  1881  2586 29892  4670 29889
     13   458  1576 14391   526   263 29871 29896 29953  2586   995 29892
    518 29896 29945 29901 29900 29962  2533 29892   322   263  2323  8677
  29899   449  1962  2586 29892 11196 29889    13   458  1576  3883   881
   3667   675   278 10970   313   262 29896   322   297 29906 29897   322
    278  4670  2586   304  4017   278  1962  2533   322 11196  1819 29889
     13  5453   594   672 29918 29896 29953 29918  7564 29898  4905   518
  29896 29945 29901 29900 29962  2533 29892    13   462 18884  1962 11196
  29892    13   462 18884  1881   518 29896 29945 29901 29900 29962   297
  29896 29892   297 29906 29892    13   462 18884  1881  4670   416    13
     13 29871  8014   518 29896 29945 29901 29900 29962  2533 29918  7564
  29936    13 29871  8014 11196 29918  7564 29936    13    13 29871   849
  29871 29947 29899  2966   594   672    13 29871   594   672 29918 29947
  29918  7564   594   672 29918 29947 29918  7564 29918  2611 29896 29898
   2083 29918  7564 29961 29955 29901 29900  1402 11196 29918  7564 29892
    297 29896 29961 29955 29901 29900  1402   297 29906 29961 29955 29901
  29900  1402  4670   416    13 29871   594   672 29918 29947 29918  7564
    594   672 29918 29947 29918  7564 29918  2611 29906 29898  2083 29918
   7564 29961 29896 29945 29901 29947  1402 11196 29918  7564 29892   297
  29896 29961 29896 29945 29901 29947  1402   297 29906 29961 29896 29945
  29901 29947  1402 11196 29918  7564   416    13    13 29871  3566  2533
    353  2533 29918  7564 29936    13 29871  3566 11196   353 11196 29918
   7564 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
         29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,   849,
         29871, 29941, 29906, 29899,  2966,   594,   672,    13, 29871,   594,
           672, 29918, 29941, 29906, 29918,  7564,   594,   672, 29918, 29941,
         29906, 29918,  7564, 29918,  2611, 29898,  2083, 29918,  7564, 29892,
         11196, 29918,  7564, 29892,   297, 29896, 29892,   297, 29906, 29892,
          4670,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
          7564, 29936,    13, 29871,  3566, 11196,   353, 11196, 29918,  7564,
         29936,    13,    13,   355,  5453,    13,    13,   458,  4002,   647,
           263, 29871, 29941, 29906, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677,
         29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576,
         14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,
          8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,
          1576,  3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,
           278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,
           672, 29918, 29941, 29906, 29918,  7564, 29898,  4905,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29892,    13,   462, 18884,  1962,
         11196, 29892,    13,   462, 18884,  1881,   518, 29941, 29896, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
         18884,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13, 29871,
          8014, 11196, 29918,  7564, 29936,    13,    13, 29871,   849, 29871,
         29896, 29953, 29899,  2966,   594,   672,    13, 29871,   594,   672,
         29918, 29896, 29953, 29918,  7564,   594,   672, 29918, 29896, 29953,
         29918,  7564, 29918,  2611, 29896, 29898,  2083, 29918,  7564, 29961,
         29896, 29945, 29901, 29900,  1402, 11196, 29918,  7564, 29892,   297,
         29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906, 29961,
         29896, 29945, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,
           672, 29918, 29896, 29953, 29918,  7564,   594,   672, 29918, 29896,
         29953, 29918,  7564, 29918,  2611, 29906, 29898,  2083, 29918,  7564,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7564,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7564,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7564, 29936,    13, 29871,  3566, 11196,   353, 11196, 29918,
          7564, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29918,  7564, 29898,  4905,   518,
         29896, 29945, 29901, 29900, 29962,  2533, 29892,    13,   462, 18884,
          1962, 11196, 29892,    13,   462, 18884,  1881,   518, 29896, 29945,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462, 18884,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29896, 29945, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
         29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,   849,
         29871, 29947, 29899,  2966,   594,   672,    13, 29871,   594,   672,
         29918, 29947, 29918,  7564,   594,   672, 29918, 29947, 29918,  7564,
         29918,  2611, 29896, 29898,  2083, 29918,  7564, 29961, 29955, 29901,
         29900,  1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29955,
         29901, 29900,  1402,   297, 29906, 29961, 29955, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29947, 29918,  7564,
           594,   672, 29918, 29947, 29918,  7564, 29918,  2611, 29906, 29898,
          2083, 29918,  7564, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29918,  7564,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7564, 29936,    13, 29871,  3566, 11196,   353, 11196, 29918,
          7564, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  700
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_internal(output [31:0] sum,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 16-bit adder
  adder_16_internal adder_16_internal_inst1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16_internal adder_16_internal_inst2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_internal(output [15:0] sum,
                                output cout,
                                input [15:0] in1, in2,
                                input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  // 8-bit adder
  adder_8_internal adder_8_internal_inst1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8_internal adder_8_internal_inst2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  5
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:55: error: Unknown module type: adder_8_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_8_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:55: error: Unknown module type: adder_8_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_8_internal\n5 error(s) during elaboration.\n*** These modules were missing:\n        adder_8_internal referenced 4 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_internal(output [31:0] sum,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 16-bit adder
  adder_16_internal adder_16_internal_inst1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16_internal adder_16_internal_inst2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_internal(output [15:0] sum,
                                output cout,
                                input [15:0] in1, in2,
                                input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  // 8-bit adder
  adder_8_internal adder_8_internal_inst1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8_internal adder_8_internal_inst2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_internal(output [7:0] sum,
                               output cout,
                               input [7:0] in1, in2,
                               input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  // 4-bit adder
  adder_4_internal adder_4_internal_inst1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4_internal adder_4_internal_inst2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_internal(output [3:0] sum,
                                output cout,
                                input [3:0] in1, in2,
                                input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  // 2-bit adder
  adder_2_internal adder_2_internal_inst1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2_internal adder_2_internal_inst2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_internal(output [1:0] sum,
                                output cout,
                                input [1:0] in1, in2,
                                input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  // 1-bit adder
  adder_1_internal adder_1_internal_inst1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
  adder_1_internal adder_1_internal_inst2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1555
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_internal(output [31:0] sum,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 16-bit adder
  adder_16_internal adder_16_internal_inst1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16_internal adder_16_internal_inst2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_internal(output [15:0] sum,
                                output cout,
                                input [15:0] in1, in2,
                                input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  // 8-bit adder
  adder_8_internal adder_8_internal_inst1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8_internal adder_8_internal_inst2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_internal(output [7:0] sum,
                               output cout,
                               input [7:0] in1, in2,
                               input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  // 4-bit adder
  adder_4_internal adder_4_internal_inst1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4_internal adder_4_internal_inst2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_internal(output [3:0] sum,
                                output cout,
                                input [3:0] in1, in2,
                                input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  // 2-bit adder
  adder_2_internal adder_2_internal_inst1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2_internal adder_2_internal_inst2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_internal(output [1:0] sum,
                                output cout,
                                input [1:0] in1, in2,
                                input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  // 1-bit adder
  adder_1_internal adder_1_internal_inst1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
  adder_1_internal adder_1_internal_inst2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:118: error: Unknown module type: adder_1_internal\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119: error: Unknown module type: adder_1_internal\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_1_internal referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_internal(output [31:0] sum,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 16-bit adder
  adder_16_internal adder_16_internal_inst1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16_internal adder_16_internal_inst2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_internal(output [15:0] sum,
                                output cout,
                                input [15:0] in1, in2,
                                input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  // 8-bit adder
  adder_8_internal adder_8_internal_inst1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8_internal adder_8_internal_inst2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_internal(output [7:0] sum,
                               output cout,
                               input [7:0] in1, in2,
                               input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  // 4-bit adder
  adder_4_internal adder_4_internal_inst1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4_internal adder_4_internal_inst2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_internal(output [3:0] sum,
                                output cout,
                                input [3:0] in1, in2,
                                input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  // 2-bit adder
  adder_2_internal adder_2_internal_inst1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2_internal adder_2_internal_inst2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_internal(output [1:0] sum,
                                output cout,
                                input [1:0] in1, in2,
                                input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  // 1-bit adder
  adder_1_internal adder_1_internal_inst1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
  adder_1_internal adder_1_internal_inst2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_internal(output [0:0] sum,
                                output cout,
                                input [0:0] in1, in2,
                                input cin);

  wire [0:0] sum_internal;
  wire cout_internal;

  assign sum_internal = in1 ^ in2 ^ cin;
  assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = ~sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and
[[  849  4002   647 ...   262 29896   322]]
tensor([[  849,  4002,   647,  ...,   262, 29896,   322]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_internal(output [31:0] sum,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 16-bit adder
  adder_16_internal adder_16_internal_inst1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16_internal adder_16_internal_inst2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_internal(output [15:0] sum,
                                output cout,
                                input [15:0] in1, in2,
                                input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  // 8-bit adder
  adder_8_internal adder_8_internal_inst1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8_internal adder_8_internal_inst2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_internal(output [7:0] sum,
                               output cout,
                               input [7:0] in1, in2,
                               input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  // 4-bit adder
  adder_4_internal adder_4_internal_inst1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4_internal adder_4_internal_inst2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_internal(output [3:0] sum,
                                output cout,
                                input [3:0] in1, in2,
                                input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  // 2-bit adder
  adder_2_internal adder_2_internal_inst1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2_internal adder_2_internal_inst2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_internal(output [1:0] sum,
                                output cout,
                                input [1:0] in1, in2,
                                input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  // 1-bit adder
  adder_1_internal adder_1_internal_inst1(sum_internal[0], cout_internal, in1[0], in2[0], cin);
  adder_1_internal adder_1_internal_inst2(sum_internal[1], cout_internal, in1[1], in2[1], cout_internal);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_internal(output [0:0] sum,
                                output cout,
                                input [0:0] in1, in2,
                                input cin);

  wire [0:0] sum_internal;
  wire cout_internal;

  assign sum_internal = in1 ^ in2 ^ cin;
  assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

  assign sum = sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  // 32-bit adder
  adder_32_internal adder_32_internal_inst(sum_internal, cout_internal, in1, in2, cin);

  assign sum = ~sum_internal;
  assign cout = cout_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  63  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_1(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wires[31:16], sum[0], in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893  2658 29936    13  1678  8014 11196 29918 29893  2658 29936
     13    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29896 29898  2083 29918 29893  2658 29961 29896 29945 29901
  29900  1402 11196 29918 29893  2658 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29906 29898  2083 29918 29893  2658 29961 29941 29896 29901
  29896 29953  1402  2533 29961 29900  1402   297 29896 29961 29941 29896
  29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896 29953
   1402 11196 29918 29893  2658   416    13    13  1678  3566  2533   353
   2533 29918 29893  2658 29936    13  1678  3566 11196   353 11196 29918
  29893  2658 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893,  2658,
         29936,    13,  1678,  8014, 11196, 29918, 29893,  2658, 29936,    13,
            13,  1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29896, 29898,  2083, 29918, 29893,  2658, 29961,
         29896, 29945, 29901, 29900,  1402, 11196, 29918, 29893,  2658, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29906, 29898,  2083, 29918, 29893,  2658, 29961, 29941, 29896,
         29901, 29896, 29953,  1402,  2533, 29961, 29900,  1402,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,  2658,
           416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918, 29893,
          2658, 29936,    13,  1678,  3566, 11196,   353, 11196, 29918, 29893,
          2658, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  149
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_1(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wires[31:16], sum[0], in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_1(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wires[31:16], sum[0], in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_1(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_wires[15:8], sum[0], in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_1(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_wires[7:4], sum[0], in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893  2658 29936    13  1678  8014 11196 29918 29893  2658 29936
     13    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29896 29898  2083 29918 29893  2658 29961 29896 29945 29901
  29900  1402 11196 29918 29893  2658 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29906 29898  2083 29918 29893  2658 29961 29941 29896 29901
  29896 29953  1402  2533 29961 29900  1402   297 29896 29961 29941 29896
  29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896 29953
   1402 11196 29918 29893  2658   416    13    13  1678  3566  2533   353
   2533 29918 29893  2658 29936    13  1678  3566 11196   353 11196 29918
  29893  2658 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
   1678  8014   518 29896 29945 29901 29900 29962  2533 29918 29893  2658
  29936    13  1678  8014 11196 29918 29893  2658 29936    13    13  1678
    594   672 29918 29947   594   672 29918 29947 29918 29896 29898  2083
  29918 29893  2658 29961 29955 29901 29900  1402 11196 29918 29893  2658
  29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961 29955
  29901 29900  1402  4670   416    13  1678   594   672 29918 29947   594
    672 29918 29947 29918 29906 29898  2083 29918 29893  2658 29961 29896
  29945 29901 29947  1402  2533 29961 29900  1402   297 29896 29961 29896
  29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947  1402
  11196 29918 29893  2658   416    13    13  1678  3566  2533   353  2533
  29918 29893  2658 29936    13  1678  3566 11196   353 11196 29918 29893
   2658 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29955 29901 29900 29962  2533
  29918 29893  2658 29936    13  1678  8014 11196 29918 29893  2658 29936
     13    13  1678   594   672 29918 29946   594   672 29918 29946 29918
  29896 29898  2083 29918 29893  2658 29961 29941 29901 29900  1402 11196
  29918 29893  2658 29892   297 29896 29961 29941 29901 29900  1402   297
  29906 29961 29941 29901 29900  1402  4670   416    13  1678   594   672
  29918 29946   594   672 29918 29946 29918 29906 29898  2083 29918 29893
   2658 29961 29955 29901 29946  1402  2533 29961 29900  1402   297 29896
  29961 29955 29901 29946  1402   297 29906 29961 29955 29901 29946  1402
  11196 29918 29893  2658   416    13    13  1678  3566  2533   353  2533
  29918 29893  2658 29936    13  1678  3566 11196   353 11196 29918 29893
   2658 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893,  2658, 29936,
            13,  1678,  8014, 11196, 29918, 29893,  2658, 29936,    13,    13,
          1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29918, 29893,  2658, 29961, 29896,
         29945, 29901, 29900,  1402, 11196, 29918, 29893,  2658, 29892,   297,
         29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906, 29961,
         29896, 29945, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29906, 29898,  2083, 29918, 29893,  2658, 29961, 29941, 29896, 29901,
         29896, 29953,  1402,  2533, 29961, 29900,  1402,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,  2658,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918, 29893,  2658,
         29936,    13,  1678,  3566, 11196,   353, 11196, 29918, 29893,  2658,
         29936,    13,    13,   355,  5453,    13,    13,   458,  4002,   647,
           263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677,
         29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576,
         14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,   518,
         29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,
          8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,
          1576,  3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,
           278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,
           672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945, 29901,
         29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196, 29892,
            13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900, 29962,
           297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,
          4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945, 29901,
         29900, 29962,  2533, 29918, 29893,  2658, 29936,    13,  1678,  8014,
         11196, 29918, 29893,  2658, 29936,    13,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 29893,  2658, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
         29893,  2658, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,
           297, 29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,
          1678,   594,   672, 29918, 29947,   594,   672, 29918, 29947, 29918,
         29906, 29898,  2083, 29918, 29893,  2658, 29961, 29896, 29945, 29901,
         29947,  1402,  2533, 29961, 29900,  1402,   297, 29896, 29961, 29896,
         29945, 29901, 29947,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29947,  1402, 11196, 29918, 29893,  2658,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893,  2658, 29936,    13,  1678,
          3566, 11196,   353, 11196, 29918, 29893,  2658, 29936,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   385, 29871, 29947,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29947,  2586, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,
          4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871, 29947,
          2586,   995, 29892,   518, 29955, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29947, 29898,  4905,   518, 29955,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29955, 29901, 29900, 29962,
           297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,  1881,
          4670,   416,    13,    13,  1678,  8014,   518, 29955, 29901, 29900,
         29962,  2533, 29918, 29893,  2658, 29936,    13,  1678,  8014, 11196,
         29918, 29893,  2658, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
         29893,  2658, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893,
          2658, 29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297,
         29906, 29961, 29941, 29901, 29900,  1402,  4670,   416,    13,  1678,
           594,   672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29906,
         29898,  2083, 29918, 29893,  2658, 29961, 29955, 29901, 29946,  1402,
          2533, 29961, 29900,  1402,   297, 29896, 29961, 29955, 29901, 29946,
          1402,   297, 29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
         29893,  2658,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918, 29893,  2658, 29936,    13,  1678,  3566, 11196,   353, 11196,
         29918, 29893,  2658, 29936,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  712
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_1(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wires[31:16], sum[0], in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_1(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_wires[15:8], sum[0], in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_1(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_wires[7:4], sum[0], in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:53: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:54: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:53: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:54: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:53: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:54: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:53: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:54: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_1(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wires[31:16], sum[0], in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_1(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_wires[15:8], sum[0], in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_1(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_wires[7:4], sum[0], in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wires;
    wire cout_wires;

    adder_2 adder_2_1(sum_wires[1:0], cout_wires, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_wires[3:2], sum[0], in1[3:2], in2[3:2], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wires;
    wire cout_wires;

    adder_1 adder_1_1(sum_wires[0], cout_wires, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_wires[1], sum[0], in1[1], in2[1], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_wires;
    wire cout_wires;

    assign sum_wires = in1 ^ in2 ^ cin;
    assign cout_wires = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1483
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_1(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_wires[31:16], sum[0], in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_1(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_wires[15:8], sum[0], in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_1(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_wires[7:4], sum[0], in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wires;
    wire cout_wires;

    adder_2 adder_2_1(sum_wires[1:0], cout_wires, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_wires[3:2], sum[0], in1[3:2], in2[3:2], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wires;
    wire cout_wires;

    adder_1 adder_1_1(sum_wires[0], cout_wires, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_wires[1], sum[0], in1[1], in2[1], cout_wires);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_wires;
    wire cout_wires;

    assign sum_wires = in1 ^ in2 ^ cin;
    assign cout_wires = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_wires;
    assign cout = cout_wires;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  64  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918  7382
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  116
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918  7382
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13   355  5453    13    13
    458  4002   647   263 29871 29896 29953 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29896 29953  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29896
  29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29896 29953 29898
   4905   518 29896 29945 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29896 29945 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29896 29945 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29947   594   672 29918 29947 29918 29896 29898
   2083 29961 29955 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29955 29901 29900  1402   297 29906 29961 29955 29901 29900  1402
   4670   416    13  1678   594   672 29918 29947   594   672 29918 29947
  29918 29906 29898  2083 29961 29896 29945 29901 29947  1402 11196 29892
    297 29896 29961 29896 29945 29901 29947  1402   297 29906 29961 29896
  29945 29901 29947  1402 11196 29918  7382   416    13    13   355  5453
     13    13   458  4002   647   385 29871 29947 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29947  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29947
   2586   995 29892   518 29955 29901 29900 29962  2533 29892   322   263
   2323  8677 29899   449  1962  2586 29892 11196 29889    13   458  1576
   3883   881  3667   675   278 10970   313   262 29896   322   297 29906
  29897   322   278  4670  2586   304  4017   278  1962  2533   322 11196
   1819 29889    13  5453   594   672 29918 29947 29898  4905   518 29955
  29901 29900 29962  2533 29892    13   462   418  1962 11196 29892    13
    462   418  1881   518 29955 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   418  1881  4670   416    13    13  1678  8014
    518 29955 29901 29900 29962  2533 29918  7382 29936    13  1678  8014
  11196 29918  7382 29936    13    13  1678   594   672 29918 29946   594
    672 29918 29946 29918 29896 29898  2083 29961 29941 29901 29900  1402
  11196 29918  7382 29892   297 29896 29961 29941 29901 29900  1402   297
  29906 29961 29941 29901 29900  1402  4670   416    13  1678   594   672
  29918 29946   594   672 29918 29946 29918 29906 29898  2083 29961 29955
  29901 29946  1402 11196 29892   297 29896 29961 29955 29901 29946  1402
    297 29906 29961 29955 29901 29946  1402 11196 29918  7382   416    13
     13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   263, 29871, 29896,
         29953, 29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,
          1023, 29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896,
         29953, 29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13,  1678,  8014,   518, 29896, 29945, 29901, 29900, 29962,  2533,
         29918,  7382, 29936,    13,  1678,  8014, 11196, 29918,  7382, 29936,
            13,    13,  1678,   594,   672, 29918, 29947,   594,   672, 29918,
         29947, 29918, 29896, 29898,  2083, 29961, 29955, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29955, 29901, 29900,
          1402,   297, 29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,
            13,  1678,   594,   672, 29918, 29947,   594,   672, 29918, 29947,
         29918, 29906, 29898,  2083, 29961, 29896, 29945, 29901, 29947,  1402,
         11196, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,
          2083, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29961, 29955, 29901, 29946,  1402, 11196, 29892,   297, 29896, 29961,
         29955, 29901, 29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,
          1402, 11196, 29918,  7382,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  613
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum[3:2], cout, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum[1], cout, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1269
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum[3:2], cout, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum[1], cout, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.748648

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  65  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [32:0] sum_wire;

assign sum_wire = {in1, in2} + cin;
assign sum = sum_wire[31:0];
assign cout = sum_wire[32];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29906 29901 29900 29962  2533 29918
  22376 29936    13    13 16645  2533 29918 22376   353   426   262 29896
  29892   297 29906 29913   718  4670 29936    13 16645  2533   353  2533
  29918 22376 29961 29941 29896 29901 29900  1385    13 16645 11196   353
   2533 29918 22376 29961 29941 29906  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29906, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
            13, 16645,  2533, 29918, 22376,   353,   426,   262, 29896, 29892,
           297, 29906, 29913,   718,  4670, 29936,    13, 16645,  2533,   353,
          2533, 29918, 22376, 29961, 29941, 29896, 29901, 29900,  1385,    13,
         16645, 11196,   353,  2533, 29918, 22376, 29961, 29941, 29906,  1385,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  57
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [32:0] sum_wire;

assign sum_wire = {in1, in2} + cin;
assign sum = sum_wire[31:0];
assign cout = sum_wire[32];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  66  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29896 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29906 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29906 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);
    assign cout = cout_temp;
    assign sum = sum_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1381
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 ^ in2 ^ cin;
    assign cout_temp = (in1 & in2) | (in1 & cin) | (in2 & cin);
    assign cout = cout_temp;
    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.762124

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  67  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;

  assign s0 = in1[0] ^ in2[0];
  assign s1 = in1[1] ^ in2[1];
  assign s2 = in1[2] ^ in2[2];
  assign s3 = in1[3] ^ in2[3];
  assign s4 = in1[4] ^ in2[4];
  assign s5 = in1[5] ^ in2[5];
  assign s6 = in1[6] ^ in2[6];
  assign s7 = in1[7] ^ in2[7];
  assign s8 = in1[8] ^ in2[8];
  assign s9 = in1[9] ^ in2[9];
  assign s10 = in1[10] ^ in2[10];
  assign s11 = in1[11] ^ in2[11];
  assign s12 = in1[12] ^ in2[12];
  assign s13 = in1[13] ^ in2[13];
  assign s14 = in1[14] ^ in2[14];
  assign s15 = in1[15] ^ in2[15];
  assign s16 = in1[16] ^ in2[16];
  assign s17 = in1[17] ^ in2[17];
  assign s18 = in1[18] ^ in2[18];
  assign s19 = in1[19] ^ in2[19];
  assign s20 = in1[20] ^ in2[20];
  assign s21 = in1[21] ^ in2[21];
  assign s22 = in1[22] ^ in2[22];
  assign s23 = in1[23] ^ in2[23];
  assign s24 = in1[24] ^ in2[24];
  assign s25 = in1[25] ^ in2[25];
  assign s26 = in1[26] ^ in2[26];
  assign s27 = in1[27] ^ in2[27];
  assign s28 = in1[28] ^ in2[28];
  assign s29 = in1[29] ^ in2[29];
  assign s30 = in1[30] ^ in2[30];
  assign s31 = in1[31] ^ in2[31];

  assign sum[0] = s0 ^ cin;
  assign sum[1] = s1 ^ cin;
  assign sum[2] = s2 ^ cin;
  assign sum[3] = s3 ^ cin;
  assign sum[4] = s4 ^ cin;
  assign sum[5] = s5 ^ cin;
  assign sum[6] = s6 ^ cin;
  assign sum[7] = s7 ^ cin;
  assign sum[8] = s8 ^ cin;
  assign sum[9] = s9 ^ cin;
  assign sum[10] = s10 ^ cin;
  assign sum[11] = s11 ^ cin;
  assign sum[12] = s12 ^ cin;
  assign sum[13] = s13 ^ cin;
  assign sum[14] = s14 ^ cin;
  assign sum[15] = s15 ^ cin;
  assign sum[16] = s16 ^ cin;
  assign sum[17] = s17 ^ cin;
  assign sum[18] = s18 ^ cin;
  assign sum[19] = s19 ^ cin;
  assign sum[20] = s20 ^ cin;
  assign sum[21] = s21 ^ cin;
  assign sum[22] = s22 ^ cin;
  assign sum[23] = s23 ^ cin;
  assign sum[24] = s24 ^ cin;
  assign sum[25] = s25 ^ cin;
  assign sum[26] = s26 ^ cin;
  assign sum[27] = s27 ^ cin;
  assign sum[28] = s28 ^ cin;
  assign sum[29] = s29 ^ cin;
  assign sum[30] = s30 ^ cin;
  assign sum[31] = s31 ^ cin;

  assign cout = (s0 & s1 & s2 & s3 & s4 & s5 & s6 & s7 & s8 & s9 & s10 & s11 & s12 & s13 & s14 & s15 & s16 & s17 & s18 & s19 & s20 & s21 & s22 & s23 & s24 & s25 & s26 & s27 & s28 & s29 & s30 & s31);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1328
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;

  assign s0 = in1[0] ^ in2[0];
  assign s1 = in1[1] ^ in2[1];
  assign s2 = in1[2] ^ in2[2];
  assign s3 = in1[3] ^ in2[3];
  assign s4 = in1[4] ^ in2[4];
  assign s5 = in1[5] ^ in2[5];
  assign s6 = in1[6] ^ in2[6];
  assign s7 = in1[7] ^ in2[7];
  assign s8 = in1[8] ^ in2[8];
  assign s9 = in1[9] ^ in2[9];
  assign s10 = in1[10] ^ in2[10];
  assign s11 = in1[11] ^ in2[11];
  assign s12 = in1[12] ^ in2[12];
  assign s13 = in1[13] ^ in2[13];
  assign s14 = in1[14] ^ in2[14];
  assign s15 = in1[15] ^ in2[15];
  assign s16 = in1[16] ^ in2[16];
  assign s17 = in1[17] ^ in2[17];
  assign s18 = in1[18] ^ in2[18];
  assign s19 = in1[19] ^ in2[19];
  assign s20 = in1[20] ^ in2[20];
  assign s21 = in1[21] ^ in2[21];
  assign s22 = in1[22] ^ in2[22];
  assign s23 = in1[23] ^ in2[23];
  assign s24 = in1[24] ^ in2[24];
  assign s25 = in1[25] ^ in2[25];
  assign s26 = in1[26] ^ in2[26];
  assign s27 = in1[27] ^ in2[27];
  assign s28 = in1[28] ^ in2[28];
  assign s29 = in1[29] ^ in2[29];
  assign s30 = in1[30] ^ in2[30];
  assign s31 = in1[31] ^ in2[31];

  assign sum[0] = s0 ^ cin;
  assign sum[1] = s1 ^ cin;
  assign sum[2] = s2 ^ cin;
  assign sum[3] = s3 ^ cin;
  assign sum[4] = s4 ^ cin;
  assign sum[5] = s5 ^ cin;
  assign sum[6] = s6 ^ cin;
  assign sum[7] = s7 ^ cin;
  assign sum[8] = s8 ^ cin;
  assign sum[9] = s9 ^ cin;
  assign sum[10] = s10 ^ cin;
  assign sum[11] = s11 ^ cin;
  assign sum[12] = s12 ^ cin;
  assign sum[13] = s13 ^ cin;
  assign sum[14] = s14 ^ cin;
  assign sum[15] = s15 ^ cin;
  assign sum[16] = s16 ^ cin;
  assign sum[17] = s17 ^ cin;
  assign sum[18] = s18 ^ cin;
  assign sum[19] = s19 ^ cin;
  assign sum[20] = s20 ^ cin;
  assign sum[21] = s21 ^ cin;
  assign sum[22] = s22 ^ cin;
  assign sum[23] = s23 ^ cin;
  assign sum[24] = s24 ^ cin;
  assign sum[25] = s25 ^ cin;
  assign sum[26] = s26 ^ cin;
  assign sum[27] = s27 ^ cin;
  assign sum[28] = s28 ^ cin;
  assign sum[29] = s29 ^ cin;
  assign sum[30] = s30 ^ cin;
  assign sum[31] = s31 ^ cin;

  assign cout = (s0 & s1 & s2 & s3 & s4 & s5 & s6 & s7 & s8 & s9 & s10 & s11 & s12 & s13 & s14 & s15 & s16 & s17 & s18 & s19 & s20 & s21 & s22 & s23 & s24 & s25 & s26 & s27 & s28 & s29 & s30 & s31);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  68  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13,  1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7564,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7564, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    adder_16 adder_16_1(diff_internal[15:0], cout_internal, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_internal[31:16], cout, in1[31:16], ~in2[31:16], cout_internal);

    assign diff = diff_internal;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] product_internal;
    wire cout_internal;

    multiplier_16 multiplier_16_1(product_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign product = product_internal;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13  1678  8014 11196 29918  7564 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29918  7564 29961 29896 29945 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29906 29898
   2083 29918  7564 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7564   416    13    13
   1678  3566  2533   353  2533 29918  7564 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2923 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2923   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13
    462  9651  1962 11196 29892    13   462  9651  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462  9651
   1881  4670   416    13    13  1678  8014   518 29941 29896 29901 29900
  29962  2923 29918  7564 29936    13  1678  8014 11196 29918  7564 29936
     13    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29896 29898 12765 29918  7564 29961 29896 29945 29901 29900
   1402 11196 29918  7564 29892   297 29896 29961 29896 29945 29901 29900
   1402  3695   262 29906 29961 29896 29945 29901 29900  1402  4670   416
     13  1678   594   672 29918 29896 29953   594   672 29918 29896 29953
  29918 29906 29898 12765 29918  7564 29961 29941 29896 29901 29896 29953
   1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402
   3695   262 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918
   7564   416    13    13  1678  3566  2923   353  2923 29918  7564 29936
     13    13   355  5453    13    13   458  4002   647   263 29871 29941
  29906 29899  2966  6674  4926 29889    13   458  8439   526  1023 29871
  29941 29906  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29941 29906  2586   995 29892   518 29941
  29896 29901 29900 29962  3234 29892   322   263  2323  8677 29899   449
   1962  2586 29892 11196 29889    13   458  1576  3883   881  3667   675
    278 10970   313   262 29896   322   297 29906 29897   322   278  4670
   2586   304  4017   278  1962  3234   322 11196  1819 29889    13  5453
   6674  4926 29918 29941 29906 29898  4905   518 29941 29896 29901 29900
  29962  3234 29892    13   462  9651  1962 11196 29892    13   462  9651
   1881   518 29941 29896 29901 29900 29962   297 29896 29892   297 29906
  29892    13   462  9651  1881  4670   416    13    13  1678  8014   518
  29941 29896 29901 29900 29962  3234 29918  7564 29936    13  1678  8014
  11196 29918  7564 29936    13    13  1678  6674  4926 29918 29896 29953
   6674  4926 29918 29896 29953 29918 29896 29898  4704 29918  7564 29961
  29896 29945 29901 29900  1402 11196 29918  7564 29892   297 29896 29961
  29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900
   1402  4670   416    13  1678  6674  4926 29918 29896 29953  6674  4926
  29918 29896 29953 29918 29906 29898  4704 29918  7564 29961 29941 29896
  29901 29896 29953  1402 11196 29892   297 29896 29961 29941 29896 29901
  29896 29953  1402   297 29906 29961 29941 29896 29901 29896 29953  1402
  11196 29918  7564   416    13    13  1678  3566  3234   353  3234 29918
   7564 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
          1678,  8014, 11196, 29918,  7564, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7564,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7564, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2923,   322, 11196,  1819, 29889,    13,  5453,
         23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29892,    13,   462,  9651,  1962, 11196,
         29892,    13,   462,  9651,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,  9651,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29918,  7564, 29936,    13,  1678,  8014,
         11196, 29918,  7564, 29936,    13,    13,  1678,   594,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,
         12765, 29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,  3695,   262, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898, 12765, 29918,  7564,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297,
         29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,  3695,   262,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7564,   416,    13,    13,  1678,  3566,  2923,   353,  2923, 29918,
          7564, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  3234, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  3234,   322, 11196,  1819, 29889,    13,  5453,
          6674,  4926, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  3234, 29892,    13,   462,  9651,  1962, 11196,
         29892,    13,   462,  9651,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,  9651,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  3234, 29918,  7564, 29936,    13,  1678,  8014,
         11196, 29918,  7564, 29936,    13,    13,  1678,  6674,  4926, 29918,
         29896, 29953,  6674,  4926, 29918, 29896, 29953, 29918, 29896, 29898,
          4704, 29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678,  6674,  4926, 29918, 29896, 29953,  6674,  4926,
         29918, 29896, 29953, 29918, 29906, 29898,  4704, 29918,  7564, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7564,   416,
            13,    13,  1678,  3566,  3234,   353,  3234, 29918,  7564, 29936,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    adder_16 adder_16_1(diff_internal[15:0], cout_internal, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_internal[31:16], cout, in1[31:16], ~in2[31:16], cout_internal);

    assign diff = diff_internal;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] product_internal;
    wire cout_internal;

    multiplier_16 multiplier_16_1(product_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign product = product_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    adder_16 adder_16_1(diff_internal[15:0], cout_internal, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_internal[31:16], cout, in1[31:16], ~in2[31:16], cout_internal);

    assign diff = diff_internal;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] product_internal;
    wire cout_internal;

    multiplier_16 multiplier_16_1(product_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign product = product_internal;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] quotient_internal;
    wire cout_internal;

    divider_16 divider_16_1(quotient_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign quotient = quotient_internal;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] remainder_internal;
    wire cout_internal;

    modulus_16 modulus_16_1(remainder_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign remainder = remainder_internal;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shifted, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shifted and cout values.
module left_shift_32(output [31:0] shifted,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] shifted_internal;
    wire cout_internal;

    left_shift_16 left_shift_16_1(shifted_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(shifted_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign shifted = shifted_internal;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1547
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    adder_16 adder_16_1(diff_internal[15:0], cout_internal, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_internal[31:16], cout, in1[31:16], ~in2[31:16], cout_internal);

    assign diff = diff_internal;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] product_internal;
    wire cout_internal;

    multiplier_16 multiplier_16_1(product_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign product = product_internal;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] quotient_internal;
    wire cout_internal;

    divider_16 divider_16_1(quotient_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign quotient = quotient_internal;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] remainder_internal;
    wire cout_internal;

    modulus_16 modulus_16_1(remainder_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign remainder = remainder_internal;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shifted, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shifted and cout values.
module left_shift_32(output [31:0] shifted,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] shifted_internal;
    wire cout_internal;

    left_shift_16 left_shift_16_1(shifted_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(shifted_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign shifted = shifted_internal;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:70: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:71: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        divider_16 referenced 2 times.\n        left_shift_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    adder_16 adder_16_1(diff_internal[15:0], cout_internal, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_internal[31:16], cout, in1[31:16], ~in2[31:16], cout_internal);

    assign diff = diff_internal;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] product_internal;
    wire cout_internal;

    multiplier_16 multiplier_16_1(product_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign product = product_internal;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] quotient_internal;
    wire cout_internal;

    divider_16 divider_16_1(quotient_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign quotient = quotient_internal;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] remainder_internal;
    wire cout_internal;

    modulus_16 modulus_16_1(remainder_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign remainder = remainder_internal;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shifted, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shifted and cout values.
module left_shift_32(output [31:0] shifted,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] shifted_internal;
    wire cout_internal;

    left_shift_16 left_shift_16_1(shifted_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(shifted_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign shifted = shifted_internal;

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shifted, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shifted and cout values.
module right_shift_32(output [31:0] shifted,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

    wire [31:0] shifted_internal;
    wire cout_internal;

    right_shift_16 right_shift_16_1(shifted_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    right_shift_16 right_shift_16_2(shifted_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign shifted = shifted_internal;

endmodule

//Design a 32-bit signed magnitude comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparator, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparator and cout values.
module signed_magnitude_comparator_32(output [31:0] comparator,
                                              output cout,
                                              input [31:0] in1, in2,
                                              input cin);

    wire [31:0] comparator_internal;
    wire cout_internal;

    signed_magnitude_comparator_16 signed_magnitude_comparator_16_1
[[  849  4002   647 ... 29953 29918 29896]]
tensor([[  849,  4002,   647,  ..., 29953, 29918, 29896]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_internal;
    wire cout_internal;

    adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign sum = sum_internal;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] diff_internal;
    wire cout_internal;

    adder_16 adder_16_1(diff_internal[15:0], cout_internal, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_2(diff_internal[31:16], cout, in1[31:16], ~in2[31:16], cout_internal);

    assign diff = diff_internal;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] product_internal;
    wire cout_internal;

    multiplier_16 multiplier_16_1(product_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_2(product_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign product = product_internal;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] quotient_internal;
    wire cout_internal;

    divider_16 divider_16_1(quotient_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_2(quotient_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign quotient = quotient_internal;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

    wire [31:0] remainder_internal;
    wire cout_internal;

    modulus_16 modulus_16_1(remainder_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_2(remainder_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign remainder = remainder_internal;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shifted, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shifted and cout values.
module left_shift_32(output [31:0] shifted,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

    wire [31:0] shifted_internal;
    wire cout_internal;

    left_shift_16 left_shift_16_1(shifted_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    left_shift_16 left_shift_16_2(shifted_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign shifted = shifted_internal;

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shifted, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shifted and cout values.
module right_shift_32(output [31:0] shifted,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

    wire [31:0] shifted_internal;
    wire cout_internal;

    right_shift_16 right_shift_16_1(shifted_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
    right_shift_16 right_shift_16_2(shifted_internal[31:16], cout, in1[31:16], in2[31:16], cout_internal);

    assign shifted = shifted_internal;

endmodule

//Design a 32-bit signed magnitude comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparator, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparator and cout values.
module signed_magnitude_comparator_32(output [31:0] comparator,
                                              output cout,
                                              input [31:0] in1, in2,
                                              input cin);

    wire [31:0] comparator_internal;
    wire cout_internal;

    signed_magnitude_comparator_16 signed_magnitude_comparator_16_1
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:146: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  69  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;
  wire [31:0] c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32;

  assign s1 = in1[0] ^ in2[0] ^ cin;
  assign c1 = in1[0] & in2[0] | in1[0] & cin | in2[0] & cin;

  assign s2 = in1[1] ^ in2[1] ^ c1[0];
  assign c2 = in1[1] & in2[1] | in1[1] & c1[0] | in2[1] & c1[0];

  assign s3 = in1[2] ^ in2[2] ^ c2[0];
  assign c3 = in1[2] & in2[2] | in1[2] & c2[0] | in2[2] & c2[0];

  assign s4 = in1[3] ^ in2[3] ^ c3[0];
  assign c4 = in1[3] & in2[3] | in1[3] & c3[0] | in2[3] & c3[0];

  assign s5 = in1[4] ^ in2[4] ^ c4[0];
  assign c5 = in1[4] & in2[4] | in1[4] & c4[0] | in2[4] & c4[0];

  assign s6 = in1[5] ^ in2[5] ^ c5[0];
  assign c6 = in1[5] & in2[5] | in1[5] & c5[0] | in2[5] & c5[0];

  assign s7 = in1[6] ^ in2[6] ^ c6[0];
  assign c7 = in1[6] & in2[6] | in1[6] & c6[0] | in2[6] & c6[0];

  assign s8 = in1[7] ^ in2[7] ^ c7[0];
  assign c8 = in1[7] & in2[7] | in1[7] & c7[0] | in2[7] & c7[0];

  assign s9 = in1[8] ^ in2[8] ^ c8[0];
  assign c9 = in1[8] & in2[8] | in1[8] & c8[0] | in2[8] & c8[0];

  assign s10 = in1[9] ^ in2[9] ^ c9[0];
  assign c10 = in1[9] & in2[9] | in1[9] & c9[0] | in2[9] & c9[0];

  assign s11 = in1[10] ^ in2[10] ^ c10[0];
  assign c11 = in1[10] & in2[10] | in1[10] & c10[0] | in2[10] & c10[0];

  assign s12 = in1[11] ^ in2[11] ^ c11[0];
  assign c12 = in1[11] & in2[11] | in1[11] & c11[0] | in2[11] & c11[0];

  assign s13 = in1[12] ^ in2[12] ^ c12[0];
  assign c13 = in1[12] & in2[12] | in1[12] & c12[0] | in2[12] & c12[0];

  assign s14 = in1[13] ^ in2[13] ^ c13[0];
  assign c14 = in1[13] & in2[13] | in1[13] & c13[0] | in2[13] & c13[0];

  assign s15 = in1[14] ^ in2[14] ^ c14[0];
  assign c15 = in1[14] & in2[14] | in1[14] & c14[0] | in2[14] & c14[0];

  assign s16 = in1[15] ^ in2[15] ^ c15[0];
  assign c16 = in1[15] & in2[15] | in1[15] & c15[0] | in2[15] & c15[0];

  assign s17 = in1[16] ^ in2[16] ^ c16[0];
  assign c17 = in1[16] & in2[16] | in1[16] & c16[0] | in2[16] & c16[0];

  assign s18 = in1[17] ^ in2[17] ^ c17[0];
  assign c18 = in1[17] & in2[17] | in1[17] & c17[0] | in2[17] & c17[0];

  assign s19 = in1[18] ^ in2[18] ^ c18[0];
  assign c19 = in1[18] & in2[18] | in1[18] & c18[0] | in2[18] & c18[0];

  assign s20 = in1[19] ^ in2[19] ^ c19[0];
  assign c20 = in1[19] & in2[19] | in1[19] & c19[0] | in2[19] & c19[0];

  assign s21 = in1[20] ^ in2[20] ^ c20[0];
  assign c21 = in1[20] & in2[20] | in1[20] & c20[0] | in2[20] & c20[0];

  assign s22 = in1[21] ^ in2[21] ^ c21[0];
  assign c22 = in1[21] & in2[21] | in1[21] & c21[0] | in2[21] & c21[0];

  assign s23 = in1[22] ^ in2[22] ^ c22[0];
  assign c23 = in1[22] & in2[22] | in1[22] & c22[0] | in2[22] & c22[0];

  assign s24 = in1[23] ^ in2[23] ^ c23[0];
  assign c24 = in1[23] & in2[23] | in1[23] & c23[0] | in2[23] & c23[0];

  assign s25 = in1[24] ^ in2[24] ^ c24[0];
  assign c25 = in1[24] & in2[24] | in1[24] & c24[0] | in2[24] & c24[0];

  assign s26 = in
[[  849  4002   647 ... 29953   353   297]]
tensor([[    1,   849,  4002,  ..., 29953,   353,   297]], device='cuda:0')
Checking if done:
tokens generated:  2047
Calling isPromptComplete: 
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;
  wire [31:0] c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32;

  assign s1 = in1[0] ^ in2[0] ^ cin;
  assign c1 = in1[0] & in2[0] | in1[0] & cin | in2[0] & cin;

  assign s2 = in1[1] ^ in2[1] ^ c1[0];
  assign c2 = in1[1] & in2[1] | in1[1] & c1[0] | in2[1] & c1[0];

  assign s3 = in1[2] ^ in2[2] ^ c2[0];
  assign c3 = in1[2] & in2[2] | in1[2] & c2[0] | in2[2] & c2[0];

  assign s4 = in1[3] ^ in2[3] ^ c3[0];
  assign c4 = in1[3] & in2[3] | in1[3] & c3[0] | in2[3] & c3[0];

  assign s5 = in1[4] ^ in2[4] ^ c4[0];
  assign c5 = in1[4] & in2[4] | in1[4] & c4[0] | in2[4] & c4[0];

  assign s6 = in1[5] ^ in2[5] ^ c5[0];
  assign c6 = in1[5] & in2[5] | in1[5] & c5[0] | in2[5] & c5[0];

  assign s7 = in1[6] ^ in2[6] ^ c6[0];
  assign c7 = in1[6] & in2[6] | in1[6] & c6[0] | in2[6] & c6[0];

  assign s8 = in1[7] ^ in2[7] ^ c7[0];
  assign c8 = in1[7] & in2[7] | in1[7] & c7[0] | in2[7] & c7[0];

  assign s9 = in1[8] ^ in2[8] ^ c8[0];
  assign c9 = in1[8] & in2[8] | in1[8] & c8[0] | in2[8] & c8[0];

  assign s10 = in1[9] ^ in2[9] ^ c9[0];
  assign c10 = in1[9] & in2[9] | in1[9] & c9[0] | in2[9] & c9[0];

  assign s11 = in1[10] ^ in2[10] ^ c10[0];
  assign c11 = in1[10] & in2[10] | in1[10] & c10[0] | in2[10] & c10[0];

  assign s12 = in1[11] ^ in2[11] ^ c11[0];
  assign c12 = in1[11] & in2[11] | in1[11] & c11[0] | in2[11] & c11[0];

  assign s13 = in1[12] ^ in2[12] ^ c12[0];
  assign c13 = in1[12] & in2[12] | in1[12] & c12[0] | in2[12] & c12[0];

  assign s14 = in1[13] ^ in2[13] ^ c13[0];
  assign c14 = in1[13] & in2[13] | in1[13] & c13[0] | in2[13] & c13[0];

  assign s15 = in1[14] ^ in2[14] ^ c14[0];
  assign c15 = in1[14] & in2[14] | in1[14] & c14[0] | in2[14] & c14[0];

  assign s16 = in1[15] ^ in2[15] ^ c15[0];
  assign c16 = in1[15] & in2[15] | in1[15] & c15[0] | in2[15] & c15[0];

  assign s17 = in1[16] ^ in2[16] ^ c16[0];
  assign c17 = in1[16] & in2[16] | in1[16] & c16[0] | in2[16] & c16[0];

  assign s18 = in1[17] ^ in2[17] ^ c17[0];
  assign c18 = in1[17] & in2[17] | in1[17] & c17[0] | in2[17] & c17[0];

  assign s19 = in1[18] ^ in2[18] ^ c18[0];
  assign c19 = in1[18] & in2[18] | in1[18] & c18[0] | in2[18] & c18[0];

  assign s20 = in1[19] ^ in2[19] ^ c19[0];
  assign c20 = in1[19] & in2[19] | in1[19] & c19[0] | in2[19] & c19[0];

  assign s21 = in1[20] ^ in2[20] ^ c20[0];
  assign c21 = in1[20] & in2[20] | in1[20] & c20[0] | in2[20] & c20[0];

  assign s22 = in1[21] ^ in2[21] ^ c21[0];
  assign c22 = in1[21] & in2[21] | in1[21] & c21[0] | in2[21] & c21[0];

  assign s23 = in1[22] ^ in2[22] ^ c22[0];
  assign c23 = in1[22] & in2[22] | in1[22] & c22[0] | in2[22] & c22[0];

  assign s24 = in1[23] ^ in2[23] ^ c23[0];
  assign c24 = in1[23] & in2[23] | in1[23] & c23[0] | in2[23] & c23[0];

  assign s25 = in1[24] ^ in2[24] ^ c24[0];
  assign c25 = in1[24] & in2[24] | in1[24] & c24[0] | in2[24] & c24[0];

  assign s26 = in1
[[  849  4002   647 ...   353   297 29896]]
tensor([[  849,  4002,   647,  ...,   353,   297, 29896]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;
  wire [31:0] c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32;

  assign s1 = in1[0] ^ in2[0] ^ cin;
  assign c1 = in1[0] & in2[0] | in1[0] & cin | in2[0] & cin;

  assign s2 = in1[1] ^ in2[1] ^ c1[0];
  assign c2 = in1[1] & in2[1] | in1[1] & c1[0] | in2[1] & c1[0];

  assign s3 = in1[2] ^ in2[2] ^ c2[0];
  assign c3 = in1[2] & in2[2] | in1[2] & c2[0] | in2[2] & c2[0];

  assign s4 = in1[3] ^ in2[3] ^ c3[0];
  assign c4 = in1[3] & in2[3] | in1[3] & c3[0] | in2[3] & c3[0];

  assign s5 = in1[4] ^ in2[4] ^ c4[0];
  assign c5 = in1[4] & in2[4] | in1[4] & c4[0] | in2[4] & c4[0];

  assign s6 = in1[5] ^ in2[5] ^ c5[0];
  assign c6 = in1[5] & in2[5] | in1[5] & c5[0] | in2[5] & c5[0];

  assign s7 = in1[6] ^ in2[6] ^ c6[0];
  assign c7 = in1[6] & in2[6] | in1[6] & c6[0] | in2[6] & c6[0];

  assign s8 = in1[7] ^ in2[7] ^ c7[0];
  assign c8 = in1[7] & in2[7] | in1[7] & c7[0] | in2[7] & c7[0];

  assign s9 = in1[8] ^ in2[8] ^ c8[0];
  assign c9 = in1[8] & in2[8] | in1[8] & c8[0] | in2[8] & c8[0];

  assign s10 = in1[9] ^ in2[9] ^ c9[0];
  assign c10 = in1[9] & in2[9] | in1[9] & c9[0] | in2[9] & c9[0];

  assign s11 = in1[10] ^ in2[10] ^ c10[0];
  assign c11 = in1[10] & in2[10] | in1[10] & c10[0] | in2[10] & c10[0];

  assign s12 = in1[11] ^ in2[11] ^ c11[0];
  assign c12 = in1[11] & in2[11] | in1[11] & c11[0] | in2[11] & c11[0];

  assign s13 = in1[12] ^ in2[12] ^ c12[0];
  assign c13 = in1[12] & in2[12] | in1[12] & c12[0] | in2[12] & c12[0];

  assign s14 = in1[13] ^ in2[13] ^ c13[0];
  assign c14 = in1[13] & in2[13] | in1[13] & c13[0] | in2[13] & c13[0];

  assign s15 = in1[14] ^ in2[14] ^ c14[0];
  assign c15 = in1[14] & in2[14] | in1[14] & c14[0] | in2[14] & c14[0];

  assign s16 = in1[15] ^ in2[15] ^ c15[0];
  assign c16 = in1[15] & in2[15] | in1[15] & c15[0] | in2[15] & c15[0];

  assign s17 = in1[16] ^ in2[16] ^ c16[0];
  assign c17 = in1[16] & in2[16] | in1[16] & c16[0] | in2[16] & c16[0];

  assign s18 = in1[17] ^ in2[17] ^ c17[0];
  assign c18 = in1[17] & in2[17] | in1[17] & c17[0] | in2[17] & c17[0];

  assign s19 = in1[18] ^ in2[18] ^ c18[0];
  assign c19 = in1[18] & in2[18] | in1[18] & c18[0] | in2[18] & c18[0];

  assign s20 = in1[19] ^ in2[19] ^ c19[0];
  assign c20 = in1[19] & in2[19] | in1[19] & c19[0] | in2[19] & c19[0];

  assign s21 = in1[20] ^ in2[20] ^ c20[0];
  assign c21 = in1[20] & in2[20] | in1[20] & c20[0] | in2[20] & c20[0];

  assign s22 = in1[21] ^ in2[21] ^ c21[0];
  assign c22 = in1[21] & in2[21] | in1[21] & c21[0] | in2[21] & c21[0];

  assign s23 = in1[22] ^ in2[22] ^ c22[0];
  assign c23 = in1[22] & in2[22] | in1[22] & c22[0] | in2[22] & c22[0];

  assign s24 = in1[23] ^ in2[23] ^ c23[0];
  assign c24 = in1[23] & in2[23] | in1[23] & c23[0] | in2[23] & c23[0];

  assign s25 = in1[24] ^ in2[24] ^ c24[0];
  assign c25 = in1[24] & in2[24] | in1[24] & c24[0] | in2[24] & c24[0];

  assign s26 = in1
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:88: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  70  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1506
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:18: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:19: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:20: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:22: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:23: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:24: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:25: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:26: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:27: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:28: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:29: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:35: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:36: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:37: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:38: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:39: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:40: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:41: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:42: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:43: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:44: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:45: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:46: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                          output cout,
                          input in1, in2,
                          input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    subtractor_32_bit subtractor_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    subtractor_32_bit subtractor_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    subtractor_32_bit subtractor_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    subtractor_32_bit subtractor_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    subtract
[[  849  4002   647 ...    13  1678 23197]]
tensor([[  849,  4002,   647,  ...,    13,  1678, 23197]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    adder_32_bit adder_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    adder_32_bit adder_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    adder_32_bit adder_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    adder_32_bit adder_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    adder_32_bit adder_32_bit_4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    adder_32_bit adder_32_bit_5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    adder_32_bit adder_32_bit_6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    adder_32_bit adder_32_bit_7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    adder_32_bit adder_32_bit_8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    adder_32_bit adder_32_bit_9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    adder_32_bit adder_32_bit_10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    adder_32_bit adder_32_bit_11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    adder_32_bit adder_32_bit_12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    adder_32_bit adder_32_bit_13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    adder_32_bit adder_32_bit_14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    adder_32_bit adder_32_bit_15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    adder_32_bit adder_32_bit_16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    adder_32_bit adder_32_bit_17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    adder_32_bit adder_32_bit_18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    adder_32_bit adder_32_bit_19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    adder_32_bit adder_32_bit_20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    adder_32_bit adder_32_bit_21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    adder_32_bit adder_32_bit_22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    adder_32_bit adder_32_bit_23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    adder_32_bit adder_32_bit_24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    adder_32_bit adder_32_bit_25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    adder_32_bit adder_32_bit_26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    adder_32_bit adder_32_bit_27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    adder_32_bit adder_32_bit_28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    adder_32_bit adder_32_bit_29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    adder_32_bit adder_32_bit_30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    adder_32_bit adder_32_bit_31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output sum,
                          output cout,
                          input in1, in2,
                          input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    subtractor_32_bit subtractor_32_bit_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    subtractor_32_bit subtractor_32_bit_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    subtractor_32_bit subtractor_32_bit_2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    subtractor_32_bit subtractor_32_bit_3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    subtract
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:84: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  71  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_temp = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);
    assign cout = cout_temp;

    assign sum = sum_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1402
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign cout_temp = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);
    assign cout = cout_temp;

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.74939

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  72  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13 29871  3566 11196
    353 11196 29918  7382 29936    13    13 29871   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382
  29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13 29871   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7382 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7382 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7382   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13, 29871,  3566,
         11196,   353, 11196, 29918,  7382, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918,  7382,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13 29871  3566 11196
    353 11196 29918  7382 29936    13    13 29871   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382
  29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13 29871   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7382 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7382 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7382   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518 29896 29945 29901 29900 29962
   2533 29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13
     13 29871  3566  2533   353  2533 29918  7382 29936    13 29871  3566
  11196   353 11196 29918  7382 29936    13    13 29871   594   672 29918
  29947   594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961
  29955 29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13 29871   594   672 29918 29947   594   672 29918 29947 29918 29906
  29898  2083 29918  7382 29961 29896 29945 29901 29947  1402 11196 29918
   7382 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918  7382   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   385
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   268  1962 11196
  29892    13   462   268  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   268  1881  4670   416    13    13
  29871  8014   518 29955 29901 29900 29962  2533 29918  7382 29936    13
  29871  8014 11196 29918  7382 29936    13    13 29871  3566  2533   353
   2533 29918  7382 29936    13 29871  3566 11196   353 11196 29918  7382
  29936    13    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29941 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13 29871   594   672 29918
  29946   594   672 29918 29946 29918 29906 29898  2083 29918  7382 29961
  29955 29901 29946  1402 11196 29918  7382 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
   7382   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13, 29871,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,  7382,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 29871,
          8014, 11196, 29918,  7382, 29936,    13,    13, 29871,  3566,  2533,
           353,  2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,   353,
         11196, 29918,  7382, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   268,  1962, 11196, 29892,    13,   462,   268,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   268,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,
          2083, 29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918,  7382,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
  assign sum_temp[1] = in1[1] ^ in2[1] ^ cin;
  assign cout_temp = (in1[0] & in2[0]) | (in1[1] & in2[1]) | (cin & (in1[0] | in2[0]));

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
  assign cout_temp = in1[0] & in2[0] | cin & (in1[0] | in2[0]);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1476
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_16 adder_16_1(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_8 adder_8_1(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_4 adder_4_1(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  adder_2 adder_2_1(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
  assign sum_temp[1] = in1[1] ^ in2[1] ^ cin;
  assign cout_temp = (in1[0] & in2[0]) | (in1[1] & in2[1]) | (cin & (in1[0] | in2[0]));

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
  assign cout_temp = in1[0] & in2[0] | cin & (in1[0] | in2[0]);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  73  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

  assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

  assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13 29871  8014 11196 29918  7382 29936
     13    13 29871   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13 29871   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13 29871  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   418  1881  4670   416
     13    13 29871  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13 29871  8014 11196 29918  7382 29936    13    13 29871   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13 29871  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 29871,  8014,
         11196, 29918,  7382, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 29871,  8014,
         11196, 29918,  7382, 29936,    13,    13, 29871,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

  assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

  assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

  assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] sum_temp;
  wire cout_temp;

  assign sum_temp = in1 + in2 + cin;
  assign cout = sum_temp[1];

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1346
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

  assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] sum_temp;
  wire cout_temp;

  assign sum_temp = in1 + in2 + cin;
  assign cout = sum_temp[1];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  74  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp;
  wire [32:0] temp2;
  wire [32:0] temp3;
  wire [32:0] temp4;
  wire [32:0] temp5;
  wire [32:0] temp6;
  wire [32:0] temp7;
  wire [32:0] temp8;
  wire [32:0] temp9;
  wire [32:0] temp10;
  wire [32:0] temp11;
  wire [32:0] temp12;
  wire [32:0] temp13;
  wire [32:0] temp14;
  wire [32:0] temp15;
  wire [32:0] temp16;
  wire [32:0] temp17;
  wire [32:0] temp18;
  wire [32:0] temp19;
  wire [32:0] temp20;
  wire [32:0] temp21;
  wire [32:0] temp22;
  wire [32:0] temp23;
  wire [32:0] temp24;
  wire [32:0] temp25;
  wire [32:0] temp26;
  wire [32:0] temp27;
  wire [32:0] temp28;
  wire [32:0] temp29;
  wire [32:0] temp30;
  wire [32:0] temp31;
  wire [32:0] temp32;
  wire [32:0] temp33;
  wire [32:0] temp34;
  wire [32:0] temp35;
  wire [32:0] temp36;
  wire [32:0] temp37;
  wire [32:0] temp38;
  wire [32:0] temp39;
  wire [32:0] temp40;
  wire [32:0] temp41;
  wire [32:0] temp42;
  wire [32:0] temp43;
  wire [32:0] temp44;
  wire [32:0] temp45;
  wire [32:0] temp46;
  wire [32:0] temp47;
  wire [32:0] temp48;
  wire [32:0] temp49;
  wire [32:0] temp50;
  wire [32:0] temp51;
  wire [32:0] temp52;
  wire [32:0] temp53;
  wire [32:0] temp54;
  wire [32:0] temp55;
  wire [32:0] temp56;
  wire [32:0] temp57;
  wire [32:0] temp58;
  wire [32:0] temp59;
  wire [32:0] temp60;
  wire [32:0] temp61;
  wire [32:0] temp62;
  wire [32:0] temp63;
  wire [32:0] temp64;
  wire [32:0] temp65;
  wire [32:0] temp66;
  wire [32:0] temp67;
  wire [32:0] temp68;
  wire [32:0] temp69;
  wire [32:0] temp70;
  wire [32:0] temp71;
  wire [32:0] temp72;
  wire [32:0] temp73;
  wire [32:0] temp74;
  wire [32:0] temp75;
  wire [32:0] temp76;
  wire [32:0] temp77;
  wire [32:0] temp78;
  wire [32:0] temp79;
  wire [32:0] temp80;
  wire [32:0] temp81;
  wire [32:0] temp82;
  wire [32:0] temp83;
  wire [32:0] temp84;
  wire [32:0] temp85;
  wire [32:0] temp86;
  wire [32:0] temp87;
  wire [32:0] temp88;
  wire [32:0] temp89;
  wire [32:0] temp90;
  wire [32:0] temp91;
  wire [32:0] temp92;
  wire [32:0] temp93;
  wire [32:0] temp94;
  wire [32:0] temp95;
  wire [32:0] temp96;
  wire [32:0] temp97;
  wire [32:0] temp98;
  wire [32:0] temp99;
  wire [32:0] temp100;
  wire [32:0] temp101;
  wire [32:0] temp102;
  wire [32:0] temp103;
  wire [32:0] temp104;
  wire [32:0] temp105;
  wire [32:0] temp106;
  wire [32:0] temp107;
  wire [32:0] temp108;
  wire [32:0] temp109;
  wire [32:0] temp110;
  wire [32:0] temp111;
  wire [32:0] temp112;
  wire [32:0] temp113;
  wire [32:0] temp114;
  wire [32:0] temp115;
  wire [32:0] temp116;
  wire [32:0] temp117;
  wire [32:0] temp118;
  wire [32:0] temp119;
  wire [32:0] temp120;
  wire [32:0] temp121;
  wire [32:0] temp122;
  wire [32:0] temp123;
  wire [32:0] temp124;
  wire [32:0] temp125;
  wire [32:0] temp126;
  wire [32:0] temp127;
  wire [32:0] temp128;
  wire [32:0] temp129;
  wire [32:0] temp130;
  wire [32:0] temp131;
  wire [32:0] temp132;
  wire [32:0] temp133;
  wire [32:0] temp134;
  wire [32:0] temp135;
  wire [32:0] temp136;
  wire [32:0] temp137;
  wire [32:0] temp138;
  wire [32:0] temp139;
  wire [32:0] temp140;
  wire [32:0] temp141;
  wire [32:0] temp142;
  wire [32:0] temp143;
  wire [32:0] temp144;
  wire [32:0] temp145;
  wire [32:0] temp146;
  wire [32:0] temp147;
  wire [32:0] temp148;
  wire [32:0] temp149;
  wire [32:0] temp150;
  wire [32:0] temp151;
  wire [32:0] temp152;
  wire [32:0] temp153;
  wire [32:0] temp154;
[[  849  4002   647 ... 29945 29946 29936]]
tensor([[    1,   849,  4002,  ..., 29945, 29946, 29936]], device='cuda:0')
Checking if done:
tokens generated:  2047
Calling isPromptComplete: 
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp;
  wire [32:0] temp2;
  wire [32:0] temp3;
  wire [32:0] temp4;
  wire [32:0] temp5;
  wire [32:0] temp6;
  wire [32:0] temp7;
  wire [32:0] temp8;
  wire [32:0] temp9;
  wire [32:0] temp10;
  wire [32:0] temp11;
  wire [32:0] temp12;
  wire [32:0] temp13;
  wire [32:0] temp14;
  wire [32:0] temp15;
  wire [32:0] temp16;
  wire [32:0] temp17;
  wire [32:0] temp18;
  wire [32:0] temp19;
  wire [32:0] temp20;
  wire [32:0] temp21;
  wire [32:0] temp22;
  wire [32:0] temp23;
  wire [32:0] temp24;
  wire [32:0] temp25;
  wire [32:0] temp26;
  wire [32:0] temp27;
  wire [32:0] temp28;
  wire [32:0] temp29;
  wire [32:0] temp30;
  wire [32:0] temp31;
  wire [32:0] temp32;
  wire [32:0] temp33;
  wire [32:0] temp34;
  wire [32:0] temp35;
  wire [32:0] temp36;
  wire [32:0] temp37;
  wire [32:0] temp38;
  wire [32:0] temp39;
  wire [32:0] temp40;
  wire [32:0] temp41;
  wire [32:0] temp42;
  wire [32:0] temp43;
  wire [32:0] temp44;
  wire [32:0] temp45;
  wire [32:0] temp46;
  wire [32:0] temp47;
  wire [32:0] temp48;
  wire [32:0] temp49;
  wire [32:0] temp50;
  wire [32:0] temp51;
  wire [32:0] temp52;
  wire [32:0] temp53;
  wire [32:0] temp54;
  wire [32:0] temp55;
  wire [32:0] temp56;
  wire [32:0] temp57;
  wire [32:0] temp58;
  wire [32:0] temp59;
  wire [32:0] temp60;
  wire [32:0] temp61;
  wire [32:0] temp62;
  wire [32:0] temp63;
  wire [32:0] temp64;
  wire [32:0] temp65;
  wire [32:0] temp66;
  wire [32:0] temp67;
  wire [32:0] temp68;
  wire [32:0] temp69;
  wire [32:0] temp70;
  wire [32:0] temp71;
  wire [32:0] temp72;
  wire [32:0] temp73;
  wire [32:0] temp74;
  wire [32:0] temp75;
  wire [32:0] temp76;
  wire [32:0] temp77;
  wire [32:0] temp78;
  wire [32:0] temp79;
  wire [32:0] temp80;
  wire [32:0] temp81;
  wire [32:0] temp82;
  wire [32:0] temp83;
  wire [32:0] temp84;
  wire [32:0] temp85;
  wire [32:0] temp86;
  wire [32:0] temp87;
  wire [32:0] temp88;
  wire [32:0] temp89;
  wire [32:0] temp90;
  wire [32:0] temp91;
  wire [32:0] temp92;
  wire [32:0] temp93;
  wire [32:0] temp94;
  wire [32:0] temp95;
  wire [32:0] temp96;
  wire [32:0] temp97;
  wire [32:0] temp98;
  wire [32:0] temp99;
  wire [32:0] temp100;
  wire [32:0] temp101;
  wire [32:0] temp102;
  wire [32:0] temp103;
  wire [32:0] temp104;
  wire [32:0] temp105;
  wire [32:0] temp106;
  wire [32:0] temp107;
  wire [32:0] temp108;
  wire [32:0] temp109;
  wire [32:0] temp110;
  wire [32:0] temp111;
  wire [32:0] temp112;
  wire [32:0] temp113;
  wire [32:0] temp114;
  wire [32:0] temp115;
  wire [32:0] temp116;
  wire [32:0] temp117;
  wire [32:0] temp118;
  wire [32:0] temp119;
  wire [32:0] temp120;
  wire [32:0] temp121;
  wire [32:0] temp122;
  wire [32:0] temp123;
  wire [32:0] temp124;
  wire [32:0] temp125;
  wire [32:0] temp126;
  wire [32:0] temp127;
  wire [32:0] temp128;
  wire [32:0] temp129;
  wire [32:0] temp130;
  wire [32:0] temp131;
  wire [32:0] temp132;
  wire [32:0] temp133;
  wire [32:0] temp134;
  wire [32:0] temp135;
  wire [32:0] temp136;
  wire [32:0] temp137;
  wire [32:0] temp138;
  wire [32:0] temp139;
  wire [32:0] temp140;
  wire [32:0] temp141;
  wire [32:0] temp142;
  wire [32:0] temp143;
  wire [32:0] temp144;
  wire [32:0] temp145;
  wire [32:0] temp146;
  wire [32:0] temp147;
  wire [32:0] temp148;
  wire [32:0] temp149;
  wire [32:0] temp150;
  wire [32:0] temp151;
  wire [32:0] temp152;
  wire [32:0] temp153;
  wire [32:0] temp154;

[[  849  4002   647 ... 29946 29936    13]]
tensor([[  849,  4002,   647,  ..., 29946, 29936,    13]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp;
  wire [32:0] temp2;
  wire [32:0] temp3;
  wire [32:0] temp4;
  wire [32:0] temp5;
  wire [32:0] temp6;
  wire [32:0] temp7;
  wire [32:0] temp8;
  wire [32:0] temp9;
  wire [32:0] temp10;
  wire [32:0] temp11;
  wire [32:0] temp12;
  wire [32:0] temp13;
  wire [32:0] temp14;
  wire [32:0] temp15;
  wire [32:0] temp16;
  wire [32:0] temp17;
  wire [32:0] temp18;
  wire [32:0] temp19;
  wire [32:0] temp20;
  wire [32:0] temp21;
  wire [32:0] temp22;
  wire [32:0] temp23;
  wire [32:0] temp24;
  wire [32:0] temp25;
  wire [32:0] temp26;
  wire [32:0] temp27;
  wire [32:0] temp28;
  wire [32:0] temp29;
  wire [32:0] temp30;
  wire [32:0] temp31;
  wire [32:0] temp32;
  wire [32:0] temp33;
  wire [32:0] temp34;
  wire [32:0] temp35;
  wire [32:0] temp36;
  wire [32:0] temp37;
  wire [32:0] temp38;
  wire [32:0] temp39;
  wire [32:0] temp40;
  wire [32:0] temp41;
  wire [32:0] temp42;
  wire [32:0] temp43;
  wire [32:0] temp44;
  wire [32:0] temp45;
  wire [32:0] temp46;
  wire [32:0] temp47;
  wire [32:0] temp48;
  wire [32:0] temp49;
  wire [32:0] temp50;
  wire [32:0] temp51;
  wire [32:0] temp52;
  wire [32:0] temp53;
  wire [32:0] temp54;
  wire [32:0] temp55;
  wire [32:0] temp56;
  wire [32:0] temp57;
  wire [32:0] temp58;
  wire [32:0] temp59;
  wire [32:0] temp60;
  wire [32:0] temp61;
  wire [32:0] temp62;
  wire [32:0] temp63;
  wire [32:0] temp64;
  wire [32:0] temp65;
  wire [32:0] temp66;
  wire [32:0] temp67;
  wire [32:0] temp68;
  wire [32:0] temp69;
  wire [32:0] temp70;
  wire [32:0] temp71;
  wire [32:0] temp72;
  wire [32:0] temp73;
  wire [32:0] temp74;
  wire [32:0] temp75;
  wire [32:0] temp76;
  wire [32:0] temp77;
  wire [32:0] temp78;
  wire [32:0] temp79;
  wire [32:0] temp80;
  wire [32:0] temp81;
  wire [32:0] temp82;
  wire [32:0] temp83;
  wire [32:0] temp84;
  wire [32:0] temp85;
  wire [32:0] temp86;
  wire [32:0] temp87;
  wire [32:0] temp88;
  wire [32:0] temp89;
  wire [32:0] temp90;
  wire [32:0] temp91;
  wire [32:0] temp92;
  wire [32:0] temp93;
  wire [32:0] temp94;
  wire [32:0] temp95;
  wire [32:0] temp96;
  wire [32:0] temp97;
  wire [32:0] temp98;
  wire [32:0] temp99;
  wire [32:0] temp100;
  wire [32:0] temp101;
  wire [32:0] temp102;
  wire [32:0] temp103;
  wire [32:0] temp104;
  wire [32:0] temp105;
  wire [32:0] temp106;
  wire [32:0] temp107;
  wire [32:0] temp108;
  wire [32:0] temp109;
  wire [32:0] temp110;
  wire [32:0] temp111;
  wire [32:0] temp112;
  wire [32:0] temp113;
  wire [32:0] temp114;
  wire [32:0] temp115;
  wire [32:0] temp116;
  wire [32:0] temp117;
  wire [32:0] temp118;
  wire [32:0] temp119;
  wire [32:0] temp120;
  wire [32:0] temp121;
  wire [32:0] temp122;
  wire [32:0] temp123;
  wire [32:0] temp124;
  wire [32:0] temp125;
  wire [32:0] temp126;
  wire [32:0] temp127;
  wire [32:0] temp128;
  wire [32:0] temp129;
  wire [32:0] temp130;
  wire [32:0] temp131;
  wire [32:0] temp132;
  wire [32:0] temp133;
  wire [32:0] temp134;
  wire [32:0] temp135;
  wire [32:0] temp136;
  wire [32:0] temp137;
  wire [32:0] temp138;
  wire [32:0] temp139;
  wire [32:0] temp140;
  wire [32:0] temp141;
  wire [32:0] temp142;
  wire [32:0] temp143;
  wire [32:0] temp144;
  wire [32:0] temp145;
  wire [32:0] temp146;
  wire [32:0] temp147;
  wire [32:0] temp148;
  wire [32:0] temp149;
  wire [32:0] temp150;
  wire [32:0] temp151;
  wire [32:0] temp152;
  wire [32:0] temp153;
  wire [32:0] temp154;

LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:164: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  75  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  subtractor_16 subtractor_16_0(diff_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign diff = diff_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign product = product_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2923 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2923   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13
    462  9651  1962 11196 29892    13   462  9651  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462  9651
   1881  4670   416    13    13 29871  8014   518 29941 29896 29901 29900
  29962  2923 29918 29893 29936    13 29871  8014 11196 29918 29893 29936
     13    13 29871 23197   272 29918 29896 29953 23197   272 29918 29896
  29953 29918 29900 29898 12765 29918 29893 29961 29896 29945 29901 29900
   1402 11196 29918 29893 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416    13
  29871 23197   272 29918 29896 29953 23197   272 29918 29896 29953 29918
  29896 29898 12765 29918 29893 29961 29941 29896 29901 29896 29953  1402
  11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918 29893   416
     13    13 29871  3566  2923   353  2923 29918 29893 29936    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462  9651  1962 11196 29892    13   462  9651  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462  9651  1881  4670   416    13    13 29871  8014   518 29941 29896
  29901 29900 29962  3234 29918 29893 29936    13 29871  8014 11196 29918
  29893 29936    13    13 29871  6674  4926 29918 29896 29953  6674  4926
  29918 29896 29953 29918 29900 29898  4704 29918 29893 29961 29896 29945
  29901 29900  1402 11196 29918 29893 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13 29871  6674  4926 29918 29896 29953  6674  4926 29918 29896
  29953 29918 29896 29898  4704 29918 29893 29961 29941 29896 29901 29896
  29953  1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953
   1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918
  29893   416    13    13 29871  3566  3234   353  3234 29918 29893 29936
     13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2923,   322, 11196,  1819, 29889,    13,  5453,
         23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29892,    13,   462,  9651,  1962, 11196,
         29892,    13,   462,  9651,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,  9651,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871, 23197,   272, 29918,
         29896, 29953, 23197,   272, 29918, 29896, 29953, 29918, 29900, 29898,
         12765, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871, 23197,   272, 29918, 29896, 29953, 23197,   272,
         29918, 29896, 29953, 29918, 29896, 29898, 12765, 29918, 29893, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,
            13,    13, 29871,  3566,  2923,   353,  2923, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   263,
         29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,    13,   458,
          8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941,
         29896, 29901, 29900, 29962,  3234, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  3234,   322, 11196,  1819, 29889,    13,  5453,  6674,  4926,
         29918, 29941, 29906, 29898,  4905,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29892,    13,   462,  9651,  1962, 11196, 29892,    13,
           462,  9651,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297,
         29896, 29892,   297, 29906, 29892,    13,   462,  9651,  1881,  4670,
           416,    13,    13, 29871,  8014,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29918, 29893, 29936,    13, 29871,  8014, 11196, 29918,
         29893, 29936,    13,    13, 29871,  6674,  4926, 29918, 29896, 29953,
          6674,  4926, 29918, 29896, 29953, 29918, 29900, 29898,  4704, 29918,
         29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918, 29893,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,
         29871,  6674,  4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896,
         29953, 29918, 29896, 29898,  4704, 29918, 29893, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,    13,
         29871,  3566,  3234,   353,  3234, 29918, 29893, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  686
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  subtractor_16 subtractor_16_0(diff_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign diff = diff_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign product = product_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  subtractor_16 subtractor_16_0(diff_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign diff = diff_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign product = product_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign quotient = quotient_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign remainder = remainder_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] result_w;
  wire cout_w;

  comparator_16 comparator_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  comparator_16 comparator_16_1(result_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign result = result_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1532
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  subtractor_16 subtractor_16_0(diff_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign diff = diff_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign product = product_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign quotient = quotient_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign remainder = remainder_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] result_w;
  wire cout_w;

  comparator_16 comparator_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  comparator_16 comparator_16_1(result_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign result = result_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:70: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:71: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        comparator_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  subtractor_16 subtractor_16_0(diff_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign diff = diff_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign product = product_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign quotient = quotient_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign remainder = remainder_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] result_w;
  wire cout_w;

  comparator_16 comparator_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  comparator_16 comparator_16_1(result_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign result = result_w;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module shifter_32(output [31:0] result,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] result_w;
  wire cout_w;

  shifter_16 shifter_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  shifter_16 shifter_16_1(result_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign result = result_w;

endmodule

//Design a 32-bit barrel shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module barrel_shifter_32(output [31:0] result,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] result_w;
  wire cout_w;

  barrel_shifter_16 barrel_shifter_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
 
[[  849  4002   647 ...   416    13 29871]]
tensor([[  849,  4002,   647,  ...,   416,    13, 29871]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_w;
  wire cout_w;

  subtractor_16 subtractor_16_0(diff_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign diff = diff_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_w;
  wire cout_w;

  multiplier_16 multiplier_16_0(product_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign product = product_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_w;
  wire cout_w;

  divider_16 divider_16_0(quotient_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign quotient = quotient_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_w;
  wire cout_w;

  modulus_16 modulus_16_0(remainder_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign remainder = remainder_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] result_w;
  wire cout_w;

  comparator_16 comparator_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  comparator_16 comparator_16_1(result_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign result = result_w;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module shifter_32(output [31:0] result,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] result_w;
  wire cout_w;

  shifter_16 shifter_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  shifter_16 shifter_16_1(result_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign result = result_w;

endmodule

//Design a 32-bit barrel shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module barrel_shifter_32(output [31:0] result,
                                output cout,
                                input [31:0] in1, in2,
                                input cin);

  wire [31:0] result_w;
  wire cout_w;

  barrel_shifter_16 barrel_shifter_16_0(result_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
 
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:147: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  76  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29896 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  116
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_w;
    wire cout_w;

    adder_16 adder_16_0(diff[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_w;
    wire cout_w;

    multiplier_16 multiplier_16_0(product[15:0], cout_w, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29896 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13   355  5453    13    13
    458  4002   647   263 29871 29941 29906 29899  2966 23197   272 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2923 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2923
    322 11196  1819 29889    13  5453 23197   272 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2923 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2923
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898 12765 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402  3695   262 29906
  29961 29896 29945 29901 29900  1402  4670   416    13  1678   594   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898 12765
  29961 29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402  3695   262 29906 29961 29941 29896
  29901 29896 29953  1402 11196 29918 29893   416    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966  6674
   4926 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   3234 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  3234   322 11196  1819 29889    13  5453  6674  4926 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  3234 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29941 29896 29901 29900
  29962  3234 29918 29893 29936    13  1678  8014 11196 29918 29893 29936
     13    13  1678  6674  4926 29918 29896 29953  6674  4926 29918 29896
  29953 29918 29900 29898  4704 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678  6674
   4926 29918 29896 29953  6674  4926 29918 29896 29953 29918 29896 29898
   4704 29961 29941 29896 29901 29896 29953  1402 11196 29892   297 29896
  29961 29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896
  29901 29896 29953  1402 11196 29918 29893   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29896, 29898,  2083, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   263, 29871, 29941,
         29906, 29899,  2966, 23197,   272, 29889,    13,   458,  8439,   526,
          1023, 29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901,
         29900, 29962,  2923, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2923,
           322, 11196,  1819, 29889,    13,  5453, 23197,   272, 29918, 29941,
         29906, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2923,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13,  1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,  2923,
         29918, 29893, 29936,    13,  1678,  8014, 11196, 29918, 29893, 29936,
            13,    13,  1678,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29900, 29898, 12765, 29961, 29896, 29945,
         29901, 29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961,
         29896, 29945, 29901, 29900,  1402,  3695,   262, 29906, 29961, 29896,
         29945, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898, 12765, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
          3695,   262, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 29893,   416,    13,    13,   355,  5453,    13,    13,
           458,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,  6674,
          4926, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  3234, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  3234,   322, 11196,  1819, 29889,
            13,  5453,  6674,  4926, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  3234, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  3234, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,  6674,
          4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896, 29953, 29918,
         29900, 29898,  4704, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678,  6674,  4926, 29918, 29896, 29953,  6674,  4926,
         29918, 29896, 29953, 29918, 29896, 29898,  4704, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  646
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_w;
    wire cout_w;

    adder_16 adder_16_0(diff[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_w;
    wire cout_w;

    multiplier_16 multiplier_16_0(product[15:0], cout_w, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_w;
    wire cout_w;

    adder_16 adder_16_0(diff[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_w;
    wire cout_w;

    multiplier_16 multiplier_16_0(product[15:0], cout_w, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_w;
    wire cout_w;

    divider_16 divider_16_0(quotient[15:0], cout_w, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_w;
    wire cout_w;

    modulus_16 modulus_16_0(remainder[15:0], cout_w, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    comparator_16 comparator_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1448
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_w;
    wire cout_w;

    adder_16 adder_16_0(diff[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_w;
    wire cout_w;

    multiplier_16 multiplier_16_0(product[15:0], cout_w, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_w;
    wire cout_w;

    divider_16 divider_16_0(quotient[15:0], cout_w, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_w;
    wire cout_w;

    modulus_16 modulus_16_0(remainder[15:0], cout_w, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    comparator_16 comparator_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:98: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:99: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:64: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:81: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:82: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        comparator_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_w;
    wire cout_w;

    adder_16 adder_16_0(diff[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_w;
    wire cout_w;

    multiplier_16 multiplier_16_0(product[15:0], cout_w, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_w;
    wire cout_w;

    divider_16 divider_16_0(quotient[15:0], cout_w, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_w;
    wire cout_w;

    modulus_16 modulus_16_0(remainder[15:0], cout_w, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    comparator_16 comparator_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module shifter_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    shifter_16 shifter_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module rotator_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    rotator_16 rotator_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    rotator_16 rotator_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry
[[ 849 4002  647 ...  263 2323 8677]]
tensor([[ 849, 4002,  647,  ...,  263, 2323, 8677]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_w;
    wire cout_w;

    adder_16 adder_16_0(diff[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
    adder_16 adder_16_1(diff[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] product_w;
    wire cout_w;

    multiplier_16 multiplier_16_0(product[15:0], cout_w, in1[15:0], in2[15:0], cin);
    multiplier_16 multiplier_16_1(product[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] quotient_w;
    wire cout_w;

    divider_16 divider_16_0(quotient[15:0], cout_w, in1[15:0], in2[15:0], cin);
    divider_16 divider_16_1(quotient[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] remainder_w;
    wire cout_w;

    modulus_16 modulus_16_0(remainder[15:0], cout_w, in1[15:0], in2[15:0], cin);
    modulus_16 modulus_16_1(remainder[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module comparator_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    comparator_16 comparator_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    comparator_16 comparator_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module shifter_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    shifter_16 shifter_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    shifter_16 shifter_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] result, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output result and cout values.
module rotator_32(output [31:0] result,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] result_w;
    wire cout_w;

    rotator_16 rotator_16_0(result[15:0], cout_w, in1[15:0], in2[15:0], cin);
    rotator_16 rotator_16_1(result[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry
LOGGING VERILOG CODE.
Verilog compilation failed, error:  24
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:98: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:99: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:64: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:65: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:81: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:82: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:132: error: Unknown module type: rotator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:133: error: Unknown module type: rotator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:115: error: Unknown module type: shifter_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: shifter_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:30: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:31: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n24 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 4 times.\n        comparator_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        rotator_16 referenced 2 times.\n        shifter_16 referenced 2 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  77  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign sum_temp[1] = in1[1] ^ in2[1] ^ cin;
    assign sum_temp[2] = in1[2] ^ in2[2] ^ cin;
    assign sum_temp[3] = in1[3] ^ in2[3] ^ cin;
    assign sum_temp[4] = in1[4] ^ in2[4] ^ cin;
    assign sum_temp[5] = in1[5] ^ in2[5] ^ cin;
    assign sum_temp[6] = in1[6] ^ in2[6] ^ cin;
    assign sum_temp[7] = in1[7] ^ in2[7] ^ cin;
    assign sum_temp[8] = in1[8] ^ in2[8] ^ cin;
    assign sum_temp[9] = in1[9] ^ in2[9] ^ cin;
    assign sum_temp[10] = in1[10] ^ in2[10] ^ cin;
    assign sum_temp[11] = in1[11] ^ in2[11] ^ cin;
    assign sum_temp[12] = in1[12] ^ in2[12] ^ cin;
    assign sum_temp[13] = in1[13] ^ in2[13] ^ cin;
    assign sum_temp[14] = in1[14] ^ in2[14] ^ cin;
    assign sum_temp[15] = in1[15] ^ in2[15] ^ cin;
    assign sum_temp[16] = in1[16] ^ in2[16] ^ cin;
    assign sum_temp[17] = in1[17] ^ in2[17] ^ cin;
    assign sum_temp[18] = in1[18] ^ in2[18] ^ cin;
    assign sum_temp[19] = in1[19] ^ in2[19] ^ cin;
    assign sum_temp[20] = in1[20] ^ in2[20] ^ cin;
    assign sum_temp[21] = in1[21] ^ in2[21] ^ cin;
    assign sum_temp[22] = in1[22] ^ in2[22] ^ cin;
    assign sum_temp[23] = in1[23] ^ in2[23] ^ cin;
    assign sum_temp[24] = in1[24] ^ in2[24] ^ cin;
    assign sum_temp[25] = in1[25] ^ in2[25] ^ cin;
    assign sum_temp[26] = in1[26] ^ in2[26] ^ cin;
    assign sum_temp[27] = in1[27] ^ in2[27] ^ cin;
    assign sum_temp[28] = in1[28] ^ in2[28] ^ cin;
    assign sum_temp[29] = in1[29] ^ in2[29] ^ cin;
    assign sum_temp[30] = in1[30] ^ in2[30] ^ cin;
    assign sum_temp[31] = in1[31] ^ in2[31] ^ cin;

    assign cout_temp = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  922
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
    assign sum_temp[1] = in1[1] ^ in2[1] ^ cin;
    assign sum_temp[2] = in1[2] ^ in2[2] ^ cin;
    assign sum_temp[3] = in1[3] ^ in2[3] ^ cin;
    assign sum_temp[4] = in1[4] ^ in2[4] ^ cin;
    assign sum_temp[5] = in1[5] ^ in2[5] ^ cin;
    assign sum_temp[6] = in1[6] ^ in2[6] ^ cin;
    assign sum_temp[7] = in1[7] ^ in2[7] ^ cin;
    assign sum_temp[8] = in1[8] ^ in2[8] ^ cin;
    assign sum_temp[9] = in1[9] ^ in2[9] ^ cin;
    assign sum_temp[10] = in1[10] ^ in2[10] ^ cin;
    assign sum_temp[11] = in1[11] ^ in2[11] ^ cin;
    assign sum_temp[12] = in1[12] ^ in2[12] ^ cin;
    assign sum_temp[13] = in1[13] ^ in2[13] ^ cin;
    assign sum_temp[14] = in1[14] ^ in2[14] ^ cin;
    assign sum_temp[15] = in1[15] ^ in2[15] ^ cin;
    assign sum_temp[16] = in1[16] ^ in2[16] ^ cin;
    assign sum_temp[17] = in1[17] ^ in2[17] ^ cin;
    assign sum_temp[18] = in1[18] ^ in2[18] ^ cin;
    assign sum_temp[19] = in1[19] ^ in2[19] ^ cin;
    assign sum_temp[20] = in1[20] ^ in2[20] ^ cin;
    assign sum_temp[21] = in1[21] ^ in2[21] ^ cin;
    assign sum_temp[22] = in1[22] ^ in2[22] ^ cin;
    assign sum_temp[23] = in1[23] ^ in2[23] ^ cin;
    assign sum_temp[24] = in1[24] ^ in2[24] ^ cin;
    assign sum_temp[25] = in1[25] ^ in2[25] ^ cin;
    assign sum_temp[26] = in1[26] ^ in2[26] ^ cin;
    assign sum_temp[27] = in1[27] ^ in2[27] ^ cin;
    assign sum_temp[28] = in1[28] ^ in2[28] ^ cin;
    assign sum_temp[29] = in1[29] ^ in2[29] ^ cin;
    assign sum_temp[30] = in1[30] ^ in2[30] ^ cin;
    assign sum_temp[31] = in1[31] ^ in2[31] ^ cin;

    assign cout_temp = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  78  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;

    assign s0 = in1[0] ^ in2[0] ^ cin;
    assign s1 = in1[1] ^ in2[1] ^ s0[0];
    assign s2 = in1[2] ^ in2[2] ^ s1[0];
    assign s3 = in1[3] ^ in2[3] ^ s2[0];
    assign s4 = in1[4] ^ in2[4] ^ s3[0];
    assign s5 = in1[5] ^ in2[5] ^ s4[0];
    assign s6 = in1[6] ^ in2[6] ^ s5[0];
    assign s7 = in1[7] ^ in2[7] ^ s6[0];
    assign s8 = in1[8] ^ in2[8] ^ s7[0];
    assign s9 = in1[9] ^ in2[9] ^ s8[0];
    assign s10 = in1[10] ^ in2[10] ^ s9[0];
    assign s11 = in1[11] ^ in2[11] ^ s10[0];
    assign s12 = in1[12] ^ in2[12] ^ s11[0];
    assign s13 = in1[13] ^ in2[13] ^ s12[0];
    assign s14 = in1[14] ^ in2[14] ^ s13[0];
    assign s15 = in1[15] ^ in2[15] ^ s14[0];
    assign s16 = in1[16] ^ in2[16] ^ s15[0];
    assign s17 = in1[17] ^ in2[17] ^ s16[0];
    assign s18 = in1[18] ^ in2[18] ^ s17[0];
    assign s19 = in1[19] ^ in2[19] ^ s18[0];
    assign s20 = in1[20] ^ in2[20] ^ s19[0];
    assign s21 = in1[21] ^ in2[21] ^ s20[0];
    assign s22 = in1[22] ^ in2[22] ^ s21[0];
    assign s23 = in1[23] ^ in2[23] ^ s22[0];
    assign s24 = in1[24] ^ in2[24] ^ s23[0];
    assign s25 = in1[25] ^ in2[25] ^ s24[0];
    assign s26 = in1[26] ^ in2[26] ^ s25[0];
    assign s27 = in1[27] ^ in2[27] ^ s26[0];
    assign s28 = in1[28] ^ in2[28] ^ s27[0];
    assign s29 = in1[29] ^ in2[29] ^ s28[0];
    assign s30 = in1[30] ^ in2[30] ^ s29[0];
    assign s31 = in1[31] ^ in2[31] ^ s30[0];

    assign sum[0] = s0[0];
    assign sum[1] = s1[0];
    assign sum[2] = s2[0];
    assign sum[3] = s3[0];
    assign sum[4] = s4[0];
    assign sum[5] = s5[0];
    assign sum[6] = s6[0];
    assign sum[7] = s7[0];
    assign sum[8] = s8[0];
    assign sum[9] = s9[0];
    assign sum[10] = s10[0];
    assign sum[11] = s11[0];
    assign sum[12] = s12[0];
    assign sum[13] = s13[0];
    assign sum[14] = s14[0];
    assign sum[15] = s15[0];
    assign sum[16] = s16[0];
    assign sum[17] = s17[0];
    assign sum[18] = s18[0];
    assign sum[19] = s19[0];
    assign sum[20] = s20[0];
    assign sum[21] = s21[0];
    assign sum[22] = s22[0];
    assign sum[23] = s23[0];
    assign sum[24] = s24[0];
    assign sum[25] = s25[0];
    assign sum[26] = s26[0];
    assign sum[27] = s27[0];
    assign sum[28] = s28[0];
    assign sum[29] = s29[0];
    assign sum[30] = s30[0];
    assign sum[31] = s31[0];

    assign cout = s31[0];

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1425
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;

    assign s0 = in1[0] ^ in2[0] ^ cin;
    assign s1 = in1[1] ^ in2[1] ^ s0[0];
    assign s2 = in1[2] ^ in2[2] ^ s1[0];
    assign s3 = in1[3] ^ in2[3] ^ s2[0];
    assign s4 = in1[4] ^ in2[4] ^ s3[0];
    assign s5 = in1[5] ^ in2[5] ^ s4[0];
    assign s6 = in1[6] ^ in2[6] ^ s5[0];
    assign s7 = in1[7] ^ in2[7] ^ s6[0];
    assign s8 = in1[8] ^ in2[8] ^ s7[0];
    assign s9 = in1[9] ^ in2[9] ^ s8[0];
    assign s10 = in1[10] ^ in2[10] ^ s9[0];
    assign s11 = in1[11] ^ in2[11] ^ s10[0];
    assign s12 = in1[12] ^ in2[12] ^ s11[0];
    assign s13 = in1[13] ^ in2[13] ^ s12[0];
    assign s14 = in1[14] ^ in2[14] ^ s13[0];
    assign s15 = in1[15] ^ in2[15] ^ s14[0];
    assign s16 = in1[16] ^ in2[16] ^ s15[0];
    assign s17 = in1[17] ^ in2[17] ^ s16[0];
    assign s18 = in1[18] ^ in2[18] ^ s17[0];
    assign s19 = in1[19] ^ in2[19] ^ s18[0];
    assign s20 = in1[20] ^ in2[20] ^ s19[0];
    assign s21 = in1[21] ^ in2[21] ^ s20[0];
    assign s22 = in1[22] ^ in2[22] ^ s21[0];
    assign s23 = in1[23] ^ in2[23] ^ s22[0];
    assign s24 = in1[24] ^ in2[24] ^ s23[0];
    assign s25 = in1[25] ^ in2[25] ^ s24[0];
    assign s26 = in1[26] ^ in2[26] ^ s25[0];
    assign s27 = in1[27] ^ in2[27] ^ s26[0];
    assign s28 = in1[28] ^ in2[28] ^ s27[0];
    assign s29 = in1[29] ^ in2[29] ^ s28[0];
    assign s30 = in1[30] ^ in2[30] ^ s29[0];
    assign s31 = in1[31] ^ in2[31] ^ s30[0];

    assign sum[0] = s0[0];
    assign sum[1] = s1[0];
    assign sum[2] = s2[0];
    assign sum[3] = s3[0];
    assign sum[4] = s4[0];
    assign sum[5] = s5[0];
    assign sum[6] = s6[0];
    assign sum[7] = s7[0];
    assign sum[8] = s8[0];
    assign sum[9] = s9[0];
    assign sum[10] = s10[0];
    assign sum[11] = s11[0];
    assign sum[12] = s12[0];
    assign sum[13] = s13[0];
    assign sum[14] = s14[0];
    assign sum[15] = s15[0];
    assign sum[16] = s16[0];
    assign sum[17] = s17[0];
    assign sum[18] = s18[0];
    assign sum[19] = s19[0];
    assign sum[20] = s20[0];
    assign sum[21] = s21[0];
    assign sum[22] = s22[0];
    assign sum[23] = s23[0];
    assign sum[24] = s24[0];
    assign sum[25] = s25[0];
    assign sum[26] = s26[0];
    assign sum[27] = s27[0];
    assign sum[28] = s28[0];
    assign sum[29] = s29[0];
    assign sum[30] = s30[0];
    assign sum[31] = s31[0];

    assign cout = s31[0];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  79  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13    13
  29871  3566  2533   353  2533 29918  7564 29936    13 29871  3566 11196
    353 11196 29918  7564 29936    13    13 29871   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7564
  29961 29896 29945 29901 29900  1402 11196 29918  7564 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13 29871   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7564   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,
            13, 29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918,  7564, 29936,    13, 29871,  3566,
         11196,   353, 11196, 29918,  7564, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,
          7564, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918,  7564,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13    13
  29871  3566  2533   353  2533 29918  7564 29936    13 29871  3566 11196
    353 11196 29918  7564 29936    13    13 29871   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29896 29898  2083 29918  7564
  29961 29896 29945 29901 29900  1402 11196 29918  7564 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13 29871   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29906 29898  2083 29918  7564 29961 29941
  29896 29901 29896 29953  1402 11196 29918  7564 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918  7564   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518 29896 29945 29901 29900 29962
   2533 29918  7564 29936    13 29871  8014 11196 29918  7564 29936    13
     13 29871  3566  2533   353  2533 29918  7564 29936    13 29871  3566
  11196   353 11196 29918  7564 29936    13    13 29871   594   672 29918
  29947   594   672 29918 29947 29918 29896 29898  2083 29918  7564 29961
  29955 29901 29900  1402 11196 29918  7564 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13 29871   594   672 29918 29947   594   672 29918 29947 29918 29906
  29898  2083 29918  7564 29961 29896 29945 29901 29947  1402 11196 29918
   7564 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918  7564   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  29871  8014   518 29955 29901 29900 29962  2533 29918  7564 29936    13
  29871  8014 11196 29918  7564 29936    13    13 29871  3566  2533   353
   2533 29918  7564 29936    13 29871  3566 11196   353 11196 29918  7564
  29936    13    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7564 29961 29941 29901 29900  1402 11196
  29918  7564 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13 29871   594   672 29918
  29946   594   672 29918 29946 29918 29906 29898  2083 29918  7564 29961
  29955 29901 29946  1402 11196 29918  7564 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
   7564   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
         29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918,  7564, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7564, 29936,    13,    13, 29871,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29896,
         29898,  2083, 29918,  7564, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7564, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29918,  7564,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7564,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7564,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13, 29871,
          8014, 11196, 29918,  7564, 29936,    13,    13, 29871,  3566,  2533,
           353,  2533, 29918,  7564, 29936,    13, 29871,  3566, 11196,   353,
         11196, 29918,  7564, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083, 29918,
          7564, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7564, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29906, 29898,  2083,
         29918,  7564, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7564,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7564, 29936,    13,
         29871,  8014, 11196, 29918,  7564, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918,  7564, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7564, 29936,    13,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7564, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7564,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,
          2083, 29918,  7564, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
          7564, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918,  7564,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  assign sum_internal = in1 ^ in2 ^ cin;
  assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_16 subtractor_16_1(diff_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_2(diff_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1472
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  assign sum_internal = in1 ^ in2 ^ cin;
  assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_16 subtractor_16_1(diff_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_2(diff_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  4
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:116: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:117: error: Unknown module type: subtractor_16\n4 error(s) during elaboration.\n*** These modules were missing:\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  assign sum_internal = in1 ^ in2 ^ cin;
  assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_16 subtractor_16_1(diff_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_2(diff_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit subtractor.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_16(output [15:0] diff,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_8 subtractor_8_1(diff_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  subtractor_8 subtractor_8_2(diff_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit subtractor.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_8(output [7:0] diff,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_4 subtractor_4_1(diff_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  subtractor_4 subtractor_4_2(diff_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit subtractor.
//There are two 4 bit inputs (in1 and in2)
[[  849  4002   647 ...   297 29906 29897]]
tensor([[  849,  4002,   647,  ...,   297, 29906, 29897]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_16 adder_16_1(sum_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_8 adder_8_1(sum_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_4 adder_4_1(sum_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  adder_2 adder_2_1(sum_internal[1:0], cout_internal, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum_internal[3:2], cout_internal, in1[3:2], in2[3:2], cout_internal);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_internal;
  wire cout_internal;

  assign sum = sum_internal;
  assign cout = cout_internal;

  assign sum_internal = in1 ^ in2 ^ cin;
  assign cout_internal = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_16 subtractor_16_1(diff_internal[15:0], cout_internal, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_2(diff_internal[31:16], cout_internal, in1[31:16], in2[31:16], cout_internal);

endmodule

//Design a 16-bit subtractor.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_16(output [15:0] diff,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_8 subtractor_8_1(diff_internal[7:0], cout_internal, in1[7:0], in2[7:0], cin);
  subtractor_8 subtractor_8_2(diff_internal[15:8], cout_internal, in1[15:8], in2[15:8], cout_internal);

endmodule

//Design an 8-bit subtractor.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_8(output [7:0] diff,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] diff_internal;
  wire cout_internal;

  assign diff = diff_internal;
  assign cout = cout_internal;

  subtractor_4 subtractor_4_1(diff_internal[3:0], cout_internal, in1[3:0], in2[3:0], cin);
  subtractor_4 subtractor_4_2(diff_internal[7:4], cout_internal, in1[7:4], in2[7:4], cout_internal);

endmodule

//Design a 4-bit subtractor.
//There are two 4 bit inputs (in1 and in2)
LOGGING VERILOG CODE.
Verilog compilation failed, error:  10
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:157: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:157: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:157: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:156: error: Unknown module type: subtractor_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:157: error: Unknown module type: subtractor_4\n10 error(s) during elaboration.\n*** These modules were missing:\n        subtractor_4 referenced 8 times.\n***\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  80  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13 29871   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  116
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_w);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918 29893
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13 29871   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 29893   416    13    13   355  5453    13    13
    458  4002   647   263 29871 29896 29953 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29896 29953  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29896
  29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29896 29953 29898
   4905   518 29896 29945 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29896 29945 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29896 29945 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29947   594   672 29918 29947 29918 29896 29898
   2083 29961 29955 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29955 29901 29900  1402   297 29906 29961 29955 29901 29900  1402
   4670   416    13 29871   594   672 29918 29947   594   672 29918 29947
  29918 29906 29898  2083 29961 29896 29945 29901 29947  1402 11196 29892
    297 29896 29961 29896 29945 29901 29947  1402   297 29906 29961 29896
  29945 29901 29947  1402 11196 29918 29893   416    13    13   355  5453
     13    13   458  4002   647   385 29871 29947 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29947  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   385 29871 29947
   2586   995 29892   518 29955 29901 29900 29962  2533 29892   322   263
   2323  8677 29899   449  1962  2586 29892 11196 29889    13   458  1576
   3883   881  3667   675   278 10970   313   262 29896   322   297 29906
  29897   322   278  4670  2586   304  4017   278  1962  2533   322 11196
   1819 29889    13  5453   594   672 29918 29947 29898  4905   518 29955
  29901 29900 29962  2533 29892    13   462   268  1962 11196 29892    13
    462   268  1881   518 29955 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   268  1881  4670   416    13    13 29871  8014
    518 29955 29901 29900 29962  2533 29918 29893 29936    13 29871  8014
  11196 29918 29893 29936    13    13 29871   594   672 29918 29946   594
    672 29918 29946 29918 29896 29898  2083 29961 29941 29901 29900  1402
  11196 29918 29893 29892   297 29896 29961 29941 29901 29900  1402   297
  29906 29961 29941 29901 29900  1402  4670   416    13 29871   594   672
  29918 29946   594   672 29918 29946 29918 29906 29898  2083 29961 29955
  29901 29946  1402 11196 29892   297 29896 29961 29955 29901 29946  1402
    297 29906 29961 29955 29901 29946  1402 11196 29918 29893   416    13
     13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   263, 29871, 29896,
         29953, 29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,
          1023, 29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896,
         29953, 29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13, 29871,  8014,   518, 29896, 29945, 29901, 29900, 29962,  2533,
         29918, 29893, 29936,    13, 29871,  8014, 11196, 29918, 29893, 29936,
            13,    13, 29871,   594,   672, 29918, 29947,   594,   672, 29918,
         29947, 29918, 29896, 29898,  2083, 29961, 29955, 29901, 29900,  1402,
         11196, 29918, 29893, 29892,   297, 29896, 29961, 29955, 29901, 29900,
          1402,   297, 29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,
            13, 29871,   594,   672, 29918, 29947,   594,   672, 29918, 29947,
         29918, 29906, 29898,  2083, 29961, 29896, 29945, 29901, 29947,  1402,
         11196, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         29893,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   268,  1962, 11196, 29892,    13,   462,   268,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   268,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,
          2083, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29961, 29955, 29901, 29946,  1402, 11196, 29892,   297, 29896, 29961,
         29955, 29901, 29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,
          1402, 11196, 29918, 29893,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  613
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_w);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_w);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum[3:2], cout, in1[3:2], in2[3:2], cout_w);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_w;
  wire cout_w;

  adder_1 adder_1_1(sum[0], cout_w, in1[0], in2[0], cin);
  adder_1 adder_1_2(sum[1], cout, in1[1], in2[1], cout_w);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_w;
  wire cout_w;

  assign sum_w = in1 ^ in2 ^ cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1311
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_1(sum[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_w);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_w;
  wire cout_w;

  adder_8 adder_8_1(sum[7:0], cout_w, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_w);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

  wire [7:0] sum_w;
  wire cout_w;

  adder_4 adder_4_1(sum[3:0], cout_w, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_w);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

  wire [3:0] sum_w;
  wire cout_w;

  adder_2 adder_2_1(sum[1:0], cout_w, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_2(sum[3:2], cout, in1[3:2], in2[3:2], cout_w);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

  wire [1:0] sum_w;
  wire cout_w;

  adder_1 adder_1_1(sum[0], cout_w, in1[0], in2[0], cin);
  adder_1 adder_1_2(sum[1], cout, in1[1], in2[1], cout_w);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

  wire [0:0] sum_w;
  wire cout_w;

  assign sum_w = in1 ^ in2 ^ cin;
  assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);
  assign sum = sum_w;
  assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.761572

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  81  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_wire;

    assign sum = sum_wire[31:0];
    assign cout = sum_wire[32];

    assign sum_wire = cin + in1 + in2;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29906 29901 29900 29962  2533
  29918 22376 29936    13    13  1678  3566  2533   353  2533 29918 22376
  29961 29941 29896 29901 29900  1385    13  1678  3566 11196   353  2533
  29918 22376 29961 29941 29906  1385    13    13  1678  3566  2533 29918
  22376   353  4670   718   297 29896   718   297 29906 29936    13    13
    355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29906, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918, 22376, 29961,
         29941, 29896, 29901, 29900,  1385,    13,  1678,  3566, 11196,   353,
          2533, 29918, 22376, 29961, 29941, 29906,  1385,    13,    13,  1678,
          3566,  2533, 29918, 22376,   353,  4670,   718,   297, 29896,   718,
           297, 29906, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  60
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_wire;

    assign sum = sum_wire[31:0];
    assign cout = sum_wire[32];

    assign sum_wire = cin + in1 + in2;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.711818

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
----GREEDY LLM OUTPUT - ITERATION:  82  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13 29871  3566 11196
    353 11196 29918  7382 29936    13    13 29871   849 29871 29941 29906
  29899  2966   594   672    13 29871   594   672 29918 29941 29906 29918
   2966   594   672 29918 29941 29906 29918  2966 29918 29900 29898  2083
  29918  7382 29892 11196 29918  7382 29892   297 29896 29892   297 29906
  29892  4670   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13, 29871,  3566,
         11196,   353, 11196, 29918,  7382, 29936,    13,    13, 29871,   849,
         29871, 29941, 29906, 29899,  2966,   594,   672,    13, 29871,   594,
           672, 29918, 29941, 29906, 29918,  2966,   594,   672, 29918, 29941,
         29906, 29918,  2966, 29918, 29900, 29898,  2083, 29918,  7382, 29892,
         11196, 29918,  7382, 29892,   297, 29896, 29892,   297, 29906, 29892,
          4670,   416,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  89
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_32_bit\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                          output cout,
                          input [15:0] in1, in2,
                          input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13 29871  3566 11196
    353 11196 29918  7382 29936    13    13 29871   849 29871 29941 29906
  29899  2966   594   672    13 29871   594   672 29918 29941 29906 29918
   2966   594   672 29918 29941 29906 29918  2966 29918 29900 29898  2083
  29918  7382 29892 11196 29918  7382 29892   297 29896 29892   297 29906
  29892  4670   416    13    13   355  5453    13    13   458  4002   647
    263 29871 29941 29906 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29941 29906  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29941 29906  2586   995
  29892   518 29941 29896 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29941 29906 29918  2966 29898  4905
    518 29941 29896 29901 29900 29962  2533 29892    13   462  3986  1962
  11196 29892    13   462  3986  1881   518 29941 29896 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462  3986  1881  4670   416
     13    13 29871  8014   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 29871  8014 11196 29918  7382 29936    13    13 29871
   3566  2533   353  2533 29918  7382 29936    13 29871  3566 11196   353
  11196 29918  7382 29936    13    13 29871   849 29871 29896 29953 29899
   2966   594   672    13 29871   594   672 29918 29896 29953 29918  2966
    594   672 29918 29896 29953 29918  2966 29918 29900 29898  2083 29918
   7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892   297
  29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945
  29901 29900  1402  4670   416    13 29871   594   672 29918 29896 29953
  29918  2966   594   672 29918 29896 29953 29918  2966 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29918
   7382 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382   416
     13    13   355  5453    13    13   458  4002   647   263 29871 29896
  29953 29899  2966   594   672 29889    13   458  8439   526  1023 29871
  29896 29953  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29896 29953  2586   995 29892   518 29896
  29945 29901 29900 29962  2533 29892   322   263  2323  8677 29899   449
   1962  2586 29892 11196 29889    13   458  1576  3883   881  3667   675
    278 10970   313   262 29896   322   297 29906 29897   322   278  4670
   2586   304  4017   278  1962  2533   322 11196  1819 29889    13  5453
    594   672 29918 29896 29953 29918  2966 29898  4905   518 29896 29945
  29901 29900 29962  2533 29892    13   462  3986  1962 11196 29892    13
    462  3986  1881   518 29896 29945 29901 29900 29962   297 29896 29892
    297 29906 29892    13   462  3986  1881  4670   416    13    13 29871
   8014   518 29896 29945 29901 29900 29962  2533 29918  7382 29936    13
  29871  8014 11196 29918  7382 29936    13    13 29871  3566  2533   353
   2533 29918  7382 29936    13 29871  3566 11196   353 11196 29918  7382
  29936    13    13 29871   849 29871 29947 29899  2966   594   672    13
  29871   594   672 29918 29947 29918  2966   594   672 29918 29947 29918
   2966 29918 29900 29898  2083 29918  7382 29961 29955 29901 29900  1402
  11196 29918  7382 29892   297 29896 29961 29955 29901 29900  1402   297
  29906 29961 29955 29901 29900  1402  4670   416    13 29871   594   672
  29918 29947 29918  2966   594   672 29918 29947 29918  2966 29918 29896
  29898  2083 29918  7382 29961 29896 29945 29901 29947  1402 11196 29918
   7382 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918  7382   416    13    13
    355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13, 29871,   849, 29871,
         29941, 29906, 29899,  2966,   594,   672,    13, 29871,   594,   672,
         29918, 29941, 29906, 29918,  2966,   594,   672, 29918, 29941, 29906,
         29918,  2966, 29918, 29900, 29898,  2083, 29918,  7382, 29892, 11196,
         29918,  7382, 29892,   297, 29896, 29892,   297, 29906, 29892,  4670,
           416,    13,    13,   355,  5453,    13,    13,   458,  4002,   647,
           263, 29871, 29941, 29906, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677,
         29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576,
         14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,
          8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,
          1576,  3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,
           278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,
           672, 29918, 29941, 29906, 29918,  2966, 29898,  4905,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29892,    13,   462,  3986,  1962,
         11196, 29892,    13,   462,  3986,  1881,   518, 29941, 29896, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
          3986,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 29871,
          8014, 11196, 29918,  7382, 29936,    13,    13, 29871,  3566,  2533,
           353,  2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,   353,
         11196, 29918,  7382, 29936,    13,    13, 29871,   849, 29871, 29896,
         29953, 29899,  2966,   594,   672,    13, 29871,   594,   672, 29918,
         29896, 29953, 29918,  2966,   594,   672, 29918, 29896, 29953, 29918,
          2966, 29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945,
         29901, 29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961,
         29896, 29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945,
         29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918,
         29896, 29953, 29918,  2966,   594,   672, 29918, 29896, 29953, 29918,
          2966, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   263,
         29871, 29896, 29953, 29899,  2966,   594,   672, 29889,    13,   458,
          8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29896, 29953,  2586,   995, 29892,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,   672,
         29918, 29896, 29953, 29918,  2966, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,  3986,  1962, 11196,
         29892,    13,   462,  3986,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,  3986,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 29871,  8014,
         11196, 29918,  7382, 29936,    13,    13, 29871,  3566,  2533,   353,
          2533, 29918,  7382, 29936,    13, 29871,  3566, 11196,   353, 11196,
         29918,  7382, 29936,    13,    13, 29871,   849, 29871, 29947, 29899,
          2966,   594,   672,    13, 29871,   594,   672, 29918, 29947, 29918,
          2966,   594,   672, 29918, 29947, 29918,  2966, 29918, 29900, 29898,
          2083, 29918,  7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13, 29871,
           594,   672, 29918, 29947, 29918,  2966,   594,   672, 29918, 29947,
         29918,  2966, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29896,
         29945, 29901, 29947,  1402, 11196, 29918,  7382, 29892,   297, 29896,
         29961, 29896, 29945, 29901, 29947,  1402,   297, 29906, 29961, 29896,
         29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  696
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                          output cout,
                          input [15:0] in1, in2,
                          input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  5
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:58: error: Unknown module type: adder_8_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:59: error: Unknown module type: adder_8_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:58: error: Unknown module type: adder_8_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:59: error: Unknown module type: adder_8_bit\n5 error(s) during elaboration.\n*** These modules were missing:\n        adder_8_bit referenced 4 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                          output cout,
                          input [15:0] in1, in2,
                          input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design a 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                         output cout,
                         input [7:0] in1, in2,
                         input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                         output cout,
                         input [3:0] in1, in2,
                         input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                         output cout,
                         input [1:0] in1, in2,
                         input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1545
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                          output cout,
                          input [15:0] in1, in2,
                          input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design a 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                         output cout,
                         input [7:0] in1, in2,
                         input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                         output cout,
                         input [3:0] in1, in2,
                         input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                         output cout,
                         input [1:0] in1, in2,
                         input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:121: error: Unknown module type: adder_1_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:122: error: Unknown module type: adder_1_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_1_bit referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                          output cout,
                          input [15:0] in1, in2,
                          input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design a 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                         output cout,
                         input [7:0] in1, in2,
                         input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                         output cout,
                         input [3:0] in1, in2,
                         input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                         output cout,
                         input [1:0] in1, in2,
                         input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                         output cout,
                         input [0:0] in1, in2,
                         input cin);

  wire [0:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 1-bit adder
  assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
  assign cout_temp = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

endmodule
\end{code}

Comment: I'm not sure what you mean by "the output is not correct".  What output are you getting, and what output are you expecting?

Comment: @D.W. I'm getting 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[[  849  4002   647 ... 29900 29900 29900]]
tensor([[  849,  4002,   647,  ..., 29900, 29900, 29900]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 32-bit adder
  adder_32_bit adder_32_bit_0(sum_temp, cout_temp, in1, in2, cin);

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_bit(output [31:0] sum,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 16-bit adder
  adder_16_bit adder_16_bit_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16_bit adder_16_bit_1(sum_temp[31:16], cout_temp, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16_bit(output [15:0] sum,
                          output cout,
                          input [15:0] in1, in2,
                          input cin);

  wire [15:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 8-bit adder
  adder_8_bit adder_8_bit_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
  adder_8_bit adder_8_bit_1(sum_temp[15:8], cout_temp, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design a 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8_bit(output [7:0] sum,
                         output cout,
                         input [7:0] in1, in2,
                         input cin);

  wire [7:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 4-bit adder
  adder_4_bit adder_4_bit_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
  adder_4_bit adder_4_bit_1(sum_temp[7:4], cout_temp, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4_bit(output [3:0] sum,
                         output cout,
                         input [3:0] in1, in2,
                         input cin);

  wire [3:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 2-bit adder
  adder_2_bit adder_2_bit_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
  adder_2_bit adder_2_bit_1(sum_temp[3:2], cout_temp, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2_bit(output [1:0] sum,
                         output cout,
                         input [1:0] in1, in2,
                         input cin);

  wire [1:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 1-bit adder
  adder_1_bit adder_1_bit_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
  adder_1_bit adder_1_bit_1(sum_temp[1], cout_temp, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1_bit(output [0:0] sum,
                         output cout,
                         input [0:0] in1, in2,
                         input cin);

  wire [0:0] sum_temp;
  wire cout_temp;

  assign sum = sum_temp;
  assign cout = cout_temp;

  // 1-bit adder
  assign sum_temp[0] = in1[0] ^ in2[0] ^ cin;
  assign cout_temp = (in1[0] & in2[0]) | (in1[0] & cin) | (in2[0] & cin);

endmodule
\end{code}

Comment: I'm not sure what you mean by "the output is not correct".  What output are you getting, and what output are you expecting?

Comment: @D.W. I'm getting 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:148: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  83  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893  2658 29936    13  1678  8014 11196 29918 29893  2658 29936
     13    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29900 29898  2083 29918 29893  2658 29961 29896 29945 29901
  29900  1402 11196 29918 29893  2658 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29896 29898  2083 29918 29893  2658 29961 29941 29896 29901
  29896 29953  1402 11196 29892   297 29896 29961 29941 29896 29901 29896
  29953  1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196
  29918 29893  2658   416    13    13  1678  3566  2533   353  2533 29918
  29893  2658 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893,  2658,
         29936,    13,  1678,  8014, 11196, 29918, 29893,  2658, 29936,    13,
            13,  1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29900, 29898,  2083, 29918, 29893,  2658, 29961,
         29896, 29945, 29901, 29900,  1402, 11196, 29918, 29893,  2658, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29918, 29893,  2658, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 29893,  2658,   416,    13,
            13,  1678,  3566,  2533,   353,  2533, 29918, 29893,  2658, 29936,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  137
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_0(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_0(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_wires[7:4], cout, in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893  2658 29936    13  1678  8014 11196 29918 29893  2658 29936
     13    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29900 29898  2083 29918 29893  2658 29961 29896 29945 29901
  29900  1402 11196 29918 29893  2658 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13  1678   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29896 29898  2083 29918 29893  2658 29961 29941 29896 29901
  29896 29953  1402 11196 29892   297 29896 29961 29941 29896 29901 29896
  29953  1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196
  29918 29893  2658   416    13    13  1678  3566  2533   353  2533 29918
  29893  2658 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
   1678  8014   518 29896 29945 29901 29900 29962  2533 29918 29893  2658
  29936    13  1678  8014 11196 29918 29893  2658 29936    13    13  1678
    594   672 29918 29947   594   672 29918 29947 29918 29900 29898  2083
  29918 29893  2658 29961 29955 29901 29900  1402 11196 29918 29893  2658
  29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961 29955
  29901 29900  1402  4670   416    13  1678   594   672 29918 29947   594
    672 29918 29947 29918 29896 29898  2083 29918 29893  2658 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  29893  2658   416    13    13  1678  3566  2533   353  2533 29918 29893
   2658 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29955 29901 29900 29962  2533
  29918 29893  2658 29936    13  1678  8014 11196 29918 29893  2658 29936
     13    13  1678   594   672 29918 29946   594   672 29918 29946 29918
  29900 29898  2083 29918 29893  2658 29961 29941 29901 29900  1402 11196
  29918 29893  2658 29892   297 29896 29961 29941 29901 29900  1402   297
  29906 29961 29941 29901 29900  1402  4670   416    13  1678   594   672
  29918 29946   594   672 29918 29946 29918 29896 29898  2083 29918 29893
   2658 29961 29955 29901 29946  1402 11196 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
  29893  2658   416    13    13  1678  3566  2533   353  2533 29918 29893
   2658 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893,  2658, 29936,
            13,  1678,  8014, 11196, 29918, 29893,  2658, 29936,    13,    13,
          1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29900, 29898,  2083, 29918, 29893,  2658, 29961, 29896,
         29945, 29901, 29900,  1402, 11196, 29918, 29893,  2658, 29892,   297,
         29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906, 29961,
         29896, 29945, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29918, 29893,  2658, 29961, 29941, 29896, 29901,
         29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941, 29896,
         29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896, 29901,
         29896, 29953,  1402, 11196, 29918, 29893,  2658,   416,    13,    13,
          1678,  3566,  2533,   353,  2533, 29918, 29893,  2658, 29936,    13,
            13,   355,  5453,    13,    13,   458,  4002,   647,   263, 29871,
         29896, 29953, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29896, 29953,  2586, 10970,   313,   262, 29896,
           322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,
          1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,
           263, 29871, 29896, 29953,  2586,   995, 29892,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,
           449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,
           881,  3667,   675,   278, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,
          2533,   322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918,
         29896, 29953, 29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,
          2533, 29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,
           418,  1881,   518, 29896, 29945, 29901, 29900, 29962,   297, 29896,
         29892,   297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,
            13,    13,  1678,  8014,   518, 29896, 29945, 29901, 29900, 29962,
          2533, 29918, 29893,  2658, 29936,    13,  1678,  8014, 11196, 29918,
         29893,  2658, 29936,    13,    13,  1678,   594,   672, 29918, 29947,
           594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918, 29893,
          2658, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893,  2658,
         29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906,
         29961, 29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,
          2083, 29918, 29893,  2658, 29961, 29896, 29945, 29901, 29947,  1402,
         11196, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         29893,  2658,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918, 29893,  2658, 29936,    13,    13,   355,  5453,    13,    13,
           458,  4002,   647,   385, 29871, 29947, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29947,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29947,  2586,   995, 29892,   518,
         29955, 29901, 29900, 29962,  2533, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  2533,   322, 11196,  1819, 29889,    13,  5453,   594,   672,
         29918, 29947, 29898,  4905,   518, 29955, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29955, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
          1678,  8014,   518, 29955, 29901, 29900, 29962,  2533, 29918, 29893,
          2658, 29936,    13,  1678,  8014, 11196, 29918, 29893,  2658, 29936,
            13,    13,  1678,   594,   672, 29918, 29946,   594,   672, 29918,
         29946, 29918, 29900, 29898,  2083, 29918, 29893,  2658, 29961, 29941,
         29901, 29900,  1402, 11196, 29918, 29893,  2658, 29892,   297, 29896,
         29961, 29941, 29901, 29900,  1402,   297, 29906, 29961, 29941, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29946,
           594,   672, 29918, 29946, 29918, 29896, 29898,  2083, 29918, 29893,
          2658, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297, 29896,
         29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955, 29901,
         29946,  1402, 11196, 29918, 29893,  2658,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893,  2658, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  676
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_0(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_0(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_wires[7:4], cout, in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_0(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_0(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_wires[7:4], cout, in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wires;
    wire cout_wires;

    adder_2 adder_2_0(sum_wires[1:0], cout_wires, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_wires[3:2], cout, in1[3:2], in2[3:2], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wires;
    wire cout_wires;

    full_adder full_adder_0(sum_wires[0], cout_wires, in1[0], in2[0], cin);
    full_adder full_adder_1(sum_wires[1], cout, in1[1], in2[1], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a full adder.
//There are three inputs (a, b, and cin) and two outputs (sum and cout).
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire sum_wires;
    wire cout_wires;

    xor_gate xor_gate_0(sum_wires, a, b);
    xor_gate xor_gate_1(sum, a, b);
    and_gate and_gate_0(cout_wires, a, b);
    or_gate or_gate_0(cout, cin, cout_wires);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1379
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_0(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_0(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_wires[7:4], cout, in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wires;
    wire cout_wires;

    adder_2 adder_2_0(sum_wires[1:0], cout_wires, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_wires[3:2], cout, in1[3:2], in2[3:2], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wires;
    wire cout_wires;

    full_adder full_adder_0(sum_wires[0], cout_wires, in1[0], in2[0], cin);
    full_adder full_adder_1(sum_wires[1], cout, in1[1], in2[1], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a full adder.
//There are three inputs (a, b, and cin) and two outputs (sum and cout).
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire sum_wires;
    wire cout_wires;

    xor_gate xor_gate_0(sum_wires, a, b);
    xor_gate xor_gate_1(sum, a, b);
    and_gate and_gate_0(cout_wires, a, b);
    or_gate or_gate_0(cout, cin, cout_wires);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  129
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:106: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:107: error: Unknown module type: xor_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: and_gate\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: or_gate\n129 error(s) during elaboration.\n*** These modules were missing:\n        and_gate referenced 32 times.\n        or_gate referenced 32 times.\n        xor_gate referenced 64 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_0(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_0(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_wires[7:4], cout, in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wires;
    wire cout_wires;

    adder_2 adder_2_0(sum_wires[1:0], cout_wires, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_wires[3:2], cout, in1[3:2], in2[3:2], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wires;
    wire cout_wires;

    full_adder full_adder_0(sum_wires[0], cout_wires, in1[0], in2[0], cin);
    full_adder full_adder_1(sum_wires[1], cout, in1[1], in2[1], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a full adder.
//There are three inputs (a, b, and cin) and two outputs (sum and cout).
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire sum_wires;
    wire cout_wires;

    xor_gate xor_gate_0(sum_wires, a, b);
    xor_gate xor_gate_1(sum, a, b);
    and_gate and_gate_0(cout_wires, a, b);
    or_gate or_gate_0(cout, cin, cout_wires);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wires;
    wire cout_wires;

    subtractor_16 subtractor_16_0(diff_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign diff = diff_wires;

endmodule

//Design a 16-bit subtractor.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_16(output [15:0] diff,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] diff_wires;
    wire cout_wires;

    subtractor_8 subtractor_8_0(diff_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    subtractor_8 subtractor_8_1(diff_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign diff = diff_wires;

endmodule

//Design an 8-bit subtractor.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_8(output [7:
[[  849  4002   647 ...   518 29955 29901]]
tensor([[  849,  4002,   647,  ...,   518, 29955, 29901]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wires;
    wire cout_wires;

    adder_16 adder_16_0(sum_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wires;
    wire cout_wires;

    adder_8 adder_8_0(sum_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign sum = sum_wires;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wires;
    wire cout_wires;

    adder_4 adder_4_0(sum_wires[3:0], cout_wires, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_wires[7:4], cout, in1[7:4], in2[7:4], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wires;
    wire cout_wires;

    adder_2 adder_2_0(sum_wires[1:0], cout_wires, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_wires[3:2], cout, in1[3:2], in2[3:2], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wires;
    wire cout_wires;

    full_adder full_adder_0(sum_wires[0], cout_wires, in1[0], in2[0], cin);
    full_adder full_adder_1(sum_wires[1], cout, in1[1], in2[1], cout_wires);

    assign sum = sum_wires;

endmodule

//Design a full adder.
//There are three inputs (a, b, and cin) and two outputs (sum and cout).
//The module should utilize the inputs (a, b, and cin) to obtain the output sum and cout values.
module full_adder(output sum,
                      output cout,
                      input a, b, cin);

    wire sum_wires;
    wire cout_wires;

    xor_gate xor_gate_0(sum_wires, a, b);
    xor_gate xor_gate_1(sum, a, b);
    and_gate and_gate_0(cout_wires, a, b);
    or_gate or_gate_0(cout, cin, cout_wires);

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] diff_wires;
    wire cout_wires;

    subtractor_16 subtractor_16_0(diff_wires[15:0], cout_wires, in1[15:0], in2[15:0], cin);
    subtractor_16 subtractor_16_1(diff_wires[31:16], cout, in1[31:16], in2[31:16], cout_wires);

    assign diff = diff_wires;

endmodule

//Design a 16-bit subtractor.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_16(output [15:0] diff,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] diff_wires;
    wire cout_wires;

    subtractor_8 subtractor_8_0(diff_wires[7:0], cout_wires, in1[7:0], in2[7:0], cin);
    subtractor_8 subtractor_8_1(diff_wires[15:8], cout, in1[15:8], in2[15:8], cout_wires);

    assign diff = diff_wires;

endmodule

//Design an 8-bit subtractor.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_8(output [7:
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:155: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  84  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918  7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382 29961
  29941 29896 29901 29896 29953  1402  2533 29961 29900  1402   297 29896
  29961 29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896
  29901 29896 29953  1402 11196 29918  7382   416    13    13 16645  2533
    353  2533 29918  7382 29936    13 16645 11196   353 11196 29918  7382
  29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         22376, 11196, 29918,  7382, 29936,    13,    13,   328,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,   328,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,  2533, 29961, 29900,  1402,   297,
         29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,
           416,    13,    13, 16645,  2533,   353,  2533, 29918,  7382, 29936,
            13, 16645, 11196,   353, 11196, 29918,  7382, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  135
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] diff_temp;
wire cout_temp;

subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
subtractor_16 subtractor_16_1(diff_temp[31:16], diff[0], in1[31:16], in2[31:16], cout_temp);

assign diff = diff_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] product_temp;
wire cout_temp;

multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
multiplier_16 multiplier_16_1(product_temp[31:16], product[0], in1[31:16], in2[31:16], cout_temp);

assign product = product_temp;
assign cout = cout_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
   7382 29936    13 22376 11196 29918  7382 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918  7382 29961 29896 29945 29901 29900  1402 11196 29918  7382 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918  7382 29961
  29941 29896 29901 29896 29953  1402  2533 29961 29900  1402   297 29896
  29961 29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896
  29901 29896 29953  1402 11196 29918  7382   416    13    13 16645  2533
    353  2533 29918  7382 29936    13 16645 11196   353 11196 29918  7382
  29936    13    13   355  5453    13    13   458  4002   647   263 29871
  29941 29906 29899  2966 23197   272 29889    13   458  8439   526  1023
  29871 29941 29906  2586 10970   313   262 29896   322   297 29906 29897
    322   263  2323  8677 29899   262  1881  2586 29892  4670 29889    13
    458  1576 14391   526   263 29871 29941 29906  2586   995 29892   518
  29941 29896 29901 29900 29962  2923 29892   322   263  2323  8677 29899
    449  1962  2586 29892 11196 29889    13   458  1576  3883   881  3667
    675   278 10970   313   262 29896   322   297 29906 29897   322   278
   4670  2586   304  4017   278  1962  2923   322 11196  1819 29889    13
   5453 23197   272 29918 29941 29906 29898  4905   518 29941 29896 29901
  29900 29962  2923 29892    13   462   418  1962 11196 29892    13   462
    418  1881   518 29941 29896 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   418  1881  4670   416    13    13 22376   518
  29941 29896 29901 29900 29962  2923 29918  7382 29936    13 22376 11196
  29918  7382 29936    13    13  1491 29873 28891 29918 29896 29953 23197
    272 29918 29896 29953 29918 29900 29898 12765 29918  7382 29961 29896
  29945 29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29896
  29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402
   4670   416    13  1491 29873 28891 29918 29896 29953 23197   272 29918
  29896 29953 29918 29896 29898 12765 29918  7382 29961 29941 29896 29901
  29896 29953  1402  2923 29961 29900  1402   297 29896 29961 29941 29896
  29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896 29953
   1402 11196 29918  7382   416    13    13 16645  2923   353  2923 29918
   7382 29936    13 16645 11196   353 11196 29918  7382 29936    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462   418  1962 11196 29892    13   462   418  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462   418  1881  4670   416    13    13 22376   518 29941 29896 29901
  29900 29962  3234 29918  7382 29936    13 22376 11196 29918  7382 29936
     13    13 18056  4926 29918 29896 29953  6674  4926 29918 29896 29953
  29918 29900 29898  4704 29918  7382 29961 29896 29945 29901 29900  1402
  11196 29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402
    297 29906 29961 29896 29945 29901 29900  1402  4670   416    13 18056
   4926 29918 29896 29953  6674  4926 29918 29896 29953 29918 29896 29898
   4704 29918  7382 29961 29941 29896 29901 29896 29953  1402  3234 29961
  29900  1402   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382   416
     13    13 16645  3234   353  3234 29918  7382 29936    13 16645 11196
    353 11196 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 22376,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13, 22376,
         11196, 29918,  7382, 29936,    13,    13,   328,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
          7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,   328,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402,  2533, 29961, 29900,  1402,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,
            13,    13, 16645,  2533,   353,  2533, 29918,  7382, 29936,    13,
         16645, 11196,   353, 11196, 29918,  7382, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29941, 29906,
         29899,  2966, 23197,   272, 29889,    13,   458,  8439,   526,  1023,
         29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900,
         29962,  2923, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2923,   322,
         11196,  1819, 29889,    13,  5453, 23197,   272, 29918, 29941, 29906,
         29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29941, 29896, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
         22376,   518, 29941, 29896, 29901, 29900, 29962,  2923, 29918,  7382,
         29936,    13, 22376, 11196, 29918,  7382, 29936,    13,    13,  1491,
         29873, 28891, 29918, 29896, 29953, 23197,   272, 29918, 29896, 29953,
         29918, 29900, 29898, 12765, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1491, 29873, 28891, 29918, 29896,
         29953, 23197,   272, 29918, 29896, 29953, 29918, 29896, 29898, 12765,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402,  2923,
         29961, 29900,  1402,   297, 29896, 29961, 29941, 29896, 29901, 29896,
         29953,  1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,
          1402, 11196, 29918,  7382,   416,    13,    13, 16645,  2923,   353,
          2923, 29918,  7382, 29936,    13, 16645, 11196,   353, 11196, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  3234, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  3234,   322, 11196,  1819, 29889,    13,  5453,
          6674,  4926, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  3234, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 22376,   518, 29941, 29896, 29901,
         29900, 29962,  3234, 29918,  7382, 29936,    13, 22376, 11196, 29918,
          7382, 29936,    13,    13, 18056,  4926, 29918, 29896, 29953,  6674,
          4926, 29918, 29896, 29953, 29918, 29900, 29898,  4704, 29918,  7382,
         29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13, 18056,
          4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896, 29953, 29918,
         29896, 29898,  4704, 29918,  7382, 29961, 29941, 29896, 29901, 29896,
         29953,  1402,  3234, 29961, 29900,  1402,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
         16645,  3234,   353,  3234, 29918,  7382, 29936,    13, 16645, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  703
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] diff_temp;
wire cout_temp;

subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
subtractor_16 subtractor_16_1(diff_temp[31:16], diff[0], in1[31:16], in2[31:16], cout_temp);

assign diff = diff_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] product_temp;
wire cout_temp;

multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
multiplier_16 multiplier_16_1(product_temp[31:16], product[0], in1[31:16], in2[31:16], cout_temp);

assign product = product_temp;
assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:53: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:54: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] diff_temp;
wire cout_temp;

subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
subtractor_16 subtractor_16_1(diff_temp[31:16], diff[0], in1[31:16], in2[31:16], cout_temp);

assign diff = diff_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] product_temp;
wire cout_temp;

multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
multiplier_16 multiplier_16_1(product_temp[31:16], product[0], in1[31:16], in2[31:16], cout_temp);

assign product = product_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] quotient_temp;
wire cout_temp;

divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
divider_16 divider_16_1(quotient_temp[31:16], quotient[0], in1[31:16], in2[31:16], cout_temp);

assign quotient = quotient_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] remainder_temp;
wire cout_temp;

modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
modulus_16 modulus_16_1(remainder_temp[31:16], remainder[0], in1[31:16], in2[31:16], cout_temp);

assign remainder = remainder_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] comparison_temp;
wire cout_temp;

comparator_16 comparator_16_0(comparison_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
comparator_16 comparator_16_1(comparison_temp[31:16], comparison[0], in1[31:16], in2[31:16], cout_temp);

assign comparison = comparison_temp;
assign cout = cout_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1567
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] diff_temp;
wire cout_temp;

subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
subtractor_16 subtractor_16_1(diff_temp[31:16], diff[0], in1[31:16], in2[31:16], cout_temp);

assign diff = diff_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] product_temp;
wire cout_temp;

multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
multiplier_16 multiplier_16_1(product_temp[31:16], product[0], in1[31:16], in2[31:16], cout_temp);

assign product = product_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] quotient_temp;
wire cout_temp;

divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
divider_16 divider_16_1(quotient_temp[31:16], quotient[0], in1[31:16], in2[31:16], cout_temp);

assign quotient = quotient_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] remainder_temp;
wire cout_temp;

modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
modulus_16 modulus_16_1(remainder_temp[31:16], remainder[0], in1[31:16], in2[31:16], cout_temp);

assign remainder = remainder_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] comparison_temp;
wire cout_temp;

comparator_16 comparator_16_0(comparison_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
comparator_16 comparator_16_1(comparison_temp[31:16], comparison[0], in1[31:16], in2[31:16], cout_temp);

assign comparison = comparison_temp;
assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:113: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:114: error: Unknown module type: comparator_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:73: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:74: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:93: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:94: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:53: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:54: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:34: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        comparator_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] diff_temp;
wire cout_temp;

subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
subtractor_16 subtractor_16_1(diff_temp[31:16], diff[0], in1[31:16], in2[31:16], cout_temp);

assign diff = diff_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] product_temp;
wire cout_temp;

multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
multiplier_16 multiplier_16_1(product_temp[31:16], product[0], in1[31:16], in2[31:16], cout_temp);

assign product = product_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] quotient_temp;
wire cout_temp;

divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
divider_16 divider_16_1(quotient_temp[31:16], quotient[0], in1[31:16], in2[31:16], cout_temp);

assign quotient = quotient_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] remainder_temp;
wire cout_temp;

modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
modulus_16 modulus_16_1(remainder_temp[31:16], remainder[0], in1[31:16], in2[31:16], cout_temp);

assign remainder = remainder_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] comparison_temp;
wire cout_temp;

comparator_16 comparator_16_0(comparison_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
comparator_16 comparator_16_1(comparison_temp[31:16], comparison[0], in1[31:16], in2[31:16], cout_temp);

assign comparison = comparison_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] shift_temp;
wire cout_temp;

shifter_16 shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
shifter_16 shifter_16_1(shift_temp[31:16], shift[0], in1[31:16], in2[31:16], cout_temp);

assign shift = shift_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] rotate_temp;
wire cout_temp;

rotator_16 rotator_16_0(rotate_temp[15:0], cout_
[[  849  4002   647 ...  1402 11196 29918]]
tensor([[  849,  4002,   647,  ...,  1402, 11196, 29918]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_temp;
wire cout_temp;

adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_temp[31:16], sum[0], in1[31:16], in2[31:16], cout_temp);

assign sum = sum_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] diff_temp;
wire cout_temp;

subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
subtractor_16 subtractor_16_1(diff_temp[31:16], diff[0], in1[31:16], in2[31:16], cout_temp);

assign diff = diff_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] product_temp;
wire cout_temp;

multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
multiplier_16 multiplier_16_1(product_temp[31:16], product[0], in1[31:16], in2[31:16], cout_temp);

assign product = product_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] quotient_temp;
wire cout_temp;

divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
divider_16 divider_16_1(quotient_temp[31:16], quotient[0], in1[31:16], in2[31:16], cout_temp);

assign quotient = quotient_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] remainder_temp;
wire cout_temp;

modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
modulus_16 modulus_16_1(remainder_temp[31:16], remainder[0], in1[31:16], in2[31:16], cout_temp);

assign remainder = remainder_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] comparison, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output comparison and cout values.
module comparator_32(output [31:0] comparison,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] comparison_temp;
wire cout_temp;

comparator_16 comparator_16_0(comparison_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
comparator_16 comparator_16_1(comparison_temp[31:16], comparison[0], in1[31:16], in2[31:16], cout_temp);

assign comparison = comparison_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module shifter_32(output [31:0] shift,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] shift_temp;
wire cout_temp;

shifter_16 shifter_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
shifter_16 shifter_16_1(shift_temp[31:16], shift[0], in1[31:16], in2[31:16], cout_temp);

assign shift = shift_temp;
assign cout = cout_temp;

endmodule

//Design a 32-bit rotator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] rotate, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output rotate and cout values.
module rotator_32(output [31:0] rotate,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] rotate_temp;
wire cout_temp;

rotator_16 rotator_16_0(rotate_temp[15:0], cout_
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:153: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  85  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
   1678  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918  7382 29936    13  1678  8014 11196 29918  7382 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918  7382 29961 29955 29901 29900  1402 11196 29918
   7382 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918  7382 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
   7382   416    13    13  1678  3566  2533   353  2533 29918  7382 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918  7382
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
   7382 29961 29941 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918  7382 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918  7382   416    13    13  1678  3566  2533
    353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29955, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,  7382,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,  1678,  8014,
         11196, 29918,  7382, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
          7382, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918,  7382,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918,  7382, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 + in2 + cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1361
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_0(sum_temp[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_temp[15:8], cout, in1[15:8], in2[15:8], cout_temp);

    assign sum = sum_temp;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_0(sum_temp[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_temp[7:4], cout, in1[7:4], in2[7:4], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_0(sum_temp[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_temp[3:2], cout, in1[3:2], in2[3:2], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_0(sum_temp[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_temp[1], cout, in1[1], in2[1], cout_temp);

    assign sum = sum_temp;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_temp;
    wire cout_temp;

    assign sum_temp = in1 + in2 + cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  86  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13, 29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13 29871  8014 11196 29918 29893 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
  29871  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13 29871  8014   518 29941 29896 29901 29900
  29962  2533 29918 29893 29936    13 29871  8014 11196 29918 29893 29936
     13    13 29871   594   672 29918 29896 29953   594   672 29918 29896
  29953 29918 29900 29898  2083 29918 29893 29961 29896 29945 29901 29900
   1402 11196 29918 29893 29892   297 29896 29961 29896 29945 29901 29900
   1402  3695   262 29906 29961 29896 29945 29901 29900  1402  4670   416
     13 29871   594   672 29918 29896 29953   594   672 29918 29896 29953
  29918 29896 29898  2083 29918 29893 29961 29941 29896 29901 29896 29953
   1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402
   3695   262 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918
  29893   416    13    13 29871  3566  2533   353  2533 29918 29893 29936
     13    13   355  5453    13    13   458  4002   647   263 29871 29941
  29906 29899  2966  6674  4926 29889    13   458  8439   526  1023 29871
  29941 29906  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29941 29906  2586   995 29892   518 29941
  29896 29901 29900 29962  2533 29892   322   263  2323  8677 29899   449
   1962  2586 29892 11196 29889    13   458  1576  3883   881  3667   675
    278 10970   313   262 29896   322   297 29906 29897   322   278  4670
   2586   304  4017   278  1962  2533   322 11196  1819 29889    13  5453
   6674  4926 29918 29941 29906 29898  4905   518 29941 29896 29901 29900
  29962  2533 29892    13   462   418  1962 11196 29892    13   462   418
   1881   518 29941 29896 29901 29900 29962   297 29896 29892   297 29906
  29892    13   462   418  1881  4670   416    13    13 29871  8014   518
  29941 29896 29901 29900 29962  2533 29918 29893 29936    13 29871  8014
  11196 29918 29893 29936    13    13 29871   594   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29900 29898  2083 29918 29893 29961
  29896 29945 29901 29900  1402 11196 29918 29893 29892   297 29896 29961
  29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901 29900
   1402  4670   416    13 29871   594   672 29918 29896 29953   594   672
  29918 29896 29953 29918 29896 29898  2083 29918 29893 29961 29941 29896
  29901 29896 29953  1402 11196 29892   297 29896 29961 29941 29896 29901
  29896 29953  1402   297 29906 29961 29941 29896 29901 29896 29953  1402
  11196 29918 29893   416    13    13 29871  3566  2533   353  2533 29918
  29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
         29871,  8014, 11196, 29918, 29893, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
         23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,  3695,   262, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918, 29893,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297,
         29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,  3695,   262,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
          6674,  4926, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13, 29871,  8014,
         11196, 29918, 29893, 29936,    13,    13, 29871,   594,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 29893, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918, 29893, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 29893,   416,
            13,    13, 29871,  3566,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 6 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module shifter_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1524
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module shifter_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:70: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:71: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 12 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module shifter_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[3
[[  849  4002   647 ... 29896 29961 29941]]
tensor([[  849,  4002,   647,  ..., 29896, 29961, 29941]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module subtractor_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], ~in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], ~in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module multiplier_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module divider_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module modulus_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit shifter.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module shifter_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

  assign sum = sum_w;

endmodule

//Design a 32-bit comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module comparator_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_w;
  wire cout_w;

  adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_w[31:16], cout, in1[3
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b"/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:138: error: 'comparator_32' has already been declared in this scope.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:119:      : It was declared here as a module.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:147: syntax error\nI give up.\n"
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  87  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871  3566  2533   353  2533 29918 22376 29936    13 29871  3566 11196
    353 11196 29918 22376 29936    13    13 29871   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29900 29898  2083 29918 22376
  29961 29896 29945 29901 29900  1402 11196 29918 22376 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13 29871   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918 22376 29961 29941
  29896 29901 29896 29953  1402 11196 29918 22376 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 22376   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13, 29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,
          3566,  2533,   353,  2533, 29918, 22376, 29936,    13, 29871,  3566,
         11196,   353, 11196, 29918, 22376, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         22376, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         22376, 29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,
          1402,   297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
         11196, 29918, 22376,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  141
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:16: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:17: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13    13
  29871  3566  2533   353  2533 29918 22376 29936    13 29871  3566 11196
    353 11196 29918 22376 29936    13    13 29871   594   672 29918 29896
  29953   594   672 29918 29896 29953 29918 29900 29898  2083 29918 22376
  29961 29896 29945 29901 29900  1402 11196 29918 22376 29892   297 29896
  29961 29896 29945 29901 29900  1402   297 29906 29961 29896 29945 29901
  29900  1402  4670   416    13 29871   594   672 29918 29896 29953   594
    672 29918 29896 29953 29918 29896 29898  2083 29918 22376 29961 29941
  29896 29901 29896 29953  1402 11196 29918 22376 29892   297 29896 29961
  29941 29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901
  29896 29953  1402 11196 29918 22376   416    13    13   355  5453    13
     13   458  4002   647   263 29871 29896 29953 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29896 29953  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29896 29953
  29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29896 29945 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518 29896 29945 29901 29900 29962
   2533 29918 22376 29936    13 29871  8014 11196 29918 22376 29936    13
     13 29871  3566  2533   353  2533 29918 22376 29936    13 29871  3566
  11196   353 11196 29918 22376 29936    13    13 29871   594   672 29918
  29947   594   672 29918 29947 29918 29900 29898  2083 29918 22376 29961
  29955 29901 29900  1402 11196 29918 22376 29892   297 29896 29961 29955
  29901 29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416
     13 29871   594   672 29918 29947   594   672 29918 29947 29918 29896
  29898  2083 29918 22376 29961 29896 29945 29901 29947  1402 11196 29918
  22376 29892   297 29896 29961 29896 29945 29901 29947  1402   297 29906
  29961 29896 29945 29901 29947  1402 11196 29918 22376   416    13    13
    355  5453    13    13   458  4002   647   385 29871 29947 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29947  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29947  2586   995 29892   518 29955 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29947 29898  4905
    518 29955 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29955 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  29871  8014   518 29955 29901 29900 29962  2533 29918 22376 29936    13
  29871  8014 11196 29918 22376 29936    13    13 29871  3566  2533   353
   2533 29918 22376 29936    13 29871  3566 11196   353 11196 29918 22376
  29936    13    13 29871   594   672 29918 29946   594   672 29918 29946
  29918 29900 29898  2083 29918 22376 29961 29941 29901 29900  1402 11196
  29918 22376 29892   297 29896 29961 29941 29901 29900  1402   297 29906
  29961 29941 29901 29900  1402  4670   416    13 29871   594   672 29918
  29946   594   672 29918 29946 29918 29896 29898  2083 29918 22376 29961
  29955 29901 29946  1402 11196 29918 22376 29892   297 29896 29961 29955
  29901 29946  1402   297 29906 29961 29955 29901 29946  1402 11196 29918
  22376   416    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
         29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918, 22376, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672,
         29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900,
         29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918, 22376, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918, 22376,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 22376,   416,    13,    13,   355,  5453,    13,    13,   458,
          4002,   647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672,
         29889,    13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   263,
          2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,
           458,  1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995,
         29892,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,
           263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,
            13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,
           262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,
           304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,
          5453,   594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962,
         11196, 29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           418,  1881,  4670,   416,    13,    13, 29871,  8014,   518, 29896,
         29945, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13, 29871,
          8014, 11196, 29918, 22376, 29936,    13,    13, 29871,  3566,  2533,
           353,  2533, 29918, 22376, 29936,    13, 29871,  3566, 11196,   353,
         11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         22376, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 22376, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         22376, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
         22376,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
         29871,  8014, 11196, 29918, 22376, 29936,    13,    13, 29871,  3566,
          2533,   353,  2533, 29918, 22376, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918, 22376, 29936,    13,    13, 29871,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083,
         29918, 22376, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 22376,
         29892,   297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906,
         29961, 29941, 29901, 29900,  1402,  4670,   416,    13, 29871,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,
          2083, 29918, 22376, 29961, 29955, 29901, 29946,  1402, 11196, 29918,
         22376, 29892,   297, 29896, 29961, 29955, 29901, 29946,  1402,   297,
         29906, 29961, 29955, 29901, 29946,  1402, 11196, 29918, 22376,   416,
            13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  688
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:56: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:57: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_wire[3:2], cout_wire, in1[3:2], in2[3:2], cout_wire);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  assign sum_wire = (in1 ^ in2 ^ cin) ? 1'b1 : 1'b0;
  assign cout_wire = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1451
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

  wire [15:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
  adder_8 adder_8_1(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

  wire [7:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
  adder_4 adder_4_1(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

  wire [3:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
  adder_2 adder_2_1(sum_wire[3:2], cout_wire, in1[3:2], in2[3:2], cout_wire);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

  wire [1:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
  adder_1 adder_1_1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

  wire [0:0] sum_wire;
  wire cout_wire;

  assign sum = sum_wire;
  assign cout = cout_wire;

  assign sum_wire = (in1 ^ in2 ^ cin) ? 1'b1 : 1'b0;
  assign cout_wire = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  88  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;

  assign s1 = in1[0] ^ in2[0];
  assign s2 = in1[1] ^ in2[1];
  assign s3 = in1[2] ^ in2[2];
  assign s4 = in1[3] ^ in2[3];
  assign s5 = in1[4] ^ in2[4];
  assign s6 = in1[5] ^ in2[5];
  assign s7 = in1[6] ^ in2[6];
  assign s8 = in1[7] ^ in2[7];
  assign s9 = in1[8] ^ in2[8];
  assign s10 = in1[9] ^ in2[9];
  assign s11 = in1[10] ^ in2[10];
  assign s12 = in1[11] ^ in2[11];
  assign s13 = in1[12] ^ in2[12];
  assign s14 = in1[13] ^ in2[13];
  assign s15 = in1[14] ^ in2[14];
  assign s16 = in1[15] ^ in2[15];
  assign s17 = in1[16] ^ in2[16];
  assign s18 = in1[17] ^ in2[17];
  assign s19 = in1[18] ^ in2[18];
  assign s20 = in1[19] ^ in2[19];
  assign s21 = in1[20] ^ in2[20];
  assign s22 = in1[21] ^ in2[21];
  assign s23 = in1[22] ^ in2[22];
  assign s24 = in1[23] ^ in2[23];
  assign s25 = in1[24] ^ in2[24];
  assign s26 = in1[25] ^ in2[25];
  assign s27 = in1[26] ^ in2[26];
  assign s28 = in1[27] ^ in2[27];
  assign s29 = in1[28] ^ in2[28];
  assign s30 = in1[29] ^ in2[29];
  assign s31 = in1[30] ^ in2[30];
  assign s32 = in1[31] ^ in2[31];

  assign sum[0] = s1 ^ cin;
  assign sum[1] = s2 ^ s1;
  assign sum[2] = s3 ^ s2;
  assign sum[3] = s4 ^ s3;
  assign sum[4] = s5 ^ s4;
  assign sum[5] = s6 ^ s5;
  assign sum[6] = s7 ^ s6;
  assign sum[7] = s8 ^ s7;
  assign sum[8] = s9 ^ s8;
  assign sum[9] = s10 ^ s9;
  assign sum[10] = s11 ^ s10;
  assign sum[11] = s12 ^ s11;
  assign sum[12] = s13 ^ s12;
  assign sum[13] = s14 ^ s13;
  assign sum[14] = s15 ^ s14;
  assign sum[15] = s16 ^ s15;
  assign sum[16] = s17 ^ s16;
  assign sum[17] = s18 ^ s17;
  assign sum[18] = s19 ^ s18;
  assign sum[19] = s20 ^ s19;
  assign sum[20] = s21 ^ s20;
  assign sum[21] = s22 ^ s21;
  assign sum[22] = s23 ^ s22;
  assign sum[23] = s24 ^ s23;
  assign sum[24] = s25 ^ s24;
  assign sum[25] = s26 ^ s25;
  assign sum[26] = s27 ^ s26;
  assign sum[27] = s28 ^ s27;
  assign sum[28] = s29 ^ s28;
  assign sum[29] = s30 ^ s29;
  assign sum[30] = s31 ^ s30;
  assign sum[31] = s32 ^ s31;

  assign cout = s32 ^ s31;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1273
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;

  assign s1 = in1[0] ^ in2[0];
  assign s2 = in1[1] ^ in2[1];
  assign s3 = in1[2] ^ in2[2];
  assign s4 = in1[3] ^ in2[3];
  assign s5 = in1[4] ^ in2[4];
  assign s6 = in1[5] ^ in2[5];
  assign s7 = in1[6] ^ in2[6];
  assign s8 = in1[7] ^ in2[7];
  assign s9 = in1[8] ^ in2[8];
  assign s10 = in1[9] ^ in2[9];
  assign s11 = in1[10] ^ in2[10];
  assign s12 = in1[11] ^ in2[11];
  assign s13 = in1[12] ^ in2[12];
  assign s14 = in1[13] ^ in2[13];
  assign s15 = in1[14] ^ in2[14];
  assign s16 = in1[15] ^ in2[15];
  assign s17 = in1[16] ^ in2[16];
  assign s18 = in1[17] ^ in2[17];
  assign s19 = in1[18] ^ in2[18];
  assign s20 = in1[19] ^ in2[19];
  assign s21 = in1[20] ^ in2[20];
  assign s22 = in1[21] ^ in2[21];
  assign s23 = in1[22] ^ in2[22];
  assign s24 = in1[23] ^ in2[23];
  assign s25 = in1[24] ^ in2[24];
  assign s26 = in1[25] ^ in2[25];
  assign s27 = in1[26] ^ in2[26];
  assign s28 = in1[27] ^ in2[27];
  assign s29 = in1[28] ^ in2[28];
  assign s30 = in1[29] ^ in2[29];
  assign s31 = in1[30] ^ in2[30];
  assign s32 = in1[31] ^ in2[31];

  assign sum[0] = s1 ^ cin;
  assign sum[1] = s2 ^ s1;
  assign sum[2] = s3 ^ s2;
  assign sum[3] = s4 ^ s3;
  assign sum[4] = s5 ^ s4;
  assign sum[5] = s6 ^ s5;
  assign sum[6] = s7 ^ s6;
  assign sum[7] = s8 ^ s7;
  assign sum[8] = s9 ^ s8;
  assign sum[9] = s10 ^ s9;
  assign sum[10] = s11 ^ s10;
  assign sum[11] = s12 ^ s11;
  assign sum[12] = s13 ^ s12;
  assign sum[13] = s14 ^ s13;
  assign sum[14] = s15 ^ s14;
  assign sum[15] = s16 ^ s15;
  assign sum[16] = s17 ^ s16;
  assign sum[17] = s18 ^ s17;
  assign sum[18] = s19 ^ s18;
  assign sum[19] = s20 ^ s19;
  assign sum[20] = s21 ^ s20;
  assign sum[21] = s22 ^ s21;
  assign sum[22] = s23 ^ s22;
  assign sum[23] = s24 ^ s23;
  assign sum[24] = s25 ^ s24;
  assign sum[25] = s26 ^ s25;
  assign sum[26] = s27 ^ s26;
  assign sum[27] = s28 ^ s27;
  assign sum[28] = s29 ^ s28;
  assign sum[29] = s30 ^ s29;
  assign sum[30] = s31 ^ s30;
  assign sum[31] = s32 ^ s31;

  assign cout = s32 ^ s31;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  89  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2923 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2923   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13
    462   965  1962 11196 29892    13   462   965  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   965
   1881  4670   416    13    13 29871  8014   518 29941 29896 29901 29900
  29962  2923 29918  7382 29936    13 29871  8014 11196 29918  7382 29936
     13    13 29871 23197   272 29918 29896 29953 23197   272 29918 29896
  29953 29918 29900 29898 12765 29918  7382 29961 29896 29945 29901 29900
   1402 11196 29918  7382 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416    13
  29871 23197   272 29918 29896 29953 23197   272 29918 29896 29953 29918
  29896 29898 12765 29918  7382 29961 29941 29896 29901 29896 29953  1402
  11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382   416
     13    13 29871  3566  2923   353  2923 29918  7382 29936    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462  9651  1962 11196 29892    13   462  9651  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462  9651  1881  4670   416    13    13 29871  8014   518 29941 29896
  29901 29900 29962  3234 29918  7382 29936    13 29871  8014 11196 29918
   7382 29936    13    13 29871  6674  4926 29918 29896 29953  6674  4926
  29918 29896 29953 29918 29900 29898  4704 29918  7382 29961 29896 29945
  29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13 29871  6674  4926 29918 29896 29953  6674  4926 29918 29896
  29953 29918 29896 29898  4704 29918  7382 29961 29941 29896 29901 29896
  29953  1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953
   1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918
   7382   416    13    13 29871  3566  3234   353  3234 29918  7382 29936
     13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2923,   322, 11196,  1819, 29889,    13,  5453,
         23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29892,    13,   462,   965,  1962, 11196,
         29892,    13,   462,   965,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   965,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29918,  7382, 29936,    13, 29871,  8014,
         11196, 29918,  7382, 29936,    13,    13, 29871, 23197,   272, 29918,
         29896, 29953, 23197,   272, 29918, 29896, 29953, 29918, 29900, 29898,
         12765, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871, 23197,   272, 29918, 29896, 29953, 23197,   272,
         29918, 29896, 29953, 29918, 29896, 29898, 12765, 29918,  7382, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,
            13,    13, 29871,  3566,  2923,   353,  2923, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   263,
         29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,    13,   458,
          8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941,
         29896, 29901, 29900, 29962,  3234, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  3234,   322, 11196,  1819, 29889,    13,  5453,  6674,  4926,
         29918, 29941, 29906, 29898,  4905,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29892,    13,   462,  9651,  1962, 11196, 29892,    13,
           462,  9651,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297,
         29896, 29892,   297, 29906, 29892,    13,   462,  9651,  1881,  4670,
           416,    13,    13, 29871,  8014,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29918,  7382, 29936,    13, 29871,  8014, 11196, 29918,
          7382, 29936,    13,    13, 29871,  6674,  4926, 29918, 29896, 29953,
          6674,  4926, 29918, 29896, 29953, 29918, 29900, 29898,  4704, 29918,
          7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,
         29871,  6674,  4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896,
         29953, 29918, 29896, 29898,  4704, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
         29871,  3566,  3234,   353,  3234, 29918,  7382, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  686
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift_left, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift_left and cout values.
module left_shift_32(output [31:0] shift_left,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

  wire [31:0] shift_left_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_left_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_left_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift_left = shift_left_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1553
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift_left, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift_left and cout values.
module left_shift_32(output [31:0] shift_left,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

  wire [31:0] shift_left_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_left_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_left_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift_left = shift_left_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:70: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:71: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        left_shift_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift_left, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift_left and cout values.
module left_shift_32(output [31:0] shift_left,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

  wire [31:0] shift_left_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_left_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_left_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift_left = shift_left_temp;

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift_right, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift_right and cout values.
module right_shift_32(output [31:0] shift_right,
                              output cout,
                              input [31:0] in1, in2,
                              input cin);

  wire [31:0] shift_right_temp;
  wire cout_temp;

  right_shift_16 right_shift_16_0(shift_right_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  right_shift_16 right_shift_16_1(shift_right_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift_right = shift_right_temp;

endmodule

//Design a 32-bit less than comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] less_than, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output less_than and cout values.
module less_than_32(output [31:0] less_than,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] less_than_temp;
  wire cout_temp;

  less_than_16 less_than_16_0
[[  849  4002   647 ... 29953 29918 29900]]
tensor([[  849,  4002,   647,  ..., 29953, 29918, 29900]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                           output cout,
                           input [31:0] in1, in2,
                           input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                         output cout,
                         input [31:0] in1, in2,
                         input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                          output cout,
                          input [31:0] in1, in2,
                          input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift_left, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift_left and cout values.
module left_shift_32(output [31:0] shift_left,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

  wire [31:0] shift_left_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_left_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_left_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift_left = shift_left_temp;

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift_right, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift_right and cout values.
module right_shift_32(output [31:0] shift_right,
                              output cout,
                              input [31:0] in1, in2,
                              input cin);

  wire [31:0] shift_right_temp;
  wire cout_temp;

  right_shift_16 right_shift_16_0(shift_right_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  right_shift_16 right_shift_16_1(shift_right_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift_right = shift_right_temp;

endmodule

//Design a 32-bit less than comparator.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] less_than, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output less_than and cout values.
module less_than_32(output [31:0] less_than,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] less_than_temp;
  wire cout_temp;

  less_than_16 less_than_16_0
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:146: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  90  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;

    assign s1 = in1[0] ^ in2[0] ^ cin;
    assign s2 = in1[1] ^ in2[1] ^ s1;
    assign s3 = in1[2] ^ in2[2] ^ s2;
    assign s4 = in1[3] ^ in2[3] ^ s3;
    assign s5 = in1[4] ^ in2[4] ^ s4;
    assign s6 = in1[5] ^ in2[5] ^ s5;
    assign s7 = in1[6] ^ in2[6] ^ s6;
    assign s8 = in1[7] ^ in2[7] ^ s7;
    assign s9 = in1[8] ^ in2[8] ^ s8;
    assign s10 = in1[9] ^ in2[9] ^ s9;
    assign s11 = in1[10] ^ in2[10] ^ s10;
    assign s12 = in1[11] ^ in2[11] ^ s11;
    assign s13 = in1[12] ^ in2[12] ^ s12;
    assign s14 = in1[13] ^ in2[13] ^ s13;
    assign s15 = in1[14] ^ in2[14] ^ s14;
    assign s16 = in1[15] ^ in2[15] ^ s15;
    assign s17 = in1[16] ^ in2[16] ^ s16;
    assign s18 = in1[17] ^ in2[17] ^ s17;
    assign s19 = in1[18] ^ in2[18] ^ s18;
    assign s20 = in1[19] ^ in2[19] ^ s19;
    assign s21 = in1[20] ^ in2[20] ^ s20;
    assign s22 = in1[21] ^ in2[21] ^ s21;
    assign s23 = in1[22] ^ in2[22] ^ s22;
    assign s24 = in1[23] ^ in2[23] ^ s23;
    assign s25 = in1[24] ^ in2[24] ^ s24;
    assign s26 = in1[25] ^ in2[25] ^ s25;
    assign s27 = in1[26] ^ in2[26] ^ s26;
    assign s28 = in1[27] ^ in2[27] ^ s27;
    assign s29 = in1[28] ^ in2[28] ^ s28;
    assign s30 = in1[29] ^ in2[29] ^ s29;
    assign s31 = in1[30] ^ in2[30] ^ s30;
    assign s32 = in1[31] ^ in2[31] ^ s31;

    assign sum = {s32, s31, s30, s29, s28, s27, s26, s25, s24, s23, s22, s21, s20, s19, s18, s17, s16, s15, s14, s13, s12, s11, s10, s9, s8, s7, s6, s5, s4, s3, s2, s1};
    assign cout = s1;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[   1,  849, 4002,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1027
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;

    assign s1 = in1[0] ^ in2[0] ^ cin;
    assign s2 = in1[1] ^ in2[1] ^ s1;
    assign s3 = in1[2] ^ in2[2] ^ s2;
    assign s4 = in1[3] ^ in2[3] ^ s3;
    assign s5 = in1[4] ^ in2[4] ^ s4;
    assign s6 = in1[5] ^ in2[5] ^ s5;
    assign s7 = in1[6] ^ in2[6] ^ s6;
    assign s8 = in1[7] ^ in2[7] ^ s7;
    assign s9 = in1[8] ^ in2[8] ^ s8;
    assign s10 = in1[9] ^ in2[9] ^ s9;
    assign s11 = in1[10] ^ in2[10] ^ s10;
    assign s12 = in1[11] ^ in2[11] ^ s11;
    assign s13 = in1[12] ^ in2[12] ^ s12;
    assign s14 = in1[13] ^ in2[13] ^ s13;
    assign s15 = in1[14] ^ in2[14] ^ s14;
    assign s16 = in1[15] ^ in2[15] ^ s15;
    assign s17 = in1[16] ^ in2[16] ^ s16;
    assign s18 = in1[17] ^ in2[17] ^ s17;
    assign s19 = in1[18] ^ in2[18] ^ s18;
    assign s20 = in1[19] ^ in2[19] ^ s19;
    assign s21 = in1[20] ^ in2[20] ^ s20;
    assign s22 = in1[21] ^ in2[21] ^ s21;
    assign s23 = in1[22] ^ in2[22] ^ s22;
    assign s24 = in1[23] ^ in2[23] ^ s23;
    assign s25 = in1[24] ^ in2[24] ^ s24;
    assign s26 = in1[25] ^ in2[25] ^ s25;
    assign s27 = in1[26] ^ in2[26] ^ s26;
    assign s28 = in1[27] ^ in2[27] ^ s27;
    assign s29 = in1[28] ^ in2[28] ^ s28;
    assign s30 = in1[29] ^ in2[29] ^ s29;
    assign s31 = in1[30] ^ in2[30] ^ s30;
    assign s32 = in1[31] ^ in2[31] ^ s31;

    assign sum = {s32, s31, s30, s29, s28, s27, s26, s25, s24, s23, s22, s21, s20, s19, s18, s17, s16, s15, s14, s13, s12, s11, s10, s9, s8, s7, s6, s5, s4, s3, s2, s1};
    assign cout = s1;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  91  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign s = in1 + in2 + cin;
  assign cout = s[32];
  assign sum = s[31:0];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962   269
  29936    13 29871  8014   274 29936    13    13 29871  3566   269   353
    297 29896   718   297 29906   718  4670 29936    13 29871  3566 11196
    353   269 29961 29941 29906  1385    13 29871  3566  2533   353   269
  29961 29941 29896 29901 29900  1385    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,   269, 29936,    13, 29871,
          8014,   274, 29936,    13,    13, 29871,  3566,   269,   353,   297,
         29896,   718,   297, 29906,   718,  4670, 29936,    13, 29871,  3566,
         11196,   353,   269, 29961, 29941, 29906,  1385,    13, 29871,  3566,
          2533,   353,   269, 29961, 29941, 29896, 29901, 29900,  1385,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  56
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s;
  wire c;

  assign s = in1 + in2 + cin;
  assign cout = s[32];
  assign sum = s[31:0];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  92  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire cout_temp;

    assign s = in1 + in2 + cin;
    assign cout = s[32];

    assign sum = s[31:0];

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962   269
  29936    13  1678  8014 11196 29918  7382 29936    13    13  1678  3566
    269   353   297 29896   718   297 29906   718  4670 29936    13  1678
   3566 11196   353   269 29961 29941 29906  1385    13    13  1678  3566
   2533   353   269 29961 29941 29896 29901 29900  1385    13    13   355
   5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,   269, 29936,    13,  1678,
          8014, 11196, 29918,  7382, 29936,    13,    13,  1678,  3566,   269,
           353,   297, 29896,   718,   297, 29906,   718,  4670, 29936,    13,
          1678,  3566, 11196,   353,   269, 29961, 29941, 29906,  1385,    13,
            13,  1678,  3566,  2533,   353,   269, 29961, 29941, 29896, 29901,
         29900,  1385,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  59
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire cout_temp;

    assign s = in1 + in2 + cin;
    assign cout = s[32];

    assign sum = s[31:0];

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  93  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

assign sum = sum_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
  22376 29936    13 22376 11196 29918 22376 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918 22376 29961 29896 29945 29901 29900  1402 11196 29918 22376 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918 22376 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 22376   416    13    13 16645  2533   353  2533
  29918 22376 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 22376,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
         22376, 11196, 29918, 22376, 29936,    13,    13,   328,   672, 29918,
         29896, 29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,
          2083, 29918, 22376, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918, 22376, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,   328,   672, 29918, 29896, 29953,   594,   672, 29918,
         29896, 29953, 29918, 29896, 29898,  2083, 29918, 22376, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376,   416,    13,
            13, 16645,  2533,   353,  2533, 29918, 22376, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  125
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_wire;
wire cout_wire;

adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_wire;
wire cout_wire;

adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

assign sum = sum_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 22376   518 29941 29896 29901 29900 29962  2533 29918
  22376 29936    13 22376 11196 29918 22376 29936    13    13   328   672
  29918 29896 29953   594   672 29918 29896 29953 29918 29900 29898  2083
  29918 22376 29961 29896 29945 29901 29900  1402 11196 29918 22376 29892
    297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961 29896
  29945 29901 29900  1402  4670   416    13   328   672 29918 29896 29953
    594   672 29918 29896 29953 29918 29896 29898  2083 29918 22376 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918 22376   416    13    13 16645  2533   353  2533
  29918 22376 29936    13    13   355  5453    13    13   458  4002   647
    263 29871 29896 29953 29899  2966   594   672 29889    13   458  8439
    526  1023 29871 29896 29953  2586 10970   313   262 29896   322   297
  29906 29897   322   263  2323  8677 29899   262  1881  2586 29892  4670
  29889    13   458  1576 14391   526   263 29871 29896 29953  2586   995
  29892   518 29896 29945 29901 29900 29962  2533 29892   322   263  2323
   8677 29899   449  1962  2586 29892 11196 29889    13   458  1576  3883
    881  3667   675   278 10970   313   262 29896   322   297 29906 29897
    322   278  4670  2586   304  4017   278  1962  2533   322 11196  1819
  29889    13  5453   594   672 29918 29896 29953 29898  4905   518 29896
  29945 29901 29900 29962  2533 29892    13   462   418  1962 11196 29892
     13   462   418  1881   518 29896 29945 29901 29900 29962   297 29896
  29892   297 29906 29892    13   462   418  1881  4670   416    13    13
  22376   518 29896 29945 29901 29900 29962  2533 29918 22376 29936    13
  22376 11196 29918 22376 29936    13    13   328   672 29918 29947   594
    672 29918 29947 29918 29900 29898  2083 29918 22376 29961 29955 29901
  29900  1402 11196 29918 22376 29892   297 29896 29961 29955 29901 29900
   1402   297 29906 29961 29955 29901 29900  1402  4670   416    13   328
    672 29918 29947   594   672 29918 29947 29918 29896 29898  2083 29918
  22376 29961 29896 29945 29901 29947  1402 11196 29892   297 29896 29961
  29896 29945 29901 29947  1402   297 29906 29961 29896 29945 29901 29947
   1402 11196 29918 22376   416    13    13 16645  2533   353  2533 29918
  22376 29936    13    13   355  5453    13    13   458  4002   647   385
  29871 29947 29899  2966   594   672 29889    13   458  8439   526  1023
  29871 29947  2586 10970   313   262 29896   322   297 29906 29897   322
    263  2323  8677 29899   262  1881  2586 29892  4670 29889    13   458
   1576 14391   526   263 29871 29947  2586   995 29892   518 29955 29901
  29900 29962  2533 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  2533   322 11196  1819 29889    13  5453   594   672
  29918 29947 29898  4905   518 29955 29901 29900 29962  2533 29892    13
    462   268  1962 11196 29892    13   462   268  1881   518 29955 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   268  1881
   4670   416    13    13 22376   518 29955 29901 29900 29962  2533 29918
  22376 29936    13 22376 11196 29918 22376 29936    13    13   328   672
  29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918 22376
  29961 29941 29901 29900  1402 11196 29918 22376 29892   297 29896 29961
  29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402  4670
    416    13   328   672 29918 29946   594   672 29918 29946 29918 29896
  29898  2083 29918 22376 29961 29955 29901 29946  1402 11196 29892   297
  29896 29961 29955 29901 29946  1402   297 29906 29961 29955 29901 29946
   1402 11196 29918 22376   416    13    13 16645  2533   353  2533 29918
  22376 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 22376,   518, 29941,
         29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13, 22376,
         11196, 29918, 22376, 29936,    13,    13,   328,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29900, 29898,  2083,
         29918, 22376, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,
         22376, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,
            13,   328,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918, 29896, 29898,  2083, 29918, 22376, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918, 22376,   416,    13,    13,
         16645,  2533,   353,  2533, 29918, 22376, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29896, 29953,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896, 29953,
         29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,
            13,   462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,
           518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,   297,
         29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,    13,
         22376,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29918, 22376,
         29936,    13, 22376, 11196, 29918, 22376, 29936,    13,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29900, 29898,
          2083, 29918, 22376, 29961, 29955, 29901, 29900,  1402, 11196, 29918,
         22376, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,   297,
         29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,   328,
           672, 29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,
          2083, 29918, 22376, 29961, 29896, 29945, 29901, 29947,  1402, 11196,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 22376,
           416,    13,    13, 16645,  2533,   353,  2533, 29918, 22376, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13, 22376,   518, 29955, 29901,
         29900, 29962,  2533, 29918, 22376, 29936,    13, 22376, 11196, 29918,
         22376, 29936,    13,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29900, 29898,  2083, 29918, 22376, 29961, 29941,
         29901, 29900,  1402, 11196, 29918, 22376, 29892,   297, 29896, 29961,
         29941, 29901, 29900,  1402,   297, 29906, 29961, 29941, 29901, 29900,
          1402,  4670,   416,    13,   328,   672, 29918, 29946,   594,   672,
         29918, 29946, 29918, 29896, 29898,  2083, 29918, 22376, 29961, 29955,
         29901, 29946,  1402, 11196, 29892,   297, 29896, 29961, 29955, 29901,
         29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,  1402, 11196,
         29918, 22376,   416,    13,    13, 16645,  2533,   353,  2533, 29918,
         22376, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  640
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_wire;
wire cout_wire;

adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_wire;
wire cout_wire;

adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

assign sum = sum_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_wire;
wire cout_wire;

adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_wire;
wire cout_wire;

adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_wire;
wire cout_wire;

adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_wire[3:2], cout, in1[3:2], in2[3:2], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_wire;
wire cout_wire;

adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_wire[1], cout, in1[1], in2[1], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

wire [0:0] sum_wire;
wire cout_wire;

assign sum_wire[0] = in1[0] ^ in2[0] ^ cin;
assign cout_wire = (in1[0] & in2[0]) | (cin & (in1[0] | in2[0]));

assign sum = sum_wire;
assign cout = cout_wire;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1368
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

adder_16 adder_16_0(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);
adder_16 adder_16_1(sum_wire[31:16], cout, in1[31:16], in2[31:16], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

wire [15:0] sum_wire;
wire cout_wire;

adder_8 adder_8_0(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);
adder_8 adder_8_1(sum_wire[15:8], cout, in1[15:8], in2[15:8], cout_wire);

assign sum = sum_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

wire [7:0] sum_wire;
wire cout_wire;

adder_4 adder_4_0(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);
adder_4 adder_4_1(sum_wire[7:4], cout, in1[7:4], in2[7:4], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

wire [3:0] sum_wire;
wire cout_wire;

adder_2 adder_2_0(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);
adder_2 adder_2_1(sum_wire[3:2], cout, in1[3:2], in2[3:2], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

wire [1:0] sum_wire;
wire cout_wire;

adder_1 adder_1_0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
adder_1 adder_1_1(sum_wire[1], cout, in1[1], in2[1], cout_wire);

assign sum = sum_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

wire [0:0] sum_wire;
wire cout_wire;

assign sum_wire[0] = in1[0] ^ in2[0] ^ cin;
assign cout_wire = (in1[0] & in2[0]) | (cin & (in1[0] | in2[0]));

assign sum = sum_wire;
assign cout = cout_wire;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.758313

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.57
Delay value for the chip design is:  1197.83
Product:  364823.0831
Score (1/chip area):  0.11087362615742738
----GREEDY LLM OUTPUT - ITERATION:  94  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp_sum;
  wire cout_temp;

  assign temp_sum = in1 + in2;
  assign cout_temp = cin ^ (in1[31] & in2[31]) ^ (in1[31] & temp_sum[31]) ^ (in2[31] & temp_sum[31]);

  assign sum = temp_sum;
  assign cout = cout_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  5694
  29918  2083 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871  3566  5694 29918  2083   353   297 29896   718   297 29906 29936
     13 29871  3566 11196 29918  7382   353  4670  6228   313   262 29896
  29961 29941 29896 29962   669   297 29906 29961 29941 29896  2314  6228
    313   262 29896 29961 29941 29896 29962   669  5694 29918  2083 29961
  29941 29896  2314  6228   313   262 29906 29961 29941 29896 29962   669
   5694 29918  2083 29961 29941 29896  5691    13    13 29871  3566  2533
    353  5694 29918  2083 29936    13 29871  3566 11196   353 11196 29918
   7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  5694, 29918,  2083, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
          3566,  5694, 29918,  2083,   353,   297, 29896,   718,   297, 29906,
         29936,    13, 29871,  3566, 11196, 29918,  7382,   353,  4670,  6228,
           313,   262, 29896, 29961, 29941, 29896, 29962,   669,   297, 29906,
         29961, 29941, 29896,  2314,  6228,   313,   262, 29896, 29961, 29941,
         29896, 29962,   669,  5694, 29918,  2083, 29961, 29941, 29896,  2314,
          6228,   313,   262, 29906, 29961, 29941, 29896, 29962,   669,  5694,
         29918,  2083, 29961, 29941, 29896,  5691,    13,    13, 29871,  3566,
          2533,   353,  5694, 29918,  2083, 29936,    13, 29871,  3566, 11196,
           353, 11196, 29918,  7382, 29936,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  112
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] temp_sum;
  wire cout_temp;

  assign temp_sum = in1 + in2;
  assign cout_temp = cin ^ (in1[31] & in2[31]) ^ (in1[31] & temp_sum[31]) ^ (in2[31] & temp_sum[31]);

  assign sum = temp_sum;
  assign cout = cout_temp;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 failed\n'

MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  95  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918  7382
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13,  1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901,
         29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,
          4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961,
         29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,
            13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  116
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29896 29898  2083 29961 29896 29945 29901 29900  1402 11196 29918  7382
  29892   297 29896 29961 29896 29945 29901 29900  1402   297 29906 29961
  29896 29945 29901 29900  1402  4670   416    13  1678   594   672 29918
  29896 29953   594   672 29918 29896 29953 29918 29906 29898  2083 29961
  29941 29896 29901 29896 29953  1402 11196 29892   297 29896 29961 29941
  29896 29901 29896 29953  1402   297 29906 29961 29941 29896 29901 29896
  29953  1402 11196 29918  7382   416    13    13   355  5453    13    13
    458  4002   647   263 29871 29896 29953 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29896 29953  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29896
  29953  2586   995 29892   518 29896 29945 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29896 29953 29898
   4905   518 29896 29945 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29896 29945 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29896 29945 29901 29900 29962  2533
  29918  7382 29936    13  1678  8014 11196 29918  7382 29936    13    13
   1678   594   672 29918 29947   594   672 29918 29947 29918 29896 29898
   2083 29961 29955 29901 29900  1402 11196 29918  7382 29892   297 29896
  29961 29955 29901 29900  1402   297 29906 29961 29955 29901 29900  1402
   4670   416    13  1678   594   672 29918 29947   594   672 29918 29947
  29918 29906 29898  2083 29961 29896 29945 29901 29947  1402 11196 29892
    297 29896 29961 29896 29945 29901 29947  1402   297 29906 29961 29896
  29945 29901 29947  1402 11196 29918  7382   416    13    13   355  5453
     13    13   458  4002   647   385 29871 29947 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29947  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   385 29871 29947
   2586   995 29892   518 29955 29901 29900 29962  2533 29892   322   263
   2323  8677 29899   449  1962  2586 29892 11196 29889    13   458  1576
   3883   881  3667   675   278 10970   313   262 29896   322   297 29906
  29897   322   278  4670  2586   304  4017   278  1962  2533   322 11196
   1819 29889    13  5453   594   672 29918 29947 29898  4905   518 29955
  29901 29900 29962  2533 29892    13   462   418  1962 11196 29892    13
    462   418  1881   518 29955 29901 29900 29962   297 29896 29892   297
  29906 29892    13   462   418  1881  4670   416    13    13  1678  8014
    518 29955 29901 29900 29962  2533 29918  7382 29936    13  1678  8014
  11196 29918  7382 29936    13    13  1678   594   672 29918 29946   594
    672 29918 29946 29918 29896 29898  2083 29961 29941 29901 29900  1402
  11196 29918  7382 29892   297 29896 29961 29941 29901 29900  1402   297
  29906 29961 29941 29901 29900  1402  4670   416    13  1678   594   672
  29918 29946   594   672 29918 29946 29918 29906 29898  2083 29961 29955
  29901 29946  1402 11196 29892   297 29896 29961 29955 29901 29946  1402
    297 29906 29961 29955 29901 29946  1402 11196 29918  7382   416    13
     13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29896, 29898,  2083, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13,  1678,   594,   672, 29918, 29896, 29953,   594,   672,
         29918, 29896, 29953, 29918, 29906, 29898,  2083, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
           355,  5453,    13,    13,   458,  4002,   647,   263, 29871, 29896,
         29953, 29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,
          1023, 29871, 29896, 29953,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29896, 29953,  2586,   995, 29892,   518, 29896, 29945, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29896,
         29953, 29898,  4905,   518, 29896, 29945, 29901, 29900, 29962,  2533,
         29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,   418,
          1881,   518, 29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,
           297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,    13,
            13,  1678,  8014,   518, 29896, 29945, 29901, 29900, 29962,  2533,
         29918,  7382, 29936,    13,  1678,  8014, 11196, 29918,  7382, 29936,
            13,    13,  1678,   594,   672, 29918, 29947,   594,   672, 29918,
         29947, 29918, 29896, 29898,  2083, 29961, 29955, 29901, 29900,  1402,
         11196, 29918,  7382, 29892,   297, 29896, 29961, 29955, 29901, 29900,
          1402,   297, 29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,
            13,  1678,   594,   672, 29918, 29947,   594,   672, 29918, 29947,
         29918, 29906, 29898,  2083, 29961, 29896, 29945, 29901, 29947,  1402,
         11196, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,
           297, 29906, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918,
          7382,   416,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   385, 29871, 29947, 29899,  2966,   594,   672, 29889,    13,
           458,  8439,   526,  1023, 29871, 29947,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   385, 29871, 29947,  2586,   995, 29892,   518, 29955, 29901,
         29900, 29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,
          1962,  2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,
          3667,   675,   278, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,
           322, 11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29947,
         29898,  4905,   518, 29955, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29955, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29955, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
          1678,  8014, 11196, 29918,  7382, 29936,    13,    13,  1678,   594,
           672, 29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,
          2083, 29961, 29941, 29901, 29900,  1402, 11196, 29918,  7382, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29906, 29898,  2083,
         29961, 29955, 29901, 29946,  1402, 11196, 29892,   297, 29896, 29961,
         29955, 29901, 29946,  1402,   297, 29906, 29961, 29955, 29901, 29946,
          1402, 11196, 29918,  7382,   416,    13,    13,   355,  5453]],
       device='cuda:0')
Checking if done:
tokens generated:  613
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:47: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:48: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum[3:2], cout, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum[1], cout, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1269
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_temp;
    wire cout_temp;

    adder_16 adder_16_1(sum[15:0], cout_temp, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_2(sum[31:16], cout, in1[31:16], in2[31:16], cout_temp);

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_temp;
    wire cout_temp;

    adder_8 adder_8_1(sum[7:0], cout_temp, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_2(sum[15:8], cout, in1[15:8], in2[15:8], cout_temp);

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are an 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_temp;
    wire cout_temp;

    adder_4 adder_4_1(sum[3:0], cout_temp, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_2(sum[7:4], cout, in1[7:4], in2[7:4], cout_temp);

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_temp;
    wire cout_temp;

    adder_2 adder_2_1(sum[1:0], cout_temp, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_2(sum[3:2], cout, in1[3:2], in2[3:2], cout_temp);

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_temp;
    wire cout_temp;

    adder_1 adder_1_1(sum[0], cout_temp, in1[0], in2[0], cin);
    adder_1 adder_1_2(sum[1], cout, in1[1], in2[1], cout_temp);

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    assign sum = in1 ^ in2 ^ cin;
    assign cout = (in1 & in2) | (in1 & cin) | (in2 & cin);

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.752528

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
----GREEDY LLM OUTPUT - ITERATION:  96  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13    13
   1678   849 29871 29941 29906 29899  2966   594   672    13  1678   594
    672 29918 29941 29906 29918 29896   594   672 29918 29941 29906 29918
  29896 29918  2611 29898  2083 29918 22376 29892 11196 29918 22376 29892
    297 29896 29892   297 29906 29892  4670   416    13    13  1678   849
   4007   647 14391    13  1678  3566  2533   353  2533 29918 22376 29936
     13  1678  3566 11196   353 11196 29918 22376 29936    13    13   355
   5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,
            13,  1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,
           849, 29871, 29941, 29906, 29899,  2966,   594,   672,    13,  1678,
           594,   672, 29918, 29941, 29906, 29918, 29896,   594,   672, 29918,
         29941, 29906, 29918, 29896, 29918,  2611, 29898,  2083, 29918, 22376,
         29892, 11196, 29918, 22376, 29892,   297, 29896, 29892,   297, 29906,
         29892,  4670,   416,    13,    13,  1678,   849,  4007,   647, 14391,
            13,  1678,  3566,  2533,   353,  2533, 29918, 22376, 29936,    13,
          1678,  3566, 11196,   353, 11196, 29918, 22376, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  95
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_32_1\n2 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_1 referenced 1 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 16-bit adder
    adder_16 adder_16_inst(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);

    // 16-bit adder
    adder_16 adder_16_inst2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wire;
    wire cout_wire;

    // 8-bit adder
    adder_8 adder_8_inst(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);

    // 8-bit adder
    adder_8 adder_8_inst2(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 22376 29936    13  1678  8014 11196 29918 22376 29936    13    13
   1678   849 29871 29941 29906 29899  2966   594   672    13  1678   594
    672 29918 29941 29906 29918 29896   594   672 29918 29941 29906 29918
  29896 29918  2611 29898  2083 29918 22376 29892 11196 29918 22376 29892
    297 29896 29892   297 29906 29892  4670   416    13    13  1678   849
   4007   647 14391    13  1678  3566  2533   353  2533 29918 22376 29936
     13  1678  3566 11196   353 11196 29918 22376 29936    13    13   355
   5453    13    13   458  4002   647   263 29871 29941 29906 29899  2966
    594   672 29889    13   458  8439   526  1023 29871 29941 29906  2586
  10970   313   262 29896   322   297 29906 29897   322   263  2323  8677
  29899   262  1881  2586 29892  4670 29889    13   458  1576 14391   526
    263 29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900
  29962  2533 29892   322   263  2323  8677 29899   449  1962  2586 29892
  11196 29889    13   458  1576  3883   881  3667   675   278 10970   313
    262 29896   322   297 29906 29897   322   278  4670  2586   304  4017
    278  1962  2533   322 11196  1819 29889    13  5453   594   672 29918
  29941 29906 29918 29896 29898  4905   518 29941 29896 29901 29900 29962
   2533 29892    13   462   418  1962 11196 29892    13   462   418  1881
    518 29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892
     13   462   418  1881  4670   416    13    13  1678  8014   518 29941
  29896 29901 29900 29962  2533 29918 22376 29936    13  1678  8014 11196
  29918 22376 29936    13    13  1678   849 29871 29896 29953 29899  2966
    594   672    13  1678   594   672 29918 29896 29953   594   672 29918
  29896 29953 29918  2611 29898  2083 29918 22376 29961 29896 29945 29901
  29900  1402 11196 29918 22376 29892   297 29896 29961 29896 29945 29901
  29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416
     13    13  1678   849 29871 29896 29953 29899  2966   594   672    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
   2611 29906 29898  2083 29918 22376 29961 29941 29896 29901 29896 29953
   1402 11196 29918 22376 29892   297 29896 29961 29941 29896 29901 29896
  29953  1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196
  29918 22376   416    13    13  1678   849  4007   647 14391    13  1678
   3566  2533   353  2533 29918 22376 29936    13  1678  3566 11196   353
  11196 29918 22376 29936    13    13   355  5453    13    13   458  4002
    647   263 29871 29896 29953 29899  2966   594   672 29889    13   458
   8439   526  1023 29871 29896 29953  2586 10970   313   262 29896   322
    297 29906 29897   322   263  2323  8677 29899   262  1881  2586 29892
   4670 29889    13   458  1576 14391   526   263 29871 29896 29953  2586
    995 29892   518 29896 29945 29901 29900 29962  2533 29892   322   263
   2323  8677 29899   449  1962  2586 29892 11196 29889    13   458  1576
   3883   881  3667   675   278 10970   313   262 29896   322   297 29906
  29897   322   278  4670  2586   304  4017   278  1962  2533   322 11196
   1819 29889    13  5453   594   672 29918 29896 29953 29898  4905   518
  29896 29945 29901 29900 29962  2533 29892    13   462   418  1962 11196
  29892    13   462   418  1881   518 29896 29945 29901 29900 29962   297
  29896 29892   297 29906 29892    13   462   418  1881  4670   416    13
     13  1678  8014   518 29896 29945 29901 29900 29962  2533 29918 22376
  29936    13  1678  8014 11196 29918 22376 29936    13    13  1678   849
  29871 29947 29899  2966   594   672    13  1678   594   672 29918 29947
    594   672 29918 29947 29918  2611 29898  2083 29918 22376 29961 29955
  29901 29900  1402 11196 29918 22376 29892   297 29896 29961 29955 29901
  29900  1402   297 29906 29961 29955 29901 29900  1402  4670   416    13
     13  1678   849 29871 29947 29899  2966   594   672    13  1678   594
    672 29918 29947   594   672 29918 29947 29918  2611 29906 29898  2083
  29918 22376 29961 29896 29945 29901 29947  1402 11196 29918 22376 29892
    297 29896 29961 29896 29945 29901 29947  1402   297 29906 29961 29896
  29945 29901 29947  1402 11196 29918 22376   416    13    13  1678   849
   4007   647 14391    13  1678  3566  2533   353  2533 29918 22376 29936
     13  1678  3566 11196   353 11196 29918 22376 29936    13    13   355
   5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 22376, 29936,    13,
          1678,  8014, 11196, 29918, 22376, 29936,    13,    13,  1678,   849,
         29871, 29941, 29906, 29899,  2966,   594,   672,    13,  1678,   594,
           672, 29918, 29941, 29906, 29918, 29896,   594,   672, 29918, 29941,
         29906, 29918, 29896, 29918,  2611, 29898,  2083, 29918, 22376, 29892,
         11196, 29918, 22376, 29892,   297, 29896, 29892,   297, 29906, 29892,
          4670,   416,    13,    13,  1678,   849,  4007,   647, 14391,    13,
          1678,  3566,  2533,   353,  2533, 29918, 22376, 29936,    13,  1678,
          3566, 11196,   353, 11196, 29918, 22376, 29936,    13,    13,   355,
          5453,    13,    13,   458,  4002,   647,   263, 29871, 29941, 29906,
         29899,  2966,   594,   672, 29889,    13,   458,  8439,   526,  1023,
         29871, 29941, 29906,  2586, 10970,   313,   262, 29896,   322,   297,
         29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586,
         29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871,
         29941, 29906,  2586,   995, 29892,   518, 29941, 29896, 29901, 29900,
         29962,  2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,
          2586, 29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,
           675,   278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322,
         11196,  1819, 29889,    13,  5453,   594,   672, 29918, 29941, 29906,
         29918, 29896, 29898,  4905,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29892,    13,   462,   418,  1962, 11196, 29892,    13,   462,
           418,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297, 29896,
         29892,   297, 29906, 29892,    13,   462,   418,  1881,  4670,   416,
            13,    13,  1678,  8014,   518, 29941, 29896, 29901, 29900, 29962,
          2533, 29918, 22376, 29936,    13,  1678,  8014, 11196, 29918, 22376,
         29936,    13,    13,  1678,   849, 29871, 29896, 29953, 29899,  2966,
           594,   672,    13,  1678,   594,   672, 29918, 29896, 29953,   594,
           672, 29918, 29896, 29953, 29918,  2611, 29898,  2083, 29918, 22376,
         29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918, 22376, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,    13,
          1678,   849, 29871, 29896, 29953, 29899,  2966,   594,   672,    13,
          1678,   594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896,
         29953, 29918,  2611, 29906, 29898,  2083, 29918, 22376, 29961, 29941,
         29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376, 29892,   297,
         29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906,
         29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918, 22376,
           416,    13,    13,  1678,   849,  4007,   647, 14391,    13,  1678,
          3566,  2533,   353,  2533, 29918, 22376, 29936,    13,  1678,  3566,
         11196,   353, 11196, 29918, 22376, 29936,    13,    13,   355,  5453,
            13,    13,   458,  4002,   647,   263, 29871, 29896, 29953, 29899,
          2966,   594,   672, 29889,    13,   458,  8439,   526,  1023, 29871,
         29896, 29953,  2586, 10970,   313,   262, 29896,   322,   297, 29906,
         29897,   322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,
          4670, 29889,    13,   458,  1576, 14391,   526,   263, 29871, 29896,
         29953,  2586,   995, 29892,   518, 29896, 29945, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29896, 29953, 29898,
          4905,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,    13,
           462,   418,  1962, 11196, 29892,    13,   462,   418,  1881,   518,
         29896, 29945, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906,
         29892,    13,   462,   418,  1881,  4670,   416,    13,    13,  1678,
          8014,   518, 29896, 29945, 29901, 29900, 29962,  2533, 29918, 22376,
         29936,    13,  1678,  8014, 11196, 29918, 22376, 29936,    13,    13,
          1678,   849, 29871, 29947, 29899,  2966,   594,   672,    13,  1678,
           594,   672, 29918, 29947,   594,   672, 29918, 29947, 29918,  2611,
         29898,  2083, 29918, 22376, 29961, 29955, 29901, 29900,  1402, 11196,
         29918, 22376, 29892,   297, 29896, 29961, 29955, 29901, 29900,  1402,
           297, 29906, 29961, 29955, 29901, 29900,  1402,  4670,   416,    13,
            13,  1678,   849, 29871, 29947, 29899,  2966,   594,   672,    13,
          1678,   594,   672, 29918, 29947,   594,   672, 29918, 29947, 29918,
          2611, 29906, 29898,  2083, 29918, 22376, 29961, 29896, 29945, 29901,
         29947,  1402, 11196, 29918, 22376, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29947,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29947,  1402, 11196, 29918, 22376,   416,    13,    13,  1678,   849,
          4007,   647, 14391,    13,  1678,  3566,  2533,   353,  2533, 29918,
         22376, 29936,    13,  1678,  3566, 11196,   353, 11196, 29918, 22376,
         29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  719
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 16-bit adder
    adder_16 adder_16_inst(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);

    // 16-bit adder
    adder_16 adder_16_inst2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wire;
    wire cout_wire;

    // 8-bit adder
    adder_8 adder_8_inst(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);

    // 8-bit adder
    adder_8 adder_8_inst2(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  5
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:59: error: Unknown module type: adder_8\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:62: error: Unknown module type: adder_8\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:59: error: Unknown module type: adder_8\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:62: error: Unknown module type: adder_8\n5 error(s) during elaboration.\n*** These modules were missing:\n        adder_8 referenced 4 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 16-bit adder
    adder_16 adder_16_inst(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);

    // 16-bit adder
    adder_16 adder_16_inst2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wire;
    wire cout_wire;

    // 8-bit adder
    adder_8 adder_8_inst(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);

    // 8-bit adder
    adder_8 adder_8_inst2(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wire;
    wire cout_wire;

    // 4-bit adder
    adder_4 adder_4_inst(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);

    // 4-bit adder
    adder_4 adder_4_inst2(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 2-bit adder
    adder_2 adder_2_inst(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);

    // 2-bit adder
    adder_2 adder_2_inst2(sum_wire[3:2], cout_wire, in1[3:2], in2[3:2], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wire;
    wire cout_wire;

    // 1-bit adder
    adder_1 adder_1_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 1-bit adder
    adder_1 adder_1_inst2(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1589
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 16-bit adder
    adder_16 adder_16_inst(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);

    // 16-bit adder
    adder_16 adder_16_inst2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wire;
    wire cout_wire;

    // 8-bit adder
    adder_8 adder_8_inst(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);

    // 8-bit adder
    adder_8 adder_8_inst2(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wire;
    wire cout_wire;

    // 4-bit adder
    adder_4 adder_4_inst(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);

    // 4-bit adder
    adder_4 adder_4_inst2(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 2-bit adder
    adder_2 adder_2_inst(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);

    // 2-bit adder
    adder_2 adder_2_inst2(sum_wire[3:2], cout_wire, in1[3:2], in2[3:2], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wire;
    wire cout_wire;

    // 1-bit adder
    adder_1 adder_1_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 1-bit adder
    adder_1 adder_1_inst2(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:131: error: Unknown module type: adder_1\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:134: error: Unknown module type: adder_1\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_1 referenced 32 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 16-bit adder
    adder_16 adder_16_inst(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);

    // 16-bit adder
    adder_16 adder_16_inst2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wire;
    wire cout_wire;

    // 8-bit adder
    adder_8 adder_8_inst(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);

    // 8-bit adder
    adder_8 adder_8_inst2(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wire;
    wire cout_wire;

    // 4-bit adder
    adder_4 adder_4_inst(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);

    // 4-bit adder
    adder_4 adder_4_inst2(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 2-bit adder
    adder_2 adder_2_inst(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);

    // 2-bit adder
    adder_2 adder_2_inst2(sum_wire[3:2], cout_wire, in1[3:2], in2[3:2], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wire;
    wire cout_wire;

    // 1-bit adder
    adder_1 adder_1_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 1-bit adder
    adder_1 adder_1_inst2(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_wire;
    wire cout_wire;

    // 1-bit adder
    adder_1 adder_1_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
\end{code}

Comment: I think you're missing the point of the exercise.  You're supposed to be designing a 32-bit adder, not a 32-bit adder that uses 32-bit adders.

Comment: @duskwuff I think you're right. I'm not sure how to do that though.

Comment: @duskwuff I think I figured it out. I'm not sure if it's right though.

Comment: @duskwuff I'm not sure if I'm supposed to use the carry out of the previous adder as the carry in of the next adder.

Comment: @duskwuff I'm not sure if I'm supposed to use the carry out of the previous adder as the carry in of the next adder.

Answer: I think you're missing the point of the exercise. You're supposed to be designing a 32-bit adder, not a
[[  849  4002   647 ... 29892   451   263]]
tensor([[  849,  4002,   647,  ..., 29892,   451,   263]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 32-bit adder
    adder_32_1 adder_32_1_inst(sum_wire, cout_wire, in1, in2, cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32_1(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    // 16-bit adder
    adder_16 adder_16_inst(sum_wire[15:0], cout_wire, in1[15:0], in2[15:0], cin);

    // 16-bit adder
    adder_16 adder_16_inst2(sum_wire[31:16], cout_wire, in1[31:16], in2[31:16], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_wire;
    wire cout_wire;

    // 8-bit adder
    adder_8 adder_8_inst(sum_wire[7:0], cout_wire, in1[7:0], in2[7:0], cin);

    // 8-bit adder
    adder_8 adder_8_inst2(sum_wire[15:8], cout_wire, in1[15:8], in2[15:8], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                      output cout,
                      input [7:0] in1, in2,
                      input cin);

    wire [7:0] sum_wire;
    wire cout_wire;

    // 4-bit adder
    adder_4 adder_4_inst(sum_wire[3:0], cout_wire, in1[3:0], in2[3:0], cin);

    // 4-bit adder
    adder_4 adder_4_inst2(sum_wire[7:4], cout_wire, in1[7:4], in2[7:4], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                      output cout,
                      input [3:0] in1, in2,
                      input cin);

    wire [3:0] sum_wire;
    wire cout_wire;

    // 2-bit adder
    adder_2 adder_2_inst(sum_wire[1:0], cout_wire, in1[1:0], in2[1:0], cin);

    // 2-bit adder
    adder_2 adder_2_inst2(sum_wire[3:2], cout_wire, in1[3:2], in2[3:2], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                      output cout,
                      input [1:0] in1, in2,
                      input cin);

    wire [1:0] sum_wire;
    wire cout_wire;

    // 1-bit adder
    adder_1 adder_1_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // 1-bit adder
    adder_1 adder_1_inst2(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                      output cout,
                      input [0:0] in1, in2,
                      input cin);

    wire [0:0] sum_wire;
    wire cout_wire;

    // 1-bit adder
    adder_1 adder_1_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);

    // Assign outputs
    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
\end{code}

Comment: I think you're missing the point of the exercise.  You're supposed to be designing a 32-bit adder, not a 32-bit adder that uses 32-bit adders.

Comment: @duskwuff I think you're right. I'm not sure how to do that though.

Comment: @duskwuff I think I figured it out. I'm not sure if it's right though.

Comment: @duskwuff I'm not sure if I'm supposed to use the carry out of the previous adder as the carry in of the next adder.

Comment: @duskwuff I'm not sure if I'm supposed to use the carry out of the previous adder as the carry in of the next adder.

Answer: I think you're missing the point of the exercise. You're supposed to be designing a 32-bit adder, not a
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:164: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  97  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;
  wire [31:0] c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32;

  assign s1 = in1[0] ^ in2[0] ^ cin;
  assign c1 = in1[0] & in2[0] | in1[0] & cin | in2[0] & cin;

  assign s2 = in1[1] ^ in2[1] ^ c1[0];
  assign c2 = in1[1] & in2[1] | in1[1] & c1[0] | in2[1] & c1[0];

  assign s3 = in1[2] ^ in2[2] ^ c2[0];
  assign c3 = in1[2] & in2[2] | in1[2] & c2[0] | in2[2] & c2[0];

  assign s4 = in1[3] ^ in2[3] ^ c3[0];
  assign c4 = in1[3] & in2[3] | in1[3] & c3[0] | in2[3] & c3[0];

  assign s5 = in1[4] ^ in2[4] ^ c4[0];
  assign c5 = in1[4] & in2[4] | in1[4] & c4[0] | in2[4] & c4[0];

  assign s6 = in1[5] ^ in2[5] ^ c5[0];
  assign c6 = in1[5] & in2[5] | in1[5] & c5[0] | in2[5] & c5[0];

  assign s7 = in1[6] ^ in2[6] ^ c6[0];
  assign c7 = in1[6] & in2[6] | in1[6] & c6[0] | in2[6] & c6[0];

  assign s8 = in1[7] ^ in2[7] ^ c7[0];
  assign c8 = in1[7] & in2[7] | in1[7] & c7[0] | in2[7] & c7[0];

  assign s9 = in1[8] ^ in2[8] ^ c8[0];
  assign c9 = in1[8] & in2[8] | in1[8] & c8[0] | in2[8] & c8[0];

  assign s10 = in1[9] ^ in2[9] ^ c9[0];
  assign c10 = in1[9] & in2[9] | in1[9] & c9[0] | in2[9] & c9[0];

  assign s11 = in1[10] ^ in2[10] ^ c10[0];
  assign c11 = in1[10] & in2[10] | in1[10] & c10[0] | in2[10] & c10[0];

  assign s12 = in1[11] ^ in2[11] ^ c11[0];
  assign c12 = in1[11] & in2[11] | in1[11] & c11[0] | in2[11] & c11[0];

  assign s13 = in1[12] ^ in2[12] ^ c12[0];
  assign c13 = in1[12] & in2[12] | in1[12] & c12[0] | in2[12] & c12[0];

  assign s14 = in1[13] ^ in2[13] ^ c13[0];
  assign c14 = in1[13] & in2[13] | in1[13] & c13[0] | in2[13] & c13[0];

  assign s15 = in1[14] ^ in2[14] ^ c14[0];
  assign c15 = in1[14] & in2[14] | in1[14] & c14[0] | in2[14] & c14[0];

  assign s16 = in1[15] ^ in2[15] ^ c15[0];
  assign c16 = in1[15] & in2[15] | in1[15] & c15[0] | in2[15] & c15[0];

  assign s17 = in1[16] ^ in2[16] ^ c16[0];
  assign c17 = in1[16] & in2[16] | in1[16] & c16[0] | in2[16] & c16[0];

  assign s18 = in1[17] ^ in2[17] ^ c17[0];
  assign c18 = in1[17] & in2[17] | in1[17] & c17[0] | in2[17] & c17[0];

  assign s19 = in1[18] ^ in2[18] ^ c18[0];
  assign c19 = in1[18] & in2[18] | in1[18] & c18[0] | in2[18] & c18[0];

  assign s20 = in1[19] ^ in2[19] ^ c19[0];
  assign c20 = in1[19] & in2[19] | in1[19] & c19[0] | in2[19] & c19[0];

  assign s21 = in1[20] ^ in2[20] ^ c20[0];
  assign c21 = in1[20] & in2[20] | in1[20] & c20[0] | in2[20] & c20[0];

  assign s22 = in1[21] ^ in2[21] ^ c21[0];
  assign c22 = in1[21] & in2[21] | in1[21] & c21[0] | in2[21] & c21[0];

  assign s23 = in1[22] ^ in2[22] ^ c22[0];
  assign c23 = in1[22] & in2[22] | in1[22] & c22[0] | in2[22] & c22[0];

  assign s24 = in1[23] ^ in2[23] ^ c23[0];
  assign c24 = in1[23] & in2[23] | in1[23] & c23[0] | in2[23] & c23[0];

  assign s25 = in1[24] ^ in2[24] ^ c24[0];
  assign c25 = in1[24] & in2[24] | in1[24] & c24[0] | in2[24] & c24[0];

  assign s26 = in
[[  849  4002   647 ... 29953   353   297]]
tensor([[    1,   849,  4002,  ..., 29953,   353,   297]], device='cuda:0')
Checking if done:
tokens generated:  2047
Calling isPromptComplete: 
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;
  wire [31:0] c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32;

  assign s1 = in1[0] ^ in2[0] ^ cin;
  assign c1 = in1[0] & in2[0] | in1[0] & cin | in2[0] & cin;

  assign s2 = in1[1] ^ in2[1] ^ c1[0];
  assign c2 = in1[1] & in2[1] | in1[1] & c1[0] | in2[1] & c1[0];

  assign s3 = in1[2] ^ in2[2] ^ c2[0];
  assign c3 = in1[2] & in2[2] | in1[2] & c2[0] | in2[2] & c2[0];

  assign s4 = in1[3] ^ in2[3] ^ c3[0];
  assign c4 = in1[3] & in2[3] | in1[3] & c3[0] | in2[3] & c3[0];

  assign s5 = in1[4] ^ in2[4] ^ c4[0];
  assign c5 = in1[4] & in2[4] | in1[4] & c4[0] | in2[4] & c4[0];

  assign s6 = in1[5] ^ in2[5] ^ c5[0];
  assign c6 = in1[5] & in2[5] | in1[5] & c5[0] | in2[5] & c5[0];

  assign s7 = in1[6] ^ in2[6] ^ c6[0];
  assign c7 = in1[6] & in2[6] | in1[6] & c6[0] | in2[6] & c6[0];

  assign s8 = in1[7] ^ in2[7] ^ c7[0];
  assign c8 = in1[7] & in2[7] | in1[7] & c7[0] | in2[7] & c7[0];

  assign s9 = in1[8] ^ in2[8] ^ c8[0];
  assign c9 = in1[8] & in2[8] | in1[8] & c8[0] | in2[8] & c8[0];

  assign s10 = in1[9] ^ in2[9] ^ c9[0];
  assign c10 = in1[9] & in2[9] | in1[9] & c9[0] | in2[9] & c9[0];

  assign s11 = in1[10] ^ in2[10] ^ c10[0];
  assign c11 = in1[10] & in2[10] | in1[10] & c10[0] | in2[10] & c10[0];

  assign s12 = in1[11] ^ in2[11] ^ c11[0];
  assign c12 = in1[11] & in2[11] | in1[11] & c11[0] | in2[11] & c11[0];

  assign s13 = in1[12] ^ in2[12] ^ c12[0];
  assign c13 = in1[12] & in2[12] | in1[12] & c12[0] | in2[12] & c12[0];

  assign s14 = in1[13] ^ in2[13] ^ c13[0];
  assign c14 = in1[13] & in2[13] | in1[13] & c13[0] | in2[13] & c13[0];

  assign s15 = in1[14] ^ in2[14] ^ c14[0];
  assign c15 = in1[14] & in2[14] | in1[14] & c14[0] | in2[14] & c14[0];

  assign s16 = in1[15] ^ in2[15] ^ c15[0];
  assign c16 = in1[15] & in2[15] | in1[15] & c15[0] | in2[15] & c15[0];

  assign s17 = in1[16] ^ in2[16] ^ c16[0];
  assign c17 = in1[16] & in2[16] | in1[16] & c16[0] | in2[16] & c16[0];

  assign s18 = in1[17] ^ in2[17] ^ c17[0];
  assign c18 = in1[17] & in2[17] | in1[17] & c17[0] | in2[17] & c17[0];

  assign s19 = in1[18] ^ in2[18] ^ c18[0];
  assign c19 = in1[18] & in2[18] | in1[18] & c18[0] | in2[18] & c18[0];

  assign s20 = in1[19] ^ in2[19] ^ c19[0];
  assign c20 = in1[19] & in2[19] | in1[19] & c19[0] | in2[19] & c19[0];

  assign s21 = in1[20] ^ in2[20] ^ c20[0];
  assign c21 = in1[20] & in2[20] | in1[20] & c20[0] | in2[20] & c20[0];

  assign s22 = in1[21] ^ in2[21] ^ c21[0];
  assign c22 = in1[21] & in2[21] | in1[21] & c21[0] | in2[21] & c21[0];

  assign s23 = in1[22] ^ in2[22] ^ c22[0];
  assign c23 = in1[22] & in2[22] | in1[22] & c22[0] | in2[22] & c22[0];

  assign s24 = in1[23] ^ in2[23] ^ c23[0];
  assign c24 = in1[23] & in2[23] | in1[23] & c23[0] | in2[23] & c23[0];

  assign s25 = in1[24] ^ in2[24] ^ c24[0];
  assign c25 = in1[24] & in2[24] | in1[24] & c24[0] | in2[24] & c24[0];

  assign s26 = in1
[[  849  4002   647 ...   353   297 29896]]
tensor([[  849,  4002,   647,  ...,   353,   297, 29896]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32;
  wire [31:0] c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32;

  assign s1 = in1[0] ^ in2[0] ^ cin;
  assign c1 = in1[0] & in2[0] | in1[0] & cin | in2[0] & cin;

  assign s2 = in1[1] ^ in2[1] ^ c1[0];
  assign c2 = in1[1] & in2[1] | in1[1] & c1[0] | in2[1] & c1[0];

  assign s3 = in1[2] ^ in2[2] ^ c2[0];
  assign c3 = in1[2] & in2[2] | in1[2] & c2[0] | in2[2] & c2[0];

  assign s4 = in1[3] ^ in2[3] ^ c3[0];
  assign c4 = in1[3] & in2[3] | in1[3] & c3[0] | in2[3] & c3[0];

  assign s5 = in1[4] ^ in2[4] ^ c4[0];
  assign c5 = in1[4] & in2[4] | in1[4] & c4[0] | in2[4] & c4[0];

  assign s6 = in1[5] ^ in2[5] ^ c5[0];
  assign c6 = in1[5] & in2[5] | in1[5] & c5[0] | in2[5] & c5[0];

  assign s7 = in1[6] ^ in2[6] ^ c6[0];
  assign c7 = in1[6] & in2[6] | in1[6] & c6[0] | in2[6] & c6[0];

  assign s8 = in1[7] ^ in2[7] ^ c7[0];
  assign c8 = in1[7] & in2[7] | in1[7] & c7[0] | in2[7] & c7[0];

  assign s9 = in1[8] ^ in2[8] ^ c8[0];
  assign c9 = in1[8] & in2[8] | in1[8] & c8[0] | in2[8] & c8[0];

  assign s10 = in1[9] ^ in2[9] ^ c9[0];
  assign c10 = in1[9] & in2[9] | in1[9] & c9[0] | in2[9] & c9[0];

  assign s11 = in1[10] ^ in2[10] ^ c10[0];
  assign c11 = in1[10] & in2[10] | in1[10] & c10[0] | in2[10] & c10[0];

  assign s12 = in1[11] ^ in2[11] ^ c11[0];
  assign c12 = in1[11] & in2[11] | in1[11] & c11[0] | in2[11] & c11[0];

  assign s13 = in1[12] ^ in2[12] ^ c12[0];
  assign c13 = in1[12] & in2[12] | in1[12] & c12[0] | in2[12] & c12[0];

  assign s14 = in1[13] ^ in2[13] ^ c13[0];
  assign c14 = in1[13] & in2[13] | in1[13] & c13[0] | in2[13] & c13[0];

  assign s15 = in1[14] ^ in2[14] ^ c14[0];
  assign c15 = in1[14] & in2[14] | in1[14] & c14[0] | in2[14] & c14[0];

  assign s16 = in1[15] ^ in2[15] ^ c15[0];
  assign c16 = in1[15] & in2[15] | in1[15] & c15[0] | in2[15] & c15[0];

  assign s17 = in1[16] ^ in2[16] ^ c16[0];
  assign c17 = in1[16] & in2[16] | in1[16] & c16[0] | in2[16] & c16[0];

  assign s18 = in1[17] ^ in2[17] ^ c17[0];
  assign c18 = in1[17] & in2[17] | in1[17] & c17[0] | in2[17] & c17[0];

  assign s19 = in1[18] ^ in2[18] ^ c18[0];
  assign c19 = in1[18] & in2[18] | in1[18] & c18[0] | in2[18] & c18[0];

  assign s20 = in1[19] ^ in2[19] ^ c19[0];
  assign c20 = in1[19] & in2[19] | in1[19] & c19[0] | in2[19] & c19[0];

  assign s21 = in1[20] ^ in2[20] ^ c20[0];
  assign c21 = in1[20] & in2[20] | in1[20] & c20[0] | in2[20] & c20[0];

  assign s22 = in1[21] ^ in2[21] ^ c21[0];
  assign c22 = in1[21] & in2[21] | in1[21] & c21[0] | in2[21] & c21[0];

  assign s23 = in1[22] ^ in2[22] ^ c22[0];
  assign c23 = in1[22] & in2[22] | in1[22] & c22[0] | in2[22] & c22[0];

  assign s24 = in1[23] ^ in2[23] ^ c23[0];
  assign c24 = in1[23] & in2[23] | in1[23] & c23[0] | in2[23] & c23[0];

  assign s25 = in1[24] ^ in2[24] ^ c24[0];
  assign c25 = in1[24] & in2[24] | in1[24] & c24[0] | in2[24] & c24[0];

  assign s26 = in1
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:88: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  98  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,
            13, 29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918,  7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918,  7382,   416,    13,    13, 29871,  3566,  2533,   353,  2533,
         29918,  7382, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13 29871  8014   518 29941 29896 29901 29900 29962  2533
  29918  7382 29936    13 29871  8014 11196 29918  7382 29936    13    13
  29871   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918  7382 29961 29896 29945 29901 29900  1402 11196
  29918  7382 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13 29871   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918  7382 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918  7382   416    13    13
  29871  3566  2533   353  2533 29918  7382 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29941 29906 29899  2966 23197
    272 29889    13   458  8439   526  1023 29871 29941 29906  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962
   2923 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2923   322 11196  1819 29889    13  5453 23197   272 29918 29941
  29906 29898  4905   518 29941 29896 29901 29900 29962  2923 29892    13
    462  9651  1962 11196 29892    13   462  9651  1881   518 29941 29896
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462  9651
   1881  4670   416    13    13 29871  8014   518 29941 29896 29901 29900
  29962  2923 29918  7382 29936    13 29871  8014 11196 29918  7382 29936
     13    13 29871 23197   272 29918 29896 29953 23197   272 29918 29896
  29953 29918 29900 29898 12765 29918  7382 29961 29896 29945 29901 29900
   1402 11196 29918  7382 29892   297 29896 29961 29896 29945 29901 29900
   1402   297 29906 29961 29896 29945 29901 29900  1402  4670   416    13
  29871 23197   272 29918 29896 29953 23197   272 29918 29896 29953 29918
  29896 29898 12765 29918  7382 29961 29941 29896 29901 29896 29953  1402
  11196 29892   297 29896 29961 29941 29896 29901 29896 29953  1402   297
  29906 29961 29941 29896 29901 29896 29953  1402 11196 29918  7382   416
     13    13 29871  3566  2923   353  2923 29918  7382 29936    13    13
    355  5453    13    13   458  4002   647   263 29871 29941 29906 29899
   2966  6674  4926 29889    13   458  8439   526  1023 29871 29941 29906
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29941 29906  2586   995 29892   518 29941 29896 29901
  29900 29962  3234 29892   322   263  2323  8677 29899   449  1962  2586
  29892 11196 29889    13   458  1576  3883   881  3667   675   278 10970
    313   262 29896   322   297 29906 29897   322   278  4670  2586   304
   4017   278  1962  3234   322 11196  1819 29889    13  5453  6674  4926
  29918 29941 29906 29898  4905   518 29941 29896 29901 29900 29962  3234
  29892    13   462  9651  1962 11196 29892    13   462  9651  1881   518
  29941 29896 29901 29900 29962   297 29896 29892   297 29906 29892    13
    462  9651  1881  4670   416    13    13 29871  8014   518 29941 29896
  29901 29900 29962  3234 29918  7382 29936    13 29871  8014 11196 29918
   7382 29936    13    13 29871  6674  4926 29918 29896 29953  6674  4926
  29918 29896 29953 29918 29900 29898  4704 29918  7382 29961 29896 29945
  29901 29900  1402 11196 29918  7382 29892   297 29896 29961 29896 29945
  29901 29900  1402   297 29906 29961 29896 29945 29901 29900  1402  4670
    416    13 29871  6674  4926 29918 29896 29953  6674  4926 29918 29896
  29953 29918 29896 29898  4704 29918  7382 29961 29941 29896 29901 29896
  29953  1402 11196 29892   297 29896 29961 29941 29896 29901 29896 29953
   1402   297 29906 29961 29941 29896 29901 29896 29953  1402 11196 29918
   7382   416    13    13 29871  3566  3234   353  3234 29918  7382 29936
     13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13, 29871,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918,  7382, 29936,    13,
         29871,  8014, 11196, 29918,  7382, 29936,    13,    13, 29871,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918,  7382, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918,  7382, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13, 29871,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
          7382, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
          7382,   416,    13,    13, 29871,  3566,  2533,   353,  2533, 29918,
          7382, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29941, 29906, 29899,  2966, 23197,   272, 29889,
            13,   458,  8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29941, 29906,  2586,   995, 29892,
           518, 29941, 29896, 29901, 29900, 29962,  2923, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2923,   322, 11196,  1819, 29889,    13,  5453,
         23197,   272, 29918, 29941, 29906, 29898,  4905,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29892,    13,   462,  9651,  1962, 11196,
         29892,    13,   462,  9651,  1881,   518, 29941, 29896, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,  9651,
          1881,  4670,   416,    13,    13, 29871,  8014,   518, 29941, 29896,
         29901, 29900, 29962,  2923, 29918,  7382, 29936,    13, 29871,  8014,
         11196, 29918,  7382, 29936,    13,    13, 29871, 23197,   272, 29918,
         29896, 29953, 23197,   272, 29918, 29896, 29953, 29918, 29900, 29898,
         12765, 29918,  7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196,
         29918,  7382, 29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,
          1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,
           416,    13, 29871, 23197,   272, 29918, 29896, 29953, 23197,   272,
         29918, 29896, 29953, 29918, 29896, 29898, 12765, 29918,  7382, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,   297, 29896,
         29961, 29941, 29896, 29901, 29896, 29953,  1402,   297, 29906, 29961,
         29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,
            13,    13, 29871,  3566,  2923,   353,  2923, 29918,  7382, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   263,
         29871, 29941, 29906, 29899,  2966,  6674,  4926, 29889,    13,   458,
          8439,   526,  1023, 29871, 29941, 29906,  2586, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   263,  2323,  8677, 29899,
           262,  1881,  2586, 29892,  4670, 29889,    13,   458,  1576, 14391,
           526,   263, 29871, 29941, 29906,  2586,   995, 29892,   518, 29941,
         29896, 29901, 29900, 29962,  3234, 29892,   322,   263,  2323,  8677,
         29899,   449,  1962,  2586, 29892, 11196, 29889,    13,   458,  1576,
          3883,   881,  3667,   675,   278, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   278,  4670,  2586,   304,  4017,   278,
          1962,  3234,   322, 11196,  1819, 29889,    13,  5453,  6674,  4926,
         29918, 29941, 29906, 29898,  4905,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29892,    13,   462,  9651,  1962, 11196, 29892,    13,
           462,  9651,  1881,   518, 29941, 29896, 29901, 29900, 29962,   297,
         29896, 29892,   297, 29906, 29892,    13,   462,  9651,  1881,  4670,
           416,    13,    13, 29871,  8014,   518, 29941, 29896, 29901, 29900,
         29962,  3234, 29918,  7382, 29936,    13, 29871,  8014, 11196, 29918,
          7382, 29936,    13,    13, 29871,  6674,  4926, 29918, 29896, 29953,
          6674,  4926, 29918, 29896, 29953, 29918, 29900, 29898,  4704, 29918,
          7382, 29961, 29896, 29945, 29901, 29900,  1402, 11196, 29918,  7382,
         29892,   297, 29896, 29961, 29896, 29945, 29901, 29900,  1402,   297,
         29906, 29961, 29896, 29945, 29901, 29900,  1402,  4670,   416,    13,
         29871,  6674,  4926, 29918, 29896, 29953,  6674,  4926, 29918, 29896,
         29953, 29918, 29896, 29898,  4704, 29918,  7382, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29892,   297, 29896, 29961, 29941,
         29896, 29901, 29896, 29953,  1402,   297, 29906, 29961, 29941, 29896,
         29901, 29896, 29953,  1402, 11196, 29918,  7382,   416,    13,    13,
         29871,  3566,  3234,   353,  3234, 29918,  7382, 29936,    13,    13,
           355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  686
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module left_shift_32(output [31:0] shift,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift = shift_temp;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1537
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module left_shift_32(output [31:0] shift,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift = shift_temp;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  18
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:70: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:71: error: Unknown module type: divider_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:108: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:109: error: Unknown module type: left_shift_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:89: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:90: error: Unknown module type: modulus_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: multiplier_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:32: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:33: error: Unknown module type: subtractor_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n18 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n        divider_16 referenced 2 times.\n        left_shift_16 referenced 2 times.\n        modulus_16 referenced 2 times.\n        multiplier_16 referenced 2 times.\n        subtractor_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  3  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module left_shift_32(output [31:0] shift,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift = shift_temp;

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module right_shift_32(output [31:0] shift,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  right_shift_16 right_shift_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  right_shift_16 right_shift_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift = shift_temp;

endmodule

//Design a 32-bit sign extend.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sign_extend, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sign_extend and cout values.
module sign_extend_32(output [31:0] sign_extend,
                              output cout,
                              input [31:0] in1, in2,
                              input cin);

  wire [31:0] sign_extend_temp;
  wire cout_temp;

  sign_extend_16 sign_extend_16_0(sign_extend_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
[[ 849 4002  647 ... 1402 4670  416]]
tensor([[ 849, 4002,  647,  ..., 1402, 4670,  416]], device='cuda:0')
Checking if done:
tokens generated:  2048
Calling isPromptComplete: 
MCTS tree has reached the end - with max tokens.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_temp;
  wire cout_temp;

  adder_16 adder_16_0(sum_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  adder_16 adder_16_1(sum_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign sum = sum_temp;

endmodule

//Design a 32-bit subtractor.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] diff, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output diff and cout values.
module subtractor_32(output [31:0] diff,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] diff_temp;
  wire cout_temp;

  subtractor_16 subtractor_16_0(diff_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  subtractor_16 subtractor_16_1(diff_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign diff = diff_temp;

endmodule

//Design a 32-bit multiplier.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] product, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output product and cout values.
module multiplier_32(output [31:0] product,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] product_temp;
  wire cout_temp;

  multiplier_16 multiplier_16_0(product_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  multiplier_16 multiplier_16_1(product_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign product = product_temp;

endmodule

//Design a 32-bit divider.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] quotient, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output quotient and cout values.
module divider_32(output [31:0] quotient,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] quotient_temp;
  wire cout_temp;

  divider_16 divider_16_0(quotient_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  divider_16 divider_16_1(quotient_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign quotient = quotient_temp;

endmodule

//Design a 32-bit modulus.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] remainder, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output remainder and cout values.
module modulus_32(output [31:0] remainder,
                        output cout,
                        input [31:0] in1, in2,
                        input cin);

  wire [31:0] remainder_temp;
  wire cout_temp;

  modulus_16 modulus_16_0(remainder_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  modulus_16 modulus_16_1(remainder_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign remainder = remainder_temp;

endmodule

//Design a 32-bit left shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module left_shift_32(output [31:0] shift,
                            output cout,
                            input [31:0] in1, in2,
                            input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  left_shift_16 left_shift_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  left_shift_16 left_shift_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift = shift_temp;

endmodule

//Design a 32-bit right shift.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] shift, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output shift and cout values.
module right_shift_32(output [31:0] shift,
                             output cout,
                             input [31:0] in1, in2,
                             input cin);

  wire [31:0] shift_temp;
  wire cout_temp;

  right_shift_16 right_shift_16_0(shift_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
  right_shift_16 right_shift_16_1(shift_temp[31:16], cout, in1[31:16], in2[31:16], cout_temp);

  assign shift = shift_temp;

endmodule

//Design a 32-bit sign extend.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sign_extend, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sign_extend and cout values.
module sign_extend_32(output [31:0] sign_extend,
                              output cout,
                              input [31:0] in1, in2,
                              input cin);

  wire [31:0] sign_extend_temp;
  wire cout_temp;

  sign_extend_16 sign_extend_16_0(sign_extend_temp[15:0], cout_temp, in1[15:0], in2[15:0], cin);
LOGGING VERILOG CODE.
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:146: syntax error\nI give up.\n'
Terminal state found - returning state.
Running getPromptScore: 
----GREEDY LLM OUTPUT - ITERATION:  99  ----
---------------
Done setting up env.
Init state length:  146
Checking if done:
tokens generated:  0
Calling isPromptComplete: 
generating terminal state (main module)
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[    1,   849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,
           594,   672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941,
         29906,  2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,
           322,   263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670,
         29889,    13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,
          2586,   995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533,
         29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892,
         11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,   278,
         10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,   278,
          4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819,
         29889,    13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,
           418,  1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941,
         29896, 29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,
            13,   462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,
           518, 29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,
            13,  1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,
           594,   672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953,
         29918, 29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901,
         29900,  1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896,
         29945, 29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901,
         29900,  1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896,
         29953,   594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29892,   297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,
           297, 29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196,
         29918, 29893,   416,    13,    13,  1678,  3566,  2533,   353,  2533,
         29918, 29893, 29936,    13,    13,   355,  5453]], device='cuda:0')
Checking if done:
tokens generated:  130
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  3
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:13: error: Unknown module type: adder_16\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:14: error: Unknown module type: adder_16\n3 error(s) during elaboration.\n*** These modules were missing:\n        adder_16 referenced 2 times.\n***\n'
Terminal state not complete - generating additional module:  1  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule
[[  849  4002   647   263 29871 29941 29906 29899  2966   594   672 29889
     13   458  8439   526  1023 29871 29941 29906  2586 10970   313   262
  29896   322   297 29906 29897   322   263  2323  8677 29899   262  1881
   2586 29892  4670 29889    13   458  1576 14391   526   263 29871 29941
  29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533 29892
    322   263  2323  8677 29899   449  1962  2586 29892 11196 29889    13
    458  1576  3883   881  3667   675   278 10970   313   262 29896   322
    297 29906 29897   322   278  4670  2586   304  4017   278  1962  2533
    322 11196  1819 29889    13  5453   594   672 29918 29941 29906 29898
   4905   518 29941 29896 29901 29900 29962  2533 29892    13   462   418
   1962 11196 29892    13   462   418  1881   518 29941 29896 29901 29900
  29962   297 29896 29892   297 29906 29892    13   462   418  1881  4670
    416    13    13  1678  8014   518 29941 29896 29901 29900 29962  2533
  29918 29893 29936    13  1678  8014 11196 29918 29893 29936    13    13
   1678   594   672 29918 29896 29953   594   672 29918 29896 29953 29918
  29900 29898  2083 29918 29893 29961 29896 29945 29901 29900  1402 11196
  29918 29893 29892   297 29896 29961 29896 29945 29901 29900  1402   297
  29906 29961 29896 29945 29901 29900  1402  4670   416    13  1678   594
    672 29918 29896 29953   594   672 29918 29896 29953 29918 29896 29898
   2083 29918 29893 29961 29941 29896 29901 29896 29953  1402 11196 29892
    297 29896 29961 29941 29896 29901 29896 29953  1402   297 29906 29961
  29941 29896 29901 29896 29953  1402 11196 29918 29893   416    13    13
   1678  3566  2533   353  2533 29918 29893 29936    13    13   355  5453
     13    13   458  4002   647   263 29871 29896 29953 29899  2966   594
    672 29889    13   458  8439   526  1023 29871 29896 29953  2586 10970
    313   262 29896   322   297 29906 29897   322   263  2323  8677 29899
    262  1881  2586 29892  4670 29889    13   458  1576 14391   526   263
  29871 29896 29953  2586   995 29892   518 29896 29945 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29896
  29953 29898  4905   518 29896 29945 29901 29900 29962  2533 29892    13
    462   418  1962 11196 29892    13   462   418  1881   518 29896 29945
  29901 29900 29962   297 29896 29892   297 29906 29892    13   462   418
   1881  4670   416    13    13  1678  8014   518 29896 29945 29901 29900
  29962  2533 29918 29893 29936    13  1678  8014 11196 29918 29893 29936
     13    13  1678   594   672 29918 29947   594   672 29918 29947 29918
  29900 29898  2083 29918 29893 29961 29955 29901 29900  1402 11196 29918
  29893 29892   297 29896 29961 29955 29901 29900  1402   297 29906 29961
  29955 29901 29900  1402  4670   416    13  1678   594   672 29918 29947
    594   672 29918 29947 29918 29896 29898  2083 29918 29893 29961 29896
  29945 29901 29947  1402 11196 29892   297 29896 29961 29896 29945 29901
  29947  1402   297 29906 29961 29896 29945 29901 29947  1402 11196 29918
  29893   416    13    13  1678  3566  2533   353  2533 29918 29893 29936
     13    13   355  5453    13    13   458  4002   647   385 29871 29947
  29899  2966   594   672 29889    13   458  8439   526  1023 29871 29947
   2586 10970   313   262 29896   322   297 29906 29897   322   263  2323
   8677 29899   262  1881  2586 29892  4670 29889    13   458  1576 14391
    526   263 29871 29947  2586   995 29892   518 29955 29901 29900 29962
   2533 29892   322   263  2323  8677 29899   449  1962  2586 29892 11196
  29889    13   458  1576  3883   881  3667   675   278 10970   313   262
  29896   322   297 29906 29897   322   278  4670  2586   304  4017   278
   1962  2533   322 11196  1819 29889    13  5453   594   672 29918 29947
  29898  4905   518 29955 29901 29900 29962  2533 29892    13   462   268
   1962 11196 29892    13   462   268  1881   518 29955 29901 29900 29962
    297 29896 29892   297 29906 29892    13   462   268  1881  4670   416
     13    13  1678  8014   518 29955 29901 29900 29962  2533 29918 29893
  29936    13  1678  8014 11196 29918 29893 29936    13    13  1678   594
    672 29918 29946   594   672 29918 29946 29918 29900 29898  2083 29918
  29893 29961 29941 29901 29900  1402 11196 29918 29893 29892   297 29896
  29961 29941 29901 29900  1402   297 29906 29961 29941 29901 29900  1402
   4670   416    13  1678   594   672 29918 29946   594   672 29918 29946
  29918 29896 29898  2083 29918 29893 29961 29955 29901 29946  1402 11196
  29892   297 29896 29961 29955 29901 29946  1402   297 29906 29961 29955
  29901 29946  1402 11196 29918 29893   416    13    13  1678  3566  2533
    353  2533 29918 29893 29936    13    13   355  5453]]
tensor([[  849,  4002,   647,   263, 29871, 29941, 29906, 29899,  2966,   594,
           672, 29889,    13,   458,  8439,   526,  1023, 29871, 29941, 29906,
          2586, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           263,  2323,  8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,
            13,   458,  1576, 14391,   526,   263, 29871, 29941, 29906,  2586,
           995, 29892,   518, 29941, 29896, 29901, 29900, 29962,  2533, 29892,
           322,   263,  2323,  8677, 29899,   449,  1962,  2586, 29892, 11196,
         29889,    13,   458,  1576,  3883,   881,  3667,   675,   278, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   278,  4670,
          2586,   304,  4017,   278,  1962,  2533,   322, 11196,  1819, 29889,
            13,  5453,   594,   672, 29918, 29941, 29906, 29898,  4905,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29892,    13,   462,   418,
          1962, 11196, 29892,    13,   462,   418,  1881,   518, 29941, 29896,
         29901, 29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,
           462,   418,  1881,  4670,   416,    13,    13,  1678,  8014,   518,
         29941, 29896, 29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,
          1678,  8014, 11196, 29918, 29893, 29936,    13,    13,  1678,   594,
           672, 29918, 29896, 29953,   594,   672, 29918, 29896, 29953, 29918,
         29900, 29898,  2083, 29918, 29893, 29961, 29896, 29945, 29901, 29900,
          1402, 11196, 29918, 29893, 29892,   297, 29896, 29961, 29896, 29945,
         29901, 29900,  1402,   297, 29906, 29961, 29896, 29945, 29901, 29900,
          1402,  4670,   416,    13,  1678,   594,   672, 29918, 29896, 29953,
           594,   672, 29918, 29896, 29953, 29918, 29896, 29898,  2083, 29918,
         29893, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29892,
           297, 29896, 29961, 29941, 29896, 29901, 29896, 29953,  1402,   297,
         29906, 29961, 29941, 29896, 29901, 29896, 29953,  1402, 11196, 29918,
         29893,   416,    13,    13,  1678,  3566,  2533,   353,  2533, 29918,
         29893, 29936,    13,    13,   355,  5453,    13,    13,   458,  4002,
           647,   263, 29871, 29896, 29953, 29899,  2966,   594,   672, 29889,
            13,   458,  8439,   526,  1023, 29871, 29896, 29953,  2586, 10970,
           313,   262, 29896,   322,   297, 29906, 29897,   322,   263,  2323,
          8677, 29899,   262,  1881,  2586, 29892,  4670, 29889,    13,   458,
          1576, 14391,   526,   263, 29871, 29896, 29953,  2586,   995, 29892,
           518, 29896, 29945, 29901, 29900, 29962,  2533, 29892,   322,   263,
          2323,  8677, 29899,   449,  1962,  2586, 29892, 11196, 29889,    13,
           458,  1576,  3883,   881,  3667,   675,   278, 10970,   313,   262,
         29896,   322,   297, 29906, 29897,   322,   278,  4670,  2586,   304,
          4017,   278,  1962,  2533,   322, 11196,  1819, 29889,    13,  5453,
           594,   672, 29918, 29896, 29953, 29898,  4905,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29892,    13,   462,   418,  1962, 11196,
         29892,    13,   462,   418,  1881,   518, 29896, 29945, 29901, 29900,
         29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,   418,
          1881,  4670,   416,    13,    13,  1678,  8014,   518, 29896, 29945,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,  8014,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29947,   594,   672, 29918, 29947, 29918, 29900, 29898,  2083, 29918,
         29893, 29961, 29955, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29955, 29901, 29900,  1402,   297, 29906, 29961,
         29955, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29947,   594,   672, 29918, 29947, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29896, 29945, 29901, 29947,  1402, 11196, 29892,
           297, 29896, 29961, 29896, 29945, 29901, 29947,  1402,   297, 29906,
         29961, 29896, 29945, 29901, 29947,  1402, 11196, 29918, 29893,   416,
            13,    13,  1678,  3566,  2533,   353,  2533, 29918, 29893, 29936,
            13,    13,   355,  5453,    13,    13,   458,  4002,   647,   385,
         29871, 29947, 29899,  2966,   594,   672, 29889,    13,   458,  8439,
           526,  1023, 29871, 29947,  2586, 10970,   313,   262, 29896,   322,
           297, 29906, 29897,   322,   263,  2323,  8677, 29899,   262,  1881,
          2586, 29892,  4670, 29889,    13,   458,  1576, 14391,   526,   263,
         29871, 29947,  2586,   995, 29892,   518, 29955, 29901, 29900, 29962,
          2533, 29892,   322,   263,  2323,  8677, 29899,   449,  1962,  2586,
         29892, 11196, 29889,    13,   458,  1576,  3883,   881,  3667,   675,
           278, 10970,   313,   262, 29896,   322,   297, 29906, 29897,   322,
           278,  4670,  2586,   304,  4017,   278,  1962,  2533,   322, 11196,
          1819, 29889,    13,  5453,   594,   672, 29918, 29947, 29898,  4905,
           518, 29955, 29901, 29900, 29962,  2533, 29892,    13,   462,   268,
          1962, 11196, 29892,    13,   462,   268,  1881,   518, 29955, 29901,
         29900, 29962,   297, 29896, 29892,   297, 29906, 29892,    13,   462,
           268,  1881,  4670,   416,    13,    13,  1678,  8014,   518, 29955,
         29901, 29900, 29962,  2533, 29918, 29893, 29936,    13,  1678,  8014,
         11196, 29918, 29893, 29936,    13,    13,  1678,   594,   672, 29918,
         29946,   594,   672, 29918, 29946, 29918, 29900, 29898,  2083, 29918,
         29893, 29961, 29941, 29901, 29900,  1402, 11196, 29918, 29893, 29892,
           297, 29896, 29961, 29941, 29901, 29900,  1402,   297, 29906, 29961,
         29941, 29901, 29900,  1402,  4670,   416,    13,  1678,   594,   672,
         29918, 29946,   594,   672, 29918, 29946, 29918, 29896, 29898,  2083,
         29918, 29893, 29961, 29955, 29901, 29946,  1402, 11196, 29892,   297,
         29896, 29961, 29955, 29901, 29946,  1402,   297, 29906, 29961, 29955,
         29901, 29946,  1402, 11196, 29918, 29893,   416,    13,    13,  1678,
          3566,  2533,   353,  2533, 29918, 29893, 29936,    13,    13,   355,
          5453]], device='cuda:0')
Checking if done:
tokens generated:  655
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  9
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:51: error: Unknown module type: adder_4\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/1974400_adder_32.v:52: error: Unknown module type: adder_4\n9 error(s) during elaboration.\n*** These modules were missing:\n        adder_4 referenced 8 times.\n***\n'
Terminal state not complete - generating additional module:  2  additonal module/s.
Setting terminal state to random.
original text:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

    assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout, in1[1], in2[1], cout_w);

    assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum_w = in1 ^ in2 ^ cin;
    assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule
[[ 849 4002  647 ...   13  355 5453]]
tensor([[ 849, 4002,  647,  ...,   13,  355, 5453]], device='cuda:0')
Checking if done:
tokens generated:  1382
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_w;
    wire cout_w;

    adder_16 adder_16_0(sum_w[15:0], cout_w, in1[15:0], in2[15:0], cin);
    adder_16 adder_16_1(sum_w[31:16], cout, in1[31:16], in2[31:16], cout_w);

    assign sum = sum_w;

endmodule

//Design a 16-bit adder.
//There are two 16 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 16 bit value, [15:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_16(output [15:0] sum,
                      output cout,
                      input [15:0] in1, in2,
                      input cin);

    wire [15:0] sum_w;
    wire cout_w;

    adder_8 adder_8_0(sum_w[7:0], cout_w, in1[7:0], in2[7:0], cin);
    adder_8 adder_8_1(sum_w[15:8], cout, in1[15:8], in2[15:8], cout_w);

    assign sum = sum_w;

endmodule

//Design an 8-bit adder.
//There are two 8 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 8 bit value, [7:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_8(output [7:0] sum,
                     output cout,
                     input [7:0] in1, in2,
                     input cin);

    wire [7:0] sum_w;
    wire cout_w;

    adder_4 adder_4_0(sum_w[3:0], cout_w, in1[3:0], in2[3:0], cin);
    adder_4 adder_4_1(sum_w[7:4], cout, in1[7:4], in2[7:4], cout_w);

    assign sum = sum_w;

endmodule

//Design a 4-bit adder.
//There are two 4 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 4 bit value, [3:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_4(output [3:0] sum,
                     output cout,
                     input [3:0] in1, in2,
                     input cin);

    wire [3:0] sum_w;
    wire cout_w;

    adder_2 adder_2_0(sum_w[1:0], cout_w, in1[1:0], in2[1:0], cin);
    adder_2 adder_2_1(sum_w[3:2], cout, in1[3:2], in2[3:2], cout_w);

    assign sum = sum_w;

endmodule

//Design a 2-bit adder.
//There are two 2 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 2 bit value, [1:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_2(output [1:0] sum,
                     output cout,
                     input [1:0] in1, in2,
                     input cin);

    wire [1:0] sum_w;
    wire cout_w;

    adder_1 adder_1_0(sum_w[0], cout_w, in1[0], in2[0], cin);
    adder_1 adder_1_1(sum_w[1], cout, in1[1], in2[1], cout_w);

    assign sum = sum_w;

endmodule

//Design a 1-bit adder.
//There are two 1 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 1 bit value, [0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_1(output [0:0] sum,
                     output cout,
                     input [0:0] in1, in2,
                     input cin);

    wire [0:0] sum_w;
    wire cout_w;

    assign sum_w = in1 ^ in2 ^ cin;
    assign cout_w = (in1 & in2) | (in1 & cin) | (in2 & cin);

    assign sum = sum_w;
    assign cout = cout_w;

endmodule
LOGGING VERILOG CODE.
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
MCTS tree has reached the end.
Terminal state found - returning state.
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/llama_dump_random/1974400_adder_32/synth_script.sh
Running bash in x seconds:  0.753256

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  304.038
Delay value for the chip design is:  1197.78
Product:  364170.63564
Score (1/chip area):  0.11264257395740998
MCTS total time: 
