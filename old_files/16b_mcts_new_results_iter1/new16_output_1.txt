Using GPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_prompts/Andgate.v
Prompt str:  // Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

Loading LLM model...
Loaded LLM:  shailja/fine-tuned-codegen-16B-Verilog
Initializing MCTS tree/LLM env...
Episode not stated yet!
Simulations per episode:  100
********-- EPISODE-1--************
ORIG MODULE:  top_module
--------MCTS-------
Env seed:  42
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
LLMEstimate:      assign out = a & b;
 1
LLMEstimate:      assign out = a && b;
 1
LLMEstimate:      
    assign out = a && b 1
LLMEstimate:      assign out = a & b;
 1
LLMEstimate:      
    assign out = a && b 1
LLMEstimate:      assign out = a && b;
 1
LLMEstimate:      
    assign out = a && b 1
LLMEstimate:      assign out = a & b;
 1
LLMEstimate:      assign out = a && b;
 1
LLMEstimate:      assign out = a && b;
 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257 11405   275    26   198]]
MCTS Stage 2 - Expansion: next action:  1  corresponding to state:  [[50284   562   570   503   796   257 11405   275    26   198]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  10
Calling isPromptComplete: 
original text:  // Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
tensor([[ 1003, 13610,   257,  8265,   326, 23986,   281,  5357,  8946,    13,
           198,   198,  1003,   367,   600,    25,  4643,   346,   519,   468,
          4553,  1643,  3083,    12,  6981, 35494,     8,   290, 12219,    12,
          6981,   357, 25226,     8, 12879,    11,   588,   327,    13,   220,
           198,  1003,  4619,   356,   821,  1762,   351,   257,   530,    12,
          2545,   994,    11,   340,  1595,   470,  2300,   543,   356,  3853,
            13,   198,   198, 21412,  1353,    62, 21412,     7,   220,   198,
         50284, 15414,   257,    11,   220,   198, 50284, 15414,   275,    11,
           220,   198, 50284, 22915,   503,  5619,   198, 50284,   562,   570,
           503,   796,   257, 11405,   275,    26,   198,   437, 21412]],
       device='cuda:0')
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  1.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257  1222   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.204712303000008
-------------------------------------------------------
MCTS Iteration:  2.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257 11405   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  4  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.206516007999994
-------------------------------------------------------
MCTS Iteration:  3.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   198 50284   562   570   503   796   257 11405   275]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;

endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
MCTS Stage 2 - Expansion: next action:  3  corresponding to state:  [[   26   198   198   437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.206546892999995
-------------------------------------------------------
MCTS Iteration:  4.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257  1222   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  3  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.195108352999995
-------------------------------------------------------
MCTS Iteration:  5.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   198 50284   562   570   503   796   257 11405   275]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;

endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;

endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
MCTS Stage 2 - Expansion: next action:  2  corresponding to state:  [[   26   198   198   437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.205542242000007
-------------------------------------------------------
MCTS Iteration:  6.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257 11405   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  1  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.208620924000002
-------------------------------------------------------
MCTS Iteration:  7.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   198 50284   562   570   503   796   257 11405   275]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  ;

endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;
    
endmodule 1
LLMEstimate:  ;

endmodule 1
LLMEstimate:  ;
    
endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
MCTS Stage 2 - Expansion: next action:  8  corresponding to state:  [[   26   198   198   437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.2171478829999955
-------------------------------------------------------
MCTS Iteration:  8.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257  1222   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  1  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.208976547999981
-------------------------------------------------------
MCTS Iteration:  9.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257 11405   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  9  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.209392541
-------------------------------------------------------
MCTS Iteration:  10.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]  taking action:  9
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
SEQUENCE:  [[50284   562   570   503   796   257 11405   275    26   198]]
Leaf selection - depth:  1
Checking if done:
tokens generated:  10
Calling isPromptComplete: 
Getting LLM token estimates (probs/ids).
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
LLMEstimate:  endmodule 1
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
MCTS Stage 2 - Expansion: next action:  6  corresponding to state:  [[  437 21412]]

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  7.213660931999982
-------------------------------------------------------
MCTS Iteration:  11.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.8902302 1.8902302 1.8902302 1.8902302 1.8902302 1.8902302 1.8902302
 1.8902302 1.8902302 1.8902302]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0020298959999820454
-------------------------------------------------------
MCTS Iteration:  12.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9918869 1.9878304 1.9878304 1.9878304 1.9878304 1.9878304 1.9878304
 1.9878304 1.9878304 1.9878304]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0019254110000019864
-------------------------------------------------------
MCTS Iteration:  13.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.0544956 1.0544956 2.0817435 2.0817435 2.0817435 2.0817435 2.0817435
 2.0817435 2.0817435 2.0817435]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018649149999987458
-------------------------------------------------------
MCTS Iteration:  14.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.1149056 1.1149056 1.1149056 2.1723585 2.1723585 2.1723585 2.1723585
 2.1723585 2.1723585 2.1723585]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.00189437299999895
-------------------------------------------------------
MCTS Iteration:  15.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.1733334 1.1733334 1.1733334 1.1733334 2.26      2.26      2.26
 2.26      2.26      2.26     ]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0019126490000189733
-------------------------------------------------------
MCTS Iteration:  16.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.2299619 1.2299619 1.2299619 1.2299619 1.2299619 2.3449428 2.3449428
 2.3449428 2.3449428 2.3449428]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018774350000114737
-------------------------------------------------------
MCTS Iteration:  17.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.2849481 1.2849481 1.2849481 1.2849481 1.2849481 1.2849481 2.427422
 2.427422  2.427422  2.427422 ]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018436839999935728
-------------------------------------------------------
MCTS Iteration:  18.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.3384268 1.3384268 1.3384268 1.3384268 1.3384268 1.3384268 1.3384268
 2.5076404 2.5076404 2.5076404]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018677559999957793
-------------------------------------------------------
MCTS Iteration:  19.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.3905158 1.3905158 1.3905158 1.3905158 1.3905158 1.3905158 1.3905158
 1.3905158 2.5857737 2.5857737]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018629939999925682
-------------------------------------------------------
MCTS Iteration:  20.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.441318  1.441318  1.441318  1.441318  1.441318  1.441318  1.441318
 1.441318  1.441318  2.6619773]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]  taking action:  0
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018808400000125403
-------------------------------------------------------
MCTS Iteration:  21.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.4909244 1.4909244 1.4909244 1.4909244 1.4909244 1.4909244 1.4909244
 1.4909244 1.4909244 1.4909244]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018602179999902546
-------------------------------------------------------
MCTS Iteration:  22.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9045619 1.5394158 1.5394158 1.5394158 1.5394158 1.5394158 1.5394158
 1.5394158 1.5394158 1.5394158]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018490010000107304
-------------------------------------------------------
MCTS Iteration:  23.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9401479 0.9401479 1.5868638 1.5868638 1.5868638 1.5868638 1.5868638
 1.5868638 1.5868638 1.5868638]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018490590000226348
-------------------------------------------------------
MCTS Iteration:  24.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.975     0.975     0.975     1.6333332 1.6333332 1.6333332 1.6333332
 1.6333332 1.6333332 1.6333332]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018710239999961686
-------------------------------------------------------
MCTS Iteration:  25.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.0091617 1.0091617 1.0091617 1.0091617 1.6788821 1.6788821 1.6788821
 1.6788821 1.6788821 1.6788821]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018592909999881613
-------------------------------------------------------
MCTS Iteration:  26.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.0426726 1.0426726 1.0426726 1.0426726 1.0426726 1.7235634 1.7235634
 1.7235634 1.7235634 1.7235634]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018455429999733042
-------------------------------------------------------
MCTS Iteration:  27.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.0755684 1.0755684 1.0755684 1.0755684 1.0755684 1.0755684 1.7674246
 1.7674246 1.7674246 1.7674246]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0019215239999823552
-------------------------------------------------------
MCTS Iteration:  28.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.1078819 1.1078819 1.1078819 1.1078819 1.1078819 1.1078819 1.1078819
 1.8105092 1.8105092 1.8105092]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018786609999779103
-------------------------------------------------------
MCTS Iteration:  29.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.1396428 1.1396428 1.1396428 1.1396428 1.1396428 1.1396428 1.1396428
 1.1396428 1.8528571 1.8528571]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018581319999952939
-------------------------------------------------------
MCTS Iteration:  30.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.1708786 1.1708786 1.1708786 1.1708786 1.1708786 1.1708786 1.1708786
 1.1708786 1.1708786 1.8945048]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6951151 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302 2.3902302
 2.3902302 2.3902302 2.3902302]  taking action:  1
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018907029999866154
-------------------------------------------------------
MCTS Iteration:  31.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.2016147 1.2016147 1.2016147 1.2016147 1.2016147 1.2016147 1.2016147
 1.2016147 1.2016147 1.2016147]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018596879999961402
-------------------------------------------------------
MCTS Iteration:  32.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.7854993 1.2318741 1.2318741 1.2318741 1.2318741 1.2318741 1.2318741
 1.2318741 1.2318741 1.2318741]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018724159999976564
-------------------------------------------------------
MCTS Iteration:  33.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.8093428 0.8093428 1.2616785 1.2616785 1.2616785 1.2616785 1.2616785
 1.2616785 1.2616785 1.2616785]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0019023460000084924
-------------------------------------------------------
MCTS Iteration:  34.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.832838  0.832838  0.832838  1.2910476 1.2910476 1.2910476 1.2910476
 1.2910476 1.2910476 1.2910476]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018464769999866348
-------------------------------------------------------
MCTS Iteration:  35.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.8559999 0.8559999 0.8559999 0.8559999 1.3199999 1.3199999 1.3199999
 1.3199999 1.3199999 1.3199999]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018608649999976024
-------------------------------------------------------
MCTS Iteration:  36.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.87884253 0.87884253 0.87884253 0.87884253 0.87884253 1.3485532
 1.3485532  1.3485532  1.3485532  1.3485532 ]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001907934999991312
-------------------------------------------------------
MCTS Iteration:  37.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9013782 0.9013782 0.9013782 0.9013782 0.9013782 0.9013782 1.3767228
 1.3767228 1.3767228 1.3767228]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018858640000019022
-------------------------------------------------------
MCTS Iteration:  38.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.92361945 0.92361945 0.92361945 0.92361945 0.92361945 0.92361945
 0.92361945 1.4045243  1.4045243  1.4045243 ]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018317959999762934
-------------------------------------------------------
MCTS Iteration:  39.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9455772 0.9455772 0.9455772 0.9455772 0.9455772 0.9455772 0.9455772
 0.9455772 1.4319715 1.4319715]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018839800000023388
-------------------------------------------------------
MCTS Iteration:  40.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9672622 0.9672622 0.9672622 0.9672622 0.9672622 0.9672622 0.9672622
 0.9672622 0.9672622 1.4590778]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [0.88 0.88 2.76 2.76 2.76 2.76 2.76 2.76 2.76 2.76]  taking action:  2
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018727240000089296
-------------------------------------------------------
MCTS Iteration:  41.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.9886845 0.9886845 0.9886845 0.9886845 0.9886845 0.9886845 0.9886845
 0.9886845 0.9886845 0.9886845]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018471479999959683
-------------------------------------------------------
MCTS Iteration:  42.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.67487746 1.0098529  1.0098529  1.0098529  1.0098529  1.0098529
 1.0098529  1.0098529  1.0098529  1.0098529 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018582700000138175
-------------------------------------------------------
MCTS Iteration:  43.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6923142 0.6923142 1.030777  1.030777  1.030777  1.030777  1.030777
 1.030777  1.030777  1.030777 ]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018637020000085158
-------------------------------------------------------
MCTS Iteration:  44.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.70955354 0.70955354 0.70955354 1.0514643  1.0514643  1.0514643
 1.0514643  1.0514643  1.0514643  1.0514643 ]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018836810000095738
-------------------------------------------------------
MCTS Iteration:  45.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.7266026 0.7266026 0.7266026 0.7266026 1.071923  1.071923  1.071923
 1.071923  1.071923  1.071923 ]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018821310000021185
-------------------------------------------------------
MCTS Iteration:  46.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.74346715 0.74346715 0.74346715 0.74346715 0.74346715 1.0921607
 1.0921607  1.0921607  1.0921607  1.0921607 ]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018807419999973263
-------------------------------------------------------
MCTS Iteration:  47.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.7601535 0.7601535 0.7601535 0.7601535 0.7601535 0.7601535 1.112184
 1.112184  1.112184  1.112184 ]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018749299999853974
-------------------------------------------------------
MCTS Iteration:  48.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.7766667 0.7766667 0.7766667 0.7766667 0.7766667 0.7766667 0.7766667
 1.132     1.132     1.132    ]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018603260000134014
-------------------------------------------------------
MCTS Iteration:  49.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.7930123 0.7930123 0.7930123 0.7930123 0.7930123 0.7930123 0.7930123
 0.7930123 1.1516147 1.1516147]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018424909999907868
-------------------------------------------------------
MCTS Iteration:  50.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.8091952 0.8091952 0.8091952 0.8091952 0.8091952 0.8091952 0.8091952
 0.8091952 0.8091952 1.1710343]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0428869 1.0428869 1.0428869 3.0857737 3.0857737 3.0857737 3.0857737
 3.0857737 3.0857737 3.0857737]  taking action:  3
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018540089999987686
-------------------------------------------------------
MCTS Iteration:  51.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.8252203 0.8252203 0.8252203 0.8252203 0.8252203 0.8252203 0.8252203
 0.8252203 0.8252203 0.8252203]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018568469999991066
-------------------------------------------------------
MCTS Iteration:  52.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.5780788  0.84109193 0.84109193 0.84109193 0.84109193 0.84109193
 0.84109193 0.84109193 0.84109193 0.84109193]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018856849999906444
-------------------------------------------------------
MCTS Iteration:  53.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.5915553  0.5915553  0.85681456 0.85681456 0.85681456 0.85681456
 0.85681456 0.85681456 0.85681456 0.85681456]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001891814000003933
-------------------------------------------------------
MCTS Iteration:  54.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6049077  0.6049077  0.6049077  0.87239236 0.87239236 0.87239236
 0.87239236 0.87239236 0.87239236 0.87239236]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018509729999891533
-------------------------------------------------------
MCTS Iteration:  55.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6181391 0.6181391 0.6181391 0.6181391 0.887829  0.887829  0.887829
 0.887829  0.887829  0.887829 ]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018431000000020958
-------------------------------------------------------
MCTS Iteration:  56.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.63125306 0.63125306 0.63125306 0.63125306 0.63125306 0.9031287
 0.9031287  0.9031287  0.9031287  0.9031287 ]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001880176999975447
-------------------------------------------------------
MCTS Iteration:  57.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.64425236 0.64425236 0.64425236 0.64425236 0.64425236 0.64425236
 0.9182945  0.9182945  0.9182945  0.9182945 ]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001869804000023123
-------------------------------------------------------
MCTS Iteration:  58.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6571402  0.6571402  0.6571402  0.6571402  0.6571402  0.6571402
 0.6571402  0.93333024 0.93333024 0.93333024]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018581950000111647
-------------------------------------------------------
MCTS Iteration:  59.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6699192 0.6699192 0.6699192 0.6699192 0.6699192 0.6699192 0.6699192
 0.6699192 0.948239  0.948239 ]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018882749999988846
-------------------------------------------------------
MCTS Iteration:  60.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6825921 0.6825921 0.6825921 0.6825921 0.6825921 0.6825921 0.6825921
 0.6825921 0.6825921 0.9630242]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1901479 1.1901479 1.1901479 1.1901479 3.3802958 3.3802958 3.3802958
 3.3802958 3.3802958 3.3802958]  taking action:  4
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018344849999891721
-------------------------------------------------------
MCTS Iteration:  61.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.6951615 0.6951615 0.6951615 0.6951615 0.6951615 0.6951615 0.6951615
 0.6951615 0.6951615 0.6951615]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.00182903699999315
-------------------------------------------------------
MCTS Iteration:  62.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.49417627 0.70763    0.70763    0.70763    0.70763    0.70763
 0.70763    0.70763    0.70763    0.70763   ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018823999999995067
-------------------------------------------------------
MCTS Iteration:  63.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.505      0.505      0.71999997 0.71999997 0.71999997 0.71999997
 0.71999997 0.71999997 0.71999997 0.71999997]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001869146000018418
-------------------------------------------------------
MCTS Iteration:  64.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.51573944 0.51573944 0.51573944 0.73227364 0.73227364 0.73227364
 0.73227364 0.73227364 0.73227364 0.73227364]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018534019999947304
-------------------------------------------------------
MCTS Iteration:  65.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.52639663 0.52639663 0.52639663 0.52639663 0.74445325 0.74445325
 0.74445325 0.74445325 0.74445325 0.74445325]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018862139999953342
-------------------------------------------------------
MCTS Iteration:  66.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.53697336 0.53697336 0.53697336 0.53697336 0.53697336 0.75654095
 0.75654095 0.75654095 0.75654095 0.75654095]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018493679999949109
-------------------------------------------------------
MCTS Iteration:  67.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.5474714 0.5474714 0.5474714 0.5474714 0.5474714 0.5474714 0.7685388
 0.7685388 0.7685388 0.7685388]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018741670000110844
-------------------------------------------------------
MCTS Iteration:  68.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.55789256 0.55789256 0.55789256 0.55789256 0.55789256 0.55789256
 0.55789256 0.7804486  0.7804486  0.7804486 ]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001851038000012295
-------------------------------------------------------
MCTS Iteration:  69.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.5682385 0.5682385 0.5682385 0.5682385 0.5682385 0.5682385 0.5682385
 0.5682385 0.7922725 0.7922725]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018479939999735961
-------------------------------------------------------
MCTS Iteration:  70.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.5785109 0.5785109 0.5785109 0.5785109 0.5785109 0.5785109 0.5785109
 0.5785109 0.5785109 0.8040125]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3255684 1.3255684 1.3255684 1.3255684 1.3255684 3.6511369 3.6511369
 3.6511369 3.6511369 3.6511369]  taking action:  5
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018508709999878192
-------------------------------------------------------
MCTS Iteration:  71.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.588711 0.588711 0.588711 0.588711 0.588711 0.588711 0.588711 0.588711
 0.588711 0.588711]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018527659999847401
-------------------------------------------------------
MCTS Iteration:  72.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.42119163 0.5988406  0.5988406  0.5988406  0.5988406  0.5988406
 0.5988406  0.5988406  0.5988406  0.5988406 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018349959999852672
-------------------------------------------------------
MCTS Iteration:  73.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.43013436 0.43013436 0.60890114 0.60890114 0.60890114 0.60890114
 0.60890114 0.60890114 0.60890114 0.60890114]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.00185675599999513
-------------------------------------------------------
MCTS Iteration:  74.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.43901676 0.43901676 0.43901676 0.61889386 0.61889386 0.61889386
 0.61889386 0.61889386 0.61889386 0.61889386]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0017844680000109747
-------------------------------------------------------
MCTS Iteration:  75.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.44784015 0.44784015 0.44784015 0.44784015 0.6288202  0.6288202
 0.6288202  0.6288202  0.6288202  0.6288202 ]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018849169999839432
-------------------------------------------------------
MCTS Iteration:  76.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.45660573 0.45660573 0.45660573 0.45660573 0.45660573 0.6386814
 0.6386814  0.6386814  0.6386814  0.6386814 ]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018638029999920036
-------------------------------------------------------
MCTS Iteration:  77.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.46531445 0.46531445 0.46531445 0.46531445 0.46531445 0.46531445
 0.64847875 0.64847875 0.64847875 0.64847875]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018709869999895545
-------------------------------------------------------
MCTS Iteration:  78.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.4739675 0.4739675 0.4739675 0.4739675 0.4739675 0.4739675 0.4739675
 0.6582135 0.6582135 0.6582135]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018412180000098033
-------------------------------------------------------
MCTS Iteration:  79.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.48256606 0.48256606 0.48256606 0.48256606 0.48256606 0.48256606
 0.48256606 0.48256606 0.66788685 0.66788685]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018860760000052323
-------------------------------------------------------
MCTS Iteration:  80.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.4911111 0.4911111 0.4911111 0.4911111 0.4911111 0.4911111 0.4911111
 0.4911111 0.4911111 0.6775   ]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 1.4516147 3.9032295
 3.9032295 3.9032295 3.9032295]  taking action:  6
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018664129999876877
-------------------------------------------------------
MCTS Iteration:  81.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.49960345 0.49960345 0.49960345 0.49960345 0.49960345 0.49960345
 0.49960345 0.49960345 0.49960345 0.49960345]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018540809999763042
-------------------------------------------------------
MCTS Iteration:  82.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.35723984 0.5080442  0.5080442  0.5080442  0.5080442  0.5080442
 0.5080442  0.5080442  0.5080442  0.5080442 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018533859999934066
-------------------------------------------------------
MCTS Iteration:  83.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.36479092 0.36479092 0.5164344  0.5164344  0.5164344  0.5164344
 0.5164344  0.5164344  0.5164344  0.5164344 ]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001958715000000666
-------------------------------------------------------
MCTS Iteration:  84.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.37229717 0.37229717 0.37229717 0.5247745  0.5247745  0.5247745
 0.5247745  0.5247745  0.5247745  0.5247745 ]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018445299999996223
-------------------------------------------------------
MCTS Iteration:  85.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.3797593  0.3797593  0.3797593  0.3797593  0.53306586 0.53306586
 0.53306586 0.53306586 0.53306586 0.53306586]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018566389999818966
-------------------------------------------------------
MCTS Iteration:  86.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.3871783 0.3871783 0.3871783 0.3871783 0.3871783 0.5413093 0.5413093
 0.5413093 0.5413093 0.5413093]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018650509999815768
-------------------------------------------------------
MCTS Iteration:  87.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.39455473 0.39455473 0.39455473 0.39455473 0.39455473 0.39455473
 0.5495052  0.5495052  0.5495052  0.5495052 ]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018910149999840087
-------------------------------------------------------
MCTS Iteration:  88.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.40188944 0.40188944 0.40188944 0.40188944 0.40188944 0.40188944
 0.40188944 0.5576549  0.5576549  0.5576549 ]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001872890000015559
-------------------------------------------------------
MCTS Iteration:  89.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.4091829  0.4091829  0.4091829  0.4091829  0.4091829  0.4091829
 0.4091829  0.4091829  0.56575876 0.56575876]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018481129999941004
-------------------------------------------------------
MCTS Iteration:  90.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.41643608 0.41643608 0.41643608 0.41643608 0.41643608 0.41643608
 0.41643608 0.41643608 0.41643608 0.5738179 ]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999 1.5699999
 4.14      4.14      4.14     ]  taking action:  7
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001860547000006818
-------------------------------------------------------
MCTS Iteration:  91.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.42364955 0.42364955 0.42364955 0.42364955 0.42364955 0.42364955
 0.42364955 0.42364955 0.42364955 0.42364955]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001872662000010905
-------------------------------------------------------
MCTS Iteration:  92.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.30074888 0.4308238  0.4308238  0.4308238  0.4308238  0.4308238
 0.4308238  0.4308238  0.4308238  0.4308238 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001838655999989669
-------------------------------------------------------
MCTS Iteration:  93.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.30723602 0.30723602 0.43795967 0.43795967 0.43795967 0.43795967
 0.43795967 0.43795967 0.43795967 0.43795967]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001907748000007814
-------------------------------------------------------
MCTS Iteration:  94.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.3136887  0.3136887  0.3136887  0.44505763 0.44505763 0.44505763
 0.44505763 0.44505763 0.44505763 0.44505763]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018895720000102756
-------------------------------------------------------
MCTS Iteration:  95.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.32010752 0.32010752 0.32010752 0.32010752 0.45211828 0.45211828
 0.45211828 0.45211828 0.45211828 0.45211828]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198 50284   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  16
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018912470000032044
-------------------------------------------------------
MCTS Iteration:  96.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.32649308 0.32649308 0.32649308 0.32649308 0.32649308 0.45914245
 0.45914245 0.45914245 0.45914245 0.45914245]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018803700000091794
-------------------------------------------------------
MCTS Iteration:  97.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.33284563 0.33284563 0.33284563 0.33284563 0.33284563 0.33284563
 0.46613026 0.46613026 0.46613026 0.46613026]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
SEQUENCE:  [[   26   198   198   437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  15
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;

endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001846491999998534
-------------------------------------------------------
MCTS Iteration:  98.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.339166   0.339166   0.339166   0.339166   0.339166   0.339166
 0.339166   0.47308266 0.47308266 0.47308266]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001841898999998648
-------------------------------------------------------
MCTS Iteration:  99.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.3454545  0.3454545  0.3454545  0.3454545  0.3454545  0.3454545
 0.3454545  0.3454545  0.48000002 0.48000002]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.0018914000000052056
-------------------------------------------------------
MCTS Iteration:  100.0
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.3517117  0.3517117  0.3517117  0.3517117  0.3517117  0.3517117
 0.3517117  0.3517117  0.3517117  0.48688293]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715 1.6819715
 1.6819715 4.363943  4.363943 ]  taking action:  8
Adding child.
STATE:  [[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
SEQUENCE:  [[  437 21412]]
Leaf selection - depth:  2
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Leaf is terminal - getting return value.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

Iteration TIME (sec):  0.001859802000012678
----
 Tree depth: 0
 Node: action=None
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
• Child Action scores:[0.35793787 0.35793787 0.35793787 0.35793787 0.35793787 0.35793787
 0.35793787 0.35793787 0.35793787 0.35793787]
• Child averaged monte carlo:-0.9901960784313726
• Child probablities:[4.05774210e-13 2.03511615e-03 8.52882650e-26 4.23441617e-40
 2.86368626e-06 4.07079948e-55 1.47962020e-01 1.40213632e-23
 3.97182509e-16 4.70567548e-11]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=101.0,Q=-0.9901960784313726,M=-0.9901960784313726
----
 Tree depth: 1
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=9
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198]]
• Child Action scores:[1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712 1.7884712
 1.7884712 1.7884712 4.5769424]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198 50284   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503   796   257 11405
    275    26   198   198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257  1222   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275    26
    198   437 21412]]
• Child Action scores:[1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147 1.9516147
 1.9516147 1.9516147 1.9516147]
• Child averaged monte carlo:-0.5
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
END ROBUST/MAX VALUES:
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Checking if done:
tokens generated:  12
Calling isPromptComplete: 
Ends with endmodule.
Running functionality check.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a & b;
endmodule
LOGGING VERILOG CODE.
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
MCTS tree has reached the end.
Running getPromptScore: 
MCTS Total Time:  81.65621
