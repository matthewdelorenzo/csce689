Using GPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_prompts/Andgate.v
Prompt str:  // Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

Loading LLM model...
Loaded LLM:  shailja/CodeGen_16B_Verilog
Initializing MCTS tree/LLM env...
Episode not stated yet!
Simulations per episode:  100
********-- EPISODE-1--************
ORIG MODILE:  top_module
--------MCTS-------
Env seed:  42
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.629989  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.23336239 0.20284858 0.07561424 0.03512689 0.03012832 0.02715679
 0.31561018 0.00347347 0.00322772 0.00293797]  taking action:  0
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.396529  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  2.0
Iteration TIME (sec):  3.43568591399999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.25527713 0.24843776 0.09260815 0.04302147 0.03689951 0.03326014
 0.38654195 0.00425412 0.00395313 0.00359827]  taking action:  6
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.512829  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  3.0
Iteration TIME (sec):  4.543411997999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.37211891  0.28687121  0.10693468  0.04967692  0.04260788  0.03840551
 -0.2768299   0.00491223  0.00456468  0.00415492]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.106453   0.7274476  0.05194371 0.01052109 0.00712061 0.00632335
 0.00250176 0.00243291 0.00236604 0.00223964]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.180221  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  4.0
Iteration TIME (sec):  3.218254021000007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01662763  0.32073177  0.11955661  0.05554048  0.04763706  0.04293866
 -0.25048824  0.00549204  0.00510347  0.00464534]  taking action:  1
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	
	assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.245703  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  5.0
Iteration TIME (sec):  4.282964981999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04541542 -0.32432798  0.1309677   0.06084155  0.05218378  0.04703695
 -0.22667357  0.00601623  0.00559057  0.00508872]  taking action:  2
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.692216  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  6.0
Iteration TIME (sec):  3.724347996000006
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.1024699  -0.31025253 -0.42926936  0.06571639  0.05636493  0.05080571
 -0.20477371  0.00649827  0.0060385   0.00549644]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.17756128 0.89093775 0.06361779 0.01288565 0.00872093 0.00774449
 0.00306402 0.00297969 0.00289779 0.00274299]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.29723  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  7.0
Iteration TIME (sec):  4.3394743040000066
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.1333188  -0.29715142 -0.42438576  0.07025377  0.06025664  0.05431359
 -0.18438982  0.00694694  0.00645543  0.00587595]  taking action:  3
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.138113  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  8.0
Iteration TIME (sec):  3.1853543229999985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.09591082 -0.28484659 -0.41979899 -0.46274231  0.06391182  0.05760826
 -0.16524485  0.00736835  0.00684702  0.00623238]  taking action:  4
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
  
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.251706  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  9.0
Iteration TIME (sec):  4.283153890999998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.06052946 -0.27320839 -0.41546071 -0.46072695 -0.46631551  0.06072444
 -0.14713709  0.00776692  0.00721739  0.00656951]  taking action:  5
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
 
    assign out = a && b;
 
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.537487  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  10.0
Iteration TIME (sec):  4.571810364000001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.0268772  -0.26213896 -0.41133445 -0.45881008 -0.46467141 -0.46815584
 -0.12991426  0.00814601  0.00756967  0.00689016]  taking action:  7
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
     
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.538626  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  11.0
Iteration TIME (sec):  4.569723135000004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.00527713 -0.25156224 -0.40739185 -0.45697853 -0.46310049 -0.46673986
 -0.11345805 -0.49574588  0.00790626  0.00719653]  taking action:  8
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
        
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.542183  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  12.0
Iteration TIME (sec):  4.57249860200001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.03611736 -0.24141778 -0.40361038 -0.45522183 -0.46159378 -0.46538174
 -0.09767438 -0.49557218 -0.49588545  0.00749039]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.28238034 0.01438314 0.0734595  0.01487907 0.01007006 0.00894257
 0.00353803 0.00344065 0.00334608 0.00316733]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.9516098e+00 2.7339222e-06 6.0684772e-07 5.5692573e-07 4.4963792e-07
 4.4204089e-07 1.0611410e-07 9.4292389e-08 7.7681243e-08 3.4944559e-08]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.959985  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  13.0
Iteration TIME (sec):  2.996544675999999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.14736598 -0.23165655 -0.39997177 -0.4535315  -0.46014398 -0.46407494
 -0.08248698 -0.49540503 -0.49573013  0.00777315]  taking action:  9
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
		
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.26322  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  14.0
Iteration TIME (sec):  4.2989433770000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.12445961 -0.22223814 -0.39646094 -0.45190053 -0.4587451  -0.46281403
 -0.06783296 -0.49524375 -0.49558027 -0.49597702]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.2374635e+00 6.0690415e-01 3.1607181e-02 2.3526123e-02 3.8054753e-03
 2.5306260e-03 1.1167385e-03 1.0665103e-03 9.8106230e-04 8.5864059e-04]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.3102  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  15.0
Iteration TIME (sec):  4.344476721000007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.10230488 -0.21312879 -0.39306532 -0.45032308 -0.45739212 -0.46159449
 -0.36910656 -0.49508777 -0.49543532 -0.49584508]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.08351481  0.0750978   0.08213021  0.0166353   0.01125867  0.0099981
  0.00395563  0.00384677  0.00374104  0.00354118]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  290

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    wire and_out;
    assign and_out = a && b;
    assign out = and_out;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  7.53717  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  16.0
Iteration TIME (sec):  8.562714776999997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.23402691 -0.20429992 -0.38977425 -0.4487942  -0.4560808  -0.46041251
 -0.35994872 -0.49493659 -0.49529484 -0.49571721]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [0.7083183  0.6413003  0.28709185 0.13533868 0.08134888 0.02410859
 0.0129467  0.00606531 0.00503988 0.00431179]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  197

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	
	assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.03036  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  17.0
Iteration TIME (sec):  4.064910975999993
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.21665212 -0.46381811 -0.38657864 -0.44730967 -0.45480752 -0.45926481
 -0.35105651 -0.49478979 -0.49515843 -0.49559304]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.02785581  0.12998807 -0.45501542  0.01822306  0.01233326  0.01095237
  0.00433318  0.00421392  0.0040981   0.00387917]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [1.9044580e+00 1.6439121e-02 1.3181419e-02 3.4891067e-03 1.7741388e-03
 1.7600905e-03 1.1607955e-03 1.1377706e-03 7.8385312e-04 4.0647772e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.079919  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  18.0
Iteration TIME (sec):  4.115393350000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.31407455 -0.45825958 -0.38347063 -0.44586583 -0.45356914 -0.45814857
 -0.34240805 -0.49464702 -0.49502575 -0.49547228]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02332795 -0.2130234  -0.4514111   0.01968315  0.01332144  0.01182991
  0.00468037  0.00455155  0.00442645  0.00418999]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [6.9511211e-01 3.3483573e-06 7.4323361e-07 6.8209198e-07 5.5069177e-07
 5.4138729e-07 1.2996270e-07 1.1548412e-07 9.5139704e-08 4.2798170e-08]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.8734167e+00 3.3633754e-02 2.3479784e-02 5.3785322e-03 4.1260035e-03
 7.4327050e-04 6.6469953e-04 6.4412114e-04 6.0446828e-04 5.9994735e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  796

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.726426  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  19.0
Iteration TIME (sec):  2.766408971000004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.38747071 -0.45284551 -0.38044339 -0.44445952 -0.45236294 -0.45706134
 -0.33398435 -0.49450796 -0.49489653 -0.49535466]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [0.25778854 0.7433027  0.03871073 0.0288135  0.00466074 0.00309937
 0.00136772 0.0013062  0.00120155 0.00105162]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.190179  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  20.0
Iteration TIME (sec):  3.2261378039999897
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.37543113 -0.44756518 -0.37749093 -0.44308794 -0.45118654 -0.45600096
 -0.49432653 -0.49437233 -0.4947705  -0.49523994]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.19677353 -0.1817016  -0.44805628  0.02104218  0.01424122  0.0126467
  0.00500353  0.00486582  0.00473208  0.00447928]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  7

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    and(out, a, b);
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.191642  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  21.0
Iteration TIME (sec):  3.226748848999989
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.43437775 -0.44240914 -0.37460797 -0.44174865 -0.45003783 -0.45496555
 -0.48830986 -0.4942399  -0.49464744 -0.49512792]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [0.91049194 0.10472698 0.07331901 0.06283855 0.02259805 0.01282539
 0.00706181 0.00411441 0.00374004 0.0031464 ]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.470005  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  22.0
Iteration TIME (sec):  3.5142494540000087
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.42416274 -0.43736902 -0.58119323 -0.44043947 -0.44891495 -0.45395342
 -0.48242845 -0.49411044 -0.49452714 -0.49501842]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.16321474 -0.15228355 -0.44490537 -0.4888407   0.01510509  0.01341385
  0.00530704  0.00516098  0.00501913  0.004751  ]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    reg out;
    always @ (a or b) begin
        if (a==1'b1 && b==1'b1) begin
            out=1'b1;
        end
        else begin
            out=1'b0;
        end
    end
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  20.22114  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  23.0
Iteration TIME (sec):  21.216026022999984
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.47275071 -0.43243732 -0.57935489 -0.43915845 -0.44781622 -0.45296305
 -0.47667357 -0.49398377 -0.49440943 -0.49491128]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.06624538  0.78542924  0.35161427  0.16575535  0.09963162  0.02952687
  0.01585641  0.00742846  0.00617257  0.00528085]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.195187  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  24.0
Iteration TIME (sec):  3.238189867999978
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.46394052 -0.57070549 -0.57755445 -0.43790385 -0.44674015 -0.45199312
 -0.47103738 -0.49385971 -0.49429415 -0.49480635]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9514575e+00 8.6806569e-05 2.6775955e-05 1.7554072e-05 1.7411885e-05
 3.2787054e-06 2.3663422e-06 7.0871550e-07 3.1666229e-07 2.1005285e-07]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.912403  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  25.0
Iteration TIME (sec):  2.9519641560000025
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.45530484 -0.56715476 -0.57578968 -0.62444942 -0.4456854  -0.45104239
 -0.46551283 -0.49373811 -0.49418115 -0.49470349]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4240525  0.2659231  0.14878517 0.04890979 0.00750428 0.00697903
 0.00571344 0.00214148 0.00208709 0.00189846]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
  
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.027702  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  26.0
Iteration TIME (sec):  4.064157620000003
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.4468337  -0.56367168 -0.57405854 -0.62364521 -0.62976718 -0.45010978
 -0.46009354 -0.49361883 -0.49407031 -0.4946026 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.13147402 -0.12445927 -0.44192517 -0.48823705 -0.4920389   0.01413944
  0.00559411  0.00544015  0.00529062  0.00500799]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1353

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    module top_module(
        input a,
        input b,
        output out
    );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  8.94751  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  27.0
Iteration TIME (sec):  9.96707410000002
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.48956189 -0.56025253 -0.57235916 -0.62285576 -0.62909007 -0.44919429
 -0.45477371 -0.49350173 -0.4939615  -0.49450356]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9458063e+00 3.4380879e-03 2.0019945e-03 3.2174488e-04 1.4306177e-05
 5.2280507e-06 1.6636329e-06 1.2899770e-06 9.8520388e-07 9.0222716e-07]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
 
    assign out = a && b;
 
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.305091  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  28.0
Iteration TIME (sec):  4.3464370549999956
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.48213602 -0.5568939  -0.57068987 -0.62208029 -0.62842494 -0.63219669
 -0.44954806 -0.49338671 -0.49385461 -0.49440627]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.37501878 -0.07085398  0.0446993   0.03327096  0.00538175  0.00357885
  0.00157931  0.00150827  0.00138743  0.0012143 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.7260740e+00 1.6650535e-01 2.8061200e-02 5.0917212e-03 4.6363478e-03
 3.0876251e-03 2.0475956e-03 9.3348924e-04 9.0833771e-04 8.9807052e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.076441  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  29.0
Iteration TIME (sec):  4.118154571000019
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.47483712 -0.55359271 -0.56904912 -0.62131807 -0.62777119 -0.63160742
 -0.55552942 -0.49327365 -0.49374955 -0.49431064]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.10128444 -0.09799469 -0.4390906  -0.48766294 -0.49165034 -0.4925852
  0.00586715  0.00570568  0.00554885  0.00525243]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  62

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    mod_a instance1(.in1(a),.in2(b),.out(out) );
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  6.671431  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  30.0
Iteration TIME (sec):  7.704874530000012
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.51202064 -0.55034609 -0.5674355  -0.62056846 -0.62712825 -0.63102788
 -0.55148831 -0.49316246 -0.49364623 -0.49421659]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0009189  0.7188917  0.0542542  0.01780358 0.01284067 0.00785971
 0.00539531 0.00433142 0.00271336 0.00266659]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
     
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.301522  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  31.0
Iteration TIME (sec):  4.33674596100002
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50554589 -0.54715142 -0.5658477  -0.61983084 -0.62649559 -0.63045763
 -0.54751187 -0.66203539 -0.49354457 -0.49412405]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.2270722  0.56368375 0.05904265 0.01226931 0.00390321 0.00363747
 0.00324482 0.00276102 0.00262527 0.00208871]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
        
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.301303  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  32.0
Iteration TIME (sec):  4.339591076999994
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49917154 -0.54400629 -0.56428452 -0.61910466 -0.62587275 -0.62989621
 -0.54359709 -0.66196358 -0.66229634 -0.49403295]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1443183  0.5403274  0.04994483 0.04445847 0.02753947 0.02401284
 0.01111185 0.0108057  0.00417494 0.00412057]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
		
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.020738  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  33.0
Iteration TIME (sec):  4.056760072999992
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49289307 -0.54090847 -0.56274486 -0.6183894  -0.62525927 -0.62934324
 -0.53974119 -0.66189286 -0.66223061 -0.66262883]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.07243872 -0.07270819 -0.4363822  -0.48711434 -0.49127907 -0.4922555
 -0.496936    0.00595938  0.00579559  0.00548598]  taking action:  7
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.464947  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  34.0
Iteration TIME (sec):  3.5034261689999937
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.52619038 -0.53785588 -0.56122767 -0.61768458 -0.62465475 -0.62879835
 -0.53594159 -0.66182316 -0.66216585 -0.66256988]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.04477191 -0.04845512 -0.4337845  -0.48658818 -0.49092296 -0.49193928
 -0.49681085 -0.49689865  0.00603224  0.00570999]  taking action:  8
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2488

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    always @ (a or b) begin
        out = a && b;
    end
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  5.264441  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  35.0
Iteration TIME (sec):  6.296802253999999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.55480615 -0.53484659 -0.55973201 -0.61698977 -0.62405881 -0.62826118
 -0.53219589 -0.66175446 -0.66210201 -0.66251177]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.01446623 -0.02020019  0.04997534  0.03719807  0.00601698  0.00400127
  0.00176572  0.0016863   0.0015512   0.00135763]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.464672  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  36.0
Iteration TIME (sec):  3.4936148179999975
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.54965053 -0.53187882 -0.55825697 -0.61630454 -0.62347108 -0.62773142
 -0.60708486 -0.6616867  -0.66203904 -0.66245445]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0008567  -0.04653221  0.40600917  0.19139779  0.11504469  0.0340947
  0.01830941  0.00857765  0.00712747  0.0060978 ]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	 
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.299765  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  37.0
Iteration TIME (sec):  4.339893165999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.54456411 -0.62316072 -0.55680175 -0.6156285  -0.62289125 -0.62720878
 -0.60404783 -0.66161985 -0.66197692 -0.66239791]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.01815021 -0.02511823 -0.43128493 -0.4860819  -0.49058032 -0.491635
 -0.49669048 -0.49678156 -0.49687     0.00592553]  taking action:  9
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  306

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    supply0 zero;
    supply1 one;
    wire a_bar, b_bar;
    
    not n1(a_bar, a);
    not n2(b_bar, b);
    and a1(out, a_bar, b_bar);
    or o1(out, a, b);
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  25.774311  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  38.0
Iteration TIME (sec):  26.766512860000006
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.57024128 -0.620849   -0.55536554 -0.61496131 -0.622319   -0.62669297
 -0.60105051 -0.66155387 -0.66191562 -0.66234211]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [0.05756015 0.12826383 0.08979708 0.0769612  0.02767685 0.01570783
 0.00864892 0.0050391  0.0045806  0.00385354]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

reg out;

always @ (a or b) begin
    if (a==1'b1 && b==1'b1) begin
        out = 1'b1;
    end
    else begin
        out = 1'b0;
    end
end

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  20.234218  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  39.0
Iteration TIME (sec):  21.234690913999998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.56561572 -0.61856673 -0.66546071 -0.61430262 -0.62175404 -0.62618373
 -0.59809137 -0.66148874 -0.66185509 -0.66228702]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.00753653 -0.00260091 -0.42887315 -0.4855934  -0.4902497  -0.49134138
 -0.4965743  -0.4966686  -0.49676016 -0.49693325]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [2.53331006e-01 3.86634974e-06 8.58212218e-07 7.87611896e-07
 6.35884021e-07 6.25140217e-07 1.50068004e-07 1.33349573e-07
 1.09857865e-07 4.94190715e-08]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.6472287  0.04119277 0.02875675 0.00658733 0.0050533  0.00091032
 0.00081409 0.00078888 0.00074032 0.00073478]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.82062042e+00 1.15378715e-01 4.88970894e-03 3.42588220e-03
 2.30533397e-03 1.37481443e-03 1.23115396e-03 4.15270653e-04
 3.25338508e-04 2.72836100e-04]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  257

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.496245  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  40.0
Iteration TIME (sec):  2.5462473910000085
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.58848214 -0.61631281 -0.66441049 -0.61365211 -0.6211961  -0.62568081
 -0.595169   -0.66142442 -0.66179532 -0.66223261]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.17409575  0.0191775  -0.4265405  -0.48512092 -0.48992994 -0.49105743
 -0.496462   -0.49655935 -0.4966539  -0.49683267]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [6.6623771e-01 2.0133730e-02 1.6143875e-02 4.2732656e-03 2.1728673e-03
 2.1556618e-03 1.4216782e-03 1.3934787e-03 9.6002012e-04 4.9783150e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.8380320e+00 5.0865930e-02 4.4814232e-03 3.0315192e-03 2.5952128e-03
 1.9028167e-03 1.7292065e-03 1.6524139e-03 8.9534326e-04 7.6853175e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.844955  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  41.0
Iteration TIME (sec):  3.8809383180000054
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.60870727 -0.61408622 -0.66337301 -0.61300948 -0.62064492 -0.625184
 -0.59228206 -0.66136087 -0.66173627 -0.66217886]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.04778314  0.02559435 -0.47262737  0.04074844  0.00659128  0.00438317
  0.00193425  0.00184725  0.00169925  0.00148721]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.55700016 0.20392658 0.03436781 0.00623606 0.00567834 0.00378155
 0.00250778 0.00114329 0.00111248 0.00109991]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.8186871e+00 6.1046064e-02 1.3333120e-02 2.8053268e-03 2.0323049e-03
 1.9391648e-03 1.6181205e-03 1.5969158e-03 1.5739460e-03 1.2736580e-03]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.844482  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  42.0
Iteration TIME (sec):  3.8802565419999837
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.60477258 -0.61188598 -0.6623478  -0.61237446 -0.62010026 -0.62469306
 -0.64808227 -0.66129808 -0.66167792 -0.66212575]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.15483266 -0.21978599 -0.4242797  -0.484663   -0.48962003 -0.4907822
 -0.4963531  -0.49645346 -0.49655095 -0.4967352 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [2.1441519e-02 4.3227105e-06 9.5951043e-07 8.8057686e-07 7.1093996e-07
 6.9892798e-07 1.6778112e-07 1.4908935e-07 1.2282482e-07 5.5252197e-08]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.21647036 0.04756531 0.03320543 0.00760639 0.00583505 0.00105114
 0.00094003 0.00091092 0.00085485 0.00084845]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [6.1489785e-01 1.4130948e-01 5.9886463e-03 4.1958317e-03 2.8234459e-03
 1.6837970e-03 1.5078495e-03 5.0860061e-04 3.9845667e-04 3.3415464e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.673319   0.09790995 0.06778403 0.0191585  0.01662539 0.01468843
 0.01421611 0.01106966 0.00857396 0.00323088]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  11405

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.26448  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  43.0
Iteration TIME (sec):  2.306322691000048
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.62305651 -0.60971118 -0.66133445 -0.61174679 -0.6195619  -0.6242078
 -0.6456653  -0.66123601 -0.66162024 -0.66207325]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05997479  0.0069924  -0.27303398  0.21398923  0.12862387  0.03811903
  0.02047054  0.0095901   0.00796875  0.00681754]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	 assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.912284  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  44.0
Iteration TIME (sec):  2.9595792989999836
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.61942489 -0.67296743 -0.66033254 -0.6111262  -0.61902963 -0.62372802
 -0.64327565 -0.66117465 -0.66156322 -0.66202134]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [6.9501877e-01 1.0631591e-04 3.2793712e-05 2.1499260e-05 2.1325117e-05
 4.0155778e-06 2.8981656e-06 8.6799565e-07 3.8783051e-07 2.5726115e-07]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.7689172e+00 8.9327879e-02 5.4106571e-02 7.7520898e-03 5.2130902e-03
 1.9387675e-03 1.6871312e-03 1.6540952e-03 1.6299922e-03 1.3871611e-03]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  796

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.680362  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  45.0
Iteration TIME (sec):  2.726226371999985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.6158334  -0.67119538 -0.65934171 -0.70788434 -0.61850324 -0.62325355
 -0.6409124  -0.66111396 -0.66150682 -0.66197001]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.2801069  -0.20441431 -0.42208445 -0.48421836 -0.4893191  -0.49051496
 -0.49624735 -0.49635065 -0.49645093 -0.49664053]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.23110348 0.02324843 0.01864134 0.00493434 0.00250901 0.00248914
 0.00164161 0.00160905 0.00110854 0.00057485]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.62556016 0.06229779 0.0054886  0.00371284 0.00317847 0.00233047
 0.00211784 0.00202379 0.00109657 0.00094126]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.9516131e+00 9.7508303e-07 2.7657617e-07 1.8024154e-07 1.3895350e-07
 1.2487966e-07 3.7021540e-08 3.1890345e-08 2.9760129e-08 1.2923654e-08]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.609306  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  46.0
Iteration TIME (sec):  3.6538216189999844
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.63268707 -0.66944248 -0.6583616  -0.70742903 -0.61798254 -0.62278421
 -0.63857471 -0.66105393 -0.66145104 -0.66191924]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [0.37205052 0.32568797 0.18222387 0.05990201 0.00919083 0.00854753
 0.00699751 0.00262277 0.00255616 0.00232514]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.6605759e+00 2.0218976e-01 3.4628619e-02 1.4801150e-02 8.3807176e-03
 2.8036356e-03 2.6486430e-03 1.6768372e-03 1.3297299e-03 1.1697819e-03]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
  
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.795894  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  47.0
Iteration TIME (sec):  3.8372235759999853
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.62935702 -0.66770814 -0.65739185 -0.70697853 -0.71310049 -0.62231983
 -0.63626175 -0.66099453 -0.66139585 -0.661869  ]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [6.9155812e-01 4.2107808e-03 2.4519328e-03 3.9405542e-04 1.7521417e-05
 6.4030287e-06 2.0375260e-06 1.5798928e-06 1.2066234e-06 1.1049981e-06]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.8826683e+00 2.3733674e-02 1.4809157e-02 6.3344478e-03 2.5489423e-03
 2.4476685e-03 2.0011761e-03 1.0476812e-03 1.0467704e-03 7.0176111e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
 
    assign out = a && b;
 
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.075787  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  48.0
Iteration TIME (sec):  4.114714773999992
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.62606148 -0.66599177 -0.65643215 -0.7065327  -0.71271811 -0.71639518
 -0.63397277 -0.66093575 -0.66134123 -0.66181928]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.26494718 -0.3515712  -0.41994935 -0.48378593 -0.4890264  -0.49025506
 -0.49614453 -0.49625063 -0.4963537  -0.49654847]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-1.23942554e-01  4.73529190e-06  1.05109098e-06  9.64623609e-07
  7.78795709e-07  7.65637253e-07  1.83795009e-07  1.63319200e-07
  1.34547847e-07  6.05257497e-08]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assignment out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.960088  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  49.0
Iteration TIME (sec):  2.999614819000044
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.64165939 -0.66429283 -0.6554822  -0.70609139 -0.7123396  -0.71605401
 -0.63170702 -0.66087757 -0.66128716 -0.66177007]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.17122948  0.06770682 -0.4704342   0.04401335  0.00711939  0.00473437
  0.00208923  0.00199526  0.0018354   0.00160637]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [1.95159709e+00 1.08406794e-05 2.02651768e-06 1.39811664e-06
 1.22498864e-06 1.14251634e-06 3.25080350e-07 2.23726175e-07
 1.14823074e-07 4.72120014e-08]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.95663  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  50.0
Iteration TIME (sec):  3.0023414019999564
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.63859125 -0.66261079 -0.6545417  -0.70565448 -0.71196486 -0.71571623
 -0.67578084 -0.66081996 -0.66123363 -0.66172134]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.3572984  -0.33992177 -0.4178698  -0.4833647  -0.48874134 -0.49000192
 -0.49604437 -0.49615324 -0.49625897 -0.49645883]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.00280315 0.02599253 0.02084165 0.00551676 0.00280516 0.00278295
 0.00183538 0.00179897 0.00123938 0.0006427 ]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
	assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.796273  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  51.0
Iteration TIME (sec):  3.8284389219999753
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.65290767 -0.66094517 -0.65361038 -0.70522183 -0.71159378 -0.71538174
 -0.67383719 -0.66076292 -0.66118062 -0.66167309]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.34495473 -0.4404667  -0.41584158 -0.48295388 -0.48846328 -0.489755
 -0.49594668 -0.49605823 -0.4961666  -0.49637136]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-6.9774449e-02 -4.9999744e-01  1.1353081e-06  1.0419127e-06
  8.4119557e-07  8.2698278e-07  1.9852131e-07  1.7640491e-07
  1.4532830e-07  6.5375289e-08]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  434

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assigment_statement
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.917805  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  52.0
Iteration TIME (sec):  4.955518574999985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66594901 -0.65929548 -0.65268797 -0.70479332 -0.71122624 -0.71505046
 -0.67191214 -0.66070642 -0.66112812 -0.66162531]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.14381498 -0.42594683  0.10368874  0.08886714  0.03195848  0.01813784
  0.00998691  0.00581865  0.00528922  0.00444969]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.9515641e+00 3.2609110e-05 7.9567135e-06 4.1607395e-06 3.2947326e-06
 1.3228043e-06 7.6422657e-07 1.9365989e-07 9.9088922e-08 6.9515657e-08]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.237006  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  53.0
Iteration TIME (sec):  3.272716057000025
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66323912 -0.65766129 -0.72141939 -0.70436884 -0.71086216 -0.71472229
 -0.67000517 -0.66065046 -0.66107612 -0.66157797]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11342162  0.05538231 -0.2513712  -0.38279328  0.14090039  0.0417573
  0.02242435  0.01050543  0.00872933  0.00746825]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	wire out_and;
	wire out_or;
	wire out_xor;
	
	assign out_and = a & b;
	assign out_or = a | b;
	assign out_xor = a ^ b;
	
	assign out = out_and;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  23.779923  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  54.0
Iteration TIME (sec):  24.749243415000024
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66055421 -0.70517902 -0.72069513 -0.70394826 -0.71050144 -0.71439714
 -0.66811578 -0.66059501 -0.66102459 -0.66153107]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.41628888 -0.43122154 -0.4138611  -0.48255274 -0.4881918  -0.4895139
 -0.4958513  -0.49596548 -0.49607638 -0.49628597]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [0.3805025  0.35613966 0.2681759  0.1955031  0.08307575 0.0739675
 0.06972873 0.05455977 0.04981539 0.01835943]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  62

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    wire and_out;
    assign and_out = a && b;
    assign out = and_out;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  7.310018  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  55.0
Iteration TIME (sec):  8.340988781000021
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67276782 -0.70380375 -0.71997742 -0.7035315  -0.71014398 -0.71407494
 -0.66624349 -0.66054006 -0.66097353 -0.66148459]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.11293513 0.8804589  0.06644756 0.02180485 0.01572655 0.00962614
 0.00660787 0.00530488 0.00332318 0.0032659 ]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
     assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.19478  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  56.0
Iteration TIME (sec):  3.23461587099996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67024551 -0.70244071 -0.7192661  -0.70311844 -0.7097897  -0.7137556
 -0.66438784 -0.74536418 -0.66092292 -0.66143853]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [0.2514252  0.6903688  0.07231218 0.01502677 0.00478043 0.00445497
 0.00397408 0.00338154 0.00321529 0.00255814]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
        assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.192328  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  57.0
Iteration TIME (sec):  3.235998548999987
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66774524 -0.70108958 -0.71856099 -0.70270898 -0.70943851 -0.71343905
 -0.6625484  -0.7453237  -0.74565455 -0.66139286]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [0.20074898 0.66176325 0.06116968 0.05445029 0.03372883 0.02940961
 0.01360918 0.01323422 0.00511324 0.00504665]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
		assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.192973  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  58.0
Iteration TIME (sec):  3.235718596999959
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66526642 -0.69975004 -0.71786192 -0.70230304 -0.70909033 -0.71312521
 -0.66072474 -0.74528356 -0.74561725 -0.74601068]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.13126826 -0.26206392 -0.46839282  0.04705225  0.00761095  0.00506125
  0.00223348  0.00213302  0.00196212  0.00171728]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   wire out1;
   assign out1 = a & b;
   assign out = out1;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  6.687244  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  59.0
Iteration TIME (sec):  7.715389238
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66280853 -0.6984218  -0.71716876 -0.70190053 -0.7087451  -0.71281403
 -0.69681466 -0.74524375 -0.74558027 -0.74597702]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.40597945 -0.42218417 -0.60795015 -0.48216063 -0.48792642 -0.48927823
 -0.49575806 -0.4958748  -0.4959882  -0.4962025 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-1.9356072e-02 -4.9999726e-01 -4.9999940e-01  1.1138515e-06
  8.9927585e-07  8.8408177e-07  2.1222820e-07  1.8858478e-07
  1.5536249e-07  6.9889118e-08]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  257

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assume a == 1'b1 && b == 1'b1;
    assign out = 1'b1;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  7.308722  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  60.0
Iteration TIME (sec):  8.337195601000019
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67452221 -0.69710459 -0.71648136 -0.70150136 -0.70840273 -0.71250543
 -0.69522065 -0.74520428 -0.74554359 -0.74594363]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.463015   -0.41334125 -0.60668725 -0.48177695 -0.48766676 -0.48904765
 -0.49566683 -0.49578607 -0.4959019  -0.49612084]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.07465452 -0.4857633   0.02283089  0.00604331  0.0030729   0.00304857
  0.00201056  0.00197068  0.00135767  0.00070404]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.19978988 0.07193529 0.00633769 0.00428722 0.00367019 0.00269099
 0.00244547 0.00233687 0.00126621 0.00108687]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [6.9511414e-01 1.1942280e-06 3.3873525e-07 2.2074991e-07 1.7018259e-07
 1.5294573e-07 4.5341942e-08 3.9057536e-08 3.6448565e-08 1.5828180e-08]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.9224173e+00 1.2162601e-02 8.1265541e-03 3.0298214e-03 1.5199605e-03
 2.9100283e-04 2.5850354e-04 2.3072613e-04 1.7035539e-04 1.6627203e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  796

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.381543  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  61.0
Iteration TIME (sec):  3.420031977000008
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.68531713 -0.69579814 -0.71579956 -0.70110544 -0.70806315 -0.71219934
 -0.69363966 -0.74516513 -0.74550721 -0.74591051]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.45423314 -0.48972633 -0.60545045 -0.48140118 -0.48741242 -0.48882177
 -0.49557745 -0.4956992  -0.4958174  -0.49604082]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 2.7997851e-02 -4.9999711e-01 -4.9999934e-01 -4.9999940e-01
  9.5382609e-07  9.3771030e-07  2.2510200e-07  2.0002435e-07
  1.6478678e-07  7.4128600e-08]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [-0.00946707  0.05317963  0.0371248   0.00850421  0.00652378  0.00117521
  0.00105098  0.00101844  0.00095575  0.0009486 ]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  62

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign top_module.out = top_module.a & top_module.b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  5.097776  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  62.0
Iteration TIME (sec):  6.132592454000019
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.69529885 -0.69450218 -0.71512324 -0.70071271 -0.70772631 -0.71189572
 -0.69207137 -0.7451263  -0.74547112 -0.74587767]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.09373593 -0.23752066 -0.46647552 -0.47504678  0.00807263  0.00536827
  0.00236896  0.00226241  0.00208115  0.00182145]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   

    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.339191  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  63.0
Iteration TIME (sec):  4.350748849000013
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.69319415 -0.69321646 -0.71445227 -0.70032308 -0.70739212 -0.71159449
 -0.7214639  -0.74508777 -0.74543532 -0.74584508]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.50106275 -0.48245004 -0.6042381  -0.48103285 -0.48716313 -0.4886004
 -0.4954899  -0.49561402 -0.49573457 -0.49596244]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.69516647 0.25609085 0.16389032 0.14533897 0.12883984 0.06855984
 0.0529555  0.03404941 0.03377439 0.0306248 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  448

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    and(out, a, b);
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.961309  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  64.0
Iteration TIME (sec):  2.9971847850000017
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70254641 -0.69194075 -0.71378652 -0.69993648 -0.70706054 -0.71129561
 -0.72007449 -0.74504954 -0.7453998  -0.74581274]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.16257113  0.09988147 -0.23145017 -0.37340227 -0.42390507  0.04510304
  0.02422107  0.01134716  0.00942876  0.00806663]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.1391364  0.76034683 0.01840288 0.00439796 0.00396481 0.00292057
 0.00221366 0.00164792 0.00154912 0.00131974]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	
	assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.798398  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  65.0
Iteration TIME (sec):  3.8308703509999873
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70055085 -0.72934045 -0.71312587 -0.69955285 -0.70673149 -0.71099902
 -0.71869573 -0.74501161 -0.74536455 -0.74578066]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [2.5325918e-01 1.2276303e-04 3.7866917e-05 2.4825205e-05 2.4624123e-05
 4.6367895e-06 3.3465133e-06 1.0022750e-06 4.4782809e-07 2.9705959e-07]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.5832362  0.10940386 0.06626675 0.00949433 0.00638471 0.0023745
 0.00206631 0.00202584 0.00199632 0.00169892]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.7536196e+00 1.7427419e-01 6.5620462e-03 6.5167448e-03 3.2738764e-03
 1.8400125e-03 1.5658693e-03 6.0398207e-04 4.6656450e-04 3.9802777e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  257

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.449609  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  66.0
Iteration TIME (sec):  2.4902144609999937
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.69857036 -0.72824112 -0.7124702  -0.7593377  -0.70640493 -0.71070467
 -0.71732738 -0.74497396 -0.74532956 -0.74574881]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.49346322 -0.4753124  -0.6030489  -0.65378106 -0.4869186  -0.48838326
 -0.49540398 -0.49553046 -0.4956533  -0.49588552]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.08741707 -0.4846226   0.02466018  0.00652752  0.00331911  0.00329283
  0.00217165  0.00212857  0.00146645  0.00076045]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
   assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.079222  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  67.0
Iteration TIME (sec):  4.113570890999995
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70744013 -0.72714996 -0.71181942 -0.75903538 -0.7060808  -0.71041251
 -0.7159692  -0.74493659 -0.74529484 -0.74571721]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [0.00463808 0.37607205 0.21041399 0.06916889 0.01061265 0.00986984
 0.00808003 0.00302851 0.0029516  0.00268483]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
  assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.194139  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  68.0
Iteration TIME (sec):  3.237831801000027
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70555845 -0.7260668  -0.71117339 -0.75873526 -0.76460725 -0.71012249
 -0.71462097 -0.74489949 -0.74526036 -0.74568583]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.4860032  -0.5347675  -0.6018815  -0.6535446  -0.48667857 -0.4881701
 -0.49531963 -0.49544844 -0.49557355 -0.49581   ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-1.0601127e-01 -4.9999693e-01 -4.9999931e-01 -4.9999937e-01
  1.0054209e-06  9.8843350e-07  2.3727834e-07  2.1084418e-07
  1.7370053e-07  7.8138413e-08]  taking action:  4
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assigning out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.960556  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  69.0
Iteration TIME (sec):  2.9967840870000373
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7139079  -0.72499145 -0.71053204 -0.75843732 -0.7643517  -0.70983456
 -0.71328248 -0.74486267 -0.74522614 -0.74565468]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [2.5059515e-01 4.8621907e-03 2.8312479e-03 4.5501598e-04 2.0231990e-05
 7.3935803e-06 2.3527323e-06 1.8243030e-06 1.3932887e-06 1.2759418e-06]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.65289414 0.0290677  0.01813744 0.00775808 0.0031218  0.00299777
 0.00245093 0.00128314 0.00128203 0.00085948]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.8416604e+00 5.3437129e-02 8.4532397e-03 2.3850375e-03 2.0289170e-03
 1.9460317e-03 1.7627535e-03 1.2906424e-03 8.2110858e-04 7.2402891e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
 
    assign out = a && b;
 
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.844071  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  70.0
Iteration TIME (sec):  3.884933713999999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.71211706 -0.72392376 -0.70989525 -0.7581415  -0.76409797 -0.76763896
 -0.71195351 -0.7448261  -0.74519216 -0.74562375]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.18679532 -0.41720605  0.11592752  0.09935648  0.03573066  0.02027873
  0.0111657   0.00650545  0.00591352  0.0049749 ]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

wire out;

assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.869054  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  71.0
Iteration TIME (sec):  4.902495516999977
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7103388  -0.72286356 -0.75771908 -0.75784775 -0.76384603 -0.76741186
 -0.71063387 -0.74478979 -0.74515843 -0.74559304]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.52606845 -0.52874523 -0.6007348  -0.6533123  -0.48644277 -0.4879607
 -0.49523678 -0.49536788 -0.4954952  -0.49573585]  taking action:  4
Leaf selection - depth:  2
Leaf selection - action scores:  [1.712196   0.03806676 0.0277586  0.01194343 0.01067824 0.01047442
 0.01021361 0.00760541 0.00757657 0.00585151]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  26

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    reg out;
    always @ (a or b) begin
        if (a==1'b1 && b==1'b1) begin
            out=1'b1;
        end
        else begin
            out=1'b0;
        end
    end
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  20.007219  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  72.0
Iteration TIME (sec):  21.006499442999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.71828706 -0.72181071 -0.75719579 -0.75755603 -0.76359582 -0.76718633
 -0.70932336 -0.74475374 -0.74512492 -0.74556254]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.0582369  -0.2143071  -0.4646621  -0.473697   -0.49574536  0.00565865
  0.0024971   0.00238479  0.00219372  0.00191998]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   reg out;
   always @ (a or b) begin
       if (a==1'b1 && b==1'b1) begin
           out = 1'b1;
       end
       else begin
           out = 1'b0;
       end
   end
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  20.272588  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  73.0
Iteration TIME (sec):  21.26623977899999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.71659162 -0.72076503 -0.75667607 -0.75726631 -0.76334733 -0.76696235
 -0.73456532 -0.74471792 -0.74509164 -0.74553225]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.51952064 -0.52282596 -0.59960765 -0.65308404 -0.65747404 -0.48775488
 -0.49515536 -0.4952887  -0.4954182  -0.49566296]  taking action:  5
Leaf selection - depth:  2
Leaf selection - action scores:  [1.2190272  0.18141146 0.0788481  0.06927466 0.02875157 0.02132035
 0.02049365 0.01674884 0.01605524 0.01499204]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  62

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    module top_module(
        input a,
        input b,
        output out
    );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  8.753489  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  74.0
Iteration TIME (sec):  9.778762133000043
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.72410412 -0.7197264  -0.75615985 -0.75697854 -0.76310051 -0.76673987
 -0.73339005 -0.74468235 -0.74505859 -0.74550217]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.19445449  0.14130032 -0.21290815 -0.36466134 -0.4186511   0.04821718
  0.02589341  0.01213063  0.01007976  0.00862359]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [1.9515935e+00 1.0735801e-05 3.9266761e-06 2.6391235e-06 1.7197949e-06
 9.8955991e-07 1.8759708e-07 1.7607121e-07 1.3275553e-07 8.6914881e-08]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.965223  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  75.0
Iteration TIME (sec):  3.0062001789999613
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.72248525 -0.74995083 -0.75564707 -0.75669268 -0.76285532 -0.76651887
 -0.73222259 -0.74464702 -0.74502575 -0.74547228]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.513081   -0.5170045  -0.5984992  -0.6528595  -0.65732205 -0.65836835
 -0.4950753  -0.49521083 -0.49534246 -0.49559125]  taking action:  6
Leaf selection - depth:  2
Leaf selection - action scores:  [1.7679268  0.03439212 0.01844856 0.01184184 0.01002813 0.00945779
 0.00811731 0.00534183 0.00394696 0.0032527 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  64

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    mod_a instance1(.in1(a),.in2(b),.out(out) );
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  6.474921  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  76.0
Iteration TIME (sec):  7.505195563000029
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.72959961 -0.74903975 -0.75513765 -0.75640869 -0.76261175 -0.76629932
 -0.73106278 -0.74461192 -0.74499314 -0.74544259]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5067444  -0.5112762  -0.5974084  -0.65263855 -0.65717256 -0.65823555
 -0.66333103 -0.49513417 -0.49526793 -0.4955207 ]  taking action:  7
Leaf selection - depth:  2
Leaf selection - action scores:  [1.335077   0.2729229  0.02509501 0.0245528  0.02406689 0.01889435
 0.01171388 0.01030777 0.00639361 0.00597178]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.262727  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  77.0
Iteration TIME (sec):  3.287287472999992
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.73629258 -0.74813456 -0.75463152 -0.75612655 -0.76236975 -0.76608119
 -0.72991049 -0.74457704 -0.74496073 -0.74541309]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.02447271 -0.1922279  -0.4629373  -0.47241318 -0.4955377  -0.49703258
  0.00261898  0.00250119  0.0023008   0.00201369]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  7

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   and(out, a, b);
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.197192  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  78.0
Iteration TIME (sec):  3.230790942999988
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.73480117 -0.74723517 -0.75412863 -0.7558462  -0.7621293  -0.76586445
 -0.75136842 -0.74454239 -0.74492853 -0.74538378]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.50050616 -0.5056367  -0.5963346  -0.65242106 -0.65702534 -0.65810484
 -0.6632793  -0.6633725  -0.49519455 -0.49545127]  taking action:  8
Leaf selection - depth:  2
Leaf selection - action scores:  [1.5060863e+00 2.4447766e-01 1.8223010e-01 3.7550961e-03 1.9087190e-03
 1.7413594e-03 1.7104426e-03 1.0024689e-03 7.6234713e-04 5.4757524e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  357

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    always @ (a or b) begin
        out = a && b;
    end
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  5.059505  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  79.0
Iteration TIME (sec):  6.087262148000036
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74116266 -0.74634144 -0.75362891 -0.75556763 -0.76189037 -0.76564908
 -0.75032552 -0.74450796 -0.74489653 -0.74535466]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.49436164 -0.5000821  -0.5952769  -0.65220684 -0.6568803  -0.6579761
 -0.66322833 -0.663323   -0.6634149  -0.49538285]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-7.0511460e-02 -4.9999678e-01 -4.9999928e-01 -4.9999934e-01
 -4.9999946e-01  1.0366779e-06  2.4885964e-07  2.2113525e-07
  1.8217867e-07  8.1952258e-08]  taking action:  5
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assigned out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.963604  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  80.0
Iteration TIME (sec):  3.007807492999973
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74716942 -0.74545329 -0.7531323  -0.75529079 -0.76165292 -0.76543506
 -0.74928911 -0.74447374 -0.74486473 -0.74532571]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.20775652 0.00833315 0.07672703 0.02517807 0.01815945 0.01111531
 0.00763011 0.00612555 0.00383728 0.00377113]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.8172966  0.05574605 0.02099768 0.01496064 0.00948391 0.00343799
 0.00243222 0.00223111 0.00208802 0.0020517 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
     
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.084538  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  81.0
Iteration TIME (sec):  4.121481193000022
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74578935 -0.7445706  -0.75263875 -0.75501565 -0.76141694 -0.76522235
 -0.74825909 -0.7955518  -0.74483313 -0.74529695]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.16580999 -0.21319893 -0.19549313 -0.35645166 -0.4137165   0.05114204
  0.02746411  0.01286647  0.0106912   0.0091467 ]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	 wire out;
	 assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.318463  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  82.0
Iteration TIME (sec):  4.35737739700005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74441768 -0.76932392 -0.7521482  -0.75474219 -0.76118239 -0.76501093
 -0.74723532 -0.79552476 -0.74480172 -0.74526836]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.530948   -0.49460852 -0.59423465 -0.6519957  -0.65673745 -0.6578492
 -0.66317815 -0.66327417 -0.6633674  -0.49531546]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.03821677 -0.4835609  -0.48681858  0.00697821  0.00354828  0.00352018
  0.00232159  0.00227554  0.00156771  0.00081296]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.522899  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  83.0
Iteration TIME (sec):  3.567623604000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7501916  -0.76853907 -0.7516606  -0.75447036 -0.76094925 -0.76480078
 -0.74621771 -0.79549788 -0.7447705  -0.74523994]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.36767107 -0.1014154   0.08349891  0.01735142  0.00551997  0.00514416
  0.00458887  0.00390467  0.0037127   0.00295388]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.8771956e+00 1.7093999e-02 1.3811494e-02 9.1570215e-03 9.0201469e-03
 3.0557262e-03 2.6346431e-03 2.5022828e-03 2.2686066e-03 9.9204911e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
        
    assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.080507  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  84.0
Iteration TIME (sec):  4.113334044999988
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7488739  -0.76775888 -0.75117589 -0.75420016 -0.76071749 -0.76459188
 -0.74520613 -0.79547116 -0.79579158 -0.74521169]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.00778854 -0.17113155 -0.46128926 -0.4711865  -0.49533927 -0.49690062
 -0.49863228  0.00261241  0.0024031   0.00210323]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.14701235 0.23547412 0.03968453 0.00720078 0.00655679 0.00436656
 0.00289574 0.00132015 0.00128458 0.00127006]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   
   assign out = a && b;
   
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.084662  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  85.0
Iteration TIME (sec):  4.120388073000072
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74756393 -0.76698327 -0.75069403 -0.75393153 -0.76048709 -0.76438421
 -0.76387736 -0.7954446  -0.7957669  -0.74518361]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.30915523 -0.11793083  0.07063266  0.06287377  0.0389467   0.03395929
  0.01571453  0.01528156  0.00590426  0.00582737]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.1901922  0.48209342 0.2001982  0.02439116 0.0082179  0.00553723
 0.00470527 0.00274405 0.00271519 0.00244803]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
		
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.799417  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  86.0
Iteration TIME (sec):  3.829413923000061
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74626155 -0.76621215 -0.75021495 -0.75366447 -0.76025803 -0.76417774
 -0.76295446 -0.79541819 -0.79574236 -0.79612456]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5254765  -0.5459668  -0.5932072  -0.65178764 -0.6565966  -0.65772414
 -0.6631287  -0.663226   -0.6633206  -0.495249  ]  taking action:  9
Leaf selection - depth:  2
Leaf selection - action scores:  [1.9501959e+00 8.5717259e-04 1.8403713e-04 5.8099256e-05 5.4495154e-05
 5.4161483e-05 3.2519194e-05 3.1196556e-05 1.3916028e-05 1.0532618e-05]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  15

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    supply0 zero;
    supply1 one;
    wire a_bar, b_bar;
    
    not n1(a_bar, a);
    not n2(b_bar, b);
    and a1(out, a_bar, b_bar);
    or o1(out, a, b);
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  25.658858  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  87.0
Iteration TIME (sec):  26.650046943000007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75185946 -0.76544545 -0.74973863 -0.75339893 -0.76003028 -0.76397245
 -0.76203684 -0.79539193 -0.79571796 -0.79610235]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.14099395 -0.40930378 -0.4365039   0.10883957  0.03914098  0.02221423
  0.01223142  0.00712636  0.00647794  0.00544973]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21412

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  0.008222  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  88.0
Iteration TIME (sec):  1.0547468379999145
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75060668 -0.7646831  -0.78508431 -0.7531349  -0.75980382 -0.76376833
 -0.76112443 -0.79536582 -0.7956937  -0.79608027]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5200805  -0.5412366  -0.5921939  -0.65158236 -0.6564577  -0.65760076
 -0.66307986 -0.66317856 -0.66327447 -0.66345567]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-3.6591887e-02 -4.9999666e-01 -4.9999925e-01 -4.9999931e-01
 -4.9999946e-01 -4.9999946e-01  2.5992540e-07  2.3096824e-07
  1.9027941e-07  8.5596341e-08]  taking action:  6
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  876

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    associative_array aa(.in(a),.out(out) );
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  5.061069  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  89.0
Iteration TIME (sec):  6.095996726999942
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75595665 -0.76392501 -0.78468062 -0.75287235 -0.75957863 -0.76356535
 -0.76021712 -0.79533986 -0.79566958 -0.79605831]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [2.1381259e-02 1.3725324e-04 4.2336498e-05 2.7755423e-05 2.7530607e-05
 5.1840880e-06 3.7415155e-06 1.1205775e-06 5.0068701e-07 3.3212271e-07]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.16720891 0.12632869 0.07651825 0.01096311 0.00737242 0.00274183
 0.00238596 0.00233924 0.00230516 0.00196174]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [5.7386827e-01 2.1344143e-01 8.0368323e-03 7.9813497e-03 4.0096636e-03
 2.2535459e-03 1.9177905e-03 7.3972391e-04 5.7142245e-04 4.8748247e-04]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.6352171  0.08787844 0.07779898 0.02809964 0.02227686 0.02116578
 0.01310579 0.0121011  0.00934879 0.00421512]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  11405

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.218007  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  90.0
Iteration TIME (sec):  2.2663997019999442
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7547504  -0.76317113 -0.78427916 -0.79384268 -0.75935469 -0.76336349
 -0.75931485 -0.79531404 -0.79564558 -0.79603647]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5520834  -0.53656995 -0.5911942  -0.6513799  -0.6563207  -0.65747905
 -0.6630317  -0.6631318  -0.6632289  -0.6634126 ]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0079931  -0.48256367 -0.486019   -0.49629924  0.00376352  0.00373372
  0.00246242  0.00241358  0.0016628   0.00086227]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [-0.02345407  0.08042609  0.00708575  0.00479325  0.00410339  0.00300862
  0.00273412  0.0026127   0.00141566  0.00121516]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  257

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
    wire a_bar, b_bar;
    
    not( a_bar, a );
    not( b_bar, b );
    
    and( out, a_bar, b );
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  14.427354  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  91.0
Iteration TIME (sec):  15.438437874999977
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75986998 -0.76242138 -0.78387991 -0.79362629 -0.75913197 -0.76316274
 -0.75841751 -0.79528837 -0.79562172 -0.79601475]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.16901499 -0.15089738 -0.4597086  -0.47000995 -0.49514896 -0.49677408
 -0.49857643  0.00271908  0.00250123  0.00218911]  taking action:  7
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1353

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   module top_module(
	input a,
	input b,
	output out
);
	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  8.700462  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  92.0
Iteration TIME (sec):  9.73472545800007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75870743 -0.76167569 -0.78348281 -0.79341108 -0.75891046 -0.76296308
 -0.77484465 -0.79526283 -0.79559799 -0.79599315]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5472336  -0.5787678  -0.59020764 -0.6511801  -0.65618545 -0.65735894
 -0.6629842  -0.6630855  -0.663184   -0.66337   ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-4.0585995e-03 -4.9999651e-01 -4.9999923e-01 -4.9999928e-01
 -4.9999943e-01 -4.9999943e-01 -4.9999985e-01  2.4039937e-07
  1.9804908e-07  8.9091493e-08]  taking action:  7
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assgn out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.964874  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  93.0
Iteration TIME (sec):  3.0093673009999975
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76361236 -0.760934   -0.78308785 -0.79319701 -0.75869014 -0.76276449
 -0.77402038 -0.79523743 -0.79557439 -0.79597167]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08387482 -0.28976935  0.23525     0.07733316  0.01186531  0.01103482
  0.00903375  0.00338598  0.00329998  0.00300174]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
  	assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.478937  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  94.0
Iteration TIME (sec):  3.5184915520000004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76249093 -0.76019624 -0.78269498 -0.79298409 -0.79872579 -0.76256695
 -0.77320047 -0.79521216 -0.79555091 -0.7959503 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.13871741 -0.18866971 -0.17902157 -0.34868675 -0.40904918 -0.47304577
  0.02894971  0.01356245  0.01126952  0.00964146]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
	  
    assign out = a && b;

endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.317008  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  95.0
Iteration TIME (sec):  4.361764111999946
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76137539 -0.78132946 -0.78230418 -0.79277228 -0.79854413 -0.76237045
 -0.77238487 -0.79518703 -0.79552756 -0.79592904]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.57512796 -0.5746755  -0.5892336  -0.6509828  -0.65605193 -0.6572404
 -0.6629373  -0.6630399  -0.6631396  -0.66332805]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.12358367 -0.4816205  -0.48526272 -0.49609905  0.00396709  0.00393568
  0.00259562  0.00254413  0.00175275  0.00090891]  taking action:  4
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  562

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    
     assign out = a && b;
    
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  3.084199  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  96.0
Iteration TIME (sec):  4.128227209999977
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76611282 -0.78066576 -0.7819154  -0.79256157 -0.7983634  -0.76217497
 -0.77157351 -0.79516203 -0.79550432 -0.79590789]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9147456e-02 5.4360940e-03 3.1654313e-03 5.0872331e-04 2.2620050e-05
 8.2662737e-06 2.6304344e-06 2.0396328e-06 1.5577441e-06 1.4265463e-06]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.22083163 0.03356448 0.02094331 0.00895826 0.00360475 0.00346153
 0.00283009 0.00148164 0.00148036 0.00099244]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.627782   0.06544685 0.01035306 0.00292106 0.00248491 0.00238339
 0.00215892 0.00158071 0.00100565 0.00088675]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.95161355e+00 7.66447329e-07 2.26819083e-07 1.20155221e-07
 1.13885726e-07 1.12606152e-07 2.72041074e-08 2.69586522e-08
 2.14380389e-08 1.12330234e-08]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
 
    assign out = a && b;
 
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  2.619069  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  97.0
Iteration TIME (sec):  3.669814894999945
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76503571 -0.78000548 -0.78152863 -0.79235195 -0.79818361 -0.80165039
 -0.77076631 -0.79513715 -0.79548121 -0.79588685]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.57073724 -0.6096674  -0.5882716  -0.65078795 -0.65592    -0.65712327
 -0.662891   -0.66299486 -0.6630958  -0.66328657]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 2.7245700e-02 -4.9999639e-01 -4.9999920e-01 -4.9999925e-01
 -4.9999940e-01 -4.9999940e-01 -4.9999985e-01 -4.9999988e-01
  2.0552524e-07  9.2454613e-08]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [ 0.0612132  -0.4708723   0.04066818  0.00931589  0.00714645  0.00128738
  0.00115129  0.00111565  0.00104697  0.00103914]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.19158202 0.16317014 0.00691509 0.00484493 0.00326023 0.00194428
 0.00174111 0.00058728 0.0004601  0.00038585]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.52469444 0.1199147  0.08301814 0.02346427 0.02036186 0.01798958
 0.01741111 0.01355751 0.01050092 0.00395701]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.0110259  0.7201592  0.0551485  0.0382329  0.03483802 0.02223853
 0.02071942 0.01276584 0.00487957 0.00434024]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  275

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.030927  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  98.0
Iteration TIME (sec):  2.077751823999961
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76958393 -0.77934855 -0.78114382 -0.79214339 -0.79800473 -0.80148915
 -0.76996323 -0.7951124  -0.79545821 -0.79586592]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5953064  -0.60603786 -0.58732134 -0.6505955  -0.6557898  -0.65700763
 -0.6628452  -0.66295034 -0.6630525  -0.66324556]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.26699078  0.43618023  0.32844704  0.23944141  0.10174659  0.09059132
  0.08539991  0.0668218   0.06101114  0.02248562]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  62

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    wire a_bar, b_bar;
    not(a_bar, a);
    not(b_bar, b);
    and(out, a_bar, b);
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  11.60116  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  99.0
Iteration TIME (sec):  12.623919614999977
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.77392582 -0.77869493 -0.78076095 -0.79193588 -0.79782675 -0.80132872
 -0.76916419 -0.79508778 -0.79543533 -0.79584509]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.1451959  -0.13142759 -0.45818764 -0.46887785 -0.49496582 -0.4966523
 -0.4985227  -0.49858913  0.00259565  0.00227175]  taking action:  8
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2488

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
   always @(*) begin
        out = a & b;
    end
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  4.446063  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  100.0
Iteration TIME (sec):  5.485550961000058
ROBUST FINAL VALUE, ITERATION:  1.0
Adding child.
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  0.798551  seconds
Running getPromptScore: 
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  0.796234  seconds
Running getPromptScore: 
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.77291425 -0.77804457 -0.78037999 -0.79172941 -0.79764966 -0.8011691
 -0.78381122 -0.79506328 -0.79541256 -0.79582437]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.591306   -0.6024513  -0.68978673 -0.6504053  -0.65566105 -0.6568933
 -0.66279995 -0.66290635 -0.6630097  -0.6632051 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-9.3613744e-02 -4.9999624e-01 -4.9999917e-01 -4.9999923e-01
 -4.9999937e-01 -4.9999940e-01 -4.9999985e-01 -4.9999988e-01
  2.1273884e-07  9.5699619e-08]  taking action:  8
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  503

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assIGN out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  1.960453  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  101.0
Iteration TIME (sec):  3.0021180170000434
----
 Tree depth: 0
 Node: action=None
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198]]
• Child Action scores:[-0.77709163 -0.77739743 -0.78000091 -0.79152396 -0.79747344 -0.80101026
 -0.78307284 -0.7950389  -0.79538991 -0.79580375]
• Child averaged monte carlo:-0.9901960784313726
• Child probablities:[0.63197023 0.10393885 0.03874445 0.01799888 0.01543764 0.01391504
 0.16171746 0.00177979 0.00165387 0.00150541]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=101.0,Q=-0.9901960784313726,M=-0.9901960784313726
----
 Tree depth: 1
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284]]
• Child Action scores:[-0.61314225 -0.5989062  -0.6890906  -0.65021724 -0.6555338  -0.6567803
 -0.66275525 -0.6628629  -0.66296744 -0.6631651 ]
• Child averaged monte carlo:-0.9772727272727273
• Child probablities:[0.5669423  0.3727414  0.02661576 0.00539097 0.00364857 0.00324006
 0.00128189 0.00124661 0.00121235 0.00114758]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=43.0,Q=-0.9772727272727273,M=-0.9772727272727273
----
 Tree depth: 1
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197]]
• Child Action scores:[-0.11294878 -0.16533917 -0.16335496 -0.34130132 -0.40460998 -0.47173017
 -0.48481864  0.01422442  0.01181957  0.01011205]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0.36293963 0.32859984 0.14710477 0.06934702 0.04168286 0.01235315
 0.00663384 0.00310784 0.00258242 0.00220935]
• Child visitation:[1 1 1 1 1 1 1 0 0 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   198]]
• Child Action scores:[-0.09887522 -0.40203688 -0.43141633 -0.44121993  0.04227709  0.02399411
  0.01321144  0.00769735  0.00699698  0.00588638]
• Child averaged monte carlo:-0.8571428571428571
• Child probablities:[0.46653262 0.05366171 0.03756838 0.03219824 0.01157916 0.00657168
 0.00361845 0.00210821 0.00191638 0.00161221]
• Child visitation:[1 1 1 1 0 0 0 0 0 0]
• N=6.0,Q=-0.8571428571428571,M=-0.8571428571428571
----
 Tree depth: 1
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   562]]
• Child Action scores:[-1.2399536e-01  1.5035339e-04  4.6377310e-05  3.0404542e-05
  3.0158268e-05  5.6788840e-06  4.0986247e-06  1.2275311e-06
  5.4847516e-07  3.6382221e-07]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[9.99919415e-01 4.44793586e-05 1.37198977e-05 8.99463976e-06
 8.92178377e-06 1.67999622e-06 1.21250480e-06 3.63143130e-07
 1.62256555e-07 1.07630285e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 1
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50286]]
• Child Action scores:[ 0.15551043 -0.26970387 -0.3711483   0.08471423  0.01299779  0.01208804
  0.00989597  0.00370916  0.00361495  0.00328824]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[0.7296791  0.13625799 0.07623696 0.02506119 0.00384516 0.00357603
 0.00292755 0.00109729 0.00106942 0.00097277]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 1
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   220]]
• Child Action scores:[-1.2595296e-01  5.9549427e-03  3.4675563e-03  5.5727846e-04
  2.4779025e-05  9.0552494e-06  2.8814966e-06  2.2343058e-06
  1.7064232e-06  1.5627032e-06]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[9.9702376e-01 1.7616632e-03 1.0258144e-03 1.6486086e-04 7.3304309e-06
 2.6788334e-06 8.5243920e-07 6.6097937e-07 5.0481475e-07 4.6229778e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 1
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285]]
• Child Action scores:[-0.12221336 -0.11264157 -0.45672008 -0.46778554 -0.49478912 -0.4965348
 -0.49847084 -0.49853963 -0.49865663  0.00235148]
• Child averaged monte carlo:-0.9333333333333333
• Child probablities:[6.3407159e-01 3.1097537e-01 1.6195400e-02 1.2054697e-02 1.9499111e-03
 1.2966832e-03 5.7221262e-04 5.4647587e-04 5.0269259e-04 4.3996418e-04]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=14.0,Q=-0.9333333333333333,M=-0.9333333333333333
----
 Tree depth: 1
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50283]]
• Child Action scores:[-0.13913614  0.06833375  0.08578343  0.02814994  0.02030288  0.0124273
  0.00853073  0.00684857  0.00429021  0.00421626]
• Child averaged monte carlo:-0.8
• Child probablities:[0.51286703 0.36835736 0.02779965 0.00912249 0.00657951 0.00402729
 0.00276453 0.0022194  0.00139032 0.00136635]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50280]]
• Child Action scores:[-0.01994288 -0.05436888  0.09335462  0.01939948  0.00617151  0.00575134
  0.00513051  0.00436555  0.00415092  0.00330254]
• Child averaged monte carlo:-0.8
• Child probablities:[0.62874717 0.28882942 0.03025323 0.00628675 0.00199999 0.00186383
 0.00166263 0.00141474 0.00134518 0.00107025]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=9
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50294]]
• Child Action scores:[-0.06355798 -0.07283369  0.07896971  0.07029501  0.04354373  0.03796764
  0.01756938  0.01708531  0.00660116  0.0065152 ]
• Child averaged monte carlo:-0.8
• Child probablities:[0.58634436 0.27686173 0.02559154 0.02278035 0.01411112 0.01230409
 0.00569367 0.0055368  0.00213922 0.00211137]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562]]
• Child Action scores:[-6.8573415e-02 -4.9999613e-01 -4.9999914e-01 -4.9999923e-01
 -4.9999937e-01 -4.9999937e-01 -4.9999985e-01 -4.9999988e-01
 -4.9999988e-01  9.8838143e-08]
• Child averaged monte carlo:-0.9375
• Child probablities:[9.9999750e-01 1.4008514e-06 3.1094646e-07 2.8536664e-07 2.3039277e-07
 2.2650008e-07 5.4372464e-08 4.8315062e-08 3.9803574e-08 1.7905460e-08]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=15.0,Q=-0.9375,M=-0.9375
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198]]
• Child Action scores:[-0.08894163 -0.4807234  -0.4845434  -0.49590865 -0.49791965  0.00412778
  0.00272231  0.00266831  0.0018383   0.00095327]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[9.7583711e-01 8.4233433e-03 6.7541092e-03 1.7878050e-03 9.0906199e-04
 9.0186368e-04 5.9478718e-04 5.8298936e-04 4.0164337e-04 2.0827765e-04]
• Child visitation:[1 1 1 1 1 0 0 0 0 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 21809]]
• Child Action scores:[-0.23094413 -0.24817124  0.37925798  0.27648312  0.11748684  0.10460584
  0.09861132  0.07715917  0.0704496   0.02596416]
• Child averaged monte carlo:-0.75
• Child probablities:[0.19496803 0.18248461 0.13741231 0.10017505 0.0425677  0.03790067
 0.03572874 0.02795622 0.02552522 0.0094073 ]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   392]]
• Child Action scores:[-0.07429922  0.31364596  0.20072383  0.17800316  0.15779594  0.08396832
  0.06485698  0.04170185  0.04136502  0.03750757]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.35620067 0.13121998 0.08397678 0.07447114 0.06601705 0.0351298
 0.0271342  0.01744679 0.01730587 0.01569203]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284  2301]]
• Child Action scores:[0.5485016  0.04662207 0.0339972  0.01462765 0.01307812 0.01282849
 0.01250906 0.00931469 0.00927937 0.0071666 ]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.87732273 0.01950526 0.0142234  0.00611977 0.00547149 0.00536705
 0.00523341 0.00389699 0.00388221 0.00299829]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 21412]]
• Child Action scores:[0.24649864 0.22218277 0.09656882 0.08484379 0.03521334 0.02611199
 0.02509949 0.02051305 0.01966358 0.01836143]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.6246249  0.09295455 0.04040147 0.03549607 0.0147322  0.01092447
 0.01050087 0.00858204 0.00822665 0.00768187]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284  4666]]
• Child Action scores:[0.5826297  0.04212157 0.02259478 0.01450323 0.0122819  0.01158338
 0.00994163 0.00654238 0.00483402 0.00398372]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.905879   0.01762239 0.00945297 0.00606771 0.00513838 0.00484613
 0.00415928 0.00273713 0.00202241 0.00166667]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   197]]
• Child Action scores:[0.31756437 0.3342609  0.03073498 0.03007092 0.0294758  0.02314076
 0.01434652 0.01262439 0.00783054 0.00731391]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.6840884  0.13984466 0.01285859 0.01258076 0.01233178 0.00968139
 0.00600215 0.00528166 0.00327606 0.00305992]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 33770]]
• Child Action scores:[0.4222858  0.29942277 0.22318539 0.00459903 0.00233769 0.00213272
 0.00209486 0.00122777 0.00093368 0.00067064]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[7.7171296e-01 1.2526943e-01 9.3374014e-02 1.9240971e-03 9.7802037e-04
 8.9226593e-04 8.7642431e-04 5.1366125e-04 3.9062378e-04 2.8057548e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=9
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 18608]]
• Child Action scores:[6.9424629e-01 1.0498178e-03 2.2539853e-04 7.1156770e-05 6.6742658e-05
 6.6334003e-05 3.9827719e-05 3.8207821e-05 1.7043585e-05 1.2899771e-05]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.9927300e-01 4.3921199e-04 9.4299925e-05 2.9769839e-05 2.7923110e-05
 2.7752139e-05 1.6662712e-05 1.5984997e-05 7.1305203e-06 5.3968738e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197   198]]
• Child Action scores:[0.19757581 0.9312309  0.02253883 0.00538638 0.00485588 0.00357695
 0.00271117 0.00201828 0.00189727 0.00161635]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.5836892  0.38959885 0.00942956 0.0022535  0.00203155 0.00149649
 0.00113427 0.00084439 0.00079376 0.00067623]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197   562]]
• Child Action scores:[6.9510210e-01 1.3148617e-05 4.8091765e-06 3.2322530e-06 2.1063101e-06
 1.2119584e-06 2.2975857e-07 2.1564232e-07 1.6259166e-07 1.0644855e-07]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.9998915e-01 5.5009837e-06 2.0120140e-06 1.3522769e-06 8.8121641e-07
 5.0704676e-07 9.6124033e-08 9.0218222e-08 6.8023432e-08 4.4534854e-08]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197   220]]
• Child Action scores:[1.9358743e+00 9.7415326e-03 5.4070251e-03 4.5191325e-04 4.7604426e-05
 4.4999495e-05 1.5009827e-05 3.1920729e-06 2.1715628e-06 1.5576873e-06]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9193466e-01 4.9915244e-03 2.7705391e-03 2.3155863e-04 2.4392328e-05
 2.3057572e-05 7.6909782e-06 1.6356061e-06 1.1127005e-06 7.9815305e-07]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197  8333]]
• Child Action scores:[1.8989035e+00 2.7591148e-02 1.3454855e-02 3.0530000e-03 7.0555910e-04
 4.8735621e-04 4.6269572e-04 4.5607172e-04 3.1197403e-04 2.7122561e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.7299093e-01 1.4137600e-02 6.8942169e-03 1.5643457e-03 3.6152580e-04
 2.4971948e-04 2.3708354e-04 2.3368942e-04 1.5985432e-04 1.3897498e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197 21809]]
• Child Action scores:[0.3225778  0.28027758 0.27132085 0.19776416 0.12067746 0.07733838
 0.06389639 0.05356215 0.05264261 0.027033  ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.16528764 0.14361317 0.13902378 0.1013336  0.06183467 0.03962789
 0.03274027 0.02744504 0.02697387 0.0138516 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197  6503]]
• Child Action scores:[0.36016273 0.34548098 0.21718095 0.21534704 0.14393169 0.06647591
 0.05185045 0.03925211 0.03492593 0.02886386]
• Child averaged monte carlo:-0.5
• Child probablities:[0.18454602 0.17702314 0.1112827  0.11034301 0.07375005 0.034062
 0.02656797 0.02011263 0.01789592 0.01478973]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197 50286]]
• Child Action scores:[1.0861487  0.7409378  0.0276658  0.0141854  0.00991147 0.00856288
 0.0065683  0.00375197 0.00369656 0.00344381]
• Child averaged monte carlo:-0.5
• Child probablities:[0.5565385  0.37965375 0.01417585 0.00726854 0.0050786  0.00438759
 0.00336557 0.00192249 0.0018941  0.0017646 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   198   562]]
• Child Action scores:[6.9508398e-01 3.9937844e-05 9.7449438e-06 5.0958447e-06 4.0352070e-06
 1.6200978e-06 9.3598260e-07 2.3718395e-07 1.2135865e-07 8.5138950e-08]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.9997401e-01 1.6708786e-05 4.0769896e-06 2.1319472e-06 1.6882085e-06
 6.7779990e-07 3.9158681e-07 9.9230590e-08 5.0772787e-08 3.5619561e-08]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   198  2301]]
• Child Action scores:[1.6595929  0.05553299 0.02821079 0.02220287 0.01324348 0.01023932
 0.00845963 0.00643636 0.00600995 0.00589465]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8503691  0.02845489 0.0144551  0.01137667 0.00678591 0.00524659
 0.00433468 0.00329797 0.00307948 0.0030204 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   198 21809]]
• Child Action scores:[0.58519274 0.23635    0.164172   0.13507615 0.09557347 0.09182028
 0.08876913 0.07958367 0.02861885 0.02776496]
• Child averaged monte carlo:-0.5
• Child probablities:[0.29985055 0.12110484 0.08412111 0.06921251 0.04897149 0.04704837
 0.04548497 0.04077837 0.01466419 0.01422666]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   198   437]]
• Child Action scores:[1.9515440e+00 2.0522057e-05 1.9074156e-05 9.6083731e-06 4.1194144e-06
 4.0336399e-06 1.9683600e-06 1.7232646e-06 8.1445990e-07 5.9025189e-07]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9996376e-01 1.0515424e-05 9.7735256e-06 4.9232940e-06 2.1107724e-06
 2.0668219e-06 1.0085803e-06 8.8299424e-07 4.1732616e-07 3.0244283e-07]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   562   570]]
• Child Action scores:[-0.0507741   0.14123978  0.08555     0.01225713  0.00824262  0.00306546
  0.00266759  0.00261535  0.00257724  0.00219329]
• Child averaged monte carlo:-0.8
• Child probablities:[9.0638649e-01 4.5771267e-02 2.7724002e-02 3.9721415e-03 2.6711677e-03
 9.9341711e-04 8.6447963e-04 8.4755215e-04 8.3520182e-04 7.1077608e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50286   198]]
• Child Action scores:[0.5168909  0.24763088 0.04241122 0.01812763 0.01026424 0.00343374
 0.00324391 0.0020537  0.00162858 0.00143268]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[8.5087276e-01 1.0360127e-01 1.7743573e-02 7.5840531e-03 4.2942478e-03
 1.4365723e-03 1.3571547e-03 8.5920503e-04 6.8134855e-04 5.9939182e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50286   562]]
• Child Action scores:[1.9515915e+00 1.2514356e-05 3.1033987e-06 2.8257091e-06 2.7955280e-06
 1.4572884e-06 2.9168402e-07 1.3322364e-07 9.8636995e-08 5.6350864e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9998808e-01 6.4123087e-06 1.5901697e-06 1.4478826e-06 1.4324179e-06
 7.4670902e-07 1.4945779e-07 6.8263290e-08 5.0541225e-08 2.8873970e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50286   197]]
• Child Action scores:[1.5548267  0.14260104 0.12079699 0.02723769 0.02070444 0.0082917
 0.00393977 0.0034784  0.00327667 0.00190445]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7966873  0.07306823 0.06189592 0.01395649 0.01060888 0.00424864
 0.00201872 0.00178232 0.00167895 0.00097583]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   220   198]]
• Child Action scores:[-0.00581008  0.03752623  0.02341533  0.01001564  0.00403023  0.0038701
  0.00316414  0.00165653  0.00165509  0.00110958]
• Child averaged monte carlo:-0.8
• Child probablities:[9.6467209e-01 1.2161044e-02 7.5881560e-03 3.2457469e-03 1.3060684e-03
 1.2541760e-03 1.0253951e-03 5.3682789e-04 5.3636119e-04 3.5957975e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   198]]
• Child Action scores:[ 0.24305415 -0.36836597  0.04436865  0.00805072  0.00733071  0.00488196
  0.00323753  0.00147598  0.00143621  0.00141997]
• Child averaged monte carlo:-0.8
• Child probablities:[8.8443375e-01 8.5316710e-02 1.4378453e-02 2.6089787e-03 2.3756470e-03
 1.5820875e-03 1.0491802e-03 4.7831636e-04 4.6542881e-04 4.6016794e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   562]]
• Child Action scores:[6.95104241e-01 1.32770665e-05 2.48196716e-06 1.71233614e-06
 1.50029859e-06 1.39929102e-06 3.98140486e-07 2.74007476e-07
 1.40628970e-07 5.78226569e-08]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.9999094e-01 5.5547230e-06 1.0383800e-06 7.1638965e-07 6.2767953e-07
 5.8542105e-07 1.6656993e-07 1.1463644e-07 5.8834907e-08 2.4191250e-08]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   197]]
• Child Action scores:[1.5929102  0.15109523 0.07213215 0.03011093 0.02703269 0.00476181
 0.00412575 0.00367911 0.00329926 0.00226616]
• Child averaged monte carlo:-0.5
• Child probablities:[0.81620115 0.07742062 0.03696024 0.01542873 0.01385145 0.00243993
 0.00211402 0.00188516 0.00169053 0.00116117]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285 21809]]
• Child Action scores:[0.3426638  0.33985972 0.21758614 0.20491463 0.11351915 0.07203945
 0.06597007 0.06545544 0.05873412 0.01970877]
• Child averaged monte carlo:-0.5
• Child probablities:[0.17557964 0.17414284 0.11149032 0.10499748 0.05816678 0.03691274
 0.03380281 0.03353912 0.03009514 0.0100987 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   628]]
• Child Action scores:[1.7426103e+00 8.3959378e-02 6.2514335e-02 3.1992599e-02 7.3565785e-03
 6.6729411e-03 4.5217564e-03 3.3997386e-03 1.7664006e-03 1.0935911e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[8.9290696e-01 4.3020468e-02 3.2032110e-02 1.6392887e-02 3.7694830e-03
 3.4191897e-03 2.3169308e-03 1.7420131e-03 9.0509700e-04 5.6035194e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285  2301]]
• Child Action scores:[1.6774529  0.03437878 0.02754489 0.01817463 0.01303961 0.00930538
 0.00915029 0.00889777 0.00753458 0.00583891]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8595205  0.01761555 0.0141139  0.00931261 0.00668145 0.00476804
 0.00468857 0.00455918 0.00386069 0.00299183]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   392]]
• Child Action scores:[0.44718292 0.25806823 0.18646692 0.16421473 0.11384545 0.0836155
 0.07554206 0.0414159  0.03776517 0.03125532]
• Child averaged monte carlo:-0.5
• Child probablities:[0.22913484 0.13223319 0.09554494 0.08414301 0.05833398 0.04284427
 0.03870746 0.02122135 0.01935073 0.01601511]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285 21412]]
• Child Action scores:[1.217906   0.12552027 0.06837448 0.04056235 0.03695301 0.0217144
 0.02104439 0.02040809 0.0173339  0.01603329]
• Child averaged monte carlo:-0.5
• Child probablities:[0.62405044 0.06431612 0.03503483 0.02078399 0.01893458 0.01112638
 0.01078307 0.01045703 0.00888183 0.0082154 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285 33770]]
• Child Action scores:[1.6156610e+00 2.0663427e-01 8.8946909e-02 9.7143846e-03 8.6185597e-03
 5.2583800e-03 1.8520437e-03 1.5255663e-03 1.1773743e-03 1.1629297e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[8.27858567e-01 1.05878614e-01 4.55760583e-02 4.97761369e-03
 4.41611744e-03 2.69437395e-03 9.48980160e-04 7.81694427e-04
 6.03282126e-04 5.95880789e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50283   198]]
• Child Action scores:[0.61286235 0.06827469 0.0257168  0.01832297 0.01161537 0.00421066
 0.00297884 0.00273254 0.00255729 0.00251281]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.9311759  0.02856407 0.01075913 0.00766578 0.00485952 0.00176161
 0.00124626 0.00114321 0.00106989 0.00105128]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50283   562]]
• Child Action scores:[1.9515824e+00 1.9595072e-05 3.8461249e-06 2.7354383e-06 2.0456011e-06
 1.8583327e-06 1.0240826e-06 3.7654212e-07 1.4134261e-07 1.1608843e-07]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9998343e-01 1.0040441e-05 1.9707397e-06 1.4016282e-06 1.0481583e-06
 9.5220264e-07 5.2473604e-07 1.9293876e-07 7.2423418e-08 5.9483273e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50280   198]]
• Child Action scores:[0.6495429  0.02093579 0.01691556 0.01121502 0.01104738 0.00374249
 0.00322677 0.00306466 0.00277846 0.00121501]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.6186793e-01 8.7589007e-03 7.0769573e-03 4.6920232e-03 4.6218890e-03
 1.5657425e-03 1.3499812e-03 1.2821603e-03 1.1624254e-03 5.0832221e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50280   562]]
• Child Action scores:[1.9516062e+00 5.7011680e-06 1.1898443e-06 5.0885876e-07 3.8222848e-07
 3.7521033e-07 1.3985171e-07 1.1754209e-07 8.5827828e-08 6.1411669e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9999559e-01 2.9212570e-06 6.0967170e-07 2.6073729e-07 1.9585242e-07
 1.9225635e-07 7.1659485e-08 6.0228125e-08 4.3977856e-08 3.1467106e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50294   198]]
• Child Action scores:[0.22884095 0.59044147 0.24519172 0.02987294 0.01006483 0.00678169
 0.00576275 0.00336077 0.00332542 0.00299822]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.60985    0.24702284 0.1025808  0.01249794 0.00421082 0.00283725
 0.00241096 0.00140604 0.00139125 0.00125436]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50294   562]]
• Child Action scores:[1.95159221e+00 1.40930506e-05 2.66656616e-06 2.16652211e-06
 1.34573759e-06 1.15587966e-06 1.92052255e-07 1.47848212e-07
 1.39687018e-07 1.16323505e-07]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9998844e-01 7.2212256e-06 1.3663384e-06 1.1101178e-06 6.8955086e-07
 5.9226835e-07 9.8406851e-08 7.5756866e-08 7.1575101e-08 5.9603725e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570]]
• Child Action scores:[-0.09903163 -0.4685385   0.04392666  0.01006231  0.00771905  0.00139053
  0.00124354  0.00120504  0.00113086  0.0011224 ]
• Child averaged monte carlo:-0.8571428571428571
• Child probablities:[9.5993161e-01 1.7233808e-02 1.2030953e-02 2.7559395e-03 2.1141486e-03
 3.8084900e-04 3.4058953e-04 3.3004524e-04 3.0972727e-04 3.0741075e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=6.0,Q=-0.8571428571428571,M=-0.8571428571428571
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562 16747]]
• Child Action scores:[0.9052959  0.1956996  0.1251749  0.10571991 0.05046614 0.0419581
 0.0313042  0.02782002 0.0204795  0.01931872]
• Child averaged monte carlo:-0.5
• Child probablities:[0.4638702  0.10027573 0.06413914 0.05417048 0.02585866 0.02149917
 0.01604015 0.01425487 0.01049362 0.00989884]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   328]]
• Child Action scores:[0.42572096 0.37568313 0.18366344 0.12751195 0.1054079  0.08700968
 0.04873861 0.04460324 0.03299254 0.02248557]
• Child averaged monte carlo:-0.5
• Child probablities:[0.2181378  0.19249861 0.09410845 0.06533664 0.05401061 0.04458343
 0.02497348 0.02285453 0.01690525 0.01152152]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562  2454]]
• Child Action scores:[0.8096824  0.32778338 0.11348262 0.08385449 0.05600187 0.04762436
 0.04166551 0.02767972 0.02643132 0.02461247]
• Child averaged monte carlo:-0.5
• Child probablities:[0.41487822 0.16795497 0.05814806 0.04296672 0.02869515 0.02440254
 0.02134925 0.01418298 0.01354331 0.01261133]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562 38944]]
• Child Action scores:[1.6341321  0.05369033 0.04070515 0.02326904 0.02100123 0.01414411
 0.00761023 0.00675645 0.00641208 0.00473075]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8373231  0.02751072 0.02085716 0.01192297 0.01076095 0.00724739
 0.00389945 0.00346198 0.00328552 0.00242402]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=5
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562  3916]]
• Child Action scores:[1.3340975  0.08911986 0.04051527 0.03478633 0.02457506 0.02012257
 0.01864743 0.01748326 0.01661222 0.0156716 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6835865  0.04566468 0.02075987 0.01782439 0.01259217 0.01031073
 0.00955487 0.00895836 0.00851204 0.00803007]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=6
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562  1733]]
• Child Action scores:[1.3221570e+00 6.1828226e-01 3.9214413e-03 2.6074147e-03 2.0833293e-03
 1.0951187e-03 8.6926291e-04 9.2863498e-05 6.5487344e-05 5.4232547e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[6.7746824e-01 3.1680548e-01 2.0093317e-03 1.3360294e-03 1.0674900e-03
 5.6113466e-04 4.4540703e-04 4.7582904e-05 3.3555469e-05 2.7788552e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=7
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562  4593]]
• Child Action scores:[1.2620808  0.07333676 0.06691387 0.04664984 0.03654917 0.02530992
 0.02229974 0.02146132 0.02081079 0.02075459]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6466854  0.03757748 0.03428641 0.0239032  0.01872766 0.01296871
 0.0114263  0.0109967  0.01066337 0.01063457]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=8
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562 16284]]
• Child Action scores:[1.4828352  0.13346662 0.05301002 0.05154634 0.03464634 0.02118938
 0.01188327 0.01072058 0.01040541 0.00827872]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7597991  0.06838779 0.02716213 0.02641215 0.01775265 0.01085736
 0.00608894 0.00549318 0.0053317  0.00424199]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284]]
• Child Action scores:[ 0.04589117 -0.45594883  0.00776205  0.00525074  0.00449504  0.00329578
  0.00299507  0.00286206  0.00155078  0.00133114]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[9.4180065e-01 2.6063509e-02 2.2962643e-03 1.5533390e-03 1.3297772e-03
 9.7499607e-04 8.8603888e-04 8.4669061e-04 4.5877049e-04 3.9379275e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198   197]]
• Child Action scores:[1.4222125  0.18868361 0.13398671 0.02830649 0.01273229 0.00636975
 0.0050615  0.00373497 0.00370935 0.00247494]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7287363  0.09668077 0.06865428 0.01450414 0.00652398 0.00326383
 0.00259349 0.00191378 0.00190066 0.00126815]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50285]]
• Child Action scores:[1.284858   0.11441412 0.03761825 0.02471303 0.01688204 0.0088031
 0.00600622 0.00530735 0.00450628 0.00407671]
• Child averaged monte carlo:-0.5
• Child probablities:[0.65835637 0.05862536 0.01927545 0.01266287 0.00865029 0.00451068
 0.00307756 0.00271947 0.002309   0.00208889]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=3
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198   562]]
• Child Action scores:[1.9515805e+00 1.7978688e-05 6.4973065e-06 3.9257211e-06 2.8485617e-06
 1.3019943e-06 1.0894598e-06 2.5445550e-07 1.3290718e-07 6.7710623e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9998248e-01 9.2122118e-06 3.3291951e-06 2.0115247e-06 1.4595922e-06
 6.6713693e-07 5.5823512e-07 1.3038203e-07 6.8101130e-08 3.4694665e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=4
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50283]]
• Child Action scores:[1.3798084  0.11126342 0.0237411  0.02317822 0.02272801 0.00936042
 0.0092243  0.00771025 0.00657905 0.00469209]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7070086  0.05701096 0.01216485 0.01187643 0.01164574 0.00479624
 0.0047265  0.0039507  0.00337108 0.00240421]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 21809   290]]
• Child Action scores:[1.503749   0.26012492 0.03572819 0.0326779  0.02357511 0.01141123
 0.01034827 0.0087883  0.00868823 0.00491994]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7705153  0.13328703 0.01830699 0.01674403 0.0120798  0.00584707
 0.00530242 0.00450309 0.00445182 0.00252096]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 21809   257]]
• Child Action scores:[1.2289019  0.3101324  0.1980306  0.09872428 0.03628706 0.0204992
 0.00867104 0.00344442 0.00272701 0.00248877]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6296847  0.15891068 0.10147014 0.05058594 0.01859335 0.01050371
 0.00444301 0.00176491 0.00139731 0.00127524]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   392     7]]
• Child Action scores:[1.5014559  0.39411822 0.00810846 0.00424763 0.00394067 0.00235506
 0.00216231 0.0019985  0.00161444 0.00151678]
• Child averaged monte carlo:-0.5
• Child probablities:[0.76934034 0.20194468 0.00415474 0.00217647 0.00201918 0.00120672
 0.00110796 0.00102402 0.00082723 0.00077719]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284  2301   503]]
• Child Action scores:[1.6817917e+00 1.7793159e-01 3.6349226e-02 2.1890374e-02 1.0356860e-02
 4.4472995e-03 2.1309741e-03 2.0969445e-03 1.6393187e-03 1.0034112e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[8.6174369e-01 9.1171473e-02 1.8625205e-02 1.1216545e-02 5.3068162e-03
 2.2787794e-03 1.0919031e-03 1.0744664e-03 8.3998067e-04 5.1414414e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 21412  1353]]
• Child Action scores:[1.9137341e+00 1.1088092e-02 5.8883918e-03 5.7786419e-03 4.4392333e-03
 3.0671412e-03 1.2561812e-03 1.0521280e-03 8.4311573e-04 6.4090959e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.8059011e-01 5.6814961e-03 3.0171897e-03 2.9609543e-03 2.2746464e-03
 1.5715915e-03 6.4366247e-04 5.3910643e-04 4.3200931e-04 3.2839965e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284  4666    62]]
• Child Action scores:[1.9445003e+00 9.7507652e-04 8.0418697e-04 7.4678764e-04 4.1195148e-04
 3.3220011e-04 3.1361022e-04 2.6906084e-04 2.6569396e-04 2.0939056e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9635458e-01 4.9962552e-04 4.1206236e-04 3.8265117e-04 2.1108238e-04
 1.7021807e-04 1.6069268e-04 1.3786575e-04 1.3614057e-04 1.0729093e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   197   562]]
• Child Action scores:[1.9516035e+00 8.2451988e-06 8.7706388e-07 7.5689593e-07 6.7981131e-07
 2.4869109e-07 2.1874280e-07 1.1211822e-07 1.0902247e-07 5.9169892e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9999428e-01 4.2248089e-06 4.4940421e-07 3.8783060e-07 3.4833275e-07
 1.2742838e-07 1.1208298e-07 5.7448954e-08 5.5862703e-08 3.0318429e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 33770  2488]]
• Child Action scores:[7.5789112e-01 7.0389283e-01 2.8942415e-01 1.6053668e-01 2.9909125e-02
 8.8734512e-04 8.3730591e-04 8.2516787e-04 6.5791130e-04 5.9303257e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[3.8834053e-01 3.6067203e-01 1.4829984e-01 8.2258388e-02 1.5325322e-02
 4.5467226e-04 4.2903237e-04 4.2281288e-04 3.3711127e-04 3.0386765e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284 18608   306]]
• Child Action scores:[1.4628897e+00 4.8418704e-01 1.2191915e-03 8.3904387e-04 7.3015405e-04
 3.0101565e-04 2.8399096e-04 1.6181440e-04 7.2180948e-05 6.2620580e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[7.4957913e-01 2.4809560e-01 6.2470906e-04 4.2992289e-04 3.7412817e-04
 1.5423929e-04 1.4551589e-04 8.2913088e-05 3.6985246e-05 3.2086547e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197   198   197]]
• Child Action scores:[1.6538490e+00 1.6652496e-01 1.0157313e-02 9.8084453e-03 4.6427711e-03
 2.6955709e-03 2.6172660e-03 2.5161358e-03 1.5252872e-03 1.2644205e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[8.4742600e-01 8.5326761e-02 5.2045686e-03 5.0258101e-03 2.3789383e-03
 1.3812004e-03 1.3410771e-03 1.2892585e-03 7.8155135e-04 6.4788427e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   197   562   570]]
• Child Action scores:[1.8261570e+00 5.7475921e-02 4.8185881e-02 3.6326142e-03 3.2012246e-03
 8.5444958e-04 7.5260067e-04 7.4476394e-04 5.4680492e-04 4.1701042e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.3571591e-01 2.9450445e-02 2.4690263e-02 1.8613377e-03 1.6402954e-03
 4.3781672e-04 3.8562974e-04 3.8161423e-04 2.8018077e-04 2.1367456e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   198   562   570]]
• Child Action scores:[1.8226119e+00 6.8597496e-02 3.6950842e-02 6.0090004e-03 3.6609743e-03
 1.1465228e-03 9.3203119e-04 7.8184874e-04 6.6885271e-04 6.5843284e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.3389946e-01 3.5149097e-02 1.8933471e-02 3.0789890e-03 1.8758693e-03
 5.8747397e-04 4.7756927e-04 4.0061632e-04 3.4271760e-04 3.3737850e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   562   570   503]]
• Child Action scores:[0.15999746 0.24646093 0.00928013 0.00921607 0.00462996 0.00260217
 0.00221447 0.00085416 0.00065982 0.0005629 ]
• Child averaged monte carlo:-0.75
• Child probablities:[8.9854801e-01 8.9297436e-02 3.3623676e-03 3.3391553e-03 1.6775219e-03
 9.4281544e-04 8.0234552e-04 3.0947811e-04 2.3906588e-04 2.0394791e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50286   198 50284]]
• Child Action scores:[1.8225340e+00 5.4449379e-02 1.7892186e-02 2.8236208e-03 2.6886300e-03
 2.3553208e-03 1.8084656e-03 1.6334261e-03 1.1421959e-03 8.8142947e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.3385953e-01 2.7899656e-02 9.1678882e-03 1.4468126e-03 1.3776438e-03
 1.2068575e-03 9.2665089e-04 8.3696132e-04 5.8525684e-04 4.5164113e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   220   198 50284]]
• Child Action scores:[0.2015003  0.07557151 0.01195469 0.00337295 0.00286932 0.0027521
 0.00249291 0.00182524 0.00116122 0.00102393]
• Child averaged monte carlo:-0.75
• Child probablities:[9.4365978e-01 2.7380982e-02 4.3314081e-03 1.2220842e-03 1.0396093e-03
 9.9713926e-04 9.0322818e-04 6.6132029e-04 4.2073292e-04 3.7098967e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   198 50284]]
• Child Action scores:[0.61371386 0.07476585 0.01632967 0.00343581 0.00248906 0.00237498
 0.00198178 0.00195581 0.00192768 0.00155991]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.3188834e-01 3.1279773e-02 6.8318406e-03 1.4374389e-03 1.0413453e-03
 9.9362072e-04 8.2911883e-04 8.1825361e-04 8.0648396e-04 6.5261754e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   198 50285]]
• Child Action scores:[1.4787832e+00 1.0721754e-01 8.4395483e-03 5.1794210e-03 3.8761303e-03
 2.7611144e-03 2.6480141e-03 1.9821064e-03 1.8952248e-03 1.4471669e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[7.5772291e-01 5.4937862e-02 4.3243924e-03 2.6539157e-03 1.9861145e-03
 1.4147846e-03 1.3568325e-03 1.0156238e-03 9.7110600e-04 7.4152282e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   562   570]]
• Child Action scores:[1.8540890e+00 3.4527294e-02 2.4767967e-02 1.1533827e-02 6.0095661e-03
 2.0283069e-03 1.3254953e-03 1.3135558e-03 1.1355395e-03 1.0370016e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[9.5002818e-01 1.7691655e-02 1.2691013e-02 5.9098890e-03 3.0792789e-03
 1.0392967e-03 6.7917880e-04 6.7306100e-04 5.8184617e-04 5.3135568e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50283   198 50284]]
• Child Action scores:[1.8123438e+00 6.3200988e-02 1.2376271e-02 3.7907977e-03 3.5656374e-03
 2.6565378e-03 2.5972771e-03 2.0160286e-03 1.9156967e-03 1.2261836e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[9.2863810e-01 3.2383949e-02 6.3415547e-03 1.9423903e-03 1.8270192e-03
 1.3611999e-03 1.3308349e-03 1.0330054e-03 9.8159572e-04 6.2829186e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50280   198 50284]]
• Child Action scores:[1.8179040e+00 5.1057123e-02 1.3493020e-02 5.3685452e-03 2.8037769e-03
 2.8018311e-03 2.1309028e-03 2.0294008e-03 1.4608195e-03 9.4363658e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.3148714e-01 2.6161477e-02 6.9137723e-03 2.7508221e-03 1.4366447e-03
 1.4356476e-03 1.0918665e-03 1.0398573e-03 7.4851839e-04 4.8351582e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50294   198 50284]]
• Child Action scores:[1.7903312  0.0571925  0.01239312 0.00593558 0.00328673 0.00309673
 0.00305752 0.00247851 0.00227858 0.00188294]
• Child averaged monte carlo:-0.5
• Child probablities:[0.91735893 0.02930522 0.00635019 0.00304137 0.00168411 0.00158675
 0.00156666 0.00126998 0.00116754 0.00096481]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503]]
• Child Action scores:[-0.03033662  0.18242976  0.00773131  0.0054168   0.00364505  0.00217377
  0.00194663  0.0006566   0.00051441  0.00043139]
• Child averaged monte carlo:-0.8
• Child probablities:[9.3287903e-01 5.9119616e-02 2.5054684e-03 1.7554091e-03 1.1812444e-03
 7.0444972e-04 6.3083862e-04 2.1278311e-04 1.6670222e-04 1.3980019e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 4
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570  1353]]
• Child Action scores:[1.8710046e+00 3.6188826e-02 1.0713079e-02 1.0653579e-02 4.6051075e-03
 3.0396129e-03 1.9741147e-03 1.0160321e-03 9.8680274e-04 9.2702947e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.5869565e-01 1.8543018e-02 5.4893410e-03 5.4588532e-03 2.3596396e-03
 1.5574861e-03 1.0115289e-03 5.2061101e-04 5.0563400e-04 4.7500638e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562]]
• Child Action scores:[2.5333250e-01 1.3789756e-06 3.9113777e-07 2.5490004e-07 1.9650992e-07
 1.7660652e-07 5.2356363e-08 4.5099757e-08 4.2087176e-08 1.8276806e-08]
• Child averaged monte carlo:-0.75
• Child probablities:[9.9999917e-01 4.9962887e-07 1.4171658e-07 9.2355087e-08 7.1199246e-08
 6.3987869e-08 1.8969697e-08 1.6340492e-08 1.5248977e-08 6.6220314e-09]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 4
 Node: action=1
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284 21809]]
• Child Action scores:[0.31301224 0.27813455 0.26874146 0.21954633 0.10568845 0.09444154
 0.07709035 0.06582503 0.05982381 0.02432956]
• Child averaged monte carlo:-0.5
• Child probablities:[0.1603863  0.1425151  0.1377021  0.11249471 0.05415436 0.04839149
 0.03950081 0.0337285  0.03065349 0.01246637]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   562   570   503   796]]
• Child Action scores:[0.50136197 0.10762867 0.0952839  0.03441489 0.02728347 0.02592269
 0.01605124 0.01482076 0.01144988 0.00516244]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.83787906 0.04502858 0.0398639  0.01439815 0.01141458 0.01084527
 0.00671535 0.00620056 0.00479029 0.00215981]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   220   198 50284   562]]
• Child Action scores:[6.9511437e-01 9.3870244e-07 2.7779552e-07 1.4715948e-07 1.3948096e-07
 1.3791382e-07 3.3318091e-08 3.3017471e-08 2.6256128e-08 1.3757588e-08]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.99999404e-01 3.92724701e-07 1.16221237e-07 6.15670785e-08
 5.83546154e-08 5.76989656e-08 1.39392817e-08 1.38135112e-08
 1.09847695e-08 5.75575854e-09]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50285   198 50284   562]]
• Child Action scores:[1.9516126e+00 1.2003244e-06 2.7838612e-07 2.0783138e-07 1.8266344e-07
 1.6234711e-07 3.8032425e-08 3.4863920e-08 3.4232787e-08 1.3875211e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9999893e-01 6.1504170e-07 1.4264400e-07 1.0649201e-07 9.3596057e-08
 8.3186045e-08 1.9487670e-08 1.7864140e-08 1.7540751e-08 7.1096058e-09]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796]]
• Child Action scores:[0.12214351 0.13846557 0.09586108 0.0270942  0.02351185 0.02077258
 0.02010462 0.01565486 0.01212541 0.00456916]
• Child averaged monte carlo:-0.75
• Child probablities:[0.8574023  0.05016869 0.03473228 0.00981674 0.00851879 0.0075263
 0.00728428 0.00567205 0.00439327 0.00165549]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570]]
• Child Action scores:[6.7723536e-01 1.4896083e-02 9.9529549e-03 3.7107582e-03 1.8615639e-03
 3.5640423e-04 3.1660090e-04 2.8258064e-04 2.0864188e-04 2.0364081e-04]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.8503935e-01 6.2320703e-03 4.1640154e-03 1.5524690e-03 7.7882200e-04
 1.4910875e-04 1.3245623e-04 1.1822319e-04 8.7289452e-05 8.5197156e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   562   570   503   796   257]]
• Child Action scores:[1.0241983  0.6781944  0.06503768 0.05309031 0.03162582 0.02358494
 0.02016127 0.01264879 0.00468565 0.00440404]
• Child averaged monte carlo:-0.5
• Child probablities:[0.52479535 0.34750426 0.03332506 0.02720327 0.01620495 0.01208483
 0.01033056 0.00648119 0.00240091 0.00225662]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198   220   198 50284   562   570]]
• Child Action scores:[1.9174645e+00 1.4795426e-02 1.0424824e-02 3.1693655e-03 1.7343916e-03
 2.6151852e-04 2.1679656e-04 2.0404100e-04 1.9737141e-04 1.7187482e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.82501566e-01 7.58112036e-03 5.34164067e-03 1.62397081e-03
 8.88695649e-04 1.34001108e-04 1.11085734e-04 1.04549836e-04
 1.01132362e-04 8.80680091e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 6
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257]]
• Child Action scores:[0.11912441 0.8820113  0.06754284 0.04682555 0.04266769 0.02723653
 0.025376   0.01563489 0.00597623 0.00531569]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.51804584 0.36900684 0.02825788 0.01959039 0.01785087 0.01139494
 0.01061655 0.00654117 0.00250027 0.00222392]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 6
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   198 50284   562   570   503]]
• Child Action scores:[1.8731539e+00 6.6383168e-02 3.5550364e-03 2.5127952e-03 2.4653592e-03
 8.7721512e-04 7.0470083e-04 3.9376022e-04 2.8710254e-04 2.1485605e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.5979697e-01 3.4014482e-02 1.8215872e-03 1.2875467e-03 1.2632407e-03
 4.4948171e-04 3.6108604e-04 2.0176124e-04 1.4711026e-04 1.1009142e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 7
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405]]
• Child Action scores:[1.9493883e+00 6.5866369e-04 6.4683135e-04 1.9768825e-04 1.3180134e-04
 9.7350450e-05 8.6802218e-05 5.1980085e-05 3.8471266e-05 3.5361441e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9885917e-01 3.3749678e-04 3.3143393e-04 1.0129471e-04 6.7534507e-05
 4.9882001e-05 4.4477129e-05 2.6634400e-05 1.9712530e-05 1.8119068e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 8
 Node: action=0
• state:[[ 1003 13610   257  8265   326 23986   281  5357  8946    13   198   198
   1003   367   600    25  4643   346   519   468  4553  1643  3083    12
   6981 35494     8   290 12219    12  6981   357 25226     8 12879    11
    588   327    13   220   198  1003  4619   356   821  1762   351   257
    530    12  2545   994    11   340  1595   470  2300   543   356  3853
     13   198   198 21412  1353    62 21412     7   220   198 50284 15414
    257    11   220   198 50284 15414   275    11   220   198 50284 22915
    503  5619   198 50284   562   570   503   796   257 11405   275]]
• Child Action scores:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.0
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=0.0,Q=0.0,M=0.0
END ROBUST/MAX VALUES:
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  0.798396  seconds
Running getPromptScore: 
// Create a module that implements an AND gate.

// Hint: Verilog has separate bitwise-AND (&) and logical-AND (&&) operators, like C. 
// Since we're working with a one-bit here, it doesn't matter which we choose.

module top_module( 
    input a, 
    input b, 
    output out );
    assign out = a && b;
endmodule
Verilog compilation failed, error:  1
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_new/test_testbenches/Andgate/Andgate_0_tb.v: No such file or directory\nNo top level modules, and no -s option.\n'
LLM generates return in:  0.797956  seconds
Running getPromptScore: 
MCTS Total Time:  590.415384
