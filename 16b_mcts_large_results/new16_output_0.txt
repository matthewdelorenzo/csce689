Using GPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/prompt_tb_files/adder/prompt1_adder_64.v
Prompt str:  //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
Loading LLM model...
Loaded LLM:  shailja/CodeGen_16B_Verilog
Initializing MCTS tree/LLM env...
Episode not stated yet!
Simulations per episode:  100
********-- EPISODE-1--************
ORIG MODILE:  adder_64
--------MCTS-------
Env seed:  42
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_adder
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1347.645838  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.06969339e+00 5.28762544e-01 1.38672665e-02 2.97113088e-03
 2.18399638e-03 1.63204989e-03 2.89596291e-01 7.54090697e-04
 7.32441525e-04 7.23334334e-04]  taking action:  0
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_adder
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1346.2618  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  2.0
Iteration TIME (sec):  1344.237155066
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.15505075 0.64759921 0.01698386 0.00363888 0.00267484 0.00199884
 0.35468157 0.00092357 0.00089705 0.0008859 ]  taking action:  1
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1345.600805  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  3.0
Iteration TIME (sec):  1343.7171028809998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.25638745 -0.12610842  0.01961128  0.00420181  0.00308864  0.00230807
  0.409551    0.00106645  0.00103583  0.00102295]  taking action:  6
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
    full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
    full_adder FA32(sum[31], c32, in1[31], in2[31], c31);
    full_adder FA33(sum[32], c33, in1[32], in2[32], c32);
    full_adder FA34(sum[33], c34, in1[33], in2[33], c33);
    full_adder FA35(sum[34], c35, in1[34], in2[34], c34);
    full_adder FA36(sum[35], c36, in1[35], in2[35], c35);
    full
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1345.747179  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  4.0
Iteration TIME (sec):  1343.8174763860006
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.34566688 -0.08197651  0.02192607  0.00469777  0.0034532   0.0025805
 -0.27105403  0.00119232  0.00115809  0.00114369]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.6534376  0.60928464 0.10097382 0.0872004  0.08338642 0.03731207
 0.03227317 0.02634662 0.02398412 0.01712525]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_adder
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1345.411897  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  5.0
Iteration TIME (sec):  1343.4917175890005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.04907892 -0.0420782   0.02401881  0.00514615  0.00378279  0.00282679
 -0.24920225  0.00130612  0.00126863  0.00125285]  taking action:  2
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin); 
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1346.035486  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  6.0
Iteration TIME (sec):  1344.1162014050005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 4.04344300e-04 -5.38793049e-03 -4.87028360e-01  5.55847690e-03
  4.08588310e-03  3.05328577e-03 -2.29107474e-01  1.41077451e-03
  1.37027262e-03  1.35323463e-03]  taking action:  3
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);  
  
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;
  
  full_adder FA1 (sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2 (sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3 (sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4 (sum[3], c4, in1[3], in2[3], c3);
  full_adder FA5 (sum[4], c5, in1[4], in2[4], c4);
  full_adder FA6 (sum[5], c6, in1[5], in2[5], c5);
  full_adder FA7 (sum[6], c7, in1[6], in2[6], c6);
  full_adder FA8 (sum[7], c8, in1[7], in2[7], c7);
  full_adder FA9 (sum[8], c9, in1[8], in2[8], c8);
  full_adder FA10 (sum[9], c10, in1[9], in2[9], c9);
  full_adder FA11 (sum[10], c11, in1[10], in2[10], c10);
  full_adder FA12 (sum[11], c12, in1[11], in2[11], c11);
  full_adder FA13 (sum[12], c13, in1[12], in2[12], c12);
  full_adder FA14 (sum[13], c14, in1[13], in2[13], c13);
  full_adder FA15 (sum[14], c15, in1[14], in2[14], c14);
  full_adder FA16 (sum[15], c16, in1[15], in2[15], c15);
  full_adder FA17 (sum[16], c17, in1[16], in2[16], c16);
  full_adder FA18 (sum[17], c18, in1[17], in2[17], c17);
  full_adder FA19 (sum[18], c19, in1[18], in2[18], c18);
  full_adder FA20 (sum[19], c20, in1[19], in2[19], c19);
  full_adder FA21 (sum[20], c21, in1[20], in2[20], c20);
  full_adder FA22 (sum[21], c22, in1[21], in2[21], c21);
  full_adder FA23 (sum[22], c23, in1[22], in2[22], c22);
  full_adder FA24 (sum[23], c24, in1[23], in2[23], c23);
  full_adder FA25 (sum[24], c25, in1[24], in2[24], c24);
  full_adder FA26 (sum[25], c26, in1[25], in2[25], c25);
  full_adder FA27 (sum[26], c27, in1[26], in2[26], c26);
  full_adder FA28 (sum[27], c28, in1[27], in2[27], c27);
  full_adder FA29 (sum[28], c29, in1[28], in2[28], c28);
  full_adder FA30 (sum[29], c30,
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1346.61597  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  7.0
Iteration TIME (sec):  1344.6688873739995
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04646224  0.02876254 -0.48613273 -0.49702887  0.00436799  0.0032641
 -0.21040371  0.00150818  0.00146488  0.00144667]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.0998528   0.74621826  0.12366717  0.10679825  0.10212709  0.04569776
  0.0395264   0.03226789  0.02937442  0.02097406]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  wire [63:0] sum_temp;
  wire cout_temp;
  wire [63:0] in1_temp;
  wire [63:0] in2_temp;
  wire cin_temp;
  wire [63:0] add_temp;
  wire [63:0] add_temp2;
  wire [63:0] add_temp3;
  wire [63:0] add_temp4;
  wire [63:0] add_temp5;
  wire [63:0] add_temp6;
  wire [63:0] add_temp7;
  wire [63:0] add_temp8;
  wire [63:0] add_temp9;
  wire [63:0] add_temp10;
  wire [63:0] add_temp11;
  wire [63:0] add_temp12;
  wire [63:0] add_temp13;
  wire [63:0] add_temp14;
  wire [63:0] add_temp15;
  wire [63:0] add_temp16;
  wire [63:0] add_temp17;
  wire [63:0] add_temp18;
  wire [63:0] add_temp19;
  wire [63:0] add_temp20;
  wire [63:0] add_temp21;
  wire [63:0] add_temp22;
  wire [63:0] add_temp23;
  wire [63:0] add_temp24;
  wire [63:0] add_temp25;
  wire [63:0] add_temp26;
  wire [63:0] add_temp27;
  wire [63:0] add_temp28;
  wire [63:0] add_temp29;
  wire [63:0] add_temp30;
  wire [63:0] add_temp31;
  wire [63:0] add_temp32;
  wire [63:0] add_temp33;
  wire [63:0] add_temp34;
  wire [63:0] add_temp35;
  wire [63:0] add_temp36;
  wire [63:0] add_temp37;
  wire [63:0] add_temp38;
  wire [63:0] add_temp39;
  wire [63:0] add_temp40;
  wire [63:0] add_temp41;
  wire [63:0] add_temp42;
  wire [63:0] add_temp43;
  wire [63:0] add_temp44;
  wire [63:0] add_temp45;
  wire [63:0] add_temp46;
  wire [63:0] add_temp47;
  wire [63:0] add_temp48;
  wire [63:0] add_temp49;
  wire [63:0] add_temp50;
  wire [63:0] add_temp51;
  wire [63:0] add_temp52;
  wire [63:0] add_temp53;
  wire [63:0] add_temp54;
  wire [63:0] add_temp55;
  wire [63:0] add_temp56;
  wire [63:0] add_temp57;
  wire [63:0] add_temp58;
  wire [63:0] add_temp59;
  wire [63:0] add_temp60;
  wire [63:0] add_temp61;
  wire [63:0] add_temp62;
  wire [63:0] add_temp63;
  wire [63:0] add_temp64;
  wire [63:0] add_temp65;
  wire [63:0] add_temp66;
  wire [63:0] add_temp67;
  wire [63:0] add_temp68;
  wire [63:0] add_temp69;
  wire [63:0] add_temp70;
  wire [63:0] add_temp71;
  wire [63:0] add_temp72;
  wire [63:0] add_temp73;
  wire [63:0] add_temp74;
  wire [63:0] add_
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:88: syntax error\nI give up.\n'
LLM generates return in:  1346.720373  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  8.0
Iteration TIME (sec):  1344.67314481
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.18270941  0.06083737 -0.48529154 -0.49684864  0.00463296  0.0034621
 -0.19283675  0.00159967  0.00155374  0.00153442]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1249369  0.47077173 0.12067379 0.11435979 0.0208519  0.02021159
 0.01743625 0.01489264 0.01318529 0.00773398]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1345.866306  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  9.0
Iteration TIME (sec):  1343.8201854950003
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.15202321 -0.27255036 -0.48449592 -0.49667817  0.00488356  0.00364937
 -0.1762215   0.0016862   0.00163779  0.00161742]  taking action:  4
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
    full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
    full_adder FA32(sum[31], c32, in1[31], in2[31], c31);
    full_adder FA33(sum[32], c33, in1[32], in2[32], c32);
    full_adder FA34(sum[33], c34, in1[33], in2[33], c33);
    full_adder FA35(sum[34], c35, in1[34], in2[34], c34);
    full_adder FA36(sum[35], c36, in1[35], in2[35], c35);
    full
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1346.835614  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  10.0
Iteration TIME (sec):  1344.5878552189988
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.12283666 -0.25331399 -0.48373919 -0.49651604 -0.49743904  0.0038275
 -0.16041825  0.0017685   0.00171773  0.00169637]  taking action:  5
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50283

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);                                    
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;
  
  full_adder FA1 (sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2 (sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3 (sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4 (sum[3], c4, in1[3], in2[3], c3);
  full_adder FA5 (sum[4], c5, in1[4], in2[4], c4);
  full_adder FA6 (sum[5], c6, in1[5], in2[5], c5);
  full_adder FA7 (sum[6], c7, in1[6], in2[6], c6);
  full_adder FA8 (sum[7], c8, in1[7], in2[7], c7);
  full_adder FA9 (sum[8], c9, in1[8], in2[8], c8);
  full_adder FA10 (sum[9], c10, in1[9], in2[9], c9);
  full_adder FA11 (sum[10], c11, in1[10], in2[10], c10);
  full_adder FA12 (sum[11], c12, in1[11], in2[11], c11);
  full_adder FA13 (sum[12], c13, in1[12], in2[12], c12);
  full_adder FA14 (sum[13], c14, in1[13], in2[13], c13);
  full_adder FA15 (sum[14], c15, in1[14], in2[14], c14);
  full_adder FA16 (sum[15], c16, in1[15], in2[15], c15);
  full_adder FA17 (sum[16], c17, in1[16], in2[16], c16);
  full_adder FA18 (sum[17], c18, in1[17], in2[17], c17);
  full_adder FA19 (sum[18], c19, in1[18], in2[18], c18);
  full_adder FA20 (sum[19], c20, in1[19], in2[19], c19);
  full_adder FA21 (sum[20], c21, in1[20], in2[20], c20);
  full_adder FA22 (sum[21], c22, in1[21], in2[21], c21);
  full_adder FA23 (sum[22], c23, in1[22], in2[22], c22);
  full_adder FA24 (sum[23], c24, in1[23], in2[23], c23);
  full_adder FA25 (sum[24], c25, in1[24], in2[24], c24);
  full_adder FA26 (sum[25], c26, in1[25], in2[25], c25);
  full_adder FA27 (sum[26], c27, in1[26], in2[26], c26);
  full_adder FA28 (sum[27], c28, in1[27], in2[27], c27);
  full_adder FA29 (sum[28], c29, in1[28], in2[28], c28);
  full_adder FA30 (sum[29], c30, in
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:40: syntax error\nI give up.\n'
LLM generates return in:  1346.818171  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  11.0
Iteration TIME (sec):  1345.3406273950004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.09494925 -0.23493388 -0.48301614 -0.49636112 -0.49732516 -0.49800116
 -0.14531843  0.00184714  0.00179411  0.0017718 ]  taking action:  7
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);      
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
    full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
    full_adder FA32(sum[31], c32, in1[31], in2[31], c31);
    full_adder FA33(sum[32], c33, in1[32], in2[32], c32);
    full_adder FA34(sum[33], c34, in1[33], in2[33], c33);
    full_adder FA35(sum[34], c35, in1[34], in2[34], c34);
    full_adder FA36(sum[35], c36, in1[35], in2[35], c35);
    full
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1348.512425  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  12.0
Iteration TIME (sec):  1347.827068089
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.06820156 -0.21730493 -0.48232263 -0.49621254 -0.49721594 -0.49791954
 -0.13083571 -0.49903872  0.00186737  0.00184415]  taking action:  8
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);                            
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1348.760923  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  13.0
Iteration TIME (sec):  1348.1198071040017
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.04246433 -0.20034196 -0.48165533 -0.49606956 -0.49711084 -0.497841
 -0.11690012 -0.49900243 -0.49903107  0.00191376]  taking action:  9
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);                     
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1349.020488  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  14.0
Iteration TIME (sec):  1348.364069807998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.017631   -0.18397473 -0.48101146 -0.49593161 -0.49700944 -0.49776522
 -0.10345395 -0.49896742 -0.49899706 -0.49900953]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.03794983 -0.06917068  0.14279854  0.12332     0.1179262   0.05276723
  0.04564115  0.03725975  0.03391866  0.02421876]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
   
   wire c1, c2, c3;
   
   full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
   full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
   full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
   full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
   full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
   full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
   full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
   full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
   full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
   full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
   full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
   full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
   full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
   full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
   full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
   full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
   full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
   full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
   full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
   full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
   full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
   full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
   full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
   full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
   full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
   full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
   full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
   full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
   full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
   full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
   full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
   full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
   full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
   full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
   full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
   full_adder FA36(sum[35], c3, in1[35], in2[35], c3);

Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:48: syntax error\nI give up.\n'
LLM generates return in:  1348.313685  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  15.0
Iteration TIME (sec):  1347.6197700459998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.19489005 -0.16814458 -0.48038872 -0.49579819 -0.49691136 -0.49769193
 -0.090449   -0.49893355 -0.49896417 -0.49897705]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.1960577e+00 4.1510990e-01 3.2585051e-03 4.4041910e-04 3.5378951e-04
 2.3730933e-04 1.5151888e-04 9.5604060e-05 9.1938717e-05 7.8541016e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
    full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
    full_adder FA32(sum[31], c32, in1[31], in2[31], c31);
    full_adder FA33(sum[32], c33, in1[32], in2[32], c32);
    full_adder FA34(sum[33], c34, in1[33], in2[33], c33);
    full_adder FA35(sum[34], c35, in1[34], in2[34], c34);
    full_adder FA36(sum[35], c36, in1[35], in2[35], c35);
    full
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1348.09285  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  16.0
Iteration TIME (sec):  1347.4099706960005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.17626694 -0.15280186 -0.47978516 -0.49566887 -0.49681631 -0.4976209
 -0.38522968 -0.49890073 -0.49893229 -0.49894557]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [0.18888044 0.5765753  0.1477946  0.14006157 0.02553826 0.02475404
 0.02135495 0.01823968 0.01614862 0.00947216]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

  full_adder FA1 (sum[0],   c1,   in1[0],  in2[0], cin);
  full_adder FA2 (sum[1],   c2,   in1[1],  in2[1], c1);
  full_adder FA3 (sum[2],   c3,   in1[2],  in2[2], c2);
  full_adder FA4 (sum[3],   c4,   in1[3],  in2[3], c3);
  full_adder FA5 (sum[4],   c5,   in1[4],  in2[4], c4);
  full_adder FA6 (sum[5],   c6,   in1[5],  in2[5], c5);
  full_adder FA7 (sum[6],   c7,   in1[6],  in2[6], c6);
  full_adder FA8 (sum[7],   c8,   in1[7],  in2[7], c7);
  full_adder FA9 (sum[8],   c9,   in1[8],  in2[8], c8);
  full_adder FA10 (sum[9],  c10,  in1[9],  in2[9], c9);
  full_adder FA11 (sum[10], c11,  in1[10], in2[10], c10);
  full_adder FA12 (sum[11], c12,  in1[11], in2[11], c11);
  full_adder FA13 (sum[12], c13,  in1[12], in2[12], c12);
  full_adder FA14 (sum[13], c14,  in1[13], in2[13], c13);
  full_adder FA15 (sum[14], c15,  in1[14], in2[14], c14);
  full_adder FA16 (sum[15], c16,  in1[15], in2[15], c15);
  full_adder FA17 (sum[16], c17,  in1[16], in2[16], c16);
  full_adder FA18 (sum[17], c18,  in1[17], in2[17], c17);
  full_adder FA19 (sum[18], c19,  in1[18], in2[18], c18);
  full_adder FA20 (sum[19], c20,  in1[19], in2[19], c19);
  full_adder FA21 (sum[20], c21,  in1[20], in2[20], c20);
  full_adder FA22 (sum[21], c22,  in1[21], in2[21], c21);
  full_adder FA23 (sum[22], c23,  in1[22], in2[22], c22);
  full_adder FA24 (sum[23], c24,  in1[23], in2[23], c23);
  full_adder FA25 (sum[24], c25,  in1[24], in2[24], c24);
  full_adder FA26 (sum[25], c26,  in1[25], in2[25], c25);
  full_adder FA27 (sum[26], c27,  in1[26], in2[26], c26);
  full_adder FA28 (sum[27], c28,  in1[27], in2[27], c27);
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:39: syntax error\nI give up.\n'
LLM generates return in:  1348.03649  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  17.0
Iteration TIME (sec):  1347.366168395998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.15818398 -0.35342809 -0.4791991  -0.4955433  -0.49672401 -0.49755193
 -0.3770704  -0.49886886 -0.49890134 -0.498915  ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01658779 -0.01831821 -0.42017317  0.13787594  0.1318455   0.05899556
  0.05102836  0.04165767  0.03792221  0.0270774 ]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
                      
    wire c1, c2, c3;
    
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);

Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:48: syntax error\nI give up.\n'
LLM generates return in:  1348.197483  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  18.0
Iteration TIME (sec):  1347.751140215998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.28383057 -0.3425611  -0.47862911 -0.49542118 -0.49663424 -0.49748484
 -0.36913478 -0.49883787 -0.49887123 -0.49888527]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06589353  0.02765596 -0.41255412 -0.42448223  0.1444295   0.0646264
  0.05589877  0.04563369  0.04154171  0.0296618 ]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

full_adder FA1 (sum[0],   c1,   in1[0],  in2[0], cin);
full_adder FA2 (sum[1],   c2,   in1[1],  in2[1], c1);
full_adder FA3 (sum[2],   c3,   in1[2],  in2[2], c2);
full_adder FA4 (sum[3],   c4,   in1[3],  in2[3], c3);
full_adder FA5 (sum[4],   c5,   in1[4],  in2[4], c4);
full_adder FA6 (sum[5],   c6,   in1[5],  in2[5], c5);
full_adder FA7 (sum[6],   c7,   in1[6],  in2[6], c6);
full_adder FA8 (sum[7],   c8,   in1[7],  in2[7], c7);
full_adder FA9 (sum[8],   c9,   in1[8],  in2[8], c8);
full_adder FA10 (sum[9],  c10,  in1[9],  in2[9], c9);
full_adder FA11 (sum[10], c11,  in1[10], in2[10], c10);
full_adder FA12 (sum[11], c12,  in1[11], in2[11], c11);
full_adder FA13 (sum[12], c13,  in1[12], in2[12], c12);
full_adder FA14 (sum[13], c14,  in1[13], in2[13], c13);
full_adder FA15 (sum[14], c15,  in1[14], in2[14], c14);
full_adder FA16 (sum[15], c16,  in1[15], in2[15], c15);
full_adder FA17 (sum[16], c17,  in1[16], in2[16], c16);
full_adder FA18 (sum[17], c18,  in1[17], in2[17], c17);
full_adder FA19 (sum[18], c19,  in1[18], in2[18], c18);
full_adder FA20 (sum[19], c20,  in1[19], in2[19], c19);
full_adder FA21 (sum[20], c21,  in1[20], in2[20], c20);
full_adder FA22 (sum[21], c22,  in1[21], in2[21], c21);
full_adder FA23 (sum[22], c23,  in1[22], in2[22], c22);
full_adder FA24 (sum[23], c24,  in1[23], in2[23], c23);
full_adder FA25 (sum[24], c25,  in1[24], in2[24], c24);
full_adder FA26 (sum[25], c26,  in1[25], in2[25], c25);
full_adder FA27 (sum[26], c27,  in1[26], in2[26], c26);
full_adder FA28 (sum[27], c28,  in1[27], in2[27], c27);
full_adder FA29 (sum[28], c29,  in1[28], in2[28], c28
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:40: syntax error\nI give up.\n'
LLM generates return in:  1348.886367  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  19.0
Iteration TIME (sec):  1348.4699547959972
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.37390465 -0.33197651 -0.47807393 -0.49530223 -0.4965468  -0.4974195
 -0.36140539 -0.49880768 -0.49884191 -0.49885631]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.29545057 -0.16711411  0.17065851  0.16172917  0.02948904  0.0285835
  0.02465858  0.02106137  0.01864681  0.0109375 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.7804572  0.39497066 0.09481683 0.02235901 0.01313626 0.00775749
 0.00613504 0.00431539 0.00210184 0.00187611]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  269

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1348.269422  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  20.0
Iteration TIME (sec):  1347.6626926370009
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.36197104 -0.45732272 -0.47753246 -0.49518622 -0.49646152 -0.49735578
 -0.35386694 -0.49877823 -0.49881331 -0.49882806]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [2.32432783e-01 5.08403718e-01 3.99083737e-03 5.39401022e-04
 4.33301902e-04 2.90643395e-04 1.85571975e-04 1.17090589e-04
 1.12601476e-04 9.61927071e-05]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   

    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;
    
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1348.216707  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  21.0
Iteration TIME (sec):  1347.5742934419977
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.35031835 -0.44925862 -0.47700374 -0.49507294 -0.49637825 -0.49729355
 -0.50987944 -0.49874948 -0.49878538 -0.49880049]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.1112349   0.06993359 -0.40554762 -0.4184315  -0.42199916  0.06980449
  0.06037757  0.04929002  0.04487017  0.03203841]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.5011313  0.36020586 0.1859777  0.12958199 0.01682111 0.01672322
 0.01288372 0.00712207 0.00631722 0.00378865]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  269

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_adder
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1347.737  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  22.0
Iteration TIME (sec):  1347.3377949960013
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.42156165 -0.44137581 -0.47648691 -0.4949622  -0.49629685 -0.49723272
 -0.5044828  -0.49872138 -0.49875808 -0.49877353]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.23104161  0.10928464 -0.3990262  -0.4127996  -0.41661358  0.07462414
  0.06454634  0.05269325  0.04796823  0.0342505 ]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.43208528 0.3356673  0.26779297 0.09952331 0.02024099 0.01206784
 0.01165859 0.00794647 0.00770175 0.00677802]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  685

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  wire [63:0] sum_temp;
  wire cout_temp;
  wire [63:0] in1_temp;
  wire [63:0] in2_temp;
  wire cin_temp;
  wire [63:0] add_temp;
  wire [63:0] add_temp2;
  wire [63:0] add_temp3;
  wire [63:0] add_temp4;
  wire [63:0] add_temp5;
  wire [63:0] add_temp6;
  wire [63:0] add_temp7;
  wire [63:0] add_temp8;
  wire [63:0] add_temp9;
  wire [63:0] add_temp10;
  wire [63:0] add_temp11;
  wire [63:0] add_temp12;
  wire [63:0] add_temp13;
  wire [63:0] add_temp14;
  wire [63:0] add_temp15;
  wire [63:0] add_temp16;
  wire [63:0] add_temp17;
  wire [63:0] add_temp18;
  wire [63:0] add_temp19;
  wire [63:0] add_temp20;
  wire [63:0] add_temp21;
  wire [63:0] add_temp22;
  wire [63:0] add_temp23;
  wire [63:0] add_temp24;
  wire [63:0] add_temp25;
  wire [63:0] add_temp26;
  wire [63:0] add_temp27;
  wire [63:0] add_temp28;
  wire [63:0] add_temp29;
  wire [63:0] add_temp30;
  wire [63:0] add_temp31;
  wire [63:0] add_temp32;
  wire [63:0] add_temp33;
  wire [63:0] add_temp34;
  wire [63:0] add_temp35;
  wire [63:0] add_temp36;
  wire [63:0] add_temp37;
  wire [63:0] add_temp38;
  wire [63:0] add_temp39;
  wire [63:0] add_temp40;
  wire [63:0] add_temp41;
  wire [63:0] add_temp42;
  wire [63:0] add_temp43;
  wire [63:0] add_temp44;
  wire [63:0] add_temp45;
  wire [63:0] add_temp46;
  wire [63:0] add_temp47;
  wire [63:0] add_temp48;
  wire [63:0] add_temp49;
  wire [63:0] add_temp50;
  wire [63:0] add_temp51;
  wire [63:0] add_temp52;
  wire [63:0] add_temp53;
  wire [63:0] add_temp54;
  wire [63:0] add_temp55;
  wire [63:0] add_temp56;
  wire [63:0] add_temp57;
  wire [63:0] add_temp58;
  wire [63:0] add_temp59;
  wire [63:0] add_temp60;
  wire [63:0] add_temp61;
  wire [63:0] add_temp62;
  wire [63:0] add_temp63;
  wire [63:0] add_temp64;
  wire [63:0] add_temp65;
  wire [63:0] add_temp66;
  wire [63:0] add_temp67;
  wire [63:0] add_temp68;
  wire [63:0] add_temp69;
  wire [63:0] add_temp70;
  wire [63:0] add_temp71;
  wire [63:0] add_temp72;
  wire [63:0] add_temp73;
  wire [63:0] add_temp74;
  wire [63:0] add_
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:88: syntax error\nI give up.\n'
LLM generates return in:  1348.402013  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  23.0
Iteration TIME (sec):  1347.8177548849999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.47716372 -0.43366258 -0.47598119 -0.49485385 -0.49621721 -0.49717321
 -0.49920225 -0.49869388 -0.49873137 -0.49874715]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.07377285 -0.12782228  0.19080201  0.18081869  0.03296975  0.03195733
  0.02756913  0.02354733  0.02084777  0.0122285 ]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);


    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:42: syntax error\nI give up.\n'
LLM generates return in:  1348.398961  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  24.0
Iteration TIME (sec):  1347.7647029010004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.46867364 -0.521757   -0.4754859  -0.49474773 -0.4961392  -0.49711492
 -0.49403062 -0.49866694 -0.49870521 -0.49872131]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.20461652 -0.2358374  -0.3929011  -0.40751    -0.41155535  0.07915085
  0.06846172  0.05588963  0.05087799  0.03632814]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
	wire c1, c2, c3;
	full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
	full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
	full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
	full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
	full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
	full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
	full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
	full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
	full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
	full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
	full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
	full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
	full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
	full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
	full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
	full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
	full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
	full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
	full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
	full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
	full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
	full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
	full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
	full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
	full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
	full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
	full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
	full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
	full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
	full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
	full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
	full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
	full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
	full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
	full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
	full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
	full_adder
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1347.911017  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  25.0
Iteration TIME (sec):  1347.5070142370023
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.51431654 -0.51558657 -0.47500043 -0.49464372 -0.49606274 -0.49705778
 -0.48896143 -0.49864054 -0.49867957 -0.49869599]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.2204307e+00 7.2721952e-01 1.8938243e-03 3.4223319e-04 3.0140052e-04
 1.7547706e-04 1.6198914e-04 1.2090476e-04 1.2074989e-04 8.0808895e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin); 
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);
    full_
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1348.379571  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  26.0
Iteration TIME (sec):  1347.7530609070018
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50696953 -0.50953371 -0.64968282 -0.49454168 -0.49598774 -0.49700173
 -0.48398882 -0.49861465 -0.49865442 -0.49867115]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [ 3.45740497e-01 -2.06472993e-01  4.60822182e-03  6.22846652e-04
  5.00333961e-04  3.35606077e-04  2.14280051e-04  1.35204566e-04
  1.30020970e-04  1.11073765e-04]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.5190655  0.3603645  0.16355315 0.1401273  0.10172617 0.04905589
 0.04611539 0.0340688  0.03367702 0.0289478 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   
    wire c1, c2, c3;
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29], in2[29], c29);
    full_adder FA31(sum[30], c31, in1[30], in2[30], c30);
    full_adder FA32(sum[31], c32, in1[31], in2[31], c31);
    full_adder FA33(sum[32], c33, in1[32], in2[32], c32);
    full_adder FA34(sum[33], c34, in1[33], in2[33], c33);
    full_adder FA35(sum[34], c35, in1[34], in2[34], c34);
    full_adder FA36(sum[35], c36, in1[35], in2[35], c35);
    full
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:46: syntax error\nI give up.\n'
LLM generates return in:  1347.935345  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  27.0
Iteration TIME (sec):  1347.3239883839997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49975736 -0.50359193 -0.64937117 -0.49444152 -0.49591412 -0.49694671
 -0.58328599 -0.49858923 -0.49862973 -0.49864677]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.2566350e+00 4.2457098e-01 2.3850254e-03 2.9655959e-04 1.8977173e-04
 1.6079197e-04 1.3205010e-04 8.8261470e-05 5.1913958e-05 5.0062477e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50286

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);  
  
  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;
  
  full_adder FA1 (sum[0], c1, in1[0], in2[0], cin);
  full_adder FA2 (sum[1], c2, in1[1], in2[1], c1);
  full_adder FA3 (sum[2], c3, in1[2], in2[2], c2);
  full_adder FA4 (sum[3], c4, in1[3], in2[3], c3);
  full_adder FA5 (sum[4], c5, in1[4], in2[4], c4);
  full_adder FA6 (sum[5], c6, in1[5], in2[5], c5);
  full_adder FA7 (sum[6], c7, in1[6], in2[6], c6);
  full_adder FA8 (sum[7], c8, in1[7], in2[7], c7);
  full_adder FA9 (sum[8], c9, in1[8], in2[8], c8);
  full_adder FA10 (sum[9], c10, in1[9], in2[9], c9);
  full_adder FA11 (sum[10], c11, in1[10], in2[10], c10);
  full_adder FA12 (sum[11], c12, in1[11], in2[11], c11);
  full_adder FA13 (sum[12], c13, in1[12], in2[12], c12);
  full_adder FA14 (sum[13], c14, in1[13], in2[13], c13);
  full_adder FA15 (sum[14], c15, in1[14], in2[14], c14);
  full_adder FA16 (sum[15], c16, in1[15], in2[15], c15);
  full_adder FA17 (sum[16], c17, in1[16], in2[16], c16);
  full_adder FA18 (sum[17], c18, in1[17], in2[17], c17);
  full_adder FA19 (sum[18], c19, in1[18], in2[18], c18);
  full_adder FA20 (sum[19], c20, in1[19], in2[19], c19);
  full_adder FA21 (sum[20], c21, in1[20], in2[20], c20);
  full_adder FA22 (sum[21], c22, in1[21], in2[21], c21);
  full_adder FA23 (sum[22], c23, in1[22], in2[22], c22);
  full_adder FA24 (sum[23], c24, in1[23], in2[23], c23);
  full_adder FA25 (sum[24], c25, in1[24], in2[24], c24);
  full_adder FA26 (sum[25], c26, in1[25], in2[25], c25);
  full_adder FA27 (sum[26], c27, in1[26], in2[26], c26);
  full_adder FA28 (sum[27], c28, in1[27], in2[27], c27);
  full_adder FA29 (sum[28], c29, in1[28], in2[28], c28);
  full_adder FA30 (sum[29], c30,
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1348.575794  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  28.0
Iteration TIME (sec):  1348.162281193996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49267287 -0.49775535 -0.64906503 -0.66289544 -0.49584179 -0.49689267
 -0.57945005 -0.49856425 -0.49860547 -0.49862281]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.17962307 -0.21253273 -0.38710785 -0.40250698 -0.40677115 -0.45828384
  0.072165    0.05891284  0.05363011  0.03829322]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
 
    wire c1, c2, c3;
 
    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], cout, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c3, in1[4], in2[4], c3);
    full_adder FA6(sum[5], c3, in1[5], in2[5], c3);
    full_adder FA7(sum[6], c3, in1[6], in2[6], c3);
    full_adder FA8(sum[7], c3, in1[7], in2[7], c3);
    full_adder FA9(sum[8], c3, in1[8], in2[8], c3);
    full_adder FA10(sum[9], c3, in1[9], in2[9], c3);
    full_adder FA11(sum[10], c3, in1[10], in2[10], c3);
    full_adder FA12(sum[11], c3, in1[11], in2[11], c3);
    full_adder FA13(sum[12], c3, in1[12], in2[12], c3);
    full_adder FA14(sum[13], c3, in1[13], in2[13], c3);
    full_adder FA15(sum[14], c3, in1[14], in2[14], c3);
    full_adder FA16(sum[15], c3, in1[15], in2[15], c3);
    full_adder FA17(sum[16], c3, in1[16], in2[16], c3);
    full_adder FA18(sum[17], c3, in1[17], in2[17], c3);
    full_adder FA19(sum[18], c3, in1[18], in2[18], c3);
    full_adder FA20(sum[19], c3, in1[19], in2[19], c3);
    full_adder FA21(sum[20], c3, in1[20], in2[20], c3);
    full_adder FA22(sum[21], c3, in1[21], in2[21], c3);
    full_adder FA23(sum[22], c3, in1[22], in2[22], c3);
    full_adder FA24(sum[23], c3, in1[23], in2[23], c3);
    full_adder FA25(sum[24], c3, in1[24], in2[24], c3);
    full_adder FA26(sum[25], c3, in1[25], in2[25], c3);
    full_adder FA27(sum[26], c3, in1[26], in2[26], c3);
    full_adder FA28(sum[27], c3, in1[27], in2[27], c3);
    full_adder FA29(sum[28], c3, in1[28], in2[28], c3);
    full_adder FA30(sum[29], c3, in1[29], in2[29], c3);
    full_adder FA31(sum[30], c3, in1[30], in2[30], c3);
    full_adder FA32(sum[31], c3, in1[31], in2[31], c3);
    full_adder FA33(sum[32], c3, in1[32], in2[32], c3);
    full_adder FA34(sum[33], c3, in1[33], in2[33], c3);
    full_adder FA35(sum[34], c3, in1[34], in2[34], c3);
    full_adder FA36(sum[35], c3, in1[35], in2[35], c3);

Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:48: syntax error\nI give up.\n'
LLM generates return in:  1348.384882  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  29.0
Iteration TIME (sec):  1347.9817390250028
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.53246324 -0.49201856 -0.64876412 -0.66283097 -0.49577071 -0.49683955
 -0.57567969 -0.49853971 -0.49858163 -0.49859927]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.01718402 -0.09229973 -0.39549345  0.19807696  0.03611656  0.0350075
  0.03020046  0.0257948   0.02283759  0.01339565]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

   assign {c1, sum} = in1 + in2 + cin;
   assign cout = c1;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  123.000187  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.957788

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  30.0
Iteration TIME (sec):  123.94366510200052
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.52623756 -0.40260853 -0.64846819 -0.66276757 -0.4957008  -0.49678731
 -0.57197166 -0.49851557 -0.49855819 -0.49857611]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03485477 -0.05963337 -0.38712     0.1569738   0.03901034  0.03781242
  0.03262023  0.02786157  0.02466742  0.01446896]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.37886715 0.21216716 0.19158933 0.02080594 0.01337881 0.01297807
 0.01197358 0.00693443 0.00609557 0.00241336]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  269

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

   assign {c1, sum} = in1 + in2 + cin;
   assign cout = c1;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  122.571291  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.827398

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  31.0
Iteration TIME (sec):  123.51633096599835
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.52011152 -0.33561875 -0.648177   -0.66270518 -0.49563201 -0.4967359
 -0.56832298 -0.49849182 -0.49853512 -0.49855333]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08329129 -0.02922827 -0.37932622  0.14290653  0.04170381  0.04042318
  0.03487249  0.02978527  0.02637058  0.01546797]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.2820078  0.25985065 0.23464805 0.02548197 0.01638563 0.01589483
 0.01466458 0.00849291 0.00746552 0.00295574]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.9973844  0.64187515 0.07557511 0.06474745 0.03869286 0.03379876
 0.02856627 0.01588218 0.00849775 0.00659275]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  16

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

   assign {c1, sum} = in1 + in2 + cin;
   assign cout = c1;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  122.230957  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.811819

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  32.0
Iteration TIME (sec):  123.19776183600334
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.51408047 -0.28357299 -0.64789032 -0.66264376 -0.49556428 -0.49668529
 -0.56473087 -0.49846843 -0.4985124  -0.4985309 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.12878382 -0.00067121 -0.37200612  0.13564843  0.04423356  0.04287526
  0.03698786  0.03159205  0.02797022  0.01640625]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.24526635 0.30004966 0.27094823 0.02942405 0.01892049 0.01835377
 0.0169332  0.00980677 0.00862044 0.003413  ]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  7.664707  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.792837

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  33.0
Iteration TIME (sec):  8.795827463000023
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50814013 -0.24198566 -0.64760795 -0.66258326 -0.49549758 -0.49663544
 -0.56119279 -0.4984454  -0.49849003 -0.49850881]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.17181182  0.02633876 -0.36508262  0.13114324  0.04662627  0.04519449
  0.03898863  0.03330095  0.0294832   0.01729371]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.02206951  0.48373827  0.11612643  0.02738408  0.01608857  0.00950094
  0.00751386  0.00528525  0.00257421  0.00229776]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  7.666768  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.796738

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  34.0
Iteration TIME (sec):  8.771161388998735
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50228653 -0.20800256 -0.64732971 -0.66252364 -0.49543184 -0.49658632
 -0.55770637 -0.49842271 -0.49846799 -0.49848704]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.18455282  0.05202883 -0.35849744  0.1336395   0.04890205  0.04740038
  0.04089162  0.03492633  0.03092224  0.0181378 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.05186659 0.32928643 0.13409124 0.03162041 0.01857748 0.01097074
 0.00867626 0.00610288 0.00297245 0.00265322]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [1.9515712e+00 1.6613792e-05 9.9415747e-06 6.1787778e-06 4.5773199e-06
 3.3165982e-06 8.0729797e-07 2.8962867e-07 2.3712681e-07 2.3059083e-07]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1391

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  7.25928  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.798051

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  35.0
Iteration TIME (sec):  8.388929291002569
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49651596 -0.17972091 -0.64705541 -0.66246487 -0.49536704 -0.4965379
 -0.55426941 -0.49840033 -0.49844626 -0.49846558]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.19110438  0.07657528 -0.3522054   0.13602462  0.05107652  0.04950808
  0.04270991  0.03647936  0.03229723  0.01894431]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.11700559 0.27483445 0.14991856 0.0353527  0.02077026 0.01226566
 0.00970035 0.00682323 0.0033233  0.0029664 ]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [1.2450885e+00 2.0347657e-05 1.2175893e-05 7.5674266e-06 5.6060489e-06
 4.0619866e-06 9.8873409e-07 3.5472124e-07 2.9041985e-07 2.8241493e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.678139   0.07557876 0.06753573 0.03606525 0.01298447 0.0100942
 0.01000912 0.0095123  0.00751676 0.00705541]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  66

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  6.886602  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.80008

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  36.0
Iteration TIME (sec):  8.012293451000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.490825   -0.1558236  -0.6467849  -0.66240691 -0.49530314 -0.49649014
 -0.55087986 -0.49837827 -0.49842482 -0.49844441]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.194673    0.10011858 -0.34617049  0.13831228  0.05316213  0.05152965
  0.04445388  0.03796892  0.03361602  0.01971786]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.17589575 0.2460273  0.16422756 0.03872694 0.02275268 0.01343636
 0.0106262  0.00747447 0.00364049 0.00324952]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [9.8664618e-01 2.3495450e-05 1.4059509e-05 8.7381113e-06 6.4733076e-06
 4.6903779e-06 1.1416917e-06 4.0959679e-07 3.3534795e-07 3.2610467e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.077646   0.0925647  0.08271404 0.04417073 0.01590266 0.01236282
 0.01225861 0.01165014 0.00920611 0.00864108]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.9239249e+00 1.2819903e-02 4.6105506e-03 2.1033403e-03 1.3366687e-03
 1.2539895e-03 8.4412692e-04 6.5664476e-04 4.3501350e-04 3.6768732e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  448

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  6.50526  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.800057

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  37.0
Iteration TIME (sec):  7.633322934001626
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.48521045 -0.13536986 -0.64651802 -0.66234973 -0.49524009 -0.49644303
 -0.54753582 -0.4983565  -0.49840368 -0.49842353]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.19661477  0.12277246 -0.3403636   0.14051351  0.05516895  0.05347484
  0.04613197  0.03940221  0.03488499  0.02046219]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.23005092 0.22778448 0.17738605 0.04182988 0.0245757  0.01451293
 0.01147761 0.00807335 0.00393218 0.00350989]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.0566252  0.5622794  0.13781457 0.03149928 0.0297003  0.02699584
 0.02280835 0.01543267 0.00827729 0.00713231]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  16

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1348.153625  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  38.0
Iteration TIME (sec):  1347.5130264289983
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.47966929 -0.19100325 -0.64625462 -0.6622933  -0.49517787 -0.49639653
 -0.54423549 -0.49833501 -0.49838281 -0.49840292]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06009585  0.14463073 -0.3347606   0.14263743  0.05710529  0.05535172
  0.04775113  0.04078516  0.0361094   0.02118039]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.62896335 0.2878067  0.08419153 0.02500325 0.02187388 0.00947873
 0.00844988 0.00542117 0.00510462 0.00399558]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  269

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

  full_adder FA1 (sum[0],   c1,   in1[0],  in2[0], cin);
  full_adder FA2 (sum[1],   c2,   in1[1],  in2[1], c1);
  full_adder FA3 (sum[2],   c3,   in1[2],  in2[2], c2);
  full_adder FA4 (sum[3],   c4,   in1[3],  in2[3], c3);
  full_adder FA5 (sum[4],   c5,   in1[4],  in2[4], c4);
  full_adder FA6 (sum[5],   c6,   in1[5],  in2[5], c5);
  full_adder FA7 (sum[6],   c7,   in1[6],  in2[6], c6);
  full_adder FA8 (sum[7],   c8,   in1[7],  in2[7], c7);
  full_adder FA9 (sum[8],   c9,   in1[8],  in2[8], c8);
  full_adder FA10 (sum[9],  c10,  in1[9],  in2[9], c9);
  full_adder FA11 (sum[10], c11,  in1[10], in2[10], c10);
  full_adder FA12 (sum[11], c12,  in1[11], in2[11], c11);
  full_adder FA13 (sum[12], c13,  in1[12], in2[12], c12);
  full_adder FA14 (sum[13], c14,  in1[13], in2[13], c13);
  full_adder FA15 (sum[14], c15,  in1[14], in2[14], c14);
  full_adder FA16 (sum[15], c16,  in1[15], in2[15], c15);
  full_adder FA17 (sum[16], c17,  in1[16], in2[16], c16);
  full_adder FA18 (sum[17], c18,  in1[17], in2[17], c17);
  full_adder FA19 (sum[18], c19,  in1[18], in2[18], c18);
  full_adder FA20 (sum[19], c20,  in1[19], in2[19], c19);
  full_adder FA21 (sum[20], c21,  in1[20], in2[20], c20);
  full_adder FA22 (sum[21], c22,  in1[21], in2[21], c21);
  full_adder FA23 (sum[22], c23,  in1[22], in2[22], c22);
  full_adder FA24 (sum[23], c24,  in1[23], in2[23], c23);
  full_adder FA25 (sum[24], c25,  in1[24], in2[24], c24);
  full_adder FA26 (sum[25], c26,  in1[25], in2[25], c25);
  full_adder FA27 (sum[26], c27,  in1[26], in2[26], c26);
  full_adder FA28 (sum[27], c28,  in1[27], in2[27], c27);
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:39: syntax error\nI give up.\n'
LLM generates return in:  1348.714034  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  39.0
Iteration TIME (sec):  1348.1174306440007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.47419873 -0.23970642 -0.64599459 -0.66223759 -0.49511644 -0.49635063
 -0.54097721 -0.4983138  -0.49836221 -0.49838258]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0727253  -0.22281882 -0.32934147  0.14469168  0.05897809  0.05716701
  0.04931715  0.04212274  0.03729363  0.02187501]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.26634717 0.21773286 0.3029293  0.03289708 0.02115376 0.02052013
 0.01893189 0.0109643  0.00963794 0.00381585]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  7785

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   genvar i;
   wire [63:0] sum_temp;
   wire [63:0] in1_temp;
   wire [63:0] in2_temp;
   wire [63:0] cin_temp;

   assign in1_temp = in1;
   assign in2_temp = in2;
   assign cin_temp = cin;

   generate for (i = 0; i < 64; i = i + 1) begin: adder
      if (i == 0)
        full_adder FA1(sum_temp[0], c1, in1_temp[0], in2_temp[0], cin_temp);
      else
        full_adder FA2(sum_temp[i], c2, in1_temp[i], in2_temp[i], c1);
   end endgenerate

   assign sum = sum_temp;
   assign cout = c2;
endmodule
Verilog compilation failed, error:  64
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:24: error: Unknown module type: full_adder\n64 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 64 times.\n***\n'
LLM generates return in:  123.422918  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  40.0
Iteration TIME (sec):  124.40351051499601
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.46879613 -0.28270155 -0.64573778 -0.66218256 -0.49505577 -0.49630529
 -0.53775942 -0.49829285 -0.49834186 -0.49836248]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08496583 -0.20915884 -0.32408923 -0.04443113  0.06079322  0.0589264
  0.05083496  0.04341912  0.03844139  0.02254824]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.14636189  0.23798826  0.18963365  0.04471802  0.02627253  0.01551497
  0.01227008  0.00863077  0.00420367  0.00375223]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [8.4642619e-01 2.6268710e-05 1.5719010e-05 9.7695056e-06 7.2373778e-06
 5.2440018e-06 1.2764501e-06 4.5794312e-07 3.7493038e-07 3.6459608e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.857749   0.1068845  0.09550995 0.05100397 0.01836281 0.01427535
 0.01415503 0.01345242 0.0106303  0.00997786]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.2281586e+00 1.5701110e-02 5.6467485e-03 2.5760552e-03 1.6370782e-03
 1.5358173e-03 1.0338401e-03 8.0422231e-04 5.3278054e-04 4.5032319e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.9434899e+00 2.2831054e-03 1.8784323e-03 1.1329991e-03 5.4303027e-04
 3.3363872e-04 2.9273282e-04 2.8643638e-04 2.7567765e-04 1.8872009e-04]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  11

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  6.15394  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.802127

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  41.0
Iteration TIME (sec):  7.278187891002744
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.46345903 -0.25982814 -0.64548409 -0.66212821 -0.49499584 -0.4962605
 -0.53458063 -0.49827216 -0.49832177 -0.49834263]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0972012  -0.19589499 -0.31898934 -0.04282011  0.06255571  0.06063477
  0.05230874  0.04467791  0.03955587  0.02320195]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.1148001   0.22297654  0.20113686  0.04743062  0.02786622  0.01645611
  0.01301438  0.00915432  0.00445867  0.00397984]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [7.5604409e-01 2.8775930e-05 1.7219312e-05 1.0701957e-05 7.9281499e-06
 5.7445163e-06 1.3982810e-06 5.0165158e-07 4.1071567e-07 3.9939499e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.73834264 0.1195005  0.10678336 0.05702417 0.02053025 0.01596033
 0.0158258  0.01504026 0.01188503 0.01115559]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [9.7361356e-01 1.8130081e-02 6.5203030e-03 2.9745724e-03 1.8903350e-03
 1.7734090e-03 1.1937757e-03 9.2863588e-04 6.1520195e-04 5.1998842e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.2401396e+00 2.7962215e-03 2.3006005e-03 1.3876348e-03 6.6507352e-04
 4.0862232e-04 3.5852304e-04 3.5081149e-04 3.3763479e-04 2.3113398e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.92573404e+00 2.14773584e-02 2.54281354e-03 1.28523808e-03
 1.60630923e-04 1.22425539e-04 1.00947575e-04 4.03519480e-05
 3.48812246e-05 2.71303143e-05]  taking action:  0
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2160

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  5.765841  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.795879

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  42.0
Iteration TIME (sec):  6.895666857999458
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.4581851  -0.23938053 -0.6452334  -0.6620745  -0.49493661 -0.49621625
 -0.53143946 -0.49825171 -0.4983019  -0.49832302]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10672885 -0.1829947  -0.31402922 -0.04125324  0.06426989  0.06229631
  0.05374212  0.04590219  0.04063979  0.02383774]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.08494824  0.21188304  0.21201687  0.04999626  0.02937358  0.01734627
  0.01371837  0.0096495   0.00469985  0.00419512]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  7785

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    genvar i;
    wire [63:0] sum_temp;
    wire [63:0] in1_temp;
    wire [63:0] in2_temp;
    wire [63:0] cin_temp;
    wire [63:0] temp_sum;
    wire [63:0] temp_sum_temp;
    wire [63:0] temp_in1;
    wire [63:0] temp_in2;
    wire [63:0] temp_in1_temp;
    wire [63:0] temp_in2_temp;
    wire [63:0] temp_cin_temp;
    wire [63:0] temp_cin;
    wire [63:0] temp_cin_temp_1;
    wire [63:0] temp_cin_temp_2;
    wire [63:0] temp_cin_temp_3;
    wire [63:0] temp_cin_temp_4;
    wire [63:0] temp_cin_temp_5;
    wire [63:0] temp_cin_temp_6;
    wire [63:0] temp_cin_temp_7;
    wire [63:0] temp_cin_temp_8;
    wire [63:0] temp_cin_temp_9;
    wire [63:0] temp_cin_temp_10;
    wire [63:0] temp_cin_temp_11;
    wire [63:0] temp_cin_temp_12;
    wire [63:0] temp_cin_temp_13;
    wire [63:0] temp_cin_temp_14;
    wire [63:0] temp_cin_temp_15;
    wire [63:0] temp_cin_temp_16;
    wire [63:0] temp_cin_temp_17;
    wire [63:0] temp_cin_temp_18;
    wire [63:0] temp_cin_temp_19;
    wire [63:0] temp_cin_temp_20;
    wire [63:0] temp_cin_temp_21;
    wire [63:0] temp_cin_temp_22;
    wire [63:0] temp_cin_temp_23;
    wire [63:0] temp_cin_temp_24;
    wire [63:0] temp_cin_temp_25;
    wire [63:0] temp_cin_temp_26;
    wire [63:0] temp_cin_temp_27;
    wire [63:0] temp_cin_temp_28;
    wire [63:0] temp_cin_temp_29;
    wire [63:0] temp_cin_temp_30;
    wire [63:0] temp_cin_temp_31;
    wire [63:0] temp_cin_temp_32;
    wire [63:0] temp_cin_temp_33;
    wire [63:0] temp_cin_temp_34;
    wire [63:0] temp_cin_temp_35;
    wire [63:0] temp_cin_temp_36;
    wire [63:0] temp_cin_temp_37;
    wire [63:0] temp_cin_temp_38;
    wire [63:0] temp_cin_temp_39;
    wire [63:0] temp_cin_temp_40;
    wire [63:0] temp_cin_temp_41;
    wire [63:0] temp_cin_temp_42;
    wire [63:0] temp_cin_temp_43;
    wire [63:0] temp_cin_temp_44;
    wire [63:0] temp_cin_temp_45;
    wire [63:0] temp_cin_temp_46;
    wire [63:0] temp_cin_temp_47;
    wire [63:0] temp_cin_temp_48;
    wire [63:0] temp_cin_temp_49;
    wire [63:0] temp_cin_temp_50;
    wire [63:0] temp_cin_temp_51;
    wire [63:0] temp_cin_temp_52;
    wire [63:0] temp_cin_temp_53;
    wire [63:0] temp_cin
Verilog compilation failed, error:  3
Compilation output:  b"/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:76: error: 'temp_cin' has already been declared in this scope.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:22:      : It was declared here as a net.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:76: syntax error\nI give up.\n"
LLM generates return in:  1348.498398  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  43.0
Iteration TIME (sec):  1347.8882928149978
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.45297214 -0.27599423 -0.6449856  -0.66202141 -0.49487807 -0.4961725
 -0.52833461 -0.4982315  -0.49828227 -0.49830363]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01430574 -0.17042974 -0.309198   -0.0397271   0.0659395   0.06391466
  0.05513825  0.04709465  0.04169554  0.024457  ]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

     wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

     wire [63:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63;

     assign c1 = cin;
     assign c2 = 0;
     assign c3 = 0;
     assign c4 = 0;
     assign c5 = 0;
     assign c6 = 0;
     assign c7 = 0;
     assign c8 = 0;
     assign c9 = 0;
     assign c10 = 0;
     assign c11 = 0;
     assign c12 = 0;
     assign c13 = 0;
     assign c14 = 0;
     assign c15 = 0;
     assign c16 = 0;
     assign c17 = 0;
     assign c18 = 0;
     assign c19 = 0;
     assign c20 = 0;
     assign c21 = 0;
     assign c22 = 0;
     assign c23 = 0;
     assign c24 = 0;
     assign c25 = 0;
     assign c26 = 0;
     assign c27 = 0;
     assign c28 = 0;
     assign c29 = 0;
     assign c30 = 0;
     assign c31 = 0;
     assign c32 = 0;
     assign c33 = 0;
     assign c34 = 0;
     assign c35 = 0;
     assign c36 = 0;
     assign c37 = 0;
     assign c38 = 0;
     assign c39 = 0;
     assign c40 = 0;
     assign c41 = 0;
     assign c42 = 0;
     assign c43 = 0;
     assign c44 = 0;
     assign c45 = 0;
     assign c46 = 0;
     assign c47 = 0;
     assign c48 = 0;
     assign c49 = 0;
     assign c50 = 0;
     assign c51 = 0;
     assign c52 = 0;
     assign c53 = 0;
     assign c54 = 0;
     assign c55 = 0;
     assign c56 = 0;
     assign c57 = 0;
     assign c58 = 0;
     assign c59 = 0;
     assign c60 = 0;
     assign c61 = 0;
     assign c62 = 0;
     assign c63 = 0;

     assign s1 = in1[63] ^ in2[63];
     assign s2 = in1[62] ^ in2[62];
     assign s3 = in1[61] ^ in2[61];
     assign s4 = in1[60] ^
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:81: syntax error\nI give up.\n'
LLM generates return in:  1348.323741  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  44.0
Iteration TIME (sec):  1347.903368985004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.44781809 -0.30913618 -0.64474061 -0.66196892 -0.4948202  -0.49612925
 -0.52526485 -0.49821152 -0.49826286 -0.49828446]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02229205 -0.15817511 -0.3044861  -0.03823866 -0.46621606  0.06549304
  0.0564999   0.04825766  0.04272522  0.02506097]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

	wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

	full_adder FA1 (sum[0], c1, in1[0], in2[0], cin);
	full_adder FA2 (sum[1], c2, in1[1], in2[1], c1);
	full_adder FA3 (sum[2], c3, in1[2], in2[2], c2);
	full_adder FA4 (sum[3], c4, in1[3], in2[3], c3);
	full_adder FA5 (sum[4], c5, in1[4], in2[4], c4);
	full_adder FA6 (sum[5], c6, in1[5], in2[5], c5);
	full_adder FA7 (sum[6], c7, in1[6], in2[6], c6);
	full_adder FA8 (sum[7], c8, in1[7], in2[7], c7);
	full_adder FA9 (sum[8], c9, in1[8], in2[8], c8);
	full_adder FA10 (sum[9], c10, in1[9], in2[9], c9);
	full_adder FA11 (sum[10], c11, in1[10], in2[10], c10);
	full_adder FA12 (sum[11], c12, in1[11], in2[11], c11);
	full_adder FA13 (sum[12], c13, in1[12], in2[12], c12);
	full_adder FA14 (sum[13], c14, in1[13], in2[13], c13);
	full_adder FA15 (sum[14], c15, in1[14], in2[14], c14);
	full_adder FA16 (sum[15], c16, in1[15], in2[15], c15);
	full_adder FA17 (sum[16], c17, in1[16], in2[16], c16);
	full_adder FA18 (sum[17], c18, in1[17], in2[17], c17);
	full_adder FA19 (sum[18], c19, in1[18], in2[18], c18);
	full_adder FA20 (sum[19], c20, in1[19], in2[19], c19);
	full_adder FA21 (sum[20], c21, in1[20], in2[20], c20);
	full_adder FA22 (sum[21], c22, in1[21], in2[21], c21);
	full_adder FA23 (sum[22], c23, in1[22], in2[22], c22);
	full_adder FA24 (sum[23], c24, in1[23], in2[23], c23);
	full_adder FA25 (sum[24], c25, in1[24], in2[24], c24);
	full_adder FA26 (sum[25], c26, in1[25], in2[25], c25);
	full_adder FA27 (sum[26], c27, in1[26], in2[26], c26);
	full_adder FA28 (sum[27], c28, in1[27], in2[27], c27);
	full_adder FA29 (sum[28], c29, in1[28], in2[28], c28);
	full_adder FA30 (sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1348.5948  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  45.0
Iteration TIME (sec):  1348.196839352
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.442721   -0.33927931 -0.64449833 -0.66191701 -0.49476296 -0.49608648
 -0.52222901 -0.49819175 -0.49824367 -0.49826551]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03009033 -0.146209   -0.29988515 -0.03678525 -0.46542102 -0.46648288
  0.05782949  0.04939329  0.04373065  0.02565072]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

        wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

        full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
        full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
        full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
        full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
        full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
        full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
        full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
        full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
        full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
        full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
        full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
        full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
        full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
        full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
        full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
        full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
        full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
        full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
        full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
        full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
        full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
        full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
        full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
        full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
        full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
        full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
        full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
        full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
        full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
        full_adder FA30(sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1348.120696  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  46.0
Iteration TIME (sec):  1347.690968816998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.43767902 -0.36681432 -0.64425866 -0.66186566 -0.49470634 -0.49604417
 -0.51922599 -0.4981722  -0.49822468 -0.49824675]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03771335 -0.13451183 -0.29538763 -0.03536452 -0.46464387 -0.4657296
 -0.4704354   0.05050339  0.04471349  0.02622721]  taking action:  7
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21809

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

      wire c1, c2, c3;
      wire [63:0] s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63;

      assign s1[63] = in1[63] ^ in2[63];
      assign s1[62] = in1[62] ^ in2[62];
      assign s1[61] = in1[61] ^ in2[61];
      assign s1[60] = in1[60] ^ in2[60];
      assign s1[59] = in1[59] ^ in2[59];
      assign s1[58] = in1[58] ^ in2[58];
      assign s1[57] = in1[57] ^ in2[57];
      assign s1[56] = in1[56] ^ in2[56];
      assign s1[55] = in1[55] ^ in2[55];
      assign s1[54] = in1[54] ^ in2[54];
      assign s1[53] = in1[53] ^ in2[53];
      assign s1[52] = in1[52] ^ in2[52];
      assign s1[51] = in1[51] ^ in2[51];
      assign s1[50] = in1[50] ^ in2[50];
      assign s1[49] = in1[49] ^ in2[49];
      assign s1[48] = in1[48] ^ in2[48];
      assign s1[47] = in1[47] ^ in2[47];
      assign s1[46] = in1[46] ^ in2[46];
      assign s1[45] = in1[45] ^ in2[45];
      assign s1[44] = in1[44] ^ in2[44];
      assign s1[43] = in1[43] ^ in2[43];
      assign s1[42] = in1[42] ^ in2[42];
      assign s1[41] = in1[41] ^ in2[41];
      assign s1[40] = in1[40] ^ in2[40];
      assign s1[39] = in1[39] ^ in2[39];
      assign s1[38] = in1[38] ^ in2[38];
      assign s1[37] = in1[37] ^ in2[37];
      assign s1[36] = in1[36] ^ in2[36];
      assign s1[35] = in1[35] ^ in2[35];
      assign s1[34] = in1[34] ^ in2[34];
      assign s1[33] = in1[33] ^ in2[33];
      assign s1[32] = in1[32] ^ in2[32];
      assign s1[31] = in1[31] ^ in2[31];
      assign s1[30] = in1[30] ^ in2[30];
      assign s1[29] = in1[29] ^ in2[29];
      assign s1[28] = in1[28] ^ in2[28];
      assign s1[27] = in1[27] ^ in2[27];
      assign s1[26] = in1[26] ^ in2[26];
      assign s1[25] = in1[25] ^ in
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:51: syntax error\nI give up.\n'
LLM generates return in:  1348.139495  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  47.0
Iteration TIME (sec):  1347.689626579995
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.43269039 -0.39206686 -0.64402154 -0.66181485 -0.49465032 -0.49600231
 -0.51625475 -0.49815286 -0.49820589 -0.4982282 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.04517236 -0.12306631 -0.29098687 -0.03397435 -0.46388346 -0.4649925
 -0.46979955 -0.4742052   0.04567518  0.0267913 ]  taking action:  8
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  50284

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);



    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:43: syntax error\nI give up.\n'
LLM generates return in:  1348.317127  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  48.0
Iteration TIME (sec):  1347.8939518740008
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.42775347 -0.4153104  -0.64378686 -0.66176457 -0.49459488 -0.49596088
 -0.51331431 -0.49813372 -0.4981873  -0.49820984]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05247754 -0.11185688 -0.28667685 -0.03261285 -0.4631387  -0.46427062
 -0.46917677 -0.47367328 -0.47669148  0.02734376]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.05655515  0.21804118 -0.3888174   0.05243653  0.03080727  0.01819292
  0.01438794  0.01012048  0.00492924  0.00439988]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [6.9184256e-01 3.1081559e-05 1.8598983e-05 1.1559435e-05 8.5633810e-06
 6.2047870e-06 1.5103162e-06 5.4184562e-07 4.4362363e-07 4.3139593e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.6613244  0.13090625 0.11697531 0.06246685 0.02248976 0.01748367
 0.0173363  0.01647578 0.0130194  0.01222034]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [8.3549803e-01 2.0270046e-02 7.2899205e-03 3.3256728e-03 2.1134587e-03
 1.9827313e-03 1.3346818e-03 1.0382464e-03 6.8781670e-04 5.8136467e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [9.8283654e-01 3.2287985e-03 2.6565045e-03 1.6023025e-03 7.6796074e-04
 4.7183639e-04 4.1398674e-04 4.0508219e-04 3.8986705e-04 2.6689051e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.2292664e+00 2.6304286e-02 3.1142980e-03 1.5740887e-03 1.9673191e-04
 1.4994005e-04 1.2363502e-04 4.9420843e-05 4.2720603e-05 3.3227712e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [1.6116825e+00 3.3925790e-01 2.1575621e-04 1.4678537e-04 7.5429045e-05
 5.1644191e-05 1.4383698e-05 1.4120352e-05 1.0058769e-05 6.3526068e-06]  taking action:  0
Adding child.
Leaf selection - depth:  9
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  92

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  5.390059  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.825894

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  49.0
Iteration TIME (sec):  6.523800702998415
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.42286667 -0.39446876 -0.64355458 -0.6617148  -0.49454001 -0.49591988
 -0.51040372 -0.49811477 -0.4981689  -0.49819166]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06300148 -0.10086948 -0.28245223 -0.03127832 -0.4624087  -0.46356302
 -0.46856636 -0.47315192 -0.47622988  0.02788527]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.02942604  0.20843458 -0.38387358  0.05476817  0.03217715  0.01900189
  0.01502772  0.0105705   0.00514843  0.00459552]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [6.43306077e-01 3.32275849e-05 1.98831494e-05 1.23575555e-05
 9.15463988e-06 6.63319634e-06 1.61459593e-06 5.79257346e-07
 4.74253625e-07 4.61181656e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.6065851  0.14139491 0.12634778 0.06747191 0.02429172 0.01888452
 0.01872534 0.01779588 0.01406256 0.01319947]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [7.4646705e-01 2.2204721e-02 7.9857074e-03 3.6430920e-03 2.3151780e-03
 2.1719735e-03 1.4620706e-03 1.1373421e-03 7.5346546e-04 6.3685310e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [8.4323180e-01 3.6099064e-03 2.9700622e-03 1.7914287e-03 8.5860619e-04
 5.2752910e-04 4.6285123e-04 4.5289565e-04 4.3588461e-04 2.9839267e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [9.7446638e-01 3.0373571e-02 3.5960814e-03 1.8176010e-03 2.2716644e-04
 1.7313585e-04 1.4276142e-04 5.7066271e-05 4.9329501e-05 3.8368056e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [1.0369500e+00 4.1550437e-01 2.6424634e-04 1.7977464e-04 9.2381335e-05
 6.3250955e-05 1.7616359e-05 1.7293829e-05 1.2319426e-05 7.7803234e-06]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [1.9286892e+00 1.3772248e-02 6.4898841e-03 1.5398840e-03 3.8948032e-04
 2.3311291e-04 1.1072297e-04 1.0197789e-04 5.0550549e-05 3.8407568e-05]  taking action:  0
Adding child.
Leaf selection - depth:  10
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  796

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  5.001915  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.794315

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  50.0
Iteration TIME (sec):  6.134592190996045
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.4180285  -0.37518076 -0.6433246  -0.66166553 -0.49448568 -0.49587928
 -0.50752209 -0.49809601 -0.49815068 -0.49817367]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07179096 -0.09009141 -0.2783081  -0.02996922 -0.4616926  -0.46286893
 -0.46796757 -0.47264048 -0.4757771   0.02841647]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.00340557  0.20077573 -0.3791318   0.05700452  0.03349103  0.01977779
  0.01564134  0.01100212  0.00535865  0.00478317]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [6.04988456e-01 3.52431744e-05 2.10892631e-05 1.31071665e-05
 9.70996098e-06 7.03556680e-06 1.71253748e-06 6.14395162e-07
 5.03021909e-07 4.89157003e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.56518257 0.15115751 0.13507146 0.07213051 0.02596894 0.0201884
 0.02001823 0.01902459 0.01503351 0.01411083]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.6832223  0.02398384 0.00862555 0.00393499 0.00250068 0.002346
 0.00157922 0.00122847 0.00081384 0.00068788]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [7.5324458e-01 3.9544543e-03 3.2535403e-03 1.9624119e-03 9.4055594e-04
 5.7787920e-04 5.0702813e-04 4.9612235e-04 4.7748769e-04 3.2687277e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [8.3621317e-01 3.3958685e-02 4.0205414e-03 2.0321398e-03 2.5397979e-04
 1.9357176e-04 1.5961211e-04 6.3802028e-05 5.5152057e-05 4.2896791e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [8.26421082e-01 4.79783088e-01 3.05125373e-04 2.07585865e-04
 1.06672771e-04 7.30359097e-05 2.03416203e-05 1.99691931e-05
 1.42252475e-05 8.98394319e-06]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [1.2310761e+00 1.6867490e-02 7.9484526e-03 1.8859651e-03 4.7701402e-04
 2.8550383e-04 1.3560739e-04 1.2489689e-04 6.1911524e-05 4.7039470e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [1.8735138e+00 4.2707819e-02 3.1681146e-02 7.0222770e-04 6.0539506e-04
 5.5695913e-04 5.4254843e-04 4.5783463e-04 1.9065883e-04 1.4174402e-04]  taking action:  0
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  287

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  4.612512  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.795741

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  51.0
Iteration TIME (sec):  5.747282794996863
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.41323753 -0.3572796  -0.64309687 -0.66161674 -0.49443188 -0.49583907
 -0.50466858 -0.49807744 -0.49813263 -0.49815585]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07922345 -0.07951117 -0.27424002 -0.02868414 -0.46098965 -0.4621876
 -0.46737978 -0.47213843 -0.4753326   0.02893792]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.02163184  0.1944994  -0.37456912  0.05915638  0.03475529  0.02052438
  0.01623179  0.01141744  0.00556094  0.00496373]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [5.7376063e-01 3.7149566e-05 2.2230037e-05 1.3816167e-05 1.0235198e-05
 7.4161389e-06 1.8051730e-06 6.4762941e-07 5.3023166e-07 5.1561676e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.5324838  0.16032675 0.1432649  0.07650595 0.02754422 0.02141303
 0.02123254 0.02017863 0.01594545 0.01496679]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.6354071  0.02563981 0.0092211  0.00420668 0.00267334 0.00250798
 0.00168825 0.00131329 0.00087003 0.00073537]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [6.8932277e-01 4.2712991e-03 3.5142251e-03 2.1196471e-03 1.0159166e-03
 6.2418089e-04 5.4765295e-04 5.3587341e-04 5.1574566e-04 3.5306296e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [7.4709380e-01 3.7199873e-02 4.4042822e-03 2.2260975e-03 2.7822092e-04
 2.1204725e-04 1.7484631e-04 6.9891619e-05 6.0416052e-05 4.6991081e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [7.1207345e-01 5.3641379e-01 3.4114052e-04 2.3208806e-04 1.1926379e-04
 8.1656632e-05 2.2742623e-05 2.2326236e-05 1.5904310e-05 1.0044353e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [9.7585946e-01 1.9476900e-02 9.1780815e-03 2.1777248e-03 5.5080833e-04
 3.2967143e-04 1.5658591e-04 1.4421850e-04 7.1489267e-05 5.4316501e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [1.1972882e+00 5.2306186e-02 3.8801320e-02 8.6004974e-04 7.4145448e-04
 6.8213284e-04 6.6448341e-04 5.6073064e-04 2.3350843e-04 1.7360026e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [1.9304157e+00 1.4059886e-02 3.3096869e-03 1.3928396e-03 3.9258084e-04
 2.5486932e-04 2.1880107e-04 2.0227148e-04 1.6904800e-04 1.5751236e-04]  taking action:  0
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  16

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  4.23165  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.790683

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  52.0
Iteration TIME (sec):  5.3660199329970055
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.40849241 -0.34062166 -0.64287131 -0.66156841 -0.4943786  -0.49579925
 -0.50184238 -0.49805904 -0.49811476 -0.4981382 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08557545 -0.06911826 -0.27024394 -0.02742182 -0.46029916 -0.4615183
 -0.46680236 -0.47164527 -0.47489595  0.02945013]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.04579002  0.18924288 -0.37016672  0.06123267  0.03597514  0.02124475
  0.0168015   0.01181817  0.00575612  0.00513795]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [5.4768407e-01 3.8962797e-05 2.3315060e-05 1.4490520e-05 1.0734767e-05
 7.7781124e-06 1.8932816e-06 6.7923946e-07 5.5611167e-07 5.4078345e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.5058259  0.16899924 0.15101448 0.08064435 0.02903415 0.02257132
 0.02238106 0.02127014 0.01680798 0.01577639]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.59765756 0.02719512 0.00978045 0.00446186 0.0028355  0.00266011
 0.00179066 0.00139295 0.0009228  0.00077998]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [6.4099711e-01 4.5662108e-03 3.7568647e-03 2.2659982e-03 1.0860605e-03
 6.6727743e-04 5.8546563e-04 5.7287276e-04 5.5135530e-04 3.7744018e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [6.8378639e-01 4.0180460e-02 4.7571687e-03 2.4044602e-03 3.0051297e-04
 2.2903721e-04 1.8885561e-04 7.5491582e-05 6.5256798e-05 5.0756171e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [6.3830316e-01 5.8761185e-01 3.7370072e-04 2.5423971e-04 1.3064693e-04
 8.9450354e-05 2.4913294e-05 2.4457166e-05 1.7422299e-05 1.1003038e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [8.3738130e-01 2.1775834e-02 1.0261407e-02 2.4347703e-03 6.1582244e-04
 3.6858386e-04 1.7506837e-04 1.6124119e-04 7.9927428e-05 6.0727692e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [9.4984949e-01 6.0397979e-02 4.4803906e-02 9.9309988e-04 8.5615786e-04
 7.8765914e-04 7.6727936e-04 6.4747594e-04 2.6963229e-04 2.0045630e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [1.2321334e+00 1.7219773e-02 4.0535219e-03 1.7058733e-03 4.8081137e-04
 3.1214987e-04 2.6797550e-04 2.4773096e-04 2.0704068e-04 1.9291246e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [1.9515489e+00 5.2796713e-05 4.0382070e-06 2.8624693e-06 1.2649134e-06
 4.0683403e-07 3.7283093e-07 2.4079856e-07 2.1466799e-07 2.0838107e-07]  taking action:  0
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1343

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.848949  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.805381

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  53.0
Iteration TIME (sec):  4.984528822002176
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.40379185 -0.32508227 -0.64264788 -0.66152054 -0.49432581 -0.49575981
 -0.49904272 -0.49804081 -0.49809706 -0.49812072]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09105384 -0.05890298 -0.2663162  -0.02618107 -0.45962048 -0.46086043
 -0.46623486 -0.47116053 -0.4744668   0.02995359]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.06915545  0.18476215 -0.36590874  0.06324083  0.03715497  0.02194149
  0.01735251  0.01220576  0.00594489  0.00530645]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [5.2548677e-01 4.0695315e-05 2.4351786e-05 1.5134853e-05 1.1212098e-05
 8.1239732e-06 1.9774682e-06 7.0944247e-07 5.8083970e-07 5.6482986e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.48355848 0.17724791 0.15838534 0.08458052 0.03045128 0.023673
 0.02347346 0.02230831 0.01762835 0.01654642]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.56689185 0.02866617 0.0103095  0.00470321 0.00298888 0.00280401
 0.00188753 0.0014683  0.00097272 0.00082217]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [6.0284555e-01 4.8431978e-03 3.9847568e-03 2.4034537e-03 1.1519411e-03
 7.0775457e-04 6.2098005e-04 6.0762331e-04 5.8480055e-04 4.0033576e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [6.3592398e-01 4.2954717e-02 5.0856271e-03 2.5704762e-03 3.2126185e-04
 2.4485108e-04 2.0189515e-04 8.0703896e-05 6.9762449e-05 5.4260629e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.8586365e-01 6.3469338e-01 4.0364292e-04 2.7461030e-04 1.4111481e-04
 9.6617434e-05 2.6909434e-05 2.6416761e-05 1.8818233e-05 1.1884639e-05]  taking action:  1
Adding child.
Leaf selection - depth:  9
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  92

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  5.371543  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793386

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  54.0
Iteration TIME (sec):  6.495749317997252
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.39913462 -0.31055304 -0.6424265  -0.66147311 -0.49427351 -0.49572073
 -0.49626886 -0.49802276 -0.49807952 -0.4981034 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09581651 -0.04885668 -0.26245344 -0.02496085 -0.458953   -0.46021345
 -0.46567672 -0.4706838  -0.47404474  0.03044872]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0918014   0.18088673 -0.3617819   0.06518716  0.03829846  0.02261677
  0.01788656  0.01258141  0.00612785  0.00546976]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [5.0629580e-01 4.2357024e-05 2.5346142e-05 1.5752854e-05 1.1669921e-05
 8.4556996e-06 2.0582140e-06 7.3841113e-07 6.0455710e-07 5.8789357e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.46459857 0.1851294  0.16542809 0.08834147 0.03180532 0.02472564
 0.02451723 0.02330027 0.01841222 0.01728217]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.5412004  0.03006534 0.0108127  0.00493277 0.00313477 0.00294087
 0.00197965 0.00153997 0.0010202  0.0008623 ]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [5.7175285e-01 5.1051788e-03 4.2003025e-03 2.5334628e-03 1.2142526e-03
 7.4603886e-04 6.5457047e-04 6.4049120e-04 6.1643397e-04 4.2199096e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.9813726e-01 4.5560356e-02 5.3941221e-03 2.7264014e-03 3.4074966e-04
 2.5970378e-04 2.1414213e-04 8.5599400e-05 7.3994248e-05 5.7552083e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [6.20560825e-01 3.89257908e-01 4.31512424e-04 2.93570745e-04
 1.50858090e-04 1.03288381e-04 2.87673956e-05 2.82407036e-05
 2.01175371e-05 1.27052135e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [7.4811751e-01 2.3854231e-02 1.1240808e-02 2.6671572e-03 6.7459967e-04
 4.0376338e-04 1.9177780e-04 1.7663087e-04 8.7556109e-05 6.6523855e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [8.1557131e-01 6.7526989e-02 5.0092287e-02 1.1103194e-03 9.5721358e-04
 8.8062970e-04 8.5784437e-04 7.2390010e-04 3.0145806e-04 2.2411696e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [9.7667336e-01 1.9883681e-02 4.6806037e-03 1.9697726e-03 5.5519311e-04
 3.6043962e-04 3.0943143e-04 2.8605506e-04 2.3906997e-04 2.2275611e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [1.2450747e+00 6.4662505e-05 4.9457735e-06 3.5057947e-06 1.5491962e-06
 4.9826792e-07 4.5662279e-07 2.9491679e-07 2.6291352e-07 2.5521365e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [1.7614242e+00 1.8857346e-01 9.1266731e-04 1.9221545e-04 1.6629531e-04
 6.1032097e-05 3.4381443e-05 2.7323998e-05 2.5073527e-05 2.4708539e-05]  taking action:  0
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  287

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.463074  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.801481

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  55.0
Iteration TIME (sec):  4.598056759998144
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.39451954 -0.29693906 -0.64220713 -0.6614261  -0.49422169 -0.495682
 -0.49352011 -0.49800486 -0.49806214 -0.49808624]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09998596 -0.03897107 -0.25865242 -0.02376014 -0.45829618 -0.45957682
 -0.4651275  -0.47021472 -0.47362942  0.03093593]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.11379051  0.17749372 -0.35777476  0.06707703  0.03940879  0.02327246
  0.01840512  0.01294616  0.00630551  0.00562834]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.89490151e-01 4.39559590e-05 2.63029324e-05 1.63475088e-05
 1.21104495e-05 8.77489310e-06 2.13590943e-06 7.66285439e-07
 6.27378540e-07 6.10085920e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.4482026  0.19268878 0.172183   0.09194872 0.03310403 0.02573526
 0.02551834 0.02425169 0.01916404 0.01798785]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.51933044 0.03140222 0.0112935  0.00515211 0.00327416 0.00307163
 0.00206768 0.00160844 0.00106556 0.00090065]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [5.4578882e-01 5.3543570e-03 4.4053146e-03 2.6571183e-03 1.2735189e-03
 7.8245217e-04 6.8651937e-04 6.7175284e-04 6.4652140e-04 4.4258789e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.6734133e-01 4.8024833e-02 5.6859041e-03 2.8738796e-03 3.5918166e-04
 2.7375182e-04 2.2572563e-04 9.0229696e-05 7.7996789e-05 6.0665225e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.7412785e-01 4.0983734e-01 4.5768803e-04 3.1137880e-04 1.6000915e-04
 1.0955386e-04 3.0512429e-05 2.9953790e-05 2.1337870e-05 1.3475914e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [6.84707880e-01 2.57655159e-02 1.21414615e-02 2.88085919e-03
 7.28650950e-04 4.36114322e-04 2.07143705e-04 1.90783161e-04
 9.45714128e-05 7.18539814e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [7.2900420e-01 7.3972113e-02 5.4873351e-02 1.2162940e-03 1.0485749e-03
 9.6468150e-04 9.3972142e-04 7.9299283e-04 3.3023077e-04 2.4550784e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [8.3806378e-01 2.2230631e-02 5.2330741e-03 2.2022726e-03 6.2072475e-04
 4.0298374e-04 3.4595485e-04 3.1981926e-04 2.6728836e-04 2.4904890e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [9.8663557e-01 7.4665826e-05 5.7108873e-06 4.0481427e-06 1.7888577e-06
 5.7535021e-07 5.2726256e-07 3.4054057e-07 3.0358638e-07 2.9469533e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [1.1286476e+00 2.3095439e-01 1.1177846e-03 2.3541489e-04 2.0366933e-04
 7.4748750e-05 4.2108499e-05 3.3464927e-05 3.0708674e-05 3.0261657e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [1.9485652e+00 2.7876860e-03 1.1900960e-04 3.6469643e-05 3.1207470e-05
 2.1482294e-05 7.5015159e-06 5.6967601e-06 5.3645290e-06 5.2905548e-06]  taking action:  0
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  17

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.086997  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.804188

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  56.0
Iteration TIME (sec):  4.220563148999645
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.38994548 -0.28415693 -0.6419897  -0.66137952 -0.49417032 -0.49564362
 -0.49079579 -0.49798713 -0.49804492 -0.49806923]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10365868 -0.02923876 -0.25491038 -0.02257806 -0.4576496  -0.45895007
 -0.46458682 -0.4697529  -0.47322056  0.03141559]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.1351769   0.1744921  -0.35387745  0.0689151   0.04048869  0.02391018
  0.01890946  0.01330092  0.0064783   0.00578257]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.7461414e-01 4.5498742e-05 2.7226124e-05 1.6921280e-05 1.2535506e-05
 9.0828780e-06 2.2108763e-06 7.9318079e-07 6.4939849e-07 6.3149895e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.4338414  0.19996259 0.17868273 0.09541968 0.03435367 0.02670674
 0.02648163 0.02516717 0.01988746 0.01866687]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.5004221  0.03268447 0.01175464 0.00536249 0.00340785 0.00319706
 0.00215211 0.00167412 0.00110907 0.00093742]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [5.2368718e-01 5.5924430e-03 4.6012010e-03 2.7752696e-03 1.3301470e-03
 8.1724464e-04 7.1704609e-04 7.0162298e-04 6.7526958e-04 4.6226796e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.4162472e-01 5.0368872e-02 5.9634270e-03 3.0141505e-03 3.7671294e-04
 2.8711333e-04 2.3674306e-04 9.4633710e-05 8.1803730e-05 6.3626227e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.3797895e-01 4.2930186e-01 4.8244555e-04 3.2822209e-04 1.6866447e-04
 1.1547991e-04 3.2162923e-05 3.1574065e-05 2.2492090e-05 1.4204860e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [6.3676834e-01 2.7544497e-02 1.2979768e-02 3.0797680e-03 7.7896065e-04
 4.6622581e-04 2.2144594e-04 2.0395577e-04 1.0110110e-04 7.6815137e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [6.6750389e-01 7.9899020e-02 5.9269994e-02 1.3137477e-03 1.1325905e-03
 1.0419751e-03 1.0150152e-03 8.5653021e-04 3.5669003e-04 2.6517877e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [7.4871558e-01 2.4352435e-02 5.7325456e-03 2.4124689e-03 6.7996990e-04
 4.4144658e-04 3.7897454e-04 3.5034446e-04 2.9279973e-04 2.7281939e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [8.4641737e-01 8.3478932e-05 6.3849657e-06 4.5259612e-06 2.0000036e-06
 6.4326105e-07 5.8949746e-07 3.8073594e-07 3.3941987e-07 3.2947938e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [8.9700997e-01 2.6668316e-01 1.2907065e-03 2.7183371e-04 2.3517708e-04
 8.6312415e-05 4.8622704e-05 3.8641967e-05 3.5459321e-05 3.4943150e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [1.2432476e+00 3.4142041e-03 1.4575641e-04 4.4666009e-05 3.8221187e-05
 2.6310330e-05 9.1874435e-06 6.9770776e-06 6.5701793e-06 6.4795800e-06]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [1.9516028e+00 4.4330263e-06 2.7437022e-06 8.5277821e-07 5.1267875e-07
 4.2413160e-07 3.5562650e-07 3.4743877e-07 2.9046430e-07 2.5585322e-07]  taking action:  0
Adding child.
Leaf selection - depth:  16
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1343

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  2.706308  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.798943

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  57.0
Iteration TIME (sec):  3.839013951997913
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.38541137 -0.27213307 -0.64177418 -0.66133334 -0.49411941 -0.49560557
 -0.48809526 -0.49796955 -0.49802784 -0.49805236]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10691166 -0.01965284 -0.2512246  -0.02141375 -0.4570127  -0.45833275
 -0.46405426 -0.46929803 -0.47281784  0.03188803]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.15600741  0.17181294 -0.35008144  0.07070539  0.04154051  0.02453133
  0.0194007   0.01364645  0.00664659  0.00593279]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.6132517e-01 4.6990899e-05 2.8119019e-05 1.7476223e-05 1.2946615e-05
 9.3807557e-06 2.2833833e-06 8.1919359e-07 6.7069590e-07 6.5220934e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.42112663 0.20698096 0.18495421 0.09876876 0.03555943 0.02764411
 0.02741109 0.0260505  0.02058548 0.01932205]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.4838636  0.03391827 0.01219837 0.00556492 0.00353649 0.00331774
 0.00223335 0.00173732 0.00115094 0.00097281]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [5.0457889e-01 5.8207996e-03 4.7890814e-03 2.8885920e-03 1.3844609e-03
 8.5061515e-04 7.4632518e-04 7.3027232e-04 7.0284284e-04 4.8114374e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.1973325e-01 5.2608572e-02 6.2285960e-03 3.1481774e-03 3.9346382e-04
 2.9988011e-04 2.4727004e-04 9.8841687e-05 8.5441206e-05 6.6455425e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.0885898e-01 4.4781518e-01 5.0599320e-04 3.4424223e-04 1.7689679e-04
 1.2111636e-04 3.3732762e-05 3.3115164e-05 2.3589904e-05 1.4898184e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.9892094e-01 2.9215349e-02 1.3767122e-02 3.2665872e-03 8.2621246e-04
 4.9450714e-04 2.3487887e-04 2.1632775e-04 1.0723390e-04 8.1474747e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [6.2100393e-01 8.5415639e-02 6.3362293e-02 1.4044554e-03 1.2107901e-03
 1.1139183e-03 1.0850969e-03 9.1566925e-04 3.8131766e-04 2.8348804e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [6.8524617e-01 2.6303638e-02 6.1918572e-03 2.6057644e-03 7.3445146e-04
 4.7681681e-04 4.0933932e-04 3.7841528e-04 3.1625986e-04 2.9467864e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [7.5603634e-01 9.1446585e-05 6.9943799e-06 4.9579421e-06 2.1908943e-06
 7.0465723e-07 6.4576210e-07 4.1707531e-07 3.7181584e-07 3.6092658e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [7.7126396e-01 2.9816082e-01 1.4430537e-03 3.0391931e-04 2.6293597e-04
 9.6500211e-05 5.4361833e-05 4.3203032e-05 3.9644725e-05 3.9067629e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [9.85229135e-01 3.94238299e-03 1.68304992e-04 5.15758657e-05
 4.41340235e-05 3.03805518e-05 1.06087455e-05 8.05643504e-06
 7.58658916e-06 7.48197408e-06]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [1.2451078e+00 5.4293264e-06 3.3603351e-06 1.0444357e-06 6.2790065e-07
 5.1945301e-07 4.3555173e-07 4.2552387e-07 3.5574467e-07 3.1335492e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [1.9444607e+00 5.5103921e-03 9.9280989e-04 5.4737891e-04 1.8851561e-05
 1.6333097e-05 1.5160374e-05 1.1832882e-05 1.0469124e-05 6.0779548e-06]  taking action:  0
Adding child.
Leaf selection - depth:  17
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  269

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  2.318407  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793314

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  58.0
Iteration TIME (sec):  3.4571507860018755
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.38091619 -0.26080233 -0.64156051 -0.66128756 -0.49406893 -0.49556785
 -0.48541792 -0.49795212 -0.49801091 -0.49803564]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10980706 -0.01020688 -0.24759266 -0.02026644 -0.4563851  -0.45772442
 -0.46352947 -0.4688498  -0.472421    0.03235357]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.17632347  0.16940303 -0.34637916  0.07245147  0.04256636  0.02513713
  0.0198798   0.01398345  0.00681073  0.0060793 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.14704818 0.6886488  0.16878769 0.03857858 0.03637529 0.03306302
 0.02793441 0.01890108 0.01013757 0.00873527]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  5066

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire [63:0] sum_temp_1;
    wire [63:0] sum_temp_2;
    wire [63:0] sum_temp_3;
    wire [63:0] sum_temp_4;
    wire [63:0] sum_temp_5;
    wire [63:0] sum_temp_6;
    wire [63:0] sum_temp_7;
    wire [63:0] sum_temp_8;
    wire [63:0] sum_temp_9;
    wire [63:0] sum_temp_10;
    wire [63:0] sum_temp_11;
    wire [63:0] sum_temp_12;
    wire [63:0] sum_temp_13;
    wire [63:0] sum_temp_14;
    wire [63:0] sum_temp_15;
    wire [63:0] sum_temp_16;
    wire [63:0] sum_temp_17;
    wire [63:0] sum_temp_18;
    wire [63:0] sum_temp_19;
    wire [63:0] sum_temp_20;
    wire [63:0] sum_temp_21;
    wire [63:0] sum_temp_22;
    wire [63:0] sum_temp_23;
    wire [63:0] sum_temp_24;
    wire [63:0] sum_temp_25;
    wire [63:0] sum_temp_26;
    wire [63:0] sum_temp_27;
    wire [63:0] sum_temp_28;
    wire [63:0] sum_temp_29;
    wire [63:0] sum_temp_30;
    wire [63:0] sum_temp_31;
    wire [63:0] sum_temp_32;
    wire [63:0] sum_temp_33;
    wire [63:0] sum_temp_34;
    wire [63:0] sum_temp_35;
    wire [63:0] sum_temp_36;
    wire [63:0] sum_temp_37;
    wire [63:0] sum_temp_38;
    wire [63:0] sum_temp_39;
    wire [63:0] sum_temp_40;
    wire [63:0] sum_temp_41;
    wire [63:0] sum_temp_42;
    wire [63:0] sum_temp_43;
    wire [63:0] sum_temp_44;
    wire [63:0] sum_temp_45;
    wire [63:0] sum_temp_46;
    wire [63:0] sum_temp_47;
    wire [63:0] sum_temp_48;
    wire [63:0] sum_temp_49;
    wire [63:0] sum_temp_50;
    wire [63:0] sum_temp_51;
    wire [63:0] sum_temp_52;
    wire [63:0] sum_temp_53;
    wire [63:0] sum_temp_54;
    wire [63:0] sum_temp_55;
    wire [63:0] sum_temp_56;
    wire [63:0] sum_temp_57;
    wire [63:0] sum_temp_58;
    wire [63:0] sum_temp_59;
    wire [63:0] sum_temp_60;
    wire [63:0] sum_temp_61;
    wire [63:0] sum_temp_62;
    wire [63:0] sum_temp_63;
    wire [63:0] sum_temp_64;
    wire [63:0] sum_temp_65;
    wire [63:0] sum_temp_66;
    wire [63:0] sum_temp_67;
    wire [63:0] sum_temp_68;
    wire [63:0] sum_temp_69;
    wire [63:0] sum_temp_70;
    wire [63:0] sum_temp_71;
    wire [63:0] sum_temp_72;
    wire [
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:83: syntax error\nI give up.\n'
LLM generates return in:  1347.9647  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  59.0
Iteration TIME (sec):  1347.510132110001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.37645894 -0.28066239 -0.64134864 -0.66124217 -0.49401888 -0.49553045
 -0.48276317 -0.49793484 -0.49799413 -0.49801907]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06239556 -0.00089496 -0.24401224 -0.01913542 -0.45576644 -0.45712474
 -0.46301213 -0.46840796 -0.47202978  0.03281251]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.10287911  0.17117469 -0.34276408  0.07415644  0.04356806  0.02572867
  0.02034763  0.01431252  0.006971    0.00622236]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.4935995e-01 4.8437108e-05 2.8984421e-05 1.8014078e-05 1.3345065e-05
 9.6694621e-06 2.3536577e-06 8.4440541e-07 6.9133750e-07 6.7228194e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.40976626 0.213769   0.1910199  0.10200794 0.03672562 0.02855071
 0.02831005 0.02690484 0.02126059 0.01995573]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.4692061  0.03510875 0.01262651 0.00576023 0.00366062 0.00343419
 0.00231174 0.0017983  0.00119133 0.00100695]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.48784542 0.00604053 0.00496986 0.00299763 0.00143672 0.00088273
 0.0007745  0.00075784 0.00072937 0.00049931]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.0080645e-01 5.4756735e-02 6.4829281e-03 3.2767269e-03 4.0953013e-04
 3.1212511e-04 2.5736683e-04 1.0287768e-04 8.8930028e-05 6.9169000e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.8477998e-01 4.6550438e-01 5.2849267e-04 3.5954927e-04 1.8476267e-04
 1.2650191e-04 3.5232719e-05 3.4587658e-05 2.4638852e-05 1.5560647e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.6807560e-01 3.0795682e-02 1.4511822e-02 3.4432854e-03 8.7090442e-04
 5.2125630e-04 2.4758407e-04 2.2802949e-04 1.1303445e-04 8.5881926e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [5.8429039e-01 9.0596966e-02 6.7205854e-02 1.4896498e-03 1.2842368e-03
 1.1814887e-03 1.1509190e-03 9.7121391e-04 4.0444845e-04 3.0068445e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [6.3726163e-01 2.8119773e-02 6.6193738e-03 2.7856792e-03 7.8516168e-04
 5.0973863e-04 4.3760214e-04 4.0454295e-04 3.3809600e-04 3.1502472e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [6.9183558e-01 9.8773606e-05 7.5547941e-06 5.3551898e-06 2.3664363e-06
 7.6111678e-07 6.9750280e-07 4.5049285e-07 4.0160702e-07 3.8984527e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [6.90175176e-01 3.26618820e-01 1.58078608e-03 3.32926924e-04
 2.88031908e-04 1.05710686e-04 5.95504061e-05 4.73265500e-05
 4.34286230e-05 4.27964442e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [8.4523803e-01 4.4077183e-03 1.8817070e-04 5.7663568e-05 4.9343336e-05
 3.3966488e-05 1.1860938e-05 9.0073681e-06 8.4820640e-06 8.3651012e-06]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [9.8666108e-01 6.2692461e-06 3.8801809e-06 1.2060106e-06 7.2503718e-07
 5.9981261e-07 5.0293181e-07 4.9135264e-07 4.1077857e-07 3.6183107e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [1.24073410e+00 6.74882485e-03 1.21593883e-03 6.70399517e-04
 2.30883525e-05 2.00038776e-05 1.85675908e-05 1.44922615e-05
 1.28220072e-05 7.44394447e-06]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [1.9473755e+00 1.4993065e-03 9.1682939e-04 5.9544633e-04 2.5304127e-04
 2.3907440e-04 2.2916954e-04 1.0661113e-04 1.0017635e-04 4.1331808e-05]  taking action:  0
Adding child.
Leaf selection - depth:  18
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  259

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  1.950573  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.803166

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  60.0
Iteration TIME (sec):  3.0866462849953678
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.37203868 -0.26972459 -0.64113853 -0.66119715 -0.49396924 -0.49549335
 -0.48013045 -0.4979177  -0.49797748 -0.49800263]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06689288  0.00828862 -0.2404812  -0.01801999 -0.4551563  -0.4565333
 -0.46250194 -0.46797216 -0.47164395  0.03326512]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.08833522  0.16885617 -0.33923024  0.07582309  0.04454724  0.02630692
  0.02080493  0.01463419  0.00712767  0.00636221]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.3851259e-01 4.9841376e-05 2.9824723e-05 1.8536333e-05 1.3731959e-05
 9.9497947e-06 2.4218937e-06 8.6888599e-07 7.1138044e-07 6.9177247e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.39953583 0.22034805 0.19689879 0.10514738 0.0378559  0.0294294
 0.02918133 0.02773287 0.02191492 0.02056989]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.4561121  0.03626016 0.01304061 0.00594914 0.00378067 0.00354682
 0.00238755 0.00185727 0.0012304  0.00103998]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.4730333  0.00625254 0.0051443  0.00310285 0.00148715 0.00091371
 0.00080168 0.00078444 0.00075497 0.00051683]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.8423177e-01 5.6823745e-02 6.7276522e-03 3.4004201e-03 4.2498947e-04
 3.2390750e-04 2.6708216e-04 1.0676121e-04 9.2287046e-05 7.1780058e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.6445456e-01 4.8247066e-01 5.5007258e-04 3.7423076e-04 1.9230708e-04
 1.3166736e-04 3.6671376e-05 3.5999976e-05 2.5644929e-05 1.6196034e-05]  taking action:  1
Leaf selection - depth:  9
Leaf selection - action scores:  [1.9426512e+00 4.7346959e-03 1.9402117e-03 8.7873545e-04 7.1212131e-04
 1.7757232e-04 1.4752295e-04 7.7736753e-05 6.6931520e-05 4.7138939e-05]  taking action:  0
Adding child.
Leaf selection - depth:  10
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  796

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  5.008922  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.802624

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  61.0
Iteration TIME (sec):  6.129534277002676
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.3676545  -0.25936765 -0.64093013 -0.6611525  -0.49392001 -0.49545657
 -0.47751923 -0.4979007  -0.49796097 -0.49798632]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07097857  0.01734877 -0.23699757 -0.01691954 -0.45455432 -0.45594987
 -0.46199858 -0.46754226 -0.47126332  0.03371165]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.07410425  0.16674834 -0.33577245  0.07745388  0.04550536  0.02687272
  0.0212524   0.01494894  0.00728097  0.00649905]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.2861927e-01 5.1207146e-05 3.0641993e-05 1.9044273e-05 1.4108247e-05
 1.0222442e-05 2.4882595e-06 8.9269554e-07 7.3087392e-07 7.1072867e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.39025983 0.22673628 0.20260718 0.10819576 0.0389534  0.0302826
 0.03002734 0.02853689 0.02255026 0.02116624]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.4443223  0.03737612 0.01344195 0.00613224 0.00389703 0.00365598
 0.00246103 0.00191443 0.00126827 0.00107198]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.45980132 0.0064576  0.00531301 0.00320461 0.00153592 0.00094367
 0.00082797 0.00081016 0.00077973 0.00053378]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.6955997e-01 5.8818169e-02 6.9637820e-03 3.5197693e-03 4.3990591e-04
 3.3527613e-04 2.7645630e-04 1.1050836e-04 9.5526171e-05 7.4299423e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.7855556e-01 3.6586398e-01 5.7083723e-04 3.8835758e-04 1.9956648e-04
 1.3663767e-04 3.8055685e-05 3.7358939e-05 2.6612999e-05 1.6807417e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.4231775e-01 3.2298785e-02 1.5220128e-02 3.6113483e-03 9.1341237e-04
 5.4669828e-04 2.5966839e-04 2.3915936e-04 1.1855154e-04 9.0073736e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [5.5436718e-01 9.5497586e-02 7.0841193e-02 1.5702288e-03 1.3537045e-03
 1.2453984e-03 1.2131751e-03 1.0237494e-03 4.2632609e-04 3.1694924e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [5.9937871e-01 2.9825520e-02 7.0209056e-03 2.9546591e-03 8.3278969e-04
 5.4065941e-04 4.6414713e-04 4.2908257e-04 3.5860494e-04 3.3413415e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [6.43299699e-01 1.05593426e-04 8.07641391e-06 5.72493855e-06
 2.52982682e-06 8.13668066e-07 7.45661850e-07 4.81597112e-07
 4.29335984e-07 4.16762134e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [6.3255382e-01 3.5278866e-01 1.7074442e-03 3.5960219e-04 3.1111005e-04
 1.1418060e-04 6.4321794e-05 5.1118521e-05 4.6908273e-05 4.6225443e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [7.5500274e-01 4.8284135e-03 2.0613067e-04 6.3167274e-05 5.4052918e-05
 3.7208425e-05 1.2993006e-05 9.8670771e-06 9.2916362e-06 9.1635093e-06]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [8.4643871e-01 7.0092301e-06 4.3381738e-06 1.3483607e-06 8.1061620e-07
 6.7061092e-07 5.6229482e-07 5.4934890e-07 4.5926438e-07 4.0453943e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [9.8329425e-01 7.7928714e-03 1.4040451e-03 7.7411061e-04 2.6660133e-05
 2.3098488e-05 2.1440006e-05 1.6734220e-05 1.4805578e-05 8.5955262e-06]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [1.2425190e+00 1.8362680e-03 1.1228821e-03 7.2926987e-04 3.0991100e-04
 2.9280514e-04 2.8067423e-04 1.3057144e-04 1.2269047e-04 5.0620922e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [1.9514729e+00 7.3796960e-05 1.2923386e-05 8.1729067e-06 5.1469642e-06
 4.2260317e-06 4.0396831e-06 3.9973743e-06 3.7344716e-06 3.6125939e-06]  taking action:  0
Adding child.
Leaf selection - depth:  19
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  26

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  1.560076  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.799435

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  62.0
Iteration TIME (sec):  2.696768768997572
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.36330555 -0.24954675 -0.64072341 -0.66110821 -0.49387118 -0.49542007
 -0.47492898 -0.49788384 -0.49794459 -0.49797015]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07470343  0.02629054 -0.23355949 -0.01583347 -0.45396024 -0.455374
 -0.4615018  -0.46711794 -0.47088766  0.03415234]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.06016678  0.16482162 -0.33238596  0.07905104  0.04644371  0.02742686
  0.02169064  0.0152572   0.00743111  0.00663306]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.19547915e-01 5.25374198e-05 3.14380195e-05 1.95390112e-05
 1.44747555e-05 1.04880037e-05 2.55290024e-06 9.15886233e-07
 7.49860760e-07 7.29192152e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.38179845 0.23294939 0.2081591  0.11116058 0.04002082 0.03111241
 0.03085017 0.02931887 0.0231682  0.02174625]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.43363383 0.03845971 0.01383165 0.00631002 0.00401001 0.00376197
 0.00253238 0.00196993 0.00130504 0.00110306]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.44788736 0.00665634 0.00547652 0.00330323 0.00158319 0.00097272
 0.00085346 0.0008351  0.00080373 0.00055021]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.5645326e-01 6.0747143e-02 7.1921628e-03 3.6352021e-03 4.5433288e-04
 3.4627170e-04 2.8552284e-04 1.1413254e-04 9.8659002e-05 7.6736113e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.5948121e-01 3.7636533e-01 5.9087272e-04 4.0198831e-04 2.0657094e-04
 1.4143344e-04 3.9391376e-05 3.8670176e-05 2.7547072e-05 1.7397331e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.2039135e-01 3.3734981e-02 1.5896905e-02 3.7719302e-03 9.5402804e-04
 5.7100767e-04 2.7121478e-04 2.4979378e-04 1.2382305e-04 9.4078940e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [5.2937800e-01 1.0015872e-01 7.4298874e-02 1.6468699e-03 1.4197773e-03
 1.3061850e-03 1.2723889e-03 1.0737175e-03 4.4713460e-04 3.3241921e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [5.6850451e-01 3.1438861e-02 7.4006845e-03 3.1144840e-03 8.7783742e-04
 5.6990510e-04 4.8925402e-04 4.5229273e-04 3.7800282e-04 3.5220833e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [6.04982495e-01 1.11998736e-04 8.56633051e-06 6.07221409e-06
 2.68328654e-06 8.63025264e-07 7.90893807e-07 5.10810878e-07
 4.55379535e-07 4.42042989e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [5.8897835e-01 3.7714693e-01 1.8253346e-03 3.8443090e-04 3.3259063e-04
 1.2206419e-04 6.8762885e-05 5.4647997e-05 5.0147053e-05 4.9417078e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [6.9090527e-01 5.2152830e-03 2.2264659e-04 6.8228459e-05 5.8383826e-05
 4.0189694e-05 1.4034052e-05 1.0657662e-05 1.0036115e-05 9.8977216e-06]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [7.5605506e-01 7.6782271e-06 4.7522312e-06 1.4770552e-06 8.8798561e-07
 7.3461740e-07 6.1596313e-07 6.0178161e-07 5.0309893e-07 4.4315075e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [8.4361553e-01 8.7126950e-03 1.5697702e-03 8.6548197e-04 2.9806934e-05
 2.5824895e-05 2.3970653e-05 1.8709428e-05 1.6553138e-05 9.6100903e-06]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [9.8466825e-01 2.1203395e-03 1.2965925e-03 8.4208825e-04 3.5785438e-04
 3.3810225e-04 3.2409467e-04 1.5077091e-04 1.4167075e-04 5.8452006e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [1.2450281e+00 9.0382448e-05 1.5827851e-05 1.0009726e-05 6.3037182e-06
 5.1758111e-06 4.9475811e-06 4.8957636e-06 4.5737752e-06 4.4245057e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [1.9467849e+00 4.4932179e-03 2.3269361e-04 1.6984326e-05 7.9945994e-06
 5.8079745e-06 5.6820963e-06 5.1390675e-06 3.7182876e-06 3.6453680e-06]  taking action:  0
Adding child.
Leaf selection - depth:  20
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  1.175733  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.800461

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  63.0
Iteration TIME (sec):  2.3126027710022754
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.35899097 -0.24022156 -0.64051832 -0.66106427 -0.49382273 -0.49538387
 -0.47235921 -0.49786711 -0.49792834 -0.4979541 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07811037  0.03511834 -0.23016521 -0.01476125 -0.45337373 -0.45480552
 -0.46101138 -0.46669906 -0.4705168   0.03458742]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.04650539  0.16305177 -0.32906654  0.08061656  0.04736347  0.02797002
  0.0221202   0.01555935  0.00757828  0.00676442]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.11190689e-01 5.38348395e-05 3.22143860e-05 2.00215291e-05
 1.48322115e-05 1.07470069e-05 2.61594437e-06 9.38504172e-07
 7.68378698e-07 7.47199692e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.37403905 0.239001   0.21356672 0.11404834 0.04106049 0.03192066
 0.0316516  0.03008052 0.02377007 0.02231118]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.4238853  0.0395136  0.01421067 0.00648293 0.00411989 0.00386506
 0.00260177 0.00202392 0.0013408  0.00113329]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.43708646 0.00684932 0.0056353  0.003399   0.00162909 0.00100092
 0.0008782  0.00085931 0.00082703 0.00056616]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.44651961e-01 6.26167208e-02 7.41351163e-03 3.74708045e-03
 4.68315586e-04 3.56928707e-04 2.94310215e-04 1.17645126e-04
 1.01695368e-04 7.90977720e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.4296360e-01 3.8652205e-01 6.1025075e-04 4.1517173e-04 2.1334554e-04
 1.4607182e-04 4.0683241e-05 3.9938386e-05 2.8450495e-05 1.7967886e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.0143433e-01 3.5112482e-02 1.6546022e-02 3.9259493e-03 9.9298381e-04
 5.9432362e-04 2.8228929e-04 2.5999363e-04 1.2887911e-04 9.7920463e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [5.0810480e-01 1.0461237e-01 7.7602640e-02 1.7200995e-03 1.4829090e-03
 1.3642657e-03 1.3289668e-03 1.1214613e-03 4.6701686e-04 3.4720052e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [5.4272264e-01 3.2973357e-02 7.7619040e-03 3.2664987e-03 9.2068367e-04
 5.9772155e-04 5.1313400e-04 4.7436866e-04 3.9645273e-04 3.6939923e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [5.7375509e-01 1.1805704e-04 9.0297053e-06 6.4006758e-06 2.8284323e-06
 9.0970855e-07 8.3367530e-07 5.3844195e-07 4.8001220e-07 4.6595423e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [5.5456805e-01 4.0002471e-01 1.9360597e-03 4.0775051e-04 3.5276561e-04
 1.2946862e-04 7.2934054e-05 5.7962952e-05 5.3188982e-05 5.2414725e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [6.4244723e-01 5.5753719e-03 2.3801920e-04 7.2939285e-05 6.2414940e-05
 4.2964588e-05 1.5003032e-05 1.1393520e-05 1.0729058e-05 1.0581110e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [6.9185245e-01 8.2934330e-06 5.1329966e-06 1.5954020e-06 9.5913413e-07
 7.9347757e-07 6.6531624e-07 6.4999841e-07 5.4340899e-07 4.7865751e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [7.5358093e-01 9.5442794e-03 1.7195971e-03 9.4808801e-04 3.2651860e-05
 2.8289754e-05 2.6258536e-05 2.0495152e-05 1.8133054e-05 1.0527327e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [8.4476769e-01 2.3706115e-03 1.4496346e-03 9.4148330e-04 4.0009335e-04
 3.7800980e-04 3.6234883e-04 1.6856700e-04 1.5839271e-04 6.5351327e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [9.8659974e-01 1.0436466e-04 1.8276427e-05 1.1558235e-05 7.2789067e-06
 5.9765116e-06 5.7129746e-06 5.6531408e-06 5.2813402e-06 5.1089792e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [1.2421573e+00 5.5030459e-03 2.8499030e-04 2.0801468e-05 9.7913444e-06
 7.1132872e-06 6.9591183e-06 6.2940467e-06 4.5539541e-06 4.4646458e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [1.6544687e+00 1.2395220e-01 3.9426938e-02 2.3771036e-02 1.2754819e-02
 1.2417978e-02 4.4101682e-03 1.6508537e-03 1.1785524e-03 1.0321010e-03]  taking action:  0
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  0.792565  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.797693

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  64.0
Iteration TIME (sec):  1.929757216006692
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.35470997 -0.23135573 -0.64031483 -0.66102067 -0.49377465 -0.49534794
 -0.46980944 -0.49785051 -0.49791222 -0.49793818]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08123581  0.04383647 -0.22681311 -0.01370234 -0.4527945  -0.45424408
 -0.460527   -0.46628535 -0.47015053  0.0350171 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.03310424  0.16141886 -0.32581037  0.08215225  0.04826572  0.02850283
  0.02254158  0.01585574  0.00772264  0.00689328]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [4.0345854e-01 5.5101711e-05 3.2972472e-05 2.0492687e-05 1.5181252e-05
 1.0999911e-05 2.6775042e-06 9.6058966e-07 7.8646065e-07 7.6478318e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3668896  0.24490318 0.21884078 0.11686478 0.04207449 0.03270895
 0.03243324 0.03082336 0.02435707 0.02286216]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.41494656 0.04054009 0.01457984 0.00665135 0.00422692 0.00396546
 0.00266936 0.00207649 0.00137563 0.00116273]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.42723545 0.007037   0.00578972 0.00349214 0.00167373 0.00102834
 0.00090226 0.00088286 0.0008497  0.00058167]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.33953077e-01 6.44320771e-02 7.62844086e-03 3.85571411e-03
 4.81892785e-04 3.67276603e-04 3.02842702e-04 1.21055840e-04
 1.04643674e-04 8.13909428e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.2848727e-01 3.9636606e-01 6.2903203e-04 4.2794921e-04 2.1991156e-04
 1.5056739e-04 4.1935324e-05 4.1167546e-05 2.9326098e-05 1.8520872e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.8483324e-01 3.6437940e-02 1.7170619e-02 4.0741498e-03 1.0304680e-03
 6.1675877e-04 2.9294542e-04 2.6980811e-04 1.3374416e-04 1.0161687e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [4.8971182e-01 1.0888401e-01 8.0771387e-02 1.7903363e-03 1.5434605e-03
 1.4199727e-03 1.3832325e-03 1.1672538e-03 4.8608656e-04 3.6137775e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [5.2077579e-01 3.4439545e-02 8.1070438e-03 3.4117466e-03 9.6162275e-04
 6.2429975e-04 5.3595100e-04 4.9546192e-04 4.1408135e-04 3.8582491e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [5.4767883e-01 1.2381928e-04 9.4704355e-06 6.7130859e-06 2.9664850e-06
 9.5411042e-07 8.7436609e-07 5.6472271e-07 5.0344107e-07 4.8869691e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [5.2651823e-01 4.2166308e-01 2.0407862e-03 4.2980679e-04 3.7184762e-04
 1.3647191e-04 7.6879245e-05 6.1098319e-05 5.6066110e-05 5.5249973e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [6.0419142e-01 5.9135747e-03 2.5245748e-04 7.7363795e-05 6.6201035e-05
 4.5570825e-05 1.5913118e-05 1.2084653e-05 1.1379883e-05 1.1222961e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [6.4331508e-01 8.8660527e-06 5.4874045e-06 1.7055564e-06 1.0253575e-06
 8.4826320e-07 7.1125299e-07 6.9487754e-07 5.8092860e-07 5.1170645e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [6.89625502e-01 1.03090005e-02 1.85737724e-03 1.02405215e-03
 3.52680436e-05 3.05564281e-05 2.83624613e-05 2.21372939e-05
 1.95859393e-05 1.13708129e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [7.5459063e-01 2.5968750e-03 1.5879951e-03 1.0313432e-03 4.3828032e-04
 4.1408898e-04 3.9693326e-04 1.8465589e-04 1.7351052e-04 7.1588795e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [8.4638733e-01 1.1668323e-04 2.0433667e-05 1.2922500e-05 8.1380649e-06
 6.6819430e-06 6.3872994e-06 6.3204034e-06 5.9047179e-06 5.7120124e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [9.84389842e-01 6.35436969e-03 3.29078437e-04 2.40194640e-05
 1.13060705e-05 8.21371668e-06 8.03569765e-06 7.26773851e-06
 5.25845280e-06 5.15532884e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [1.063151   0.15180983 0.04828794 0.02911345 0.0156214  0.01520886
 0.00540133 0.00202187 0.00144343 0.00126406]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [1.5001727  0.20700537 0.08992069 0.04146754 0.03060285 0.01800285
 0.00749967 0.00252518 0.00210623 0.00170497]  taking action:  0
Adding child.
Leaf selection - depth:  22
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  437

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  0.409134  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.798862

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  65.0
Iteration TIME (sec):  1.5454725329982466
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.35046178 -0.2229163  -0.64011289 -0.6609774  -0.49372695 -0.49531229
 -0.4672792  -0.49783404 -0.49789622 -0.49792238]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08411097  0.05244905 -0.22350162 -0.01265627 -0.4522223  -0.45368943
 -0.46004853 -0.4658767  -0.4697887   0.03544156]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.01994908  0.1599063  -0.32261395  0.08365975  0.0491514   0.02902586
  0.02295522  0.0161467   0.00786435  0.00701977]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.9627728e-01 5.6340108e-05 3.3713521e-05 2.0953255e-05 1.5522446e-05
 1.1247132e-05 2.7376805e-06 9.8217868e-07 8.0413611e-07 7.8197149e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.36027414 0.25066638 0.22399066 0.11961491 0.04306461 0.03347867
 0.03319648 0.03154872 0.02493026 0.02340016]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.40671146 0.04154123 0.01493989 0.0068156  0.0043313  0.00406339
 0.00273528 0.00212777 0.0014096  0.00119144]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.41820288 0.00721981 0.00594012 0.00358286 0.00171721 0.00105506
 0.0009257  0.00090579 0.00087177 0.00059679]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.2419508e-01 6.6197664e-02 7.8374781e-03 3.9613699e-03 4.9509777e-04
 3.7734085e-04 3.1114131e-04 1.2437305e-04 1.0751116e-04 8.3621242e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.1566986e-01 4.0592453e-01 6.4726861e-04 4.4035612e-04 2.2628713e-04
 1.5493257e-04 4.3151093e-05 4.2361055e-05 3.0176307e-05 1.9057821e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.70138073e-01 3.77168544e-02 1.77732799e-02 4.21714596e-03
 1.06663571e-03 6.38405967e-04 3.03227338e-04 2.79277941e-04
 1.38438380e-04 1.05183455e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [4.7360396e-01 1.1299427e-01 8.3820425e-02 1.8579197e-03 1.6017247e-03
 1.4735752e-03 1.4354482e-03 1.2113166e-03 5.0443585e-04 3.7501939e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [5.0180113e-01 3.5845816e-02 8.4380787e-03 3.5510582e-03 1.0008886e-03
 6.4979179e-04 5.5783545e-04 5.1569310e-04 4.3098952e-04 4.0157928e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [5.2548176e-01 1.2932501e-04 9.8915471e-06 7.0115893e-06 3.0983924e-06
 9.9653585e-07 9.1324557e-07 5.8983358e-07 5.2582703e-07 5.1042730e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [5.0309062e-01 4.4224399e-01 2.1403946e-03 4.5078521e-04 3.8999709e-04
 1.4313296e-04 8.0631638e-05 6.4080457e-05 5.8802634e-05 5.7946661e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [5.73013842e-01 6.23345515e-03 2.66113551e-04 8.15485982e-05
 6.97820215e-05 4.80358685e-05 1.67738999e-05 1.27383419e-05
 1.19954511e-05 1.18300395e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [6.0499680e-01 9.4038687e-06 5.8202709e-06 1.8090158e-06 1.0875558e-06
 8.9971894e-07 7.5439766e-07 7.3702893e-07 6.1616782e-07 5.4274659e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [6.4127451e-01 1.1020784e-02 1.9856198e-03 1.0947578e-03 3.7703121e-05
 3.2666194e-05 3.0320747e-05 2.3665763e-05 2.0938249e-05 1.2155910e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [6.9053429e-01 2.8049457e-03 1.7152308e-03 1.1139781e-03 4.7339688e-04
 4.4726726e-04 4.2873694e-04 1.9945117e-04 1.8741279e-04 7.7324738e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [7.5601000e-01 1.2782008e-04 2.2383960e-05 1.4155889e-05 8.9148034e-06
 7.3197016e-06 6.9969360e-06 6.9236548e-06 6.4682945e-06 6.2571958e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [8.4453422e-01 7.1044010e-03 3.6792087e-04 2.6854577e-05 1.2640570e-05
 9.1832135e-06 8.9841833e-06 8.1255785e-06 5.8791288e-06 5.7638326e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.84659064 0.17529488 0.05575811 0.03361732 0.01803804 0.01756167
 0.00623692 0.00233466 0.00166672 0.00145961]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.96866447 0.25352877 0.11012992 0.05078715 0.03748069 0.02204889
 0.00918518 0.0030927  0.0025796  0.00208816]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [1.9482651e+00 7.1279894e-05 5.1890715e-05 4.7364694e-05 3.7428556e-05
 3.6547022e-05 3.4502904e-05 3.4206732e-05 2.9532168e-05 2.5104964e-05]  taking action:  0
Adding child.
Leaf selection - depth:  23
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21412

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  0.029145  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.794826

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  66.0
Iteration TIME (sec):  1.166882170997269
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.34624565 -0.21487349 -0.63991248 -0.66093447 -0.4936796  -0.49527691
 -0.46476807 -0.49781769 -0.49788034 -0.4979067 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08676263  0.06095958 -0.22022933 -0.01162259 -0.45165685 -0.45314136
 -0.4595757  -0.46547285 -0.46943116  0.035861  ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.00702685  0.15850013 -0.31947413  0.08514058  0.05002141  0.02953963
  0.02336154  0.01643251  0.00800356  0.00714403]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.8958436e-01 5.7551861e-05 3.4438624e-05 2.1403914e-05 1.5856300e-05
 1.1489033e-05 2.7965621e-06 1.0033032e-06 8.2143134e-07 7.9878998e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.35412937 0.25630003 0.2290248  0.12230323 0.04403247 0.0342311
 0.03394256 0.03225777 0.02549056 0.02392607]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.39909226 0.04251881 0.01529147 0.00697599 0.00443323 0.00415901
 0.00279965 0.00217784 0.00144278 0.00121948]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.40988135 0.00739811 0.00608682 0.00367134 0.00175962 0.00108111
 0.00094856 0.00092816 0.0008933  0.00061152]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.15247679e-01 6.79173693e-02 8.04108288e-03 4.06427961e-03
 5.07959572e-04 3.87143518e-04 3.19224229e-04 1.27604057e-04
 1.10304114e-04 8.57935811e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.0422124e-01 4.1522104e-01 6.6500535e-04 4.5242294e-04 2.3248793e-04
 1.5917809e-04 4.4333534e-05 4.3521850e-05 3.1003208e-05 1.9580049e-05]  taking action:  1
Leaf selection - depth:  9
Leaf selection - action scores:  [1.2396260e+00 5.7987943e-03 2.3762644e-03 1.0762267e-03 8.7216694e-04
 2.1748079e-04 1.8067798e-04 9.5207695e-05 8.1974031e-05 5.7733178e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [1.7311655e+00 1.7136937e-01 4.1771546e-02 2.8357881e-03 8.3229254e-04
 7.9557399e-04 6.6022854e-04 6.5287529e-04 6.4861553e-04 1.6874768e-04]  taking action:  0
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  287

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  4.597761  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793666

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  67.0
Iteration TIME (sec):  5.730676044993743
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.34206087 -0.20720011 -0.63971357 -0.66089185 -0.49363261 -0.4952418
 -0.4622756  -0.49780147 -0.49786458 -0.49789114]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08921402  0.06937176 -0.21699485 -0.01060084 -0.45109797 -0.4525996
 -0.45910838 -0.46507367 -0.46907777  0.0362756 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.00567448  0.15718858 -0.316388    0.08659607  0.05087654  0.03004462
  0.02376091  0.01671342  0.00814038  0.00726615]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.8332692e-01 5.8738624e-05 3.5148776e-05 2.1845279e-05 1.6183269e-05
 1.1725945e-05 2.8542293e-06 1.0239920e-06 8.3836989e-07 8.1526167e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3484019  0.2618125  0.23395063 0.1249337  0.04497952 0.03496733
 0.03467259 0.03295156 0.0260388  0.02444067]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.39201576 0.04347441 0.01563514 0.00713277 0.00453286 0.00425248
 0.00286257 0.00222679 0.0014752  0.00124689]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.40218222 0.0075722  0.00623005 0.00375773 0.00180103 0.00110655
 0.00097088 0.00095    0.00091432 0.00062591]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.0700459e-01 6.9594599e-02 8.2396576e-03 4.1646473e-03 5.2050373e-04
 3.9670410e-04 3.2710753e-04 1.3075526e-04 1.1302809e-04 8.7912267e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.1228676e-01 3.4320688e-01 6.8228104e-04 4.6417612e-04 2.3852757e-04
 1.6331326e-04 4.5485245e-05 4.4652472e-05 3.1808620e-05 2.0088706e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.5701045e-01 3.8953800e-02 1.8356163e-02 4.3554497e-03 1.1016167e-03
 6.5934286e-04 3.1317183e-04 2.8843700e-04 1.4297853e-04 1.0863300e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [4.5934492e-01 1.1696018e-01 8.6762391e-02 1.9231297e-03 1.6579427e-03
 1.5252954e-03 1.4858301e-03 1.2538318e-03 5.2214070e-04 3.8818197e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [4.8518461e-01 3.7198961e-02 8.7566078e-03 3.6851072e-03 1.0386712e-03
 6.7432079e-04 5.7889317e-04 5.3515995e-04 4.4725894e-04 4.1673851e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [5.0629109e-01 1.3460574e-04 1.0295448e-05 7.2978937e-06 3.2249091e-06
 1.0372273e-06 9.5053610e-07 6.1391825e-07 5.4729810e-07 5.3126956e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.8314458e-01 4.6190879e-01 2.2355693e-03 4.7082978e-04 4.0733867e-04
 1.4949750e-04 8.4216997e-05 6.6929853e-05 6.1417348e-05 6.0523314e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [5.4697913e-01 6.5377033e-03 2.7910227e-04 8.5528896e-05 7.3188006e-05
 5.0380448e-05 1.7592614e-05 1.3360087e-05 1.2580936e-05 1.2407450e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [5.7376850e-01 9.9125482e-06 6.1351043e-06 1.9068700e-06 1.1463844e-06
 9.4838703e-07 7.9520498e-07 7.7689668e-07 6.4949791e-07 5.7210519e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [6.0310304e-01 1.1689307e-02 2.1060677e-03 1.1611659e-03 3.9990198e-05
 3.4647732e-05 3.2160006e-05 2.5101332e-05 2.2208365e-05 1.2893289e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [6.4210731e-01 2.9986131e-03 1.8336588e-03 1.1908927e-03 5.0608255e-04
 4.7814881e-04 4.5833908e-04 2.1322226e-04 2.0035270e-04 8.2663617e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [6.9181186e-01 1.3806147e-04 2.4177441e-05 1.5290108e-05 9.6290887e-06
 7.9061820e-06 7.5575549e-06 7.4784025e-06 6.9865569e-06 6.7585443e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [7.5438601e-01 7.7824816e-03 4.0303712e-04 2.9417715e-05 1.3847051e-05
 1.0059707e-05 9.8416795e-06 8.9011255e-06 6.4402630e-06 6.3139623e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.7289861  0.19598563 0.06233946 0.03758531 0.02016714 0.01963455
 0.00697309 0.00261023 0.00186345 0.00163189]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.77385485 0.2927498  0.12716706 0.05864395 0.04327897 0.02545987
 0.01060613 0.00357114 0.00297866 0.0024112 ]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [1.2430638e+00 8.7299682e-05 6.3552892e-05 5.8009668e-05 4.5840428e-05
 4.4760778e-05 4.2257256e-05 4.1894520e-05 3.6169371e-05 3.0747175e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [1.9515407e+00 3.6444053e-05 4.5258030e-06 2.8257432e-06 2.5774268e-06
 2.4569222e-06 2.3913440e-06 2.0152199e-06 1.7772588e-06 1.3833070e-06]  taking action:  0
Adding child.
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.798262

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  68.0
Iteration TIME (sec):  0.006023216003086418
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.33790675 -0.19987148 -0.6395161  -0.66084954 -0.49358596 -0.49520694
 -0.4598014  -0.49778536 -0.49784894 -0.49787569]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09148525  0.07768875 -0.21379697 -0.00959066 -0.45054537 -0.452064
 -0.4586463  -0.464679   -0.46872833  0.0366855 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.01816577  0.15596157 -0.31335288  0.08802751  0.05171752  0.03054126
  0.02415368  0.01698969  0.00827494  0.00738626]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.7745959e-01 5.9901879e-05 3.5844856e-05 2.2277900e-05 1.6503760e-05
 1.1958165e-05 2.9107541e-06 1.0442710e-06 8.5497282e-07 8.3140702e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.34304655 0.26721126 0.23877487 0.12750992 0.04590703 0.03568839
 0.03538757 0.03363105 0.02657574 0.02494466]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.3854205  0.04440944 0.01597141 0.00728618 0.00463036 0.00434395
 0.00292414 0.00227468 0.00150693 0.00127371]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.39503157 0.00774239 0.00637007 0.00384219 0.00184151 0.00113142
 0.00099271 0.00097135 0.00093487 0.00063998]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.9937794e-01 7.1232341e-02 8.4335580e-03 4.2626522e-03 5.3275249e-04
 4.0603956e-04 3.3480520e-04 1.3383226e-04 1.1568793e-04 8.9981069e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.0132052e-01 3.4983033e-01 6.9913006e-04 4.7563898e-04 2.4441804e-04
 1.6734630e-04 4.6608508e-05 4.5755172e-05 3.2594136e-05 2.0584799e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.4519043e-01 4.0152658e-02 1.8921100e-02 4.4894945e-03 1.1355204e-03
 6.7963504e-04 3.2281014e-04 2.9731405e-04 1.4737890e-04 1.1197633e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [4.4660646e-01 1.2079596e-01 8.9607812e-02 1.9861998e-03 1.7123157e-03
 1.5753183e-03 1.5345587e-03 1.2949519e-03 5.3926458e-04 4.0091260e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [4.7047579e-01 3.8504582e-02 9.0639507e-03 3.8144484e-03 1.0751268e-03
 6.9798832e-04 5.9921137e-04 5.5394322e-04 4.6295702e-04 4.3136533e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.8948562e-01 1.3968696e-04 1.0684092e-05 7.5733815e-06 3.3466461e-06
 1.0763816e-06 9.8641783e-07 6.3709308e-07 5.6795807e-07 5.5132443e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.6589732e-01 4.8076990e-01 2.3268543e-03 4.9005519e-04 4.2397153e-04
 1.5560193e-04 8.7655826e-05 6.9662798e-05 6.3925203e-05 6.2994659e-05]  taking action:  1
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  259

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1+in2+cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.078143  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.796406

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  69.0
Iteration TIME (sec):  4.211030184997071
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.33378262 -0.19286504 -0.63932007 -0.66080754 -0.49353965 -0.49517233
 -0.45734506 -0.49776937 -0.49783341 -0.49786035]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09359394  0.08591396 -0.21063441 -0.00859162 -0.4499989  -0.4515343
 -0.45818934 -0.4642887  -0.46838278  0.03709088]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0304572   0.15481046 -0.31036633  0.08943604  0.05254506  0.03102995
  0.02454016  0.01726155  0.00840735  0.00750445]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.7194347e-01 6.1042971e-05 3.6527679e-05 2.2702281e-05 1.6818147e-05
 1.2185960e-05 2.9662021e-06 1.0641637e-06 8.7125954e-07 8.4724479e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.33802462 0.27250308 0.24350353 0.13003512 0.04681617 0.03639515
 0.03608838 0.03429707 0.02710205 0.02543866]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.37925422 0.0453252  0.01630076 0.00743643 0.00472584 0.00443352
 0.00298444 0.00232159 0.001538   0.00129997]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.38836724 0.00790891 0.00650708 0.00392482 0.00188111 0.00115576
 0.00101406 0.00099224 0.00095498 0.00065375]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.9229462e-01 7.2833270e-02 8.6231008e-03 4.3584541e-03 5.4472598e-04
 4.1516518e-04 3.4232988e-04 1.3684011e-04 1.1828799e-04 9.2003371e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.9140812e-01 3.5629779e-01 7.1558240e-04 4.8683200e-04 2.5016983e-04
 1.7128440e-04 4.7705325e-05 4.6831909e-05 3.3361161e-05 2.1069212e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.3447459e-01 4.1316744e-02 1.9469652e-02 4.6196519e-03 1.1684409e-03
 6.9933874e-04 3.3216889e-04 3.0593364e-04 1.5165163e-04 1.1522270e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [4.3513656e-01 1.2451362e-01 9.2365615e-02 2.0473278e-03 1.7650146e-03
 1.6238008e-03 1.5817868e-03 1.3348059e-03 5.5586122e-04 4.1325125e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [4.5733601e-01 3.9767362e-02 9.3612075e-03 3.9395452e-03 1.1103862e-03
 7.2087924e-04 6.1886286e-04 5.7211012e-04 4.7813993e-04 4.4551221e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.7460979e-01 1.4458975e-04 1.1059085e-05 7.8391950e-06 3.4641080e-06
 1.1141609e-06 1.0210396e-06 6.5945397e-07 5.8789249e-07 5.7067507e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.8002416e-01 2.9945925e-01 2.4146906e-03 5.0855428e-04 4.3997602e-04
 1.6147573e-04 9.0964742e-05 7.2292503e-05 6.6338311e-05 6.5372646e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [5.24817348e-01 6.82840822e-03 2.91512813e-04 8.93320175e-05
 7.64423748e-05 5.26206604e-05 1.83748871e-05 1.39541553e-05
 1.31403585e-05 1.29591599e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [5.4769152e-01 1.0396369e-05 6.4345522e-06 1.9999422e-06 1.2023382e-06
 9.9467672e-07 8.3401807e-07 8.1481619e-07 6.8119920e-07 6.0002901e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [5.7199401e-01 1.2321612e-02 2.2199904e-03 1.2239764e-03 4.2153370e-05
 3.6521917e-05 3.3899625e-05 2.6459127e-05 2.3409673e-05 1.3590720e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [6.0387588e-01 3.1805092e-03 1.9448887e-03 1.2631323e-03 5.3678156e-04
 5.0715334e-04 4.8614197e-04 2.2615635e-04 2.1250611e-04 8.7678003e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [6.4327794e-01 1.4759392e-04 2.5846772e-05 1.6345813e-05 1.0293928e-05
 8.4520634e-06 8.0793661e-06 7.9947486e-06 7.4689433e-06 7.2251878e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [6.9035012e-01 8.4060412e-03 4.3532989e-04 3.1774765e-05 1.4956526e-05
 1.0865726e-05 1.0630229e-05 9.6143149e-06 6.9562793e-06 6.8198588e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.6531247  0.2146915  0.06828946 0.04117264 0.02209199 0.02150857
 0.00763863 0.00285936 0.00204131 0.00178765]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.66799533 0.3273042  0.14217709 0.06556593 0.04838735 0.028465
 0.01185801 0.00399266 0.00333024 0.0026958 ]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [9.8508763e-01 1.0080499e-04 7.3384552e-05 6.6983790e-05 5.2931966e-05
 5.1685292e-05 4.8794478e-05 4.8375623e-05 4.1764793e-05 3.5503781e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [1.2450697e+00 4.4634668e-05 5.5429541e-06 3.4608145e-06 3.1566904e-06
 3.0091028e-06 2.9287862e-06 2.4681303e-06 2.1766887e-06 1.6941982e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.792406

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  70.0
Iteration TIME (sec):  0.005891323999094311
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.32968785 -0.18616015 -0.63912543 -0.66076583 -0.49349367 -0.49513797
 -0.4549062  -0.49775349 -0.49781799 -0.49784512]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09555552  0.09405017 -0.20750606 -0.00760339 -0.44945833 -0.45101035
 -0.45773733 -0.46390262 -0.46804097  0.03749187]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.04255807  0.15372778 -0.3074261   0.09082273  0.05335976  0.03151106
  0.02492065  0.01752918  0.0085377   0.00762081]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.6674485e-01 6.2163119e-05 3.7197966e-05 2.3118870e-05 1.7126762e-05
 1.2409574e-05 3.0206324e-06 1.0836912e-06 8.8724727e-07 8.6279186e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.33330292 0.2776941  0.24814212 0.13251221 0.04770798 0.03708846
 0.03677584 0.03495041 0.02761832 0.02592325]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.37347236 0.04622282 0.01662358 0.0075837  0.00481943 0.00452132
 0.00304354 0.00236757 0.00156846 0.00132572]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.38213643 0.008072   0.00664126 0.00400576 0.0019199  0.00117959
 0.00103497 0.00101271 0.00097467 0.00066723]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.85692954e-01 7.43997470e-02 8.80856439e-03 4.45219502e-03
 5.56441839e-04 4.24094498e-04 3.49692622e-04 1.39783238e-04
 1.20832105e-04 9.39821621e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.8239378e-01 3.6261988e-01 7.3166494e-04 4.9777341e-04 2.5579231e-04
 1.7513396e-04 4.8777492e-05 4.7884445e-05 3.4110944e-05 2.1542739e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.2470109e-01 4.2448919e-02 2.0003166e-02 4.7462415e-03 1.2004590e-03
 7.1850227e-04 3.4127111e-04 3.1431697e-04 1.5580725e-04 1.1838008e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.42473772 0.12812346 0.09504344 0.00210668 0.00181619 0.00167088
 0.00162765 0.0013735  0.00057198 0.00042523]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.44550502 0.04099126 0.00964931 0.00406079 0.00114456 0.00074307
 0.00063791 0.00058972 0.00049286 0.00045922]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.6132094e-01 1.4933165e-04 1.1421775e-05 8.0962855e-06 3.5777155e-06
 1.1507004e-06 1.0545251e-06 6.8108113e-07 6.0717275e-07 5.8939065e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.6337378e-01 3.0821487e-01 2.4994423e-03 5.2640366e-04 4.5541846e-04
 1.6714328e-04 9.4157462e-05 7.4829848e-05 6.8666683e-05 6.7667119e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [5.05657196e-01 7.10723223e-03 3.03416135e-04 9.29797097e-05
 7.95637461e-05 5.47693198e-05 1.91251875e-05 1.45239455e-05
 1.36769186e-05 1.34883203e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [5.2549374e-01 1.0858653e-05 6.7206702e-06 2.0888715e-06 1.2558013e-06
 1.0389060e-06 8.7110345e-07 8.5104773e-07 7.1148935e-07 6.2670983e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [5.4601651e-01 1.2923016e-02 2.3283456e-03 1.2837173e-03 4.4210832e-05
 3.8304512e-05 3.5554229e-05 2.7750568e-05 2.4552275e-05 1.4254068e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [5.7271826e-01 3.3525513e-03 2.0500929e-03 1.3314585e-03 5.6581746e-04
 5.3458661e-04 5.1243865e-04 2.3838974e-04 2.2400112e-04 9.2420734e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [6.0496235e-01 1.5654699e-04 2.7414640e-05 1.7337354e-05 1.0918359e-05
 8.9647674e-06 8.5694619e-06 8.4797111e-06 7.9220099e-06 7.6634688e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [6.4193851e-01 8.9864358e-03 4.6538722e-04 3.3968652e-05 1.5989199e-05
 1.1615949e-05 1.1364193e-05 1.0278135e-05 7.4365753e-06 7.2907360e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.59920454 0.23189333 0.07376105 0.04447154 0.02386208 0.02323191
 0.00825067 0.00308846 0.00220487 0.00193088]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.59967506 0.3585438  0.1557472  0.07182387 0.05300569 0.03118184
 0.0129898  0.00437374 0.0036481  0.0029531 ]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [8.4511936e-01 1.1270340e-04 8.2046419e-05 7.4890151e-05 5.9179736e-05
 5.7785914e-05 5.4553882e-05 5.4085591e-05 4.6694455e-05 3.9694431e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [9.8663175e-01 5.1539671e-05 6.4004521e-06 3.9962042e-06 3.6450319e-06
 3.4746124e-06 3.3818710e-06 2.8499512e-06 2.5134234e-06 1.9562915e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793405

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  71.0
Iteration TIME (sec):  0.0058269820001441985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.32562181 -0.17973786 -0.63893215 -0.66072442 -0.49344801 -0.49510385
 -0.45248446 -0.49773773 -0.49780268 -0.49783   ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09738357  0.10210037 -0.20441079 -0.00662562 -0.44892347 -0.4504919
 -0.45729008 -0.46352065 -0.46770278  0.03788863]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.11484018  0.35248977  0.10311314  0.03062261  0.02678992  0.01160903
  0.01034894  0.00663955  0.00625186  0.00489357]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  570

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  7.621198  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.797132

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  72.0
Iteration TIME (sec):  8.74645720999979
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.32158392 -0.17358085 -0.63874022 -0.6606833  -0.49340267 -0.49506997
 -0.45007948 -0.49772207 -0.49778747 -0.49781498]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09906328  0.10755029 -0.20134762 -0.00565799 -0.44839418 -0.44997886
 -0.4568475  -0.4631426  -0.46736807  0.03828126]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.05525574  0.25351006  0.1190648   0.03535994  0.03093433  0.01340495
  0.01194993  0.00766669  0.00721902  0.00565061]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [1.9515768e+00 1.1739884e-05 9.4155030e-06 5.7496113e-06 5.3581448e-06
 2.7634442e-06 9.1031080e-07 4.0494160e-07 2.8392034e-07 2.5645758e-07]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1391

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  7.273916  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.796521

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  73.0
Iteration TIME (sec):  8.377246390002256
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.31757358 -0.16767309 -0.63854959 -0.66064246 -0.49335763 -0.49503631
 -0.44769092 -0.49770652 -0.49777237 -0.49780006]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10072596  0.11077175 -0.19831553 -0.00470017 -0.44787025 -0.44947103
 -0.4564094  -0.4627684  -0.46703678  0.03866992]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.00276083  0.2183541   0.1331185   0.03953361  0.03458564  0.01498719
  0.01336043  0.00857162  0.00807111  0.00631757]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [1.2450918e+00 1.4378363e-05 1.1531589e-05 7.0418073e-06 6.5623603e-06
 3.3845140e-06 1.1148985e-06 4.9595013e-07 3.4772998e-07 3.1409510e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.7335106  0.05187714 0.04674603 0.04108268 0.01617917 0.00994654
 0.00702469 0.00629788 0.005351   0.00432926]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  66

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  6.889914  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.799558

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  74.0
Iteration TIME (sec):  8.006542228999024
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.31359026 -0.16199991 -0.63836025 -0.66060189 -0.4933129  -0.49500289
 -0.44531844 -0.49769108 -0.49775736 -0.49778525]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10237209  0.11288011 -0.19531363 -0.0037519  -0.44735152 -0.44896823
 -0.45597565 -0.46239793 -0.46670878  0.0390547 ]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.04469824 0.19962394 0.145824   0.0433069  0.03788666 0.01641764
 0.01463561 0.00938974 0.00884146 0.00692055]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [9.8664880e-01 1.6602702e-05 1.3315531e-05 8.1311782e-06 7.5775606e-06
 3.9081001e-06 1.2873738e-06 5.7267391e-07 4.0152398e-07 3.6268577e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.111554   0.06353626 0.05725197 0.0503158  0.01981536 0.01218198
 0.00860346 0.00771329 0.00655361 0.00530224]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.9223149e+00 1.3916114e-02 5.1070862e-03 1.8898472e-03 1.3919453e-03
 1.3422614e-03 1.2492175e-03 5.7854719e-04 3.7411141e-04 2.8462202e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  448

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  6.519131  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.792544

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  75.0
Iteration TIME (sec):  7.650715376003063
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.3096334  -0.15654768 -0.63817216 -0.66056159 -0.49326847 -0.49496968
 -0.44296173 -0.49767574 -0.49774246 -0.49777053]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10400217  0.11435348 -0.192341   -0.00281287 -0.44683787 -0.44847035
 -0.4555461  -0.46203107 -0.466384    0.03943573]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.08834136 0.1876874  0.15750793 0.0467768  0.04092228 0.01773308
 0.01580827 0.01014208 0.00954987 0.00747505]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [8.4642845e-01 1.8562385e-05 1.4887216e-05 9.0909334e-06 8.4719704e-06
 4.3693885e-06 1.4393277e-06 6.4026887e-07 4.4891743e-07 4.0549500e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.8838514  0.07336535 0.06610887 0.05809968 0.02288081 0.01406654
 0.00993441 0.00890655 0.00756746 0.00612249]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.2271726e+00 1.7043689e-02 6.2548774e-03 2.3145808e-03 1.7047778e-03
 1.6439279e-03 1.5299728e-03 7.0857274e-04 4.5819103e-04 3.4858935e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.9452631e+00 1.7493899e-03 1.6289941e-03 7.4890972e-04 4.1387763e-04
 4.0372304e-04 1.8129873e-04 1.7873324e-04 1.7689369e-04 1.4238336e-04]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  11

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  6.145531  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.800054

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  76.0
Iteration TIME (sec):  7.274338371993508
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.30570249 -0.15130387 -0.63798531 -0.66052156 -0.49322433 -0.4949367
 -0.44062047 -0.4976605  -0.49772766 -0.49775591]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10561662  0.11543073 -0.18939683 -0.00188283 -0.44632912 -0.44797724
 -0.4551207  -0.46166772 -0.46606228  0.03981312]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.12896335 0.1792689  0.16838306 0.0500065  0.04374775 0.01895746
 0.01689975 0.01084234 0.01020924 0.00799116]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [7.5604600e-01 2.0334075e-05 1.6308128e-05 9.9586186e-06 9.2805785e-06
 4.7864255e-06 1.5767046e-06 7.0137941e-07 4.9176441e-07 4.4419752e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.7602302  0.08202496 0.07391197 0.06495742 0.02558152 0.01572686
 0.01110701 0.00995782 0.00846067 0.00684516]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [9.7285450e-01 1.9680357e-02 7.2225104e-03 2.6726476e-03 1.9685079e-03
 1.8982443e-03 1.7666604e-03 8.1818929e-04 5.2907341e-04 4.0251628e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.2412255e+00 2.1425562e-03 1.9951023e-03 9.1722340e-04 5.0689449e-04
 4.9445772e-04 2.2204471e-04 2.1890263e-04 2.1664966e-04 1.7438330e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.9228059e+00 2.4244476e-02 2.5463186e-03 1.4841219e-03 1.4029577e-04
 9.9039302e-05 9.0715926e-05 4.9626382e-05 3.8454353e-05 2.3741339e-05]  taking action:  0
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2160

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  5.766539  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.791802

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  77.0
Iteration TIME (sec):  6.9017959920020076
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.30179702 -0.14625683 -0.63779967 -0.66048178 -0.49318047 -0.49490393
 -0.43829436 -0.49764535 -0.49771295 -0.49774139]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.10721593  0.11624461 -0.18648031 -0.00096152 -0.44582516 -0.44748875
 -0.4546993  -0.4613078  -0.4657436   0.04018695]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.16711634 0.17293288 0.1785972  0.0530399  0.0464015  0.02010742
 0.01792489 0.01150004 0.01082854 0.00847591]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  7785

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  genvar i;
  wire [63:0] sum_temp;
  wire cout_temp;

  assign {cout_temp, sum_temp} = in1 + in2 + cin;
  assign sum = sum_temp[63:0];
  assign cout = cout_temp;
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  30.373657  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.808193

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  78.0
Iteration TIME (sec):  31.463454853001167
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.29791651 -0.1413958  -0.63761521 -0.66044226 -0.4931369  -0.49487136
 -0.43598312 -0.49763031 -0.49769834 -0.49772696]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 1.0880051e-01  1.1687480e-01 -1.8359065e-01 -4.8704445e-05
 -4.4532585e-01 -4.4700477e-01 -4.5428178e-01 -4.6095118e-01
 -4.6542788e-01  4.0557351e-02]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.20320237 0.17765075 0.144129   0.05590897 0.04891147 0.02119508
 0.0188945  0.0121221  0.01141428 0.00893439]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.9430701  0.7165418  0.08051346 0.0589112  0.0297665  0.02901048
 0.01751151 0.01383943 0.011717   0.0060354 ]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  16

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

  full_adder FA1 (sum[0],   c1,   in1[0],  in2[0], cin);
  full_adder FA2 (sum[1],   c2,   in1[1],  in2[1], c1);
  full_adder FA3 (sum[2],   c3,   in1[2],  in2[2], c2);
  full_adder FA4 (sum[3],   c4,   in1[3],  in2[3], c3);
  full_adder FA5 (sum[4],   c5,   in1[4],  in2[4], c4);
  full_adder FA6 (sum[5],   c6,   in1[5],  in2[5], c5);
  full_adder FA7 (sum[6],   c7,   in1[6],  in2[6], c6);
  full_adder FA8 (sum[7],   c8,   in1[7],  in2[7], c7);
  full_adder FA9 (sum[8],   c9,   in1[8],  in2[8], c8);
  full_adder FA10 (sum[9],  c10,  in1[9],  in2[9], c9);
  full_adder FA11 (sum[10], c11,  in1[10], in2[10], c10);
  full_adder FA12 (sum[11], c12,  in1[11], in2[11], c11);
  full_adder FA13 (sum[12], c13,  in1[12], in2[12], c12);
  full_adder FA14 (sum[13], c14,  in1[13], in2[13], c13);
  full_adder FA15 (sum[14], c15,  in1[14], in2[14], c14);
  full_adder FA16 (sum[15], c16,  in1[15], in2[15], c15);
  full_adder FA17 (sum[16], c17,  in1[16], in2[16], c16);
  full_adder FA18 (sum[17], c18,  in1[17], in2[17], c17);
  full_adder FA19 (sum[18], c19,  in1[18], in2[18], c18);
  full_adder FA20 (sum[19], c20,  in1[19], in2[19], c19);
  full_adder FA21 (sum[20], c21,  in1[20], in2[20], c20);
  full_adder FA22 (sum[21], c22,  in1[21], in2[21], c21);
  full_adder FA23 (sum[22], c23,  in1[22], in2[22], c22);
  full_adder FA24 (sum[23], c24,  in1[23], in2[23], c23);
  full_adder FA25 (sum[24], c25,  in1[24], in2[24], c24);
  full_adder FA26 (sum[25], c26,  in1[25], in2[25], c25);
  full_adder FA27 (sum[26], c27,  in1[26], in2[26], c26);
  full_adder FA28 (sum[27], c28,  in1[27], in2[27], c27);
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:39: syntax error\nI give up.\n'
LLM generates return in:  1347.656905  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  79.0
Iteration TIME (sec):  1346.388205108
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.29406048 -0.15635361 -0.63743192 -0.66040299 -0.4930936  -0.49483901
 -0.43368646 -0.49761536 -0.49768382 -0.49771262]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11037072  0.01737182 -0.18072718  0.00085585 -0.44483104 -0.44652516
 -0.45386803 -0.46059778 -0.465115    0.04092439]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.05447692  0.15270707 -0.30453008  0.09218856  0.05416221  0.03198494
  0.02529542  0.0177928   0.00866609  0.00773541]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.6183435e-01 6.3263433e-05 3.7856389e-05 2.3528086e-05 1.7429915e-05
 1.2629230e-05 3.0740989e-06 1.1028732e-06 9.0295202e-07 8.7806370e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.32885262 0.28278983 0.25269556 0.13494383 0.04858343 0.03776904
 0.03745068 0.03559176 0.02812512 0.02639894]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.36803657 0.04710333 0.01694025 0.00772817 0.00491123 0.00460745
 0.00310152 0.00241267 0.00159834 0.00135097]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.37629408 0.00823185 0.00677278 0.00408509 0.00195792 0.00120295
 0.00105546 0.00103276 0.00099397 0.00068044]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.7952074e-01 7.5933933e-02 8.9902040e-03 4.5440029e-03 5.6791608e-04
 4.3283965e-04 3.5690356e-04 1.4266568e-04 1.2332376e-04 9.5920142e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.7415159e-01 3.6880594e-01 7.4740144e-04 5.0847942e-04 2.6129387e-04
 1.7890071e-04 4.9826587e-05 4.8914331e-05 3.4844597e-05 2.2006076e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.15739536e-01 4.35516685e-02 2.05228142e-02 4.86954069e-03
 1.23164488e-03 7.37167720e-04 3.50136746e-04 3.22482374e-04
 1.59854855e-04 1.21455385e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.41525322 0.13163434 0.09764785 0.00216441 0.00186595 0.00171666
 0.00167225 0.00141114 0.00058765 0.00043688]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.43477926 0.04217966 0.00992906 0.00417852 0.00117774 0.00076461
 0.0006564  0.00060681 0.00050714 0.00047254]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.4935584e-01 1.5392754e-04 1.1773295e-05 8.3454606e-06 3.6878246e-06
 1.1861148e-06 1.0869796e-06 7.0204237e-07 6.2585934e-07 6.0752996e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.4871858e-01 3.1668317e-01 2.5814129e-03 5.4366741e-04 4.7035416e-04
 1.7262483e-04 9.7245407e-05 7.7283934e-05 7.0918642e-05 6.9886300e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.8887837e-01 7.3755234e-03 3.1486980e-04 9.6489603e-05 8.2567196e-05
 5.6836805e-05 1.9847144e-05 1.5072209e-05 1.4193209e-05 1.3997491e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [5.0630260e-01 1.1302044e-05 6.9950952e-06 2.1741664e-06 1.3070794e-06
 1.0813276e-06 9.0667322e-07 8.8579856e-07 7.4054157e-07 6.5230029e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [5.2390337e-01 1.3497650e-02 2.4318777e-03 1.3407990e-03 4.6176705e-05
 4.0007755e-05 3.7135182e-05 2.8984523e-05 2.5644014e-05 1.4887889e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [5.4670006e-01 3.5161856e-03 2.1501556e-03 1.3964454e-03 5.9343444e-04
 5.6067918e-04 5.3745025e-04 2.5002527e-04 2.3493437e-04 9.6931690e-05]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [5.73736191e-01 1.65015008e-04 2.88975680e-05 1.82751755e-05
 1.15089615e-05 9.44969452e-06 9.03300588e-06 8.93840024e-06
 8.35053197e-06 8.07800552e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [6.0371923e-01 9.5315538e-03 4.9361767e-04 3.6029196e-05 1.6959106e-05
 1.2320575e-05 1.2053546e-05 1.0901607e-05 7.8876792e-06 7.7329923e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.55841964 0.2479044  0.07885388 0.04754207 0.02550964 0.02483596
 0.00882034 0.00330171 0.0023571  0.0020642 ]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.55109435 0.38727158 0.16822621 0.07757866 0.05725269 0.03368024
 0.01403059 0.00472418 0.0039404  0.00318972]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [7.5489873e-01 1.2346038e-04 8.9877351e-05 8.2038052e-05 6.4828157e-05
 6.3301297e-05 5.9760783e-05 5.9247795e-05 5.1151212e-05 4.3483073e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [8.4641415e-01 5.7623103e-05 7.1559225e-06 4.4678923e-06 4.0752693e-06
 3.8847347e-06 3.7810466e-06 3.1863424e-06 2.8100928e-06 2.1872004e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.801558

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  80.0
Iteration TIME (sec):  0.005815547003294341
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.29022848 -0.15149063 -0.63724977 -0.66036397 -0.49305057 -0.49480685
 -0.43140411 -0.4976005  -0.49766939 -0.49769836]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11158623  0.01938488 -0.17788911  0.00175237 -0.44434065 -0.4460498
 -0.45345795 -0.46024755 -0.46480492  0.04128817]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.06622171  0.15174267 -0.3016764   0.09353445  0.05495294  0.0324519
  0.02566472  0.01805256  0.00879261  0.00784834]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.5718632e-01 6.4344938e-05 3.8503553e-05 2.3930304e-05 1.7727883e-05
 1.2845129e-05 3.1266516e-06 1.1217270e-06 9.1838820e-07 8.9307440e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.32464868 0.28779534 0.2571684  0.1373324  0.04944338 0.03843757
 0.03811358 0.03622175 0.02862295 0.02686622]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.3629136  0.04796768 0.0172511  0.00786998 0.00500136 0.004692
 0.00315843 0.00245694 0.00162767 0.00137576]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.37080145 0.00838866 0.0069018  0.0041629  0.00199522 0.00122587
 0.00107557 0.00105243 0.0010129  0.0006934 ]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.7373328e-01 7.7437714e-02 9.1682449e-03 4.6339915e-03 5.7916302e-04
 4.4141154e-04 3.6397163e-04 1.4549101e-04 1.2576605e-04 9.7819735e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.6657900e-01 3.7486446e-01 7.6281343e-04 5.1896466e-04 2.6668195e-04
 1.8258978e-04 5.0854051e-05 4.9922983e-05 3.5563120e-05 2.2459857e-05]  taking action:  1
Leaf selection - depth:  9
Leaf selection - action scores:  [9.8244119e-01 6.6958708e-03 2.7438737e-03 1.2427196e-03 1.0070916e-03
 2.5112520e-04 2.0862895e-04 1.0993637e-04 9.4655457e-05 6.6664528e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [1.1101180e+00 2.0988376e-01 5.1159490e-02 3.4731168e-03 1.0193461e-03
 9.7437517e-04 8.0861157e-04 7.9960568e-04 7.9438853e-04 2.0667285e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [1.9257067e+00 1.8014433e-02 3.3469095e-03 1.4195946e-03 5.8430084e-04
 3.3260981e-04 2.3966857e-04 2.3693781e-04 1.9017002e-04 1.6163918e-04]  taking action:  0
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  16

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  4.238868  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.796388

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  81.0
Iteration TIME (sec):  5.368942073997459
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.28642006 -0.14679753 -0.63706874 -0.66032518 -0.4930078  -0.49477489
 -0.42913581 -0.49758573 -0.49765504 -0.4976842 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11272134  0.02138031 -0.17507589  0.00264104 -0.44385454 -0.44557863
 -0.45305148 -0.45990035 -0.46449754  0.04164877]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.07779986  0.1508296  -0.29886314  0.09486124  0.05573245  0.03291223
  0.02602877  0.01830864  0.00891734  0.00795967]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.5277808e-01 6.5408560e-05 3.9140017e-05 2.4325873e-05 1.8020924e-05
 1.3057460e-05 3.1783350e-06 1.1402692e-06 9.3356914e-07 9.0783692e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.32066908 0.29271528 0.26156476 0.13968013 0.05028863 0.03909467
 0.03876514 0.03684096 0.02911227 0.0273255 ]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.35807455 0.04881674 0.01755645 0.00800928 0.00508988 0.00477505
 0.00321434 0.00250043 0.00165648 0.00140011]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.36562493 0.0085426  0.00702845 0.00423929 0.00203183 0.00124836
 0.00109531 0.00107175 0.00103149 0.00070613]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.6829227e-01 7.8912854e-02 9.3428940e-03 4.7222665e-03 5.9019570e-04
 4.4982016e-04 3.7090507e-04 1.4826252e-04 1.2816180e-04 9.9683137e-05]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.7195259e-01 3.2464233e-01 7.7792007e-04 5.2924221e-04 2.7196328e-04
 1.8620577e-04 5.1861160e-05 5.0911654e-05 3.6267407e-05 2.2904649e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [4.0748340e-01 4.4627186e-02 2.1029629e-02 4.9897945e-03 1.2620605e-03
 7.5537217e-04 3.5878341e-04 3.3044611e-04 1.6380250e-04 1.2445475e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.40655637 0.13505398 0.10018457 0.00222064 0.00191443 0.00176126
 0.00171569 0.0014478  0.00060292 0.00044823]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.42499673 0.04333548 0.01020114 0.00429302 0.00121002 0.00078556
 0.00067439 0.00062344 0.00052104 0.00048549]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.3850866e-01 1.5839013e-04 1.2114621e-05 8.5874080e-06 3.7947402e-06
 1.2205021e-06 1.1184928e-06 7.2239567e-07 6.4400393e-07 6.2514317e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.3569261e-01 3.2489070e-01 2.6608596e-03 5.6039949e-04 4.8482997e-04
 1.7793760e-04 1.0023827e-04 7.9662459e-05 7.3101262e-05 7.2037146e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.7402614e-01 7.6343920e-03 3.2592122e-04 9.9876233e-05 8.5465173e-05
 5.8831683e-05 2.0543746e-05 1.5601219e-05 1.4691367e-05 1.4488780e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.89496589e-01 1.17286845e-05 7.25915288e-06 2.25623899e-06
 1.35642040e-06 1.12214661e-06 9.40899213e-07 9.19236527e-07
 7.68496307e-07 6.76923946e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [5.0478518e-01 1.4048799e-02 2.5311785e-03 1.3955478e-03 4.8062240e-05
 4.1641393e-05 3.8651520e-05 3.0168047e-05 2.6691136e-05 1.5495805e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [5.2455240e-01 3.6725360e-03 2.2457642e-03 1.4585397e-03 6.1982201e-04
 5.8561028e-04 5.6134845e-04 2.6114288e-04 2.4538094e-04 1.0124184e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [5.4766101e-01 1.7306922e-04 3.0308029e-05 1.9167166e-05 1.2070702e-05
 9.9109238e-06 9.4738971e-06 9.3746739e-06 8.7581129e-06 8.4722842e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [5.72571456e-01 1.00471405e-02 5.20318688e-04 3.79781086e-05
 1.78764676e-05 1.29870259e-05 1.27055537e-05 1.14913037e-05
 8.31434409e-06 8.15128988e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.5262072  0.2629423  0.08363716 0.05042598 0.02705706 0.02634251
 0.00935538 0.00350199 0.00250009 0.00218942]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.5143351  0.41401073 0.17984138 0.08293507 0.0612057  0.03600569
 0.01499933 0.00505036 0.00421246 0.00340995]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [6.9081163e-01 1.3335247e-04 9.7078642e-05 8.8611225e-05 7.0022412e-05
 6.8373221e-05 6.4549029e-05 6.3994936e-05 5.5249628e-05 4.6967089e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [7.5603354e-01 6.3122949e-05 7.8389203e-06 4.8943307e-06 4.4642338e-06
 4.2555139e-06 4.1419289e-06 3.4904631e-06 3.0783024e-06 2.3959581e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.796531

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  82.0
Iteration TIME (sec):  0.006019769003614783
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.28263479 -0.14226567 -0.63688881 -0.66028663 -0.49296529 -0.49474313
 -0.42688129 -0.49757106 -0.49764079 -0.49767012]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11378297  0.02335866 -0.17228678  0.00352211 -0.44337258 -0.44511148
 -0.45264846 -0.45955613 -0.46419278  0.04200628]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08921838  0.1499635  -0.2960887   0.09616974  0.05650121  0.03336621
  0.02638781  0.01856118  0.00904034  0.00806947]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.4858981e-01 6.6455170e-05 3.9766299e-05 2.4715111e-05 1.8309280e-05
 1.3266393e-05 3.2291919e-06 1.1585147e-06 9.4850725e-07 9.2236331e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.31689462 0.29755387 0.26588842 0.14198904 0.0511199  0.03974091
 0.03940592 0.03744994 0.02959349 0.02777719]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.3534941  0.04965127 0.01785659 0.0081462  0.0051769  0.00485668
 0.00326929 0.00254317 0.0016848  0.00142405]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.3607353  0.00869381 0.00715286 0.00431433 0.0020678  0.00127046
 0.00111469 0.00109072 0.00104975 0.00071862]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.6316431e-01 8.0360919e-02 9.5143374e-03 4.8089204e-03 6.0102594e-04
 4.5807441e-04 3.7771123e-04 1.5098316e-04 1.3051360e-04 1.0151234e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.6462271e-01 3.2930261e-01 7.9273898e-04 5.3932396e-04 2.7714399e-04
 1.8975287e-04 5.2849082e-05 5.1881489e-05 3.6958278e-05 2.3340968e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.9984471e-01 4.5677379e-02 2.1524509e-02 5.1072175e-03 1.2917600e-03
 7.7314803e-04 3.6722652e-04 3.3822237e-04 1.6765718e-04 1.2738348e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.39854395 0.13838916 0.10265864 0.00227548 0.0019617  0.00180475
 0.00175806 0.00148355 0.00061781 0.0004593 ]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.4160269  0.04446126 0.01046615 0.00440455 0.00124145 0.00080597
 0.00069191 0.00063964 0.00053458 0.0004981 ]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.28615421e-01 1.62730401e-04 1.24465905e-05 8.82272343e-06
 3.89872503e-06 1.25394672e-06 1.14914212e-06 7.42190991e-07
 6.61651200e-07 6.42273619e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.2401701e-01 3.3286020e-01 2.7380020e-03 5.7664636e-04 4.9888593e-04
 1.8309629e-04 1.0314433e-04 8.1971993e-05 7.5220581e-05 7.4125615e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.6075833e-01 7.8847660e-03 3.3660998e-04 1.0315173e-04 8.8268047e-05
 6.0761104e-05 2.1217491e-05 1.6112870e-05 1.5173178e-05 1.4963948e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.7462034e-01 1.2140343e-05 7.5139378e-06 2.3354294e-06 1.4040285e-06
 1.1615322e-06 9.7392331e-07 9.5150028e-07 7.9546925e-07 7.0068290e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.8804301e-01 1.4579127e-02 2.6267278e-03 1.4482283e-03 4.9876540e-05
 4.3213313e-05 4.0110575e-05 3.1306859e-05 2.7698699e-05 1.6080756e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [5.0540441e-01 3.8224966e-03 2.3374655e-03 1.5180962e-03 6.4513122e-04
 6.0952251e-04 5.8426999e-04 2.7180612e-04 2.5540058e-04 1.0537585e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [5.25464833e-01 1.80764895e-04 3.16557016e-05 2.00194518e-05
 1.26074365e-05 1.03516222e-05 9.89516229e-06 9.79152719e-06
 9.14755037e-06 8.84901146e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [5.4656154e-01 1.0537530e-02 5.4571487e-04 3.9831779e-05 1.8748997e-05
 1.3620908e-05 1.3325698e-05 1.2052182e-05 8.7201579e-06 8.5491456e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.49994493 0.27716553 0.08816131 0.05315365 0.02852064 0.02776744
 0.00986144 0.00369142 0.00263532 0.00230785]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.48529336 0.43912467 0.1907506  0.08796592 0.06491844 0.0381898
 0.01590919 0.00535671 0.00446799 0.0036168 ]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [6.4236146e-01 1.4255979e-04 1.0378143e-04 9.4729388e-05 7.4857111e-05
 7.3094045e-05 6.9005808e-05 6.8413465e-05 5.9064336e-05 5.0209928e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [6.9183302e-01 6.8180576e-05 8.4670019e-06 5.2864816e-06 4.8219240e-06
 4.5964803e-06 4.4737949e-06 3.7701313e-06 3.3249469e-06 2.5879306e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.800624

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  83.0
Iteration TIME (sec):  0.006028438998328056
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.27887225 -0.13788692 -0.63670997 -0.66024831 -0.49292304 -0.49471155
 -0.42464032 -0.49755647 -0.49762662 -0.49765613]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11477713  0.02532029 -0.16952121  0.00439572 -0.4428947  -0.44464827
 -0.45224887 -0.45921484 -0.4638906   0.04236077]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.10048354  0.14914049 -0.29335153  0.09746066  0.05725965  0.0338141
  0.02674202  0.01881034  0.00916169  0.00817779]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.4460372e-01 6.7485540e-05 4.0382867e-05 2.5098314e-05 1.8593160e-05
 1.3472085e-05 3.2792598e-06 1.1764772e-06 9.6321367e-07 9.3666432e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.31330824 0.30231503 0.2701429  0.14426102 0.05193787 0.0403768
 0.04003646 0.03804918 0.03006702 0.02822166]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.34914994 0.05047201 0.01815175 0.00828086 0.00526247 0.00493696
 0.00332333 0.00258521 0.00171265 0.00144759]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.35610703 0.00884243 0.00727514 0.00438809 0.00210315 0.00129218
 0.00113375 0.00110936 0.00106769 0.00073091]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.5832059e-01 8.1783347e-02 9.6827457e-03 4.8940410e-03 6.1166438e-04
 4.6618257e-04 3.8439690e-04 1.5365564e-04 1.3282376e-04 1.0330916e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.5784191e-01 3.3387733e-01 8.0728583e-04 5.4922060e-04 2.8222962e-04
 1.9323487e-04 5.3818869e-05 5.2833522e-05 3.7636466e-05 2.3769278e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.9275014e-01 4.6703964e-02 2.2008268e-02 5.2220006e-03 1.3207920e-03
 7.9052435e-04 3.7547984e-04 3.4582382e-04 1.7142524e-04 1.3024639e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.39113057 0.14164582 0.10507447 0.00232903 0.00200787 0.00184722
 0.00179943 0.00151847 0.00063234 0.00047011]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.40776312 0.04555924 0.01072461 0.00451332 0.00127211 0.00082587
 0.000709   0.00065543 0.00054778 0.0005104 ]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.1954416e-01 1.6695786e-04 1.2769931e-05 9.0519225e-06 4.0000073e-06
 1.2865221e-06 1.1789949e-06 7.6147188e-07 6.7883974e-07 6.5895875e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.1347495e-01 3.4061125e-01 2.8130296e-03 5.9244782e-04 5.1255658e-04
 1.8811355e-04 1.0597073e-04 8.4218220e-05 7.7281802e-05 7.6156837e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.4881219e-01 8.1274305e-03 3.4696961e-04 1.0632636e-04 9.0984620e-05
 6.2631108e-05 2.1870488e-05 1.6608767e-05 1.5640155e-05 1.5424484e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.6133113e-01 1.2538492e-05 7.7603618e-06 2.4120211e-06 1.4500744e-06
 1.1996252e-06 1.0058636e-06 9.8270527e-07 8.2155714e-07 7.2366214e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.7322321e-01 1.5090831e-02 2.7189218e-03 1.4990588e-03 5.1627125e-05
 4.4730030e-05 4.1518393e-05 3.2405682e-05 2.8670878e-05 1.6645165e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.88636196e-01 3.96679202e-03 2.42570252e-03 1.57540280e-03
 6.69484260e-04 6.32531359e-04 6.06325571e-04 2.82066525e-04
 2.65041686e-04 1.09353685e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [5.0627494e-01 1.8814606e-04 3.2948297e-05 2.0836906e-05 1.3122236e-05
 1.0774310e-05 1.0299212e-05 1.0191345e-05 9.5210717e-06 9.2103437e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [5.2442086e-01 1.1006092e-02 5.6998059e-04 4.1602936e-05 1.9582689e-05
 1.4226574e-05 1.3918237e-05 1.2588093e-05 9.1079082e-06 8.9292917e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.47800732 0.2906937  0.09246437 0.05574802 0.0299127  0.02912274
 0.01034276 0.0038716  0.00276395 0.00242049]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.46160978 0.46287808 0.20106879 0.09272423 0.06843005 0.04025558
 0.01676976 0.00564647 0.00470967 0.00381244]  taking action:  1
Adding child.
Leaf selection - depth:  22
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  21412

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  0.030417  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.797079

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  84.0
Iteration TIME (sec):  1.1711462279999978
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.27513205 -0.13365373 -0.63653218 -0.66021022 -0.49288104 -0.49468017
 -0.42241264 -0.49754197 -0.49761253 -0.49764222]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11570936  0.02726565 -0.1667786   0.0052621  -0.4424208  -0.44418892
 -0.4518526  -0.45887637 -0.46359092  0.04271232]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.11160147  0.14835712 -0.29065013  0.09873471  0.05800818  0.03425614
  0.0270916   0.01905623  0.00928146  0.00828469]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.4080404e-01 6.8500420e-05 4.0990162e-05 2.5475754e-05 1.8872774e-05
 1.3674685e-05 3.3285748e-06 1.1941696e-06 9.7769885e-07 9.5075035e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.30989474 0.30700237 0.27433142 0.14649776 0.05274316 0.04100283
 0.04065722 0.03863913 0.0305332  0.02865923]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.34502256 0.05127961 0.0184422  0.00841336 0.00534667 0.00501596
 0.00337651 0.00262658 0.00174005 0.00147075]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.35171753 0.00898859 0.0073954  0.00446062 0.00213791 0.00131354
 0.00115249 0.0011277  0.00108534 0.00074299]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.53735685e-01 8.31814557e-02 9.84827522e-03 4.97770542e-03
 6.22120919e-04 4.74152068e-04 3.90968256e-04 1.56282418e-04
 1.35094408e-04 1.05075254e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.5154602e-01 3.3837110e-01 8.2157523e-04 5.5894209e-04 2.8722524e-04
 1.9665521e-04 5.4771488e-05 5.3768701e-05 3.8302653e-05 2.4190007e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.8613808e-01 4.7708463e-02 2.2481617e-02 5.3343144e-03 1.3491993e-03
 8.0752675e-04 3.8355560e-04 3.5326174e-04 1.7511222e-04 1.3304771e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.38424522 0.14482926 0.10743599 0.00238137 0.00205299 0.00188874
 0.00183987 0.00155259 0.00064656 0.00048068]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.40011734 0.04663136 0.01097699 0.00461953 0.00130204 0.00084531
 0.00072568 0.00067086 0.00056067 0.00052241]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.1118711e-01 1.7108090e-04 1.3085287e-05 9.2754608e-06 4.0987879e-06
 1.3182930e-06 1.2081103e-06 7.8027648e-07 6.9560377e-07 6.7523183e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [4.0389511e-01 3.4816083e-01 2.8861074e-03 6.0783862e-04 5.2587193e-04
 1.9300042e-04 1.0872367e-04 8.6406064e-05 7.9289450e-05 7.8135257e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.3798211e-01 8.3630579e-03 3.5702880e-04 1.0940893e-04 9.3622402e-05
 6.4446882e-05 2.2504548e-05 1.7090280e-05 1.6093587e-05 1.5871663e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.4936568e-01 1.2924382e-05 7.9991969e-06 2.4862543e-06 1.4947025e-06
 1.2365454e-06 1.0368204e-06 1.0129494e-06 8.4684166e-07 7.4593385e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.5998436e-01 1.5585743e-02 2.8080903e-03 1.5482212e-03 5.3320266e-05
 4.6196976e-05 4.2880012e-05 3.3468441e-05 2.9611156e-05 1.7191052e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.7379339e-01 4.1060201e-03 2.5108408e-03 1.6306969e-03 6.9298205e-04
 6.5473223e-04 6.2760664e-04 2.9196660e-04 2.7434423e-04 1.1319182e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.8947012e-01 1.9524839e-04 3.4192064e-05 2.1623478e-05 1.3617587e-05
 1.1181029e-05 1.0687996e-05 1.0576057e-05 9.8804821e-06 9.5580244e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [5.05278945e-01 1.14555033e-02 5.93254634e-04 4.33017049e-05
 2.03823092e-05 1.48074878e-05 1.44865598e-05 1.31021025e-05
 9.47981061e-06 9.29390080e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.45932767 0.30361965 0.09657589 0.05822691 0.0312428  0.03041771
 0.01080266 0.00404375 0.00288685 0.00252812]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.4798019  0.29273534 0.21088274 0.09724999 0.07177005 0.04222042
 0.01758827 0.00592207 0.00493955 0.00399852]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [6.04111791e-01 1.51207481e-04 1.10076828e-04 1.00475685e-04
 7.93979489e-05 7.75279404e-05 7.31917098e-05 7.25634309e-05
 6.26471883e-05 5.32556696e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [6.4329731e-01 7.2888106e-05 9.0516060e-06 5.6514864e-06 5.1548536e-06
 4.9138444e-06 4.7826879e-06 4.0304399e-06 3.5545177e-06 2.7666140e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.795668

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  85.0
Iteration TIME (sec):  0.005961723996733781
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.27141378 -0.12955902 -0.63635544 -0.66017235 -0.49283929 -0.49464897
 -0.42019804 -0.49752755 -0.49759853 -0.49762839]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11658453  0.02919511 -0.16405839  0.00612139 -0.44195077 -0.4437333
 -0.45145953 -0.45854065 -0.4632937   0.043061  ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.12257767  0.14761032 -0.28798312  0.09999253  0.05874716  0.03469254
  0.02743673  0.019299    0.0093997   0.00839023]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.3717668e-01 6.9500478e-05 4.1588592e-05 2.5847683e-05 1.9148303e-05
 1.3874325e-05 3.3771696e-06 1.2116037e-06 9.9197257e-07 9.6463066e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3066407  0.31161922 0.27845696 0.14870085 0.05353634 0.04161945
 0.04126864 0.0392202  0.03099238 0.02909022]  taking action:  1
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  796

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[63] == in2[63] && in1[63] == cin)? 1'b1 : 1'b0;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

LLM generates return in:  20.792132  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  86.0
Iteration TIME (sec):  21.893073241997627
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.26771707 -0.12877079 -0.63617972 -0.6601347  -0.49279778 -0.49461795
 -0.41799627 -0.49751322 -0.49758461 -0.49761464]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.11252905  0.03110909 -0.16136003  0.00697379 -0.44148448 -0.44328135
 -0.45106965 -0.45820764 -0.46299887  0.04340687]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.13341755  0.14134179 -0.28534928  0.10123472  0.05947697  0.03512352
  0.02777757  0.01953875  0.00951647  0.00849446]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.2799470e-01 7.0486349e-05 4.2178526e-05 2.6214333e-05 1.9419922e-05
 1.4071134e-05 3.4250750e-06 1.2287903e-06 1.0060438e-06 9.7831401e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.30970174 0.10808432 0.28252223 0.15087178 0.05431793 0.04222707
 0.04187113 0.03979279 0.03144484 0.02951492]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.34109434 0.05207469 0.01872814 0.00854381 0.00542957 0.00509373
 0.00342886 0.0026673  0.00176703 0.00149355]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.34754705 0.00913242 0.00751373 0.004532   0.00217212 0.00133455
 0.00117093 0.00114575 0.00110271 0.00075488]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.4938741e-01 8.4556445e-02 1.0011067e-02 5.0599873e-03 6.3240458e-04
 4.8198982e-04 3.9743097e-04 1.5886578e-04 1.3732752e-04 1.0681215e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.4568077e-01 3.4278804e-01 8.3562022e-04 5.6849734e-04 2.9213543e-04
 2.0001708e-04 5.5707820e-05 5.4687887e-05 3.8957445e-05 2.4603542e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.7995610e-01 4.8692249e-02 2.2945205e-02 5.4443120e-03 1.3770208e-03
 8.2417863e-04 3.9146480e-04 3.6054628e-04 1.7872317e-04 1.3579126e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.37782794 0.14794423 0.1097467  0.00243259 0.00209715 0.00192936
 0.00187944 0.00158599 0.00066046 0.00049102]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.39301628 0.04767939 0.01122369 0.00472335 0.00133131 0.0008643
 0.00074199 0.00068594 0.00057327 0.00053415]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [4.0345502e-01 1.7510688e-04 1.3393217e-05 9.4937368e-06 4.1952430e-06
 1.3493158e-06 1.2365402e-06 7.9863844e-07 7.1197314e-07 6.9112178e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.9514035e-01 3.5552394e-01 2.9573801e-03 6.2284927e-04 5.3885841e-04
 1.9776660e-04 1.1140861e-04 8.8539877e-05 8.1247512e-05 8.0064819e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.2810455e-01 8.5922256e-03 3.6681225e-04 1.1240700e-04 9.6187876e-05
 6.6212880e-05 2.3121225e-05 1.7558594e-05 1.6534588e-05 1.6306585e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.3851817e-01 1.3299079e-05 8.2311062e-06 2.5583347e-06 1.5380361e-06
 1.2723947e-06 1.0668795e-06 1.0423163e-06 8.7139290e-07 7.6755964e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.4806427e-01 1.6065415e-02 2.8945133e-03 1.5958699e-03 5.4961271e-05
 4.7618752e-05 4.4199704e-05 3.4498480e-05 3.0522478e-05 1.7720131e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.6053398e-01 4.2406791e-03 2.5931851e-03 1.6841765e-03 7.1570877e-04
 6.7620451e-04 6.4818934e-04 3.0154182e-04 2.8334151e-04 1.1690401e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.7459489e-01 2.0210129e-04 3.5392150e-05 2.2382426e-05 1.4095542e-05
 1.1573465e-05 1.1063127e-05 1.0947259e-05 1.0227272e-05 9.8934961e-06]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.8851603e-01 1.1887937e-02 6.1564939e-04 4.4936303e-05 2.1151720e-05
 1.5366455e-05 1.5033414e-05 1.3596693e-05 9.8376640e-06 9.6447366e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.44317365 0.31601733 0.10051937 0.06060449 0.03251854 0.03165976
 0.01124377 0.00420887 0.00300473 0.00263135]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.4574658  0.3035288  0.22025983 0.1015743  0.07496137 0.04409778
 0.01837035 0.0061854  0.00515919 0.00417632]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [5.72939217e-01 1.59386676e-04 1.16031166e-04 1.05910673e-04
 8.36927866e-05 8.17216278e-05 7.71508421e-05 7.64885772e-05
 6.60359365e-05 5.61364031e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [6.0498035e-01 7.7309509e-05 9.6006779e-06 5.9943063e-06 5.4675475e-06
 5.2119185e-06 5.0728063e-06 4.2749271e-06 3.7701350e-06 2.9344371e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793276

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  87.0
Iteration TIME (sec):  0.005628986000374425
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.26404155 -0.12488396 -0.63600501 -0.66009727 -0.4927565  -0.4945871
 -0.41580712 -0.49749896 -0.49757077 -0.49760097]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.1134191   0.03300793 -0.15868297  0.00781944 -0.44102192 -0.442833
 -0.45068285 -0.45787728 -0.4627064   0.04375001]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.14412606  0.14081031 -0.28274736  0.10246186  0.06019793  0.03554927
  0.02811429  0.01977559  0.00963182  0.00859743]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [ 0.24714684 -0.10240841  0.19489923  0.0445467   0.04200257  0.03817789
  0.03225588  0.02182509  0.01170586  0.01008662]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.400401   0.20410635 0.15350907 0.07026977 0.06325332 0.02106053
 0.0058128  0.00515308 0.0026829  0.00181509]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  11

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63;

    full_adder FA1(sum[0], c1, in1[0], in2[0], cin);
    full_adder FA2(sum[1], c2, in1[1], in2[1], c1);
    full_adder FA3(sum[2], c3, in1[2], in2[2], c2);
    full_adder FA4(sum[3], c4, in1[3], in2[3], c3);
    full_adder FA5(sum[4], c5, in1[4], in2[4], c4);
    full_adder FA6(sum[5], c6, in1[5], in2[5], c5);
    full_adder FA7(sum[6], c7, in1[6], in2[6], c6);
    full_adder FA8(sum[7], c8, in1[7], in2[7], c7);
    full_adder FA9(sum[8], c9, in1[8], in2[8], c8);
    full_adder FA10(sum[9], c10, in1[9], in2[9], c9);
    full_adder FA11(sum[10], c11, in1[10], in2[10], c10);
    full_adder FA12(sum[11], c12, in1[11], in2[11], c11);
    full_adder FA13(sum[12], c13, in1[12], in2[12], c12);
    full_adder FA14(sum[13], c14, in1[13], in2[13], c13);
    full_adder FA15(sum[14], c15, in1[14], in2[14], c14);
    full_adder FA16(sum[15], c16, in1[15], in2[15], c15);
    full_adder FA17(sum[16], c17, in1[16], in2[16], c16);
    full_adder FA18(sum[17], c18, in1[17], in2[17], c17);
    full_adder FA19(sum[18], c19, in1[18], in2[18], c18);
    full_adder FA20(sum[19], c20, in1[19], in2[19], c19);
    full_adder FA21(sum[20], c21, in1[20], in2[20], c20);
    full_adder FA22(sum[21], c22, in1[21], in2[21], c21);
    full_adder FA23(sum[22], c23, in1[22], in2[22], c22);
    full_adder FA24(sum[23], c24, in1[23], in2[23], c23);
    full_adder FA25(sum[24], c25, in1[24], in2[24], c24);
    full_adder FA26(sum[25], c26, in1[25], in2[25], c25);
    full_adder FA27(sum[26], c27, in1[26], in2[26], c26);
    full_adder FA28(sum[27], c28, in1[27], in2[27], c27);
    full_adder FA29(sum[28], c29, in1[28], in2[28], c28);
    full_adder FA30(sum[29], c30, in1[29],
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:41: syntax error\nI give up.\n'
LLM generates return in:  1342.704825  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  88.0
Iteration TIME (sec):  1341.508431579001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.26038685 -0.13804156 -0.63583128 -0.66006005 -0.49271546 -0.49455643
 -0.41363037 -0.49748479 -0.497557   -0.49758738]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08867733  0.03489199 -0.15602678  0.00865851 -0.44056293 -0.44238812
 -0.45029905 -0.45754945 -0.46241614  0.04409049]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.0762338   0.14138925 -0.28017622  0.10367446  0.06091035  0.03596999
  0.02844701  0.02000963  0.00974581  0.00869918]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.2483402e-01 7.1458620e-05 4.2760330e-05 2.6575930e-05 1.9687797e-05
 1.4265229e-05 3.4723198e-06 1.2457401e-06 1.0199210e-06 9.9180863e-07]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3064629  0.11032675 0.2865298  0.1530119  0.05508843 0.04282606
 0.04246508 0.04035725 0.03189089 0.02993359]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.33734983 0.05285781 0.01900979 0.00867229 0.00551123 0.00517033
 0.00348042 0.00270742 0.00179361 0.00151601]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.3435779  0.00927402 0.00763023 0.00460226 0.0022058  0.00135525
 0.00118909 0.00116351 0.00111981 0.00076658]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.4525597e-01 8.5909434e-02 1.0171254e-02 5.1409523e-03 6.4252369e-04
 4.8970216e-04 4.0379030e-04 1.6140779e-04 1.3952490e-04 1.0852126e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.4020001e-01 3.4713191e-01 8.4943301e-04 5.7789456e-04 2.9696443e-04
 2.0332336e-04 5.6628673e-05 5.5591881e-05 3.9601411e-05 2.5010238e-05]  taking action:  1
Leaf selection - depth:  9
Leaf selection - action scores:  [8.4290028e-01 7.4862107e-03 3.0677440e-03 1.3894027e-03 1.1259626e-03
 2.8076649e-04 2.3325425e-04 1.2291259e-04 1.0582802e-04 7.4533207e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [8.8274586e-01 2.4235289e-01 5.9073888e-02 4.0104096e-03 1.1770393e-03
 1.1251115e-03 9.3370420e-04 9.2330511e-04 9.1728085e-04 2.3864524e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [1.2292497e+00 2.2063084e-02 4.0991106e-03 1.7386412e-03 7.1561948e-04
 4.0736215e-04 2.9353285e-04 2.9018836e-04 2.3290976e-04 1.9796676e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [1.9515615e+00 4.5400848e-05 2.9089849e-06 2.0084567e-06 7.4329137e-07
 2.7009514e-07 1.9910705e-07 1.7937666e-07 1.4131089e-07 1.3687340e-07]  taking action:  0
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1343

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.850339  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.794815

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  89.0
Iteration TIME (sec):  4.984440623004048
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.25675262 -0.13413546 -0.63565854 -0.66002304 -0.49267465 -0.49452594
 -0.41146582 -0.4974707  -0.49754332 -0.49757386]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09005156  0.03676163 -0.15339091  0.00949116 -0.44010746 -0.44194663
 -0.4499182  -0.45722416 -0.46212813  0.04442835]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.06786621  0.14085725 -0.2776348   0.10487306  0.06161455  0.03638584
  0.02877589  0.02024096  0.00985849  0.00879975]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.2180271e-01 7.2417839e-05 4.3334319e-05 2.6932668e-05 1.9952075e-05
 1.4456716e-05 3.5189300e-06 1.2624621e-06 1.0336117e-06 1.0051220e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.30336994 0.11253828 0.29048216 0.15512253 0.05584831 0.0434168
 0.04305083 0.04091394 0.03233079 0.03034649]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.33377513 0.0536295  0.01928732 0.0087989  0.00559169 0.00524581
 0.00353124 0.00274694 0.00181979 0.00153815]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.33979434 0.00941348 0.00774497 0.00467147 0.00223897 0.00137563
 0.00120697 0.00118101 0.00113665 0.00077811]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.4132397e-01 8.7241441e-02 1.0328958e-02 5.2206614e-03 6.5248593e-04
 4.9729488e-04 4.1005097e-04 1.6391039e-04 1.4168820e-04 1.1020385e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.4410501e-01 3.0950525e-01 8.6302485e-04 5.8714149e-04 3.0171618e-04
 2.0657676e-04 5.7534791e-05 5.6481407e-05 4.0235074e-05 2.5410427e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.7415949e-01 4.9656544e-02 2.3399610e-02 5.5521308e-03 1.4042913e-03
 8.4050052e-04 3.9921733e-04 3.6768650e-04 1.8226258e-04 1.3848045e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.371828   0.15099496 0.11200976 0.00248275 0.00214039 0.00196915
 0.0019182  0.00161869 0.00067408 0.00050114]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.38639808 0.04870487 0.01146509 0.00482494 0.00135994 0.00088289
 0.00075795 0.00070069 0.0005856  0.00054564]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.9627382e-01 1.7904237e-04 1.3694226e-05 9.7071061e-06 4.2895299e-06
 1.3796414e-06 1.2643312e-06 8.1658760e-07 7.2797457e-07 7.0665459e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.8709915e-01 3.6271372e-01 3.0269749e-03 6.3750648e-04 5.5153912e-04
 2.0242056e-04 1.1403034e-04 9.0623449e-05 8.3159481e-05 8.1948951e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.1904759e-01 8.8154366e-03 3.7634140e-04 1.1532714e-04 9.8686673e-05
 6.7932975e-05 2.3721876e-05 1.8014736e-05 1.6964128e-05 1.6730202e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.2862469e-01 1.3663505e-05 8.4566582e-06 2.6284390e-06 1.5801820e-06
 1.3072614e-06 1.0961145e-06 1.0708783e-06 8.9527111e-07 7.8859256e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.3725780e-01 1.6531177e-02 2.9784297e-03 1.6421366e-03 5.6554683e-05
 4.8999293e-05 4.5481120e-05 3.5498644e-05 3.1407373e-05 1.8233864e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.4859540e-01 4.3711918e-03 2.6729940e-03 1.7360094e-03 7.3773571e-04
 6.9701561e-04 6.6813827e-04 3.1082219e-04 2.9206171e-04 1.2050189e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.61306572e-01 2.08729325e-04 3.65528540e-05 2.31164704e-05
 1.45578133e-05 1.19530232e-05 1.14259492e-05 1.13062815e-05
 1.05626805e-05 1.02179583e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.7367784e-01 1.2305184e-02 6.3725765e-04 4.6513494e-05 2.1894111e-05
 1.5905793e-05 1.5561061e-05 1.4073916e-05 1.0182950e-05 9.9832514e-06]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.42902404 0.3279467  0.10431387 0.06289224 0.03374608 0.03285488
 0.01166821 0.00436775 0.00311816 0.00273068]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.43860957 0.31388113 0.2292537  0.10572188 0.07802226 0.04589843
 0.01912047 0.00643797 0.00536986 0.00434685]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [5.46908677e-01 1.67166174e-04 1.21694524e-04 1.11080059e-04
 8.77777420e-05 8.57103660e-05 8.09164922e-05 8.02219001e-05
 6.92590766e-05 5.88763614e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [5.7375306e-01 8.1491373e-05 1.0120003e-05 6.3185535e-06 5.7633015e-06
 5.4938446e-06 5.3472077e-06 4.5061688e-06 3.9740712e-06 3.0931685e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.799491

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  90.0
Iteration TIME (sec):  0.005958595997071825
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.25313853 -0.13034758 -0.63548674 -0.65998623 -0.49263407 -0.49449561
 -0.40931326 -0.49745669 -0.49752971 -0.49756042]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09135647  0.03861715 -0.15077499  0.01031752 -0.43965545 -0.44150847
 -0.4495402  -0.4569013  -0.4618423   0.04476366]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.05959332  0.14034638 -0.27512217  0.1060581   0.06231077  0.03679699
  0.02910105  0.02046968  0.00996989  0.00889919]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.18892211e-01 7.33645211e-05 4.39008036e-05 2.72847446e-05
 2.02128958e-05 1.46457005e-05 3.56493115e-06 1.27896556e-06
 1.04712365e-06 1.01826151e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.30041212 0.11472009 0.2943814  0.15720479 0.05659799 0.0439996
 0.04362872 0.04146314 0.03276478 0.03075384]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.33035773 0.05439024 0.01956091 0.00892372 0.005671   0.00532023
 0.00358133 0.00278591 0.00184561 0.00155997]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.33618236 0.00955092 0.00785805 0.00473968 0.00227166 0.00139571
 0.00122459 0.00119825 0.00115324 0.00078947]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.37575883e-01 8.85534212e-02 1.04842894e-02 5.29917236e-03
 6.62298291e-04 5.04773401e-04 4.16217517e-04 1.66375350e-04
 1.43818979e-04 1.11861154e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.3876610e-01 3.1301200e-01 8.7640586e-04 5.9624499e-04 3.0639421e-04
 2.0977968e-04 5.8426856e-05 5.7357141e-05 4.0858911e-05 2.5804411e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.6870986e-01 5.0602470e-02 2.3845358e-02 5.6578955e-03 1.4310421e-03
 8.5651153e-04 4.0682216e-04 3.7469069e-04 1.8573458e-04 1.4111842e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.366202   0.15398523 0.114228   0.00253192 0.00218278 0.00200814
 0.00195619 0.00165075 0.00068743 0.00051107]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.38021043 0.0497092  0.01170151 0.00492443 0.00138798 0.0009011
 0.00077358 0.00071514 0.00059767 0.00055689]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.8958102e-01 1.8289317e-04 1.3988760e-05 9.9158842e-06 4.3817886e-06
 1.4093145e-06 1.2915242e-06 8.3415063e-07 7.4363169e-07 7.2185316e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.79679978e-01 3.69741887e-01 3.09500541e-03 6.51834300e-04
 5.63934853e-04 2.06969911e-04 1.16593146e-04 9.26601861e-05
 8.50284632e-05 8.37907355e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.10703659e-01 9.03313514e-03 3.85635183e-04 1.18175150e-04
 1.01123755e-04 6.96105926e-05 2.43076902e-05 1.84596120e-05
 1.73830595e-05 1.71433567e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.1955316e-01 1.4018460e-05 8.6763475e-06 2.6967214e-06 1.6212324e-06
 1.3412218e-06 1.1245896e-06 1.0986978e-06 9.1852877e-07 8.0907887e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.2740172e-01 1.6984170e-02 3.0600457e-03 1.6871351e-03 5.8104415e-05
 5.0341991e-05 4.6727411e-05 3.6471392e-05 3.2268010e-05 1.8733515e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.3777215e-01 4.4979192e-03 2.7504882e-03 1.7863390e-03 7.5912382e-04
 7.1722316e-04 6.8750861e-04 3.1983340e-04 3.0052903e-04 1.2399543e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.49342012e-01 2.15153254e-04 3.76778189e-05 2.38279117e-05
 1.50058495e-05 1.23208938e-05 1.17775980e-05 1.16542478e-05
 1.08877621e-05 1.05324307e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.6042264e-01 1.2708739e-02 6.5815687e-04 4.8038928e-05 2.2612141e-05
 1.6427433e-05 1.6071395e-05 1.4535477e-05 1.0516906e-05 1.0310658e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.41649634 0.33945706 0.10797512 0.06509966 0.03493051 0.03400803
 0.01207774 0.00452105 0.0032276  0.00282653]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.42242366 0.32384235 0.23790778 0.10971278 0.08096752 0.04763105
 0.01984225 0.00668099 0.00557256 0.00451094]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [5.24750531e-01 1.74599365e-04 1.27105784e-04 1.16019335e-04
 9.16808567e-05 8.95215562e-05 8.45145114e-05 8.37890402e-05
 7.23387420e-05 6.14943492e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [5.4767692e-01 8.5468884e-05 1.0613950e-05 6.6269554e-06 6.0446018e-06
 5.7619932e-06 5.6081990e-06 4.7261096e-06 4.1680414e-06 3.2441426e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.796113

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  91.0
Iteration TIME (sec):  0.006030197997461073
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.24954425 -0.12667271 -0.63531589 -0.65994962 -0.49259371 -0.49446545
 -0.40717249 -0.49744275 -0.49751617 -0.49754705]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.09259675  0.04045884 -0.14817849  0.01113774 -0.43920678 -0.4410736
 -0.44916505 -0.45658088 -0.4615586   0.04509648]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.05141175  0.13985528 -0.27263725  0.10723004  0.06299931  0.0372036
  0.02942262  0.02069587  0.01008005  0.00899752]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [3.1609464e-01 7.4299132e-05 4.4460074e-05 2.7632334e-05 2.0470396e-05
 1.4832278e-05 3.6103461e-06 1.2952588e-06 1.0604633e-06 1.0312335e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.29758    0.11687338 0.2982297  0.15925984 0.05733786 0.04457478
 0.04419906 0.04200516 0.03319309 0.03115587]  taking action:  2
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  58

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign c[0] = cin;
    assign cout = c[63];

    genvar i;
    generate for (i = 0; i < 64; i = i + 1) begin: add
        if (i == 0)
            assign sum[0] = in1[0] & in2[0] & c[i];
        else
            assign sum[i] = in1[i] ^ in2[i] ^ c[i-1];
        assign c[i+1] = (in1[i] & in2[i]) | (in1[i] & c[i]) | (in2[i] & c[i]);
    end endgenerate

endmodule
Verilog compilation failed, error:  195
Compilation output:  b"/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:16: error: Unable to bind wire/reg/memory `c[i]' in `tb_adder_64.uut.add[0].genblk2'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:16: error: Unable to elaborate r-value: ((in1['sd0])&(in2['sd0]))&(c[i])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[1].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[2].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[3].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[4].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[5].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[6].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[7].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[8].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[9].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[10].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[11].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[12].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[13].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[14].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[15].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[16].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[17].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[18].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[19].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[20].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[21].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[22].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[23].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[24].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[25].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[26].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[27].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[28].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[29].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[30].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[31].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[32].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[33].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[34].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[35].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[36].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[37].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[38].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[39].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[40].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[41].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[42].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[43].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[44].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[45].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[46].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[47].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[48].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[49].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[50].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[51].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[52].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[53].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[54].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[55].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[56].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[57].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[58].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[59].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[60].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[61].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[62].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:19: error: Net c[(i)+('sd1)] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to bind wire/reg/memory `c[(i)-('sd1)]' in `tb_adder_64.uut.add[63].genblk3'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:18: error: Unable to elaborate r-value: ((in1[i])^(in2[i]))^(c[(i)-('sd1)])\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:10: error: Net c['sd0] is not defined in this context.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:11: error: Unable to bind wire/reg/memory `c['sd63]' in `tb_adder_64.uut'\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/1093927_adder_64.v:11: error: Unable to elaborate r-value: c['sd63]\n195 error(s) during elaboration.\n"
LLM generates return in:  83.095186  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  92.0
Iteration TIME (sec):  84.09479328299494
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.24596944 -0.13904792 -0.63514597 -0.65991322 -0.49255357 -0.49443545
 -0.40504333 -0.49742889 -0.49750271 -0.49753376]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07037245  0.04228708 -0.145601    0.01195194 -0.4387614  -0.44064188
 -0.44879264 -0.4562628  -0.46127698  0.04542686]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.04331869  0.1125534  -0.2701792   0.10838932  0.0636804   0.03760581
  0.02974071  0.02091961  0.01018903  0.0090948 ]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.8590280e-01 7.5222139e-05 4.5012392e-05 2.7975606e-05 2.0724696e-05
 1.5016536e-05 3.6551969e-06 1.3113496e-06 1.0736372e-06 1.0440443e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.30013144  0.11899924 -0.34898552  0.16128871  0.05806831  0.04514263
  0.04476212  0.04254028  0.03361595  0.03155277]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.32708648 0.05514049 0.01983073 0.00904681 0.00574923 0.00539361
 0.00363073 0.00282434 0.00187106 0.00158148]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.33272937 0.0096864  0.00796951 0.00480691 0.00230388 0.00141551
 0.00124196 0.00121525 0.0011696  0.00080067]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.3399773e-01 8.9846238e-02 1.0637353e-02 5.3765364e-03 6.7196740e-04
 5.1214278e-04 4.2229399e-04 1.6880431e-04 1.4591863e-04 1.1349425e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.3375490e-01 3.1646600e-01 8.8958570e-04 6.0521165e-04 3.1100190e-04
 2.1293445e-04 5.9305505e-05 5.8219703e-05 4.1473366e-05 2.6192471e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.6357385e-01 5.1531032e-02 2.4282923e-02 5.7617184e-03 1.4573019e-03
 8.7222864e-04 4.1428741e-04 3.8156632e-04 1.8914283e-04 1.4370796e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.36091268 0.15691856 0.11640396 0.00258015 0.00222436 0.0020464
 0.00199345 0.00168219 0.00070053 0.0005208 ]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.37440848 0.05069364 0.01193325 0.00502195 0.00141547 0.00091894
 0.0007889  0.0007293  0.00060951 0.00056792]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.8332364e-01 1.8666458e-04 1.4277219e-05 1.0120358e-05 4.4721442e-06
 1.4383755e-06 1.3181564e-06 8.5135144e-07 7.5896594e-07 7.3673834e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.7280691e-01 3.7661883e-01 3.1615722e-03 6.6585385e-04 5.7606382e-04
 2.1142137e-04 1.1910081e-04 9.4653100e-05 8.6857246e-05 8.5592888e-05]  taking action:  1
Leaf selection - depth:  14
Leaf selection - action scores:  [1.9475565e+00 4.0475926e-03 5.3595427e-06 1.9448335e-06 4.6926297e-07
 4.0265786e-07 3.1131131e-07 3.0264627e-07 2.5976527e-07 2.1863752e-07]  taking action:  0
Adding child.
Leaf selection - depth:  15
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  17

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1+in2+cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  2.707011  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793207

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  93.0
Iteration TIME (sec):  3.8384213669996825
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.24241381 -0.13535675 -0.63497696 -0.659877   -0.49251364 -0.49440561
 -0.40292558 -0.49741511 -0.49748932 -0.49752053]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07198362  0.0441021  -0.14304212  0.01276027 -0.43831924 -0.44021332
 -0.44842288 -0.45594698 -0.4609974   0.04575486]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.03531122  0.11273694 -0.26774716  0.10953633  0.06435429  0.03800377
  0.03005544  0.02114099  0.01029685  0.00919104]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.8398103e-01 7.6133962e-05 4.5558019e-05 2.8314718e-05 2.0975915e-05
 1.5198562e-05 3.6995038e-06 1.3272454e-06 1.0866515e-06 1.0566999e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.2973183   0.1210987  -0.3471095   0.16329238  0.05878968  0.04570343
  0.0453182   0.04306875  0.03403356  0.03194475]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.32395118 0.05588066 0.02009692 0.00916825 0.0058264  0.00546601
 0.00367946 0.00286225 0.00189618 0.00160271]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.32942402 0.00982001 0.00807944 0.00487321 0.00233566 0.00143503
 0.00125909 0.00123201 0.00118573 0.00081172]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.30577016e-01 9.11207125e-02 1.07882442e-02 5.45280287e-03
 6.81499310e-04 5.19407564e-04 4.28284256e-04 1.71198801e-04
 1.47988496e-04 1.15104165e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.2903969e-01 3.1986961e-01 9.0257300e-04 6.1404728e-04 3.1554233e-04
 2.1604315e-04 6.0171325e-05 5.9069673e-05 4.2078849e-05 2.6574862e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.5872245e-01 5.2443158e-02 2.4712743e-02 5.8637038e-03 1.4830969e-03
 8.8766753e-04 4.2162050e-04 3.8832022e-04 1.9249076e-04 1.4625167e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.35592765 0.15979804 0.11853999 0.0026275  0.00226518 0.00208395
 0.00203003 0.00171306 0.00071338 0.00053036]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.36895388 0.05165932 0.01216057 0.00511762 0.00144243 0.00093645
 0.00080393 0.00074319 0.00062112 0.00057874]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.7745637e-01 1.9036126e-04 1.4559962e-05 1.0320779e-05 4.5607103e-06
 1.4668609e-06 1.3442610e-06 8.6821154e-07 7.7399642e-07 7.5132863e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.7852612e-01 2.8890264e-01 3.2267661e-03 6.7958422e-04 5.8794272e-04
 2.1578105e-04 1.2155676e-04 9.6604919e-05 8.8648303e-05 8.7357876e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [4.0298378e-01 9.2457077e-03 3.9471019e-04 1.2095612e-04 1.0350346e-04
 7.1248709e-05 2.4879713e-05 1.8894014e-05 1.7792128e-05 1.7546783e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.11195815e-01 1.43646475e-05 8.89061084e-06 2.76331730e-06
 1.66126893e-06 1.37434347e-06 1.15236151e-06 1.12583029e-06
 9.41211965e-07 8.29059161e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.1836447e-01 1.7425390e-02 3.1395403e-03 1.7309639e-03 5.9613867e-05
 5.1649789e-05 4.7941307e-05 3.7418857e-05 3.3106277e-05 1.9220181e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.2790082e-01 4.6211733e-03 2.8258581e-03 1.8352889e-03 7.7992561e-04
 7.3687680e-04 7.0634799e-04 3.2859758e-04 3.0876425e-04 1.2739320e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.3849522e-01 2.2139087e-04 3.8770158e-05 2.4518720e-05 1.5440892e-05
 1.2678095e-05 1.2119049e-05 1.1992122e-05 1.1203415e-05 1.0837782e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.48487759e-01 1.30998688e-02 6.78412558e-04 4.95173954e-05
 2.33080609e-05 1.69330106e-05 1.65660149e-05 1.49828265e-05
 1.08405784e-05 1.06279822e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.40530294 0.35058975 0.11151622 0.06723464 0.03607608 0.03512334
 0.01247384 0.00466932 0.00333345 0.00291922]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.4083379  0.33345377 0.24625796 0.11356352 0.08380935 0.04930282
 0.02053868 0.00691549 0.00576815 0.00466927]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [5.0559342e-01 1.8172878e-04 1.3229589e-04 1.2075675e-04 9.5424461e-05
 9.3176990e-05 8.7965491e-05 8.7210399e-05 7.5292548e-05 6.4005348e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [5.2547991e-01 8.9269335e-05 1.1085908e-05 6.9216289e-06 6.3133807e-06
 6.0182056e-06 5.8575724e-06 4.9362607e-06 4.3533773e-06 3.3883964e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.800461

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  94.0
Iteration TIME (sec):  0.005876891998923384
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.23887703 -0.13177101 -0.63480884 -0.65984098 -0.49247392 -0.49437594
 -0.40081907 -0.49740139 -0.497476   -0.49750738]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0735221   0.04590425 -0.14050144  0.01356285 -0.43788022 -0.43978778
 -0.44805577 -0.45563343 -0.4607198   0.04608052]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.02738678  0.11290705 -0.26534033  0.11067145  0.06502119  0.0383976
  0.0303669   0.02136008  0.01040356  0.00928629]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.8212053e-01 7.7034980e-05 4.6097182e-05 2.8649814e-05 2.1224158e-05
 1.5378433e-05 3.7432865e-06 1.3429528e-06 1.0995118e-06 1.0692056e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.29462045  0.1231727  -0.3452562   0.16527176  0.05950231  0.04625744
  0.04586753  0.04359082  0.0344461   0.03233197]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.32094264 0.05661116 0.02035964 0.0092881  0.00590257 0.00553747
 0.00372756 0.00289966 0.00192097 0.00162366]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.32625607 0.00995183 0.0081879  0.00493863 0.00236701 0.0014543
 0.00127599 0.00124855 0.00120165 0.00082261]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.27302605e-01 9.23776180e-02 1.09370556e-02 5.52801834e-03
 6.90899789e-04 5.26572170e-04 4.34191956e-04 1.73560300e-04
 1.50029824e-04 1.16691896e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.2459295e-01 3.2322487e-01 9.1537606e-04 6.2275759e-04 3.2001830e-04
 2.1910772e-04 6.1024857e-05 5.9907579e-05 4.2675740e-05 2.6951828e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.5413039e-01 5.3339686e-02 2.5135214e-02 5.9639453e-03 1.5084508e-03
 9.0284244e-04 4.2882821e-04 3.9495865e-04 1.9578142e-04 1.4875186e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.35121882 0.16262653 0.12063821 0.002674   0.00230528 0.00212084
 0.00206596 0.00174338 0.00072601 0.00053975]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.3638131  0.05260728 0.01238371 0.00521153 0.0014689  0.00095363
 0.00081868 0.00075683 0.00063252 0.00058936]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.7194031e-01 1.9398752e-04 1.4837321e-05 1.0517384e-05 4.6475889e-06
 1.4948038e-06 1.3698683e-06 8.8475042e-07 7.8874058e-07 7.6564095e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.7177849e-01 2.9330376e-01 3.2906688e-03 6.9304265e-04 5.9958629e-04
 2.2005435e-04 1.2396406e-04 9.8518074e-05 9.0403882e-05 8.9087902e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [3.9581391e-01 9.4535025e-03 4.0358119e-04 1.2367457e-04 1.0582967e-04
 7.2850002e-05 2.5438878e-05 1.9318653e-05 1.8192002e-05 1.7941144e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [4.0346354e-01 1.4702685e-05 9.0998301e-06 2.8283453e-06 1.7003629e-06
 1.4066853e-06 1.1794796e-06 1.1523240e-06 9.6336112e-07 8.4856907e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.1003865e-01 1.7855711e-02 3.2170718e-03 1.7737104e-03 6.1086037e-05
 5.2925287e-05 4.9125225e-05 3.8342918e-05 3.3923843e-05 1.9694826e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.1884959e-01 4.7412231e-03 2.8992691e-03 1.8829666e-03 8.0018671e-04
 7.5601961e-04 7.2469766e-04 3.3713400e-04 3.1678542e-04 1.3070265e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.2860243e-01 2.2745751e-04 3.9832550e-05 2.5190591e-05 1.5864009e-05
 1.3025506e-05 1.2451140e-05 1.2320735e-05 1.1510415e-05 1.1134763e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.37667936e-01 1.34796537e-02 6.98080810e-04 5.09529782e-05
 2.39837973e-05 1.74239231e-05 1.70462881e-05 1.54172012e-05
 1.11548634e-05 1.09361035e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.39522272 0.36137965 0.11494829 0.06930388 0.03718637 0.03620432
 0.01285774 0.00481302 0.00343604 0.00300907]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.3959378  0.3427498  0.25433412 0.1172879  0.08655793 0.05091974
 0.02121226 0.00714228 0.00595732 0.0048224 ]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [4.8881727e-01 1.8858885e-04 1.3728993e-04 1.2531519e-04 9.9026642e-05
 9.6694326e-05 9.1286100e-05 9.0502501e-05 7.8134770e-05 6.6421489e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [5.0628936e-01 9.2914466e-05 1.1538579e-05 7.2042599e-06 6.5711747e-06
 6.2639469e-06 6.0967550e-06 5.1378229e-06 4.5311385e-06 3.5267547e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.791042

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  95.0
Iteration TIME (sec):  0.005759243998909369
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.23535883 -0.12828627 -0.63464161 -0.65980515 -0.49243441 -0.49434641
 -0.39872362 -0.49738775 -0.49746275 -0.4974943 ]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07499237  0.04769367 -0.13797864  0.01435979 -0.4374443  -0.43936524
 -0.44769126 -0.4553221  -0.46044412  0.0464039 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.01954275  0.11306481 -0.26295793  0.11179505  0.06568132  0.03878744
  0.0306752   0.02157694  0.01050918  0.00938057]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.8031814e-01 7.7925593e-05 4.6630121e-05 2.8981040e-05 2.1469534e-05
 1.5556225e-05 3.7865632e-06 1.3584789e-06 1.1122233e-06 1.0815669e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.29203022  0.12522215 -0.34342486  0.1672277   0.0602065   0.04680488
  0.04641036  0.0441067   0.03485376  0.03271461]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.31805262 0.05733234 0.02061901 0.00940642 0.00597776 0.00560801
 0.00377505 0.0029366  0.00194544 0.00164435]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.32321626 0.01008192 0.00829493 0.00500319 0.00239796 0.00147331
 0.00129267 0.00126487 0.00121736 0.00083337]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.2416427e-01 9.3617633e-02 1.1083867e-02 5.6022229e-03 7.0017396e-04
 5.3364056e-04 4.4002026e-04 1.7589006e-04 1.5204374e-04 1.1825829e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.2039058e-01 3.2653388e-01 9.2800258e-04 6.3134782e-04 3.2443259e-04
 2.2213007e-04 6.1866624e-05 6.0733935e-05 4.3264401e-05 2.7323596e-05]  taking action:  1
Leaf selection - depth:  9
Leaf selection - action scores:  [7.52954066e-01 8.20073299e-03 3.36054526e-03 1.52201438e-03
 1.23343023e-03 3.07564274e-04 2.55517225e-04 1.34644011e-04
 1.15928786e-04 8.16470347e-05]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [7.5930321e-01 2.7095875e-01 6.6046610e-02 4.4837743e-03 1.3159700e-03
 1.2579128e-03 1.0439130e-03 1.0322864e-03 1.0255511e-03 2.6681350e-04]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [9.7445351e-01 2.5476255e-02 4.7332449e-03 2.0076099e-03 8.2632620e-04
 4.7038129e-04 3.3894254e-04 3.3508064e-04 2.6894102e-04 2.2859231e-04]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [1.2450824e+00 5.5604458e-05 3.5627645e-06 2.4598471e-06 9.1034229e-07
 3.3079766e-07 2.4385534e-07 2.1969065e-07 1.7306979e-07 1.6763499e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [1.2122619e+00 7.3772389e-01 1.0516521e-03 1.3200582e-04 9.2508533e-05
 8.9420515e-05 4.9036542e-05 1.9958807e-05 1.8485092e-05 1.5937820e-05]  taking action:  0
Adding child.
Leaf selection - depth:  14
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  287

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout,sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.463437  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793137

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  96.0
Iteration TIME (sec):  4.601887053999235
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.23185889 -0.12489836 -0.63447524 -0.65976951 -0.49239511 -0.49431704
 -0.39663905 -0.49737418 -0.49744957 -0.49748128]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07639861  0.04947075 -0.13547328  0.01515122 -0.43701136 -0.43894562
 -0.44732925 -0.4550129  -0.4601704   0.04672503]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.01177686  0.11321116 -0.26059926  0.11290746  0.06633489  0.03917339
  0.03098043  0.02179164  0.01061375  0.00947391]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.7857077e-01 7.8806130e-05 4.7157027e-05 2.9308518e-05 2.1712134e-05
 1.5732006e-05 3.8293501e-06 1.3738294e-06 1.1247912e-06 1.0937883e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.28954068  0.12724791 -0.34161466  0.16916104  0.06090256  0.047346
  0.04694691  0.04461662  0.03525671  0.03309283]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.31527346 0.05804458 0.02087516 0.00952328 0.00605203 0.00567768
 0.00382195 0.00297309 0.00196961 0.00166478]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.32029617 0.01021036 0.00840061 0.00506693 0.00242851 0.00149208
 0.00130914 0.00128098 0.00123287 0.00084398]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.2115287e-01 9.4841450e-02 1.1228761e-02 5.6754574e-03 7.0932700e-04
 5.4061651e-04 4.4577240e-04 1.7818938e-04 1.5403132e-04 1.1980422e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.2339227e-01 2.9697013e-01 9.4045955e-04 6.3982263e-04 3.2878757e-04
 2.2511180e-04 6.2697080e-05 6.1549188e-05 4.3845157e-05 2.7690372e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.4977520e-01 5.4221392e-02 2.5550699e-02 6.0625290e-03 1.5333855e-03
 9.1776642e-04 4.3591674e-04 4.0148731e-04 1.9901770e-04 1.5121074e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.34676164 0.16540667 0.12270055 0.00271972 0.00234468 0.00215709
 0.00210128 0.00177319 0.00073842 0.00054897]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.3589573  0.05353845 0.01260291 0.00530378 0.0014949  0.00097051
 0.00083317 0.00077023 0.00064372 0.00059979]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.6674175e-01 1.9754721e-04 1.5109588e-05 1.0710380e-05 4.7328726e-06
 1.5222336e-06 1.3950056e-06 9.0098570e-07 8.0321405e-07 7.7969054e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.65495235e-01 2.97621071e-01 3.35335382e-03 7.06244668e-04
 6.11008028e-04 2.24246251e-04 1.26325496e-04 1.00394784e-04
 9.21260216e-05 9.07849681e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [3.89131665e-01 9.65682697e-03 4.12261346e-04 1.26334548e-04
 1.08105836e-04 7.44168501e-05 2.59860117e-05 1.97341542e-05
 1.85832723e-05 1.83270186e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [3.9628217e-01 1.5033124e-05 9.3043463e-06 2.8919117e-06 1.7385781e-06
 1.4383002e-06 1.2059882e-06 1.1782222e-06 9.8501243e-07 8.6764044e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [4.0233558e-01 1.8275904e-02 3.2927778e-03 1.8154503e-03 6.2523555e-05
 5.4170756e-05 5.0281269e-05 3.9245228e-05 3.4722158e-05 2.0158295e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.1051090e-01 4.8583085e-03 2.9708669e-03 1.9294666e-03 8.1994745e-04
 7.7468960e-04 7.4259419e-04 3.4545956e-04 3.2460847e-04 1.3393037e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.1953152e-01 2.3336646e-04 4.0867333e-05 2.5845000e-05 1.6276130e-05
 1.3363886e-05 1.2774599e-05 1.2640807e-05 1.1809436e-05 1.1424025e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.2779967e-01 1.3849028e-02 7.1720988e-04 5.2349213e-05 2.4641011e-05
 1.7901380e-05 1.7513397e-05 1.5839669e-05 1.1460533e-05 1.1235778e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.3860827  0.3718566  0.11828081 0.07131311 0.03826446 0.03725393
 0.0132305  0.00495256 0.00353566 0.0030963 ]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.38491452 0.35175958 0.2621616  0.1208976  0.08922187 0.05248686
 0.02186509 0.0073621  0.00614066 0.00497081]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [4.73967403e-01 1.95208020e-04 1.42108576e-04 1.29713560e-04
 1.02502316e-04 1.00088146e-04 9.44900967e-05 9.36789947e-05
 8.08771729e-05 6.87527718e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [4.8948395e-01 9.6421893e-05 1.1974149e-05 7.4762133e-06 6.8192298e-06
 6.5004042e-06 6.3269013e-06 5.3317704e-06 4.7021845e-06 3.6598863e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.793211

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  97.0
Iteration TIME (sec):  0.005861746998562012
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.22837696 -0.12160333 -0.63430973 -0.65973405 -0.49235601 -0.49428783
 -0.3945652  -0.49736068 -0.49743645 -0.49746833]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07774465  0.05123571 -0.132985    0.01593724 -0.4365814  -0.43852884
 -0.44696972 -0.4547058  -0.4598985   0.04704398]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.00408667  0.11334698 -0.2582636   0.11400903  0.06698207  0.03955558
  0.03128269  0.02200424  0.01071731  0.00956634]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  685

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    reg [63:0] sum_temp;
    reg [63:0] in1_temp;
    reg [63:0] in2_temp;
    reg cin_temp;

    always @ (in1 or in2 or cin) begin
        sum_temp = in1 + in2 + cin;
        in1_temp = in1;
        in2_temp = in2;
        cin_temp = cin;
    end

    assign sum = sum_temp;
    assign cout = (in1_temp[63] == in2_temp[63] && in1_temp[63]!= sum_temp[63])? 1'b1 : 1'b0;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  83.185885  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  98.0
Iteration TIME (sec):  84.17928099600249
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.22491274 -0.12106415 -0.63414506 -0.65969877 -0.49231711 -0.49425876
 -0.39250191 -0.49734725 -0.49742341 -0.49745545]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0752604   0.0529888  -0.13051349  0.01671797 -0.43615434 -0.43811488
 -0.44661263 -0.4544008  -0.45962846  0.04736078]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.00352991  0.11376595 -0.25595027  0.00755002  0.06762306  0.03993411
  0.03158205  0.02221482  0.01081987  0.00965788]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.7687567e-01 7.9676945e-05 4.7678117e-05 2.9632378e-05 2.1952053e-05
 1.5905845e-05 3.8716648e-06 1.3890103e-06 1.1372202e-06 1.1058747e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.2871455   0.12925076 -0.33982497  0.17107251  0.06159074  0.04788099
  0.0474774   0.04512078  0.0356551   0.03346677]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.3125983  0.05874817 0.0211282  0.00963872 0.00612539 0.0057465
 0.00386828 0.00300912 0.00199348 0.00168495]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.31748807 0.0103372  0.00850496 0.00512987 0.00245867 0.00151061
 0.0013254  0.0012969  0.00124818 0.00085447]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.1826007e-01 9.6049666e-02 1.1371808e-02 5.7477592e-03 7.1836333e-04
 5.4750365e-04 4.5145125e-04 1.8045939e-04 1.5599358e-04 1.2133045e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.1928113e-01 2.9973176e-01 9.5275365e-04 6.4818666e-04 3.3308563e-04
 2.2805456e-04 6.3516687e-05 6.2353785e-05 4.4418321e-05 2.8052353e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.4563729e-01 5.5088993e-02 2.5959536e-02 6.1595361e-03 1.5579213e-03
 9.3245163e-04 4.4289188e-04 4.0791155e-04 2.0220219e-04 1.5363027e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.34253436 0.16814086 0.12472879 0.00276467 0.00238344 0.00219275
 0.00213602 0.0018025  0.00075062 0.00055805]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.35436097 0.0544537  0.01281836 0.00539444 0.00152046 0.0009871
 0.00084741 0.00078339 0.00065472 0.00061004]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.6183131e-01 2.0104391e-04 1.5377034e-05 1.0899958e-05 4.8166471e-06
 1.5491779e-06 1.4196979e-06 9.1693357e-07 8.1743133e-07 7.9349149e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.5962582e-01 3.0185911e-01 3.4148884e-03 7.1920437e-04 6.2222010e-04
 2.2836120e-04 1.2864359e-04 1.0223704e-04 9.3816547e-05 9.2450886e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [3.8288411e-01 9.8559577e-03 4.2076249e-04 1.2893966e-04 1.1033506e-04
 7.5951379e-05 2.6521864e-05 2.0141088e-05 1.8966473e-05 1.8704935e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [3.8958913e-01 1.5356454e-05 9.5044625e-06 2.9541104e-06 1.7759712e-06
 1.4692348e-06 1.2319263e-06 1.2035632e-06 1.0061979e-06 8.8630151e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [3.9518124e-01 1.8686648e-02 3.3667821e-03 1.8562521e-03 6.3928754e-05
 5.5388227e-05 5.1411327e-05 4.0127252e-05 3.5502529e-05 2.0611347e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [4.0279591e-01 4.9726367e-03 3.0407789e-03 1.9748721e-03 8.3924294e-04
 7.9292007e-04 7.6006935e-04 3.5358910e-04 3.3224735e-04 1.3708210e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.1117477e-01 2.3912948e-04 4.1876556e-05 2.6483245e-05 1.6678070e-05
 1.3693909e-05 1.3090069e-05 1.2952973e-05 1.2101071e-05 1.1706143e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.1875130e-01 1.4208802e-02 7.3584175e-04 5.3709155e-05 2.5281141e-05
 1.8366427e-05 1.7968367e-05 1.6251157e-05 1.1758258e-05 1.1527665e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.37774527 0.38204634 0.12152199 0.07326725 0.039313   0.03827478
 0.01359305 0.00508827 0.00363254 0.00318115]  taking action:  1
Adding child.
Leaf selection - depth:  21
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  198

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;


endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  0.803244  seconds
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.795762

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  99.0
Iteration TIME (sec):  1.9333001830018475
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.22146598 -0.1179088  -0.63398123 -0.65966366 -0.49227841 -0.49422983
 -0.39044901 -0.49733389 -0.49741043 -0.49744263]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07656619  0.05473021 -0.1280584   0.01749352 -0.4357301  -0.4377037
 -0.4462579  -0.4540978  -0.4593602   0.04767548]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0110749   0.11387926 -0.25365865  0.00809041  0.06825803  0.04030909
  0.0318786   0.02242341  0.01092146  0.00974857]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.7523023e-01 8.0538339e-05 4.8193571e-05 2.9952736e-05 2.2189381e-05
 1.6077805e-05 3.9135216e-06 1.4040271e-06 1.1495148e-06 1.1178304e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.28483883  0.1312315  -0.338055    0.17296287  0.06227132  0.04841008
  0.04800203  0.04561937  0.03604909  0.03383658]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.31002074 0.05944344 0.02137824 0.00975279 0.00619788 0.00581451
 0.00391406 0.00304474 0.00201707 0.0017049 ]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.3147851  0.0104625  0.00860806 0.00519205 0.00248848 0.00152892
 0.00134147 0.00131262 0.00126331 0.00086482]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.1547824e-01 9.7242877e-02 1.1513079e-02 5.8191628e-03 7.2728744e-04
 5.5430521e-04 4.5705956e-04 1.8270122e-04 1.5793146e-04 1.2283772e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.1538370e-01 3.0245820e-01 9.6489111e-04 6.5644417e-04 3.3732894e-04
 2.3095982e-04 6.4325846e-05 6.3148131e-05 4.4984179e-05 2.8409720e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.4169912e-01 5.5943135e-02 2.6362034e-02 6.2550385e-03 1.5820765e-03
 9.4690913e-04 4.4975881e-04 4.1423613e-04 2.0533729e-04 1.5601228e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.33851787 0.17083128 0.12672459 0.00280891 0.00242158 0.00222784
 0.00217019 0.00183134 0.00076264 0.00056698]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.35000175 0.05535382 0.01303025 0.00548361 0.00154559 0.00100342
 0.00086142 0.00079634 0.00066554 0.00062013]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.5718331e-01 2.0448079e-04 1.5639909e-05 1.1086296e-05 4.8989887e-06
 1.5756615e-06 1.4439680e-06 9.3260877e-07 8.3140554e-07 8.0705638e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.5412705e-01 3.0602214e-01 3.4753336e-03 7.3193462e-04 6.3323369e-04
 2.3240330e-04 1.3092064e-04 1.0404669e-04 9.5477146e-05 9.4087314e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [3.7702605e-01 1.0051144e-02 4.2909521e-04 1.3149317e-04 1.1252012e-04
 7.7455508e-05 2.7047099e-05 2.0539959e-05 1.9342084e-05 1.9075365e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [3.8333160e-01 1.5673115e-05 9.7004522e-06 3.0150263e-06 1.8125930e-06
 1.4995315e-06 1.2573296e-06 1.2283816e-06 1.0269464e-06 9.0457775e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [3.8851345e-01 1.9088559e-02 3.4391943e-03 1.8961760e-03 6.5303720e-05
 5.6579509e-05 5.2517073e-05 4.0990304e-05 3.6266109e-05 2.1054653e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [3.9563051e-01 5.0843959e-03 3.1091198e-03 2.0192568e-03 8.5810467e-04
 8.1074075e-04 7.7715173e-04 3.6153593e-04 3.3971452e-04 1.4016299e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [4.0344298e-01 2.4475681e-04 4.2862022e-05 2.7106464e-05 1.7070548e-05
 1.4016162e-05 1.3398112e-05 1.3257790e-05 1.2385841e-05 1.1981618e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.1041523e-01 1.4559691e-02 7.5401348e-04 5.5035511e-05 2.5905463e-05
 1.8819988e-05 1.8412096e-05 1.6652482e-05 1.2048629e-05 1.1812342e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.38510495 0.24598563 0.12467892 0.07517061 0.04033428 0.03926909
 0.01394618 0.00522046 0.00372691 0.00326379]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.37503242 0.36050805 0.26976207 0.1244026  0.09180855 0.05400854
 0.022499   0.00757553 0.00631869 0.00511492]  taking action:  0
Leaf selection - depth:  22
Leaf selection - action scores:  [4.60701704e-01 2.01609975e-04 1.46769104e-04 1.33967580e-04
 1.05863932e-04 1.03370585e-04 9.75889561e-05 9.67512460e-05
 8.35295868e-05 7.10075619e-05]  taking action:  0
Leaf selection - depth:  23
Leaf selection - action scores:  [4.7460818e-01 9.9806144e-05 1.2394422e-05 7.7386167e-06 7.0585738e-06
 6.7285582e-06 6.5489653e-06 5.5189071e-06 4.8672237e-06 3.7883424e-06]  taking action:  0
Leaf selection - depth:  24
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.798272

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  100.0
Iteration TIME (sec):  0.005860686003870796
ROBUST FINAL VALUE, ITERATION:  1.0
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.790097

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.799404

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.21803641 -0.11483663 -0.63381821 -0.65962874 -0.49223989 -0.49420105
 -0.38840635 -0.49732059 -0.49739751 -0.49742987]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07781905  0.05646017 -0.12561941  0.01826398 -0.43530867 -0.4372952
 -0.44590548 -0.4537968  -0.45909372  0.04798811]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.01855046  0.1139842  -0.2513882   0.00862582  0.06888715  0.04068061
  0.03217242  0.02263008  0.01102212  0.00983842]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [2.7363205e-01 8.1390630e-05 4.8703572e-05 3.0269706e-05 2.2424196e-05
 1.6247946e-05 3.9549363e-06 1.4188849e-06 1.1616794e-06 1.1296597e-06]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [ 0.28261542  0.13319081 -0.3363042   0.17483279  0.06294455  0.04893345
  0.04852099  0.04611256  0.03643882  0.03420239]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.30753502 0.06013067 0.0216254  0.00986554 0.00626953 0.00588173
 0.00395931 0.00307994 0.00204039 0.00172461]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.31218073 0.01058632 0.00870993 0.0052535  0.00251793 0.00154702
 0.00135735 0.00132815 0.00127826 0.00087506]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [3.1280050e-01 9.8421626e-02 1.1652636e-02 5.8897007e-03 7.3610339e-04
 5.6102430e-04 4.6259988e-04 1.8491586e-04 1.5984586e-04 1.2432672e-04]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [3.1168240e-01 3.0515078e-01 9.7687775e-04 6.6459907e-04 3.4151951e-04
 2.3382901e-04 6.5124957e-05 6.3932610e-05 4.5543013e-05 2.8762650e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [3.3794510e-01 5.6784432e-02 2.6758477e-02 6.3491045e-03 1.6058685e-03
 9.6114917e-04 4.5652248e-04 4.2046560e-04 2.0842525e-04 1.5835845e-04]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.33469525 0.17347999 0.12868942 0.00285246 0.00245913 0.00226238
 0.00220384 0.00185973 0.00077446 0.00057577]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.34586006 0.05623955 0.01323875 0.00557136 0.00157032 0.00101948
 0.0008752  0.00080909 0.00067619 0.00063005]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [3.52775156e-01 2.07860867e-04 1.58984367e-05 1.12695525e-05
 4.97996871e-06 1.60170714e-06 1.46783680e-06 9.48024820e-07
 8.45148691e-07 8.20397020e-07]  taking action:  0
Leaf selection - depth:  13
Leaf selection - action scores:  [3.4896168e-01 3.1011397e-01 3.5347452e-03 7.4444723e-04 6.4405898e-04
 2.3637629e-04 1.3315876e-04 1.0582539e-04 9.7109354e-05 9.5695759e-05]  taking action:  0
Leaf selection - depth:  14
Leaf selection - action scores:  [3.7151867e-01 1.0242612e-02 4.3726922e-04 1.3399804e-04 1.1466356e-04
 7.8930992e-05 2.7562330e-05 2.0931233e-05 1.9710538e-05 1.9438739e-05]  taking action:  0
Leaf selection - depth:  15
Leaf selection - action scores:  [3.7746415e-01 1.5983504e-05 9.8925584e-06 3.0747356e-06 1.8484894e-06
 1.5292281e-06 1.2822295e-06 1.2527083e-06 1.0472839e-06 9.2249189e-07]  taking action:  0
Leaf selection - depth:  16
Leaf selection - action scores:  [3.8227946e-01 1.9482179e-02 3.5101131e-03 1.9352766e-03 6.6650333e-05
 5.7746220e-05 5.3600015e-05 4.1835556e-05 3.7013946e-05 2.1488815e-05]  taking action:  0
Leaf selection - depth:  17
Leaf selection - action scores:  [3.8895243e-01 5.1937499e-03 3.1759902e-03 2.0626865e-03 8.7656063e-04
 8.2817796e-04 7.9386652e-04 3.6931178e-04 3.4702104e-04 1.4317759e-04]  taking action:  0
Leaf selection - depth:  18
Leaf selection - action scores:  [3.9626211e-01 2.5025767e-04 4.3825334e-05 2.7715676e-05 1.7454206e-05
 1.4331172e-05 1.3699232e-05 1.3555755e-05 1.2664209e-05 1.2250902e-05]  taking action:  0
Leaf selection - depth:  19
Leaf selection - action scores:  [4.0270257e-01 1.4902318e-02 7.7175733e-04 5.6330638e-05 2.6515085e-05
 1.9262872e-05 1.8845381e-05 1.7044358e-05 1.2332165e-05 1.2090317e-05]  taking action:  0
Leaf selection - depth:  20
Leaf selection - action scores:  [0.37689954 0.25082552 0.12775788 0.07702696 0.04133034 0.04023885
 0.01429058 0.00534938 0.00381895 0.00334439]  taking action:  0
Leaf selection - depth:  21
Leaf selection - action scores:  [0.36610845 0.3690167  0.2771542  0.12781154 0.09432432 0.0554885
 0.02311552 0.00778312 0.00649184 0.00525509]  taking action:  1
Leaf selection - depth:  22
Leaf selection - action scores:  [1.9510089e+00 4.3218280e-04 2.8943839e-05 1.9904026e-05 1.6169270e-05
 1.2822994e-05 8.9088326e-06 6.5189356e-06 5.4918401e-06 5.2175310e-06]  taking action:  0
Adding child.
Leaf selection - depth:  23
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Leaf is terminal - getting return value.
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.799272

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  101.0
Iteration TIME (sec):  0.006037911996827461
----
 Tree depth: 0
 Node: action=None
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776]]
• Child Action scores:[-0.21462377 -0.11184441 -0.63365599 -0.65959398 -0.49220157 -0.49417242
 -0.38637377 -0.49730736 -0.49738466 -0.49741718]
• Child averaged monte carlo:-0.3578431372549012
• Child probablities:[5.48106849e-01 2.70935928e-01 7.10553490e-03 1.52239623e-03
 1.11907149e-03 8.36256193e-04 1.48388044e-01 3.86393222e-04
 3.75300267e-04 3.70633777e-04]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=101.0,Q=-0.3578431372549012,M=-0.3578431372549012
----
 Tree depth: 1
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198]]
• Child Action scores:[-0.155851   -0.19036692 -0.3815977  -0.39774847 -0.40222076 -0.45624772
 -0.46215636  0.06178831  0.05624774  0.04016227]
• Child averaged monte carlo:-0.9090909090909091
• Child probablities:[0.33481896 0.31219515 0.0517386  0.04468116 0.04272689 0.01911856
 0.01653665 0.01349991 0.01228937 0.00877491]
• Child visitation:[1 1 1 1 1 1 1 0 0 0]
• N=10.0,Q=-0.9090909090909091,M=-0.9090909090909091
----
 Tree depth: 1
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628]]
• Child Action scores:[ 0.07902189  0.05817899 -0.12319621  0.01902944 -0.43488997 -0.43688932
 -0.44555533 -0.45349777 -0.45882896  0.04829871]
• Child averaged monte carlo:-0.16025620240431565
• Child probablities:[0.57641345 0.24122165 0.06183279 0.05859752 0.01068444 0.01035634
 0.00893427 0.00763093 0.00675609 0.00396286]
• Child visitation:[1 1 1 1 1 1 1 1 1 0]
• N=77.0,Q=-0.16025620240431565,M=-0.16025620240431565
----
 Tree depth: 1
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   220]]
• Child Action scores:[2.4735814e-01 8.9065838e-01 2.3194517e-03 4.1914836e-04 3.6913872e-04
 2.1491463e-04 1.9839538e-04 1.4807748e-04 1.4788783e-04 9.8970282e-05]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[6.2534410e-01 3.7262452e-01 9.7038841e-04 1.7535899e-04 1.5443648e-04
 8.9913781e-05 8.3002626e-05 6.1951141e-05 6.1871790e-05 4.1406172e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 1
 Node: action=3
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50286]]
• Child Action scores:[2.6952857e-01 5.1999116e-01 2.9210476e-03 3.6320987e-04 2.3242195e-04
 1.9692915e-04 1.6172770e-04 1.0809778e-04 6.3581356e-05 6.1313760e-05]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[6.4389497e-01 2.1754856e-01 1.2220780e-03 1.5195602e-04 9.7238313e-05
 8.2389197e-05 6.7661975e-05 4.5224842e-05 2.6600515e-05 2.5651823e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 1
 Node: action=4
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50284]]
• Child Action scores:[1.13512874e+00 3.54923993e-01 4.88260668e-03 7.40489108e-04
 6.53120398e-04 3.39269027e-04 1.72785280e-04 1.42814082e-04
 1.11266163e-04 1.00332116e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[5.8163565e-01 1.8186171e-01 2.5018291e-03 3.7942381e-04 3.3465642e-04
 1.7384016e-04 8.8534522e-05 7.3177398e-05 5.7012359e-05 5.1409796e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 1
 Node: action=5
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50257]]
• Child Action scores:[0.26177758 0.23722462 0.20550765 0.19229512 0.12024618 0.08720283
 0.06030418 0.04765688 0.04582802 0.04404851]
• Child averaged monte carlo:-0.5
• Child probablities:[0.13413385 0.121553   0.10530134 0.09853129 0.06161369 0.0446824
 0.03089963 0.0244192  0.0234821  0.02257029]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 1
 Node: action=6
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50285]]
• Child Action scores:[-3.6288977e-02 -1.7182684e-01  5.1521487e-03  6.9636368e-04
  5.5939035e-04  3.7521898e-04  2.3957237e-04  1.5116329e-04
  1.4536787e-04  1.2418424e-04]
• Child averaged monte carlo:-0.8
• Child probablities:[6.1285543e-01 2.1270074e-01 1.6696457e-03 2.2566908e-04 1.8128041e-04
 1.2159640e-04 7.7637698e-05 4.8987160e-05 4.7109050e-05 4.0244118e-05]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=7
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50282]]
• Child Action scores:[1.1732962e+00 2.8046975e-01 1.5469457e-02 3.7771536e-03 1.2648791e-03
 5.3745008e-04 4.4953622e-04 2.8254723e-04 1.5860834e-04 1.5087475e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[6.0119253e-01 1.4371164e-01 7.9264911e-03 1.9353991e-03 6.4811925e-04
 2.7538737e-04 2.3034065e-04 1.4477613e-04 8.1270315e-05 7.7307654e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 1
 Node: action=8
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50260]]
• Child Action scores:[6.5709788e-01 1.4716975e-01 1.1323258e-02 3.4574585e-03 1.4303072e-03
 5.9590419e-04 3.7699225e-04 3.4346493e-04 2.8908526e-04 1.9115243e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[3.3669445e-01 7.5409226e-02 5.8019948e-03 1.7715886e-03 7.3288399e-04
 3.0533905e-04 1.9316940e-04 1.7599012e-04 1.4812620e-04 9.7945784e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 1
 Node: action=9
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50267]]
• Child Action scores:[1.0734364e+00 2.8351372e-01 4.0347991e-03 5.2361155e-04 4.4694703e-04
 3.0791399e-04 1.3644641e-04 8.6310800e-05 8.1318140e-05 6.5657783e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[5.5002475e-01 1.4527136e-01 2.0674157e-03 2.6829657e-04 2.2901397e-04
 1.5777396e-04 6.9914626e-05 4.4225326e-05 4.1667106e-05 3.3642798e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198 50284]]
• Child Action scores:[-0.19312099  0.4411603   0.22777523  0.15870488  0.02060157  0.02048167
  0.01577927  0.00872272  0.00773699  0.00464014]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.2567778  0.18456812 0.09529427 0.06639732 0.00861907 0.00856891
 0.00660157 0.00364932 0.00323692 0.00194129]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198 50286]]
• Child Action scores:[-0.23540288  0.41110682  0.32797807  0.12189066  0.02479005  0.01478002
  0.0142788   0.0097324   0.00943267  0.00830135]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.22139886 0.17199466 0.1372161  0.05099536 0.01037141 0.00618351
 0.00597382 0.00407174 0.00394635 0.00347303]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198 50285]]
• Child Action scores:[0.35334924 0.26772714 0.2340901  0.11984738 0.01293898 0.01260313
 0.01133476 0.0076259  0.00579307 0.00567353]
• Child averaged monte carlo:-0.5
• Child probablities:[0.18105482 0.13718237 0.11994688 0.06140934 0.00662988 0.0064578
 0.00580789 0.00390748 0.00296835 0.0029071 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198 50266]]
• Child Action scores:[1.5093743  0.03331133 0.02589741 0.02303117 0.01545792 0.01027569
 0.00877425 0.00712558 0.0061508  0.00331548]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7733977  0.0170686  0.01326973 0.01180109 0.00792058 0.00526522
 0.00449589 0.00365112 0.00315165 0.00169884]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198   198]]
• Child Action scores:[0.7520243  0.26818755 0.1727722  0.03572326 0.01358035 0.00826951
 0.00623311 0.00504534 0.00417706 0.0041044 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.3853344  0.13741829 0.08852782 0.01830446 0.00695852 0.00423727
 0.00319382 0.00258521 0.00214031 0.00210308]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198   197]]
• Child Action scores:[0.6102935  0.24678603 0.16547836 0.11868417 0.08237775 0.07929689
 0.02164733 0.01200524 0.0097335  0.0090545 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.31271207 0.12645222 0.08479048 0.06081332 0.04221005 0.04063143
 0.01109201 0.00615144 0.00498741 0.00463949]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198   220]]
• Child Action scores:[1.9300348e+00 1.2460753e-02 7.9991193e-03 4.8841123e-04 1.3334095e-04
 5.1162584e-05 3.3277396e-05 2.7670139e-05 2.5432262e-05 2.5027659e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[9.8894250e-01 6.3848430e-03 4.0987185e-03 2.5026005e-04 6.8323396e-05
 2.6215514e-05 1.7051212e-05 1.4178075e-05 1.3031395e-05 1.2824077e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284]]
• Child Action scores:[ 0.02595824  0.11408135 -0.24913827  0.00915638  0.06951058  0.04104876
  0.03246358  0.02283488  0.01112187  0.00992746]
• Child averaged monte carlo:-0.04642862933022635
• Child probablities:[0.39990333 0.20238146 0.04858378 0.01145667 0.00673097 0.00397491
 0.00314357 0.00221119 0.00107697 0.00096131]
• Child visitation:[1 1 1 1 0 0 0 0 0 0]
• N=55.0,Q=-0.04642862933022635,M=-0.04642862933022635
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286]]
• Child Action scores:[-0.17498341  0.18213809  0.14872332  0.05863782  0.05129879  0.02222959
  0.01981672  0.01271377  0.0119714   0.00937047]
• Child averaged monte carlo:-0.20909088308160956
• Child probablities:[0.32227844 0.14747106 0.04313942 0.01281157 0.01120809 0.00485687
 0.00432968 0.00277779 0.00261559 0.00204732]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=10.0,Q=-0.20909088308160956,M=-0.20909088308160956
----
 Tree depth: 2
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628   198]]
• Child Action scores:[0.47283843 0.2546844  0.16194902 0.13639764 0.11913163 0.11395058
 0.10840439 0.02207685 0.01833925 0.01395986]
• Child averaged monte carlo:-0.5
• Child probablities:[0.24228062 0.13049932 0.08298206 0.06988963 0.0610426  0.05838785
 0.055546   0.01131209 0.00939696 0.00715298]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50285]]
• Child Action scores:[ 0.28540573  0.23374215 -0.3340788   0.03603695  0.02317278  0.02247868
  0.02073885  0.01201079  0.01055784  0.00418005]
• Child averaged monte carlo:-0.10000000397364299
• Child probablities:[0.1941301  0.10871365 0.09816965 0.01066089 0.00685525 0.00664992
 0.00613522 0.00355318 0.00312335 0.00123659]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=5.0,Q=-0.10000000397364299,M=-0.10000000397364299
----
 Tree depth: 2
 Node: action=4
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50283]]
• Child Action scores:[0.6067148  0.19641021 0.08540751 0.05744805 0.01385005 0.00777967
 0.00769174 0.00650755 0.00525841 0.00237395]
• Child averaged monte carlo:-0.5
• Child probablities:[0.31087837 0.10063985 0.04376249 0.02943616 0.00709671 0.00398627
 0.00394122 0.00333445 0.00269439 0.0012164 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628   197]]
• Child Action scores:[1.0146499  0.21966794 0.10670532 0.0220041  0.00980457 0.00863226
 0.00814591 0.00721803 0.00697352 0.00355212]
• Child averaged monte carlo:-0.5
• Child probablities:[0.51990277 0.11255702 0.0546754  0.01127482 0.00502383 0.00442314
 0.00417393 0.00369849 0.00357321 0.00182009]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50280]]
• Child Action scores:[1.0223494  0.14460006 0.04733282 0.02942484 0.0124034  0.00905536
 0.00695916 0.00423055 0.00403479 0.00156644]
• Child averaged monte carlo:-0.5
• Child probablities:[0.52384794 0.07409252 0.02425316 0.01507717 0.00635545 0.00463993
 0.00356585 0.00216772 0.00206741 0.00080264]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50282]]
• Child Action scores:[0.6812994  0.07706036 0.07400426 0.03529749 0.03114898 0.01295445
 0.00696078 0.00375263 0.00323228 0.00286111]
• Child averaged monte carlo:-0.5
• Child probablities:[0.34909523 0.03948544 0.0379195  0.0180863  0.01596062 0.00663781
 0.00356668 0.00192283 0.00165621 0.00146602]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628   628]]
• Child Action scores:[0.61537486 0.5307292  0.29862657 0.23309644 0.13922648 0.03829425
 0.01484485 0.01070818 0.00770246 0.0066585 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.31531575 0.27194363 0.15301512 0.11943773 0.07133912 0.01962183
 0.00760644 0.00548683 0.00394671 0.00341179]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   220   198]]
• Child Action scores:[0.7535332  0.42624316 0.11676869 0.09359605 0.08437654 0.04468505
 0.03683608 0.03466984 0.03116759 0.02321522]
• Child averaged monte carlo:-0.5
• Child probablities:[0.38610756 0.21840538 0.05983183 0.04795826 0.04323422 0.02289645
 0.01887467 0.01776469 0.01597016 0.01189539]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50286   198]]
• Child Action scores:[0.551172   0.44381276 0.11796891 0.10619616 0.09584951 0.04260961
 0.03856807 0.03683675 0.03298902 0.02459029]
• Child averaged monte carlo:-0.5
• Child probablities:[0.28241846 0.22740798 0.06044682 0.05441451 0.04911293 0.021833
 0.01976213 0.01887501 0.01690345 0.01259997]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50285   198]]
• Child Action scores:[-0.18213859  0.44135457  0.20031087  0.1716202   0.1245886   0.06008095
  0.0564796   0.04172559  0.04124576  0.03545368]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.2659672  0.18464941 0.08380401 0.0718007  0.0521241  0.02513605
 0.02362935 0.01745672 0.01725598 0.01483275]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 2
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50285   628]]
• Child Action scores:[1.1461954  0.37925768 0.18730836 0.09384171 0.03639458 0.01875177
 0.0184994  0.01684853 0.00991184 0.00488595]
• Child averaged monte carlo:-0.5
• Child probablities:[0.5873062  0.1943302  0.09597609 0.04808414 0.01864845 0.00960834
 0.00947902 0.00863312 0.00507879 0.00250354]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198 50284 21809]]
• Child Action scores:[0.9404006  0.64571613 0.1489918  0.03570977 0.02614377 0.02398319
 0.0233655  0.02299816 0.01177386 0.00733027]
• Child averaged monte carlo:-0.5
• Child probablities:[0.48185772 0.3308625  0.07634283 0.01829755 0.01339597 0.01228889
 0.01197239 0.01178417 0.00603288 0.003756  ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   198 50286 21809]]
• Child Action scores:[0.8533648  0.7558432  0.09459838 0.0895052  0.02380989 0.02321295
 0.02154296 0.01495348 0.01162138 0.00740082]
• Child averaged monte carlo:-0.5
• Child probablities:[0.4372609  0.3872912  0.04847185 0.04586212 0.01220009 0.01189423
 0.01103853 0.00766211 0.00595475 0.00379215]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284 21809]]
• Child Action scores:[-0.10977638 -0.05547911  0.21790396  0.04980473  0.0469603   0.04268418
  0.03606317  0.02440119  0.01308755  0.01127718]
• Child averaged monte carlo:-0.8
• Child probablities:[0.54141074 0.28810984 0.07061566 0.01614011 0.01521832 0.01383257
 0.01168691 0.00790764 0.00424125 0.00365457]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562]]
• Child Action scores:[2.7207878e-01 8.2234073e-05 4.9208284e-05 3.0583389e-05 2.2656575e-05
 1.6416323e-05 3.9959209e-06 1.4335887e-06 1.1737178e-06 1.1413663e-06]
• Child averaged monte carlo:0.07142852763740384
• Child probablities:[9.99977708e-01 8.51284403e-06 5.09402525e-06 3.16598243e-06
 2.34540130e-06 1.69941234e-06 4.13656409e-07 1.48404638e-07
 1.21502879e-07 1.18153864e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=48.0,Q=0.07142852763740384,M=0.07142852763740384
----
 Tree depth: 3
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284  5235]]
• Child Action scores:[1.9515820e+00 2.8008528e-05 3.1101742e-06 6.3495344e-07 2.5662851e-07
 1.9606711e-07 1.7145828e-07 1.5269606e-07 9.9755439e-08 6.3024984e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.99983191e-01 1.43514635e-05 1.59364151e-06 3.25347742e-07
 1.31495483e-07 1.00464042e-07 8.78545734e-08 7.82408804e-08
 5.11143092e-08 3.22937623e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=3
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284  2301]]
• Child Action scores:[1.5697639e+00 2.1219499e-01 9.0906732e-02 3.6511712e-02 7.7335662e-03
 6.2865773e-03 6.2082186e-03 2.8891612e-03 1.4379193e-03 1.2957358e-03]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[8.0434108e-01 1.0872791e-01 4.6580266e-02 1.8708464e-02 3.9626500e-03
 3.2212185e-03 3.1810678e-03 1.4803953e-03 7.3678442e-04 6.6393014e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286 21809]]
• Child Action scores:[0.07751018 0.87758094 0.09860845 0.07215119 0.03645637 0.03553044
 0.02144713 0.01694977 0.01435034 0.00739183]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.48322555 0.36715332 0.04125479 0.03018587 0.01525224 0.01486486
 0.00897283 0.00709127 0.00600375 0.00309252]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286   562]]
• Child Action scores:[6.91844285e-01 2.19633112e-05 1.76147933e-05 1.07565384e-05
 1.00241705e-05 5.16993077e-06 1.70303565e-06 7.57576402e-07
 5.31166336e-07 4.79788184e-07]
• Child averaged monte carlo:0.08571428912026542
• Child probablities:[9.9998057e-01 6.0154721e-06 4.8244679e-06 2.9460791e-06 2.7454930e-06
 1.4159783e-06 4.6643981e-07 2.0749054e-07 1.4547970e-07 1.3140789e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=6.0,Q=0.08571428912026542,M=0.08571428912026542
----
 Tree depth: 3
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286  5235]]
• Child Action scores:[1.9515791e+00 3.2971362e-05 1.3228197e-06 2.7993931e-07 1.7758492e-07
 1.7565800e-07 1.5380424e-07 1.4452209e-07 1.4326729e-07 5.3236523e-08]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[9.9998176e-01 1.6894401e-05 6.7780780e-07 1.4343985e-07 9.0993844e-08
 9.0006495e-08 7.8808711e-08 7.4052572e-08 7.3409616e-08 2.7278192e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50285 21809]]
• Child Action scores:[0.6607708  0.78613335 0.09256022 0.07929911 0.04738888 0.04139486
 0.03498639 0.01945162 0.01040757 0.00807444]
• Child averaged monte carlo:0.06666666766007741
• Child probablities:[0.511056   0.3288944  0.0387244  0.03317635 0.01982608 0.01731835
 0.01463725 0.00813797 0.00435421 0.0033781 ]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=0.06666666766007741,M=0.06666666766007741
----
 Tree depth: 3
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50285   562]]
• Child Action scores:[1.95157886e+00 1.41839955e-05 7.56973304e-06 5.40345081e-06
 3.72826889e-06 2.41586304e-06 5.98390159e-07 3.87192188e-07
 3.64284659e-07 2.38054014e-07]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[9.9998164e-01 7.2678254e-06 3.8787025e-06 2.7687076e-06 1.9103509e-06
 1.2378790e-06 3.0661286e-07 1.9839581e-07 1.8665808e-07 1.2197798e-07]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 3
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50285  5235]]
• Child Action scores:[1.9515829e+00 2.8118808e-05 1.1603892e-06 5.8945358e-07 3.8653477e-07
 3.7891107e-07 2.8165584e-07 2.5460437e-07 9.3856855e-08 8.5970989e-08]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9998367e-01 1.4407970e-05 5.9457903e-07 3.0203378e-07 1.9805896e-07
 1.9415259e-07 1.4431939e-07 1.3045832e-07 4.8091898e-08 4.4051209e-08]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776 50285   198 50284]]
• Child Action scores:[0.5569893  0.3643835  0.25790015 0.08659226 0.03060478 0.01447378
 0.01083904 0.00658756 0.00538873 0.00245773]
• Child averaged monte carlo:-0.5
• Child probablities:[0.28539923 0.18670872 0.13214706 0.04436954 0.01568177 0.00741631
 0.00555388 0.00337544 0.00276116 0.00125933]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284 21809   269]]
• Child Action scores:[0.357567   0.2499782  0.18800944 0.08606254 0.07746918 0.02579378
 0.0071192  0.00631121 0.00328587 0.00222303]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.7175602  0.10458332 0.07865746 0.03600596 0.03241076 0.01079134
 0.00297846 0.00264042 0.00137471 0.00093005]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 4
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284 21809   685]]
• Child Action scores:[1.6726217  0.05066472 0.04208722 0.02636364 0.02441701 0.02357855
 0.01970061 0.0180579  0.01400697 0.01231893]
• Child averaged monte carlo:-0.5
• Child probablities:[0.85704505 0.02596041 0.02156533 0.01350863 0.01251118 0.01208156
 0.01009452 0.0092528  0.00717712 0.00631217]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570]]
• Child Action scores:[ 0.28047037  0.1351294  -0.3345719   0.17668293  0.06361064  0.04945128
  0.04903445  0.04660055  0.03682443  0.03456433]
• Child averaged monte carlo:0.07083329061667125
• Child probablities:[0.85987204 0.03872627 0.03460505 0.0184797  0.00665319 0.00517223
 0.00512863 0.00487406 0.00385156 0.00361517]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=47.0,Q=0.07083329061667125,M=0.07083329061667125
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286 21809   269]]
• Child Action scores:[1.4278249  0.22057028 0.09631151 0.07375001 0.06888536 0.02357768
 0.00541813 0.00520667 0.00310184 0.00190659]
• Child averaged monte carlo:-0.5
• Child probablities:[0.731612   0.11301938 0.04934965 0.03778923 0.0352966  0.01208111
 0.00277623 0.00266788 0.00158937 0.00097693]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286   562   570]]
• Child Action scores:[0.6805057  0.08985384 0.0809665  0.07115728 0.02802315 0.01722792
 0.01216712 0.01090825 0.0092682  0.00749849]
• Child averaged monte carlo:0.08333333333333333
• Child probablities:[0.8882443  0.02658165 0.02395249 0.02105061 0.00829015 0.00509657
 0.00359943 0.00322701 0.00274183 0.00221829]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=5.0,Q=0.08333333333333333,M=0.08333333333333333
----
 Tree depth: 4
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50285 21809   269]]
• Child Action scores:[1.3002063  0.22292838 0.18491    0.08301041 0.07992418 0.02984362
 0.00733932 0.00701231 0.0034055  0.00265233]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[0.6662208  0.11422765 0.09474719 0.04253422 0.04095285 0.01529176
 0.00376064 0.00359308 0.00174497 0.00135904]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284 21809   269    16]]
• Child Action scores:[1.8014752e+00 1.3626125e-01 9.6087372e-03 1.9862363e-03 3.6337457e-04
 3.6045327e-04 2.0393111e-04 1.4170799e-04 1.4006987e-04 1.1725977e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.2306906e-01 6.9819748e-02 4.9234806e-03 1.0177400e-03 1.8619176e-04
 1.8469489e-04 1.0449353e-04 7.2610637e-05 7.1771268e-05 6.0083461e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391]]
• Child Action scores:[0.3051358  0.06081014 0.02186976 0.00997702 0.00634038 0.00594819
 0.00400405 0.00311474 0.00206345 0.00174409]
• Child averaged monte carlo:0.09777773751152886
• Child probablities:[9.8581183e-01 6.5688696e-03 2.3624287e-03 1.0777436e-03 6.8490399e-04
 6.4253947e-04 4.3252742e-04 3.3646228e-04 2.2289927e-04 1.8840159e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=44.0,Q=0.09777773751152886,M=0.09777773751152886
----
 Tree depth: 5
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  2160]]
• Child Action scores:[1.6756889  0.10028497 0.03613838 0.03360356 0.03051387 0.02906859
 0.02504379 0.00545666 0.00545134 0.00201175]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.85861665 0.05138564 0.01851717 0.01721834 0.01563519 0.01489464
 0.01283234 0.00279597 0.00279324 0.00103081]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 5
 Node: action=2
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570   269]]
• Child Action scores:[0.919225   0.39809602 0.24884477 0.2310904  0.11761232 0.00939767
 0.00426102 0.00265608 0.00242741 0.00172964]
• Child averaged monte carlo:-0.5
• Child probablities:[0.4710074  0.20398289 0.12750712 0.11840984 0.06026411 0.00481533
 0.00218333 0.00136097 0.0012438  0.00088626]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 5
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286   562   570  1391]]
• Child Action scores:[8.3486164e-01 2.2003308e-02 8.0750119e-03 2.9881108e-03 2.2008587e-03
 2.1223016e-03 1.9751862e-03 9.1476337e-04 5.9152202e-04 4.5002688e-04]
• Child averaged monte carlo:0.0800000011920929
• Child probablities:[9.8498684e-01 7.1305642e-03 2.6168516e-03 9.6835056e-04 7.1322749e-04
 6.8776967e-04 6.4009434e-04 2.9644539e-04 1.9169327e-04 1.4583924e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=0.0800000011920929,M=0.0800000011920929
----
 Tree depth: 6
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66]]
• Child Action scores:[0.30966917 0.01070871 0.00881063 0.00531424 0.00254704 0.0015649
 0.00137304 0.00134351 0.00129304 0.00088518]
• Child averaged monte carlo:0.09772723371332342
• Child probablities:[9.9583685e-01 1.1698545e-03 9.6250162e-04 5.8054441e-04 2.7824665e-04
 1.7095522e-04 1.4999519e-04 1.4676891e-04 1.4125618e-04 9.6699463e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=43.0,Q=0.09772723371332342,M=0.09772723371332342
----
 Tree depth: 6
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286   562   570  1391    66]]
• Child Action scores:[9.8367250e-01 2.4740109e-03 2.3037456e-03 1.0591183e-03 5.8531133e-04
 5.7095056e-04 2.5639511e-04 2.5276697e-04 2.5016547e-04 2.0136048e-04]
• Child averaged monte carlo:0.07500000298023224
• Child probablities:[9.9674547e-01 8.9638075e-04 8.3469041e-04 3.8373852e-04 2.1206932e-04
 2.0686616e-04 9.2896786e-05 9.1582238e-05 9.0639660e-05 7.2956696e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=0.07500000298023224,M=0.07500000298023224
----
 Tree depth: 7
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448]]
• Child Action scores:[3.1022048e-01 9.9586412e-02 1.1790541e-02 5.9594037e-03 7.4481493e-04
 5.6766387e-04 4.6807461e-04 1.8710428e-04 1.6173758e-04 1.2579809e-04]
• Child averaged monte carlo:0.09767438090124796
• Child probablities:[9.8673880e-01 1.1004917e-02 1.3029281e-03 6.5855111e-04 8.2306680e-05
 6.2730382e-05 5.1725154e-05 2.0676185e-05 1.7873008e-05 1.3901470e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=42.0,Q=0.09767438090124796,M=0.09767438090124796
----
 Tree depth: 7
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286   562   570  1391    66   448]]
• Child Action scores:[1.2274734e+00 2.9693298e-02 3.1185907e-03 1.8176707e-03 1.7182653e-04
 1.2129788e-04 1.1110387e-04 6.0779657e-05 4.7096772e-05 2.9077082e-05]
• Child averaged monte carlo:0.06666666766007741
• Child probablities:[9.8523849e-01 1.2422778e-02 1.3047240e-03 7.6045841e-04 7.1887021e-05
 5.0747363e-05 4.6482499e-05 2.5428370e-05 1.9703864e-05 1.2164972e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=0.06666666766007741,M=0.06666666766007741
----
 Tree depth: 8
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11]]
• Child Action scores:[3.0816162e-01 3.0781072e-01 9.8871917e-04 6.7265512e-04 3.4565930e-04
 2.3666340e-04 6.5914384e-05 6.4707587e-05 4.6095069e-05 2.9111303e-05]
• Child averaged monte carlo:0.09761901128859747
• Child probablities:[8.2582003e-01 1.7383446e-01 1.1055267e-04 7.5212272e-05 3.8649556e-05
 2.6462287e-05 7.3701522e-06 7.2352150e-06 5.1540751e-06 3.2550518e-06]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=41.0,Q=0.09761901128859747,M=0.09761901128859747
----
 Tree depth: 8
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50286   562   570  1391    66   448    11]]
• Child Action scores:[1.5939206e+00 3.5701379e-01 2.3122283e-04 1.3721465e-04 7.5950767e-05
 5.1406940e-05 1.6252237e-05 1.2249781e-05 1.0703703e-05 6.9123062e-06]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[8.1671888e-01 1.8293251e-01 1.1847771e-04 7.0308270e-05 3.8916885e-05
 2.6340722e-05 8.3275845e-06 6.2767417e-06 5.4845368e-06 3.5418395e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 9
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160]]
• Child Action scores:[3.3436131e-01 5.7613447e-02 2.7149133e-02 6.4417971e-03 1.6293131e-03
 9.7518129e-04 4.6318740e-04 4.2660412e-04 2.1146811e-04 1.6067039e-04]
• Child averaged monte carlo:0.09714282580784389
• Child probablities:[9.8825306e-01 7.0568477e-03 3.3253920e-03 7.8903075e-04 1.9956824e-04
 1.1944617e-04 5.6734028e-05 5.2253083e-05 2.5901909e-05 1.9679892e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=34.0,Q=0.09714282580784389,M=0.09714282580784389
----
 Tree depth: 9
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11 16345]]
• Child Action scores:[6.8906122e-01 8.8578044e-03 3.6298039e-03 1.6439635e-03 1.3322569e-03
 3.3220739e-04 2.7599017e-04 1.4543215e-04 1.2521740e-04 8.8188885e-05]
• Child averaged monte carlo:0.08571428912026542
• Child probablities:[9.9540710e-01 2.4260401e-03 9.9415716e-04 4.5026070e-04 3.6488826e-04
 9.0987385e-05 7.5590200e-05 3.9832019e-05 3.4295455e-05 2.4153815e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=6.0,Q=0.08571428912026542,M=0.08571428912026542
----
 Tree depth: 10
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92]]
• Child Action scores:[0.33105135 0.17608885 0.13062471 0.00289536 0.00249611 0.0022964
 0.00223698 0.0018877  0.00078611 0.00058443]
• Child averaged monte carlo:0.09705879407770493
• Child probablities:[9.5998138e-01 2.1883326e-02 1.6233299e-02 3.5981881e-04 3.1020213e-04
 2.8538375e-04 2.7799976e-04 2.3459274e-04 9.7692864e-05 7.2629096e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=33.0,Q=0.09705879407770493,M=0.09705879407770493
----
 Tree depth: 10
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11 16345    92]]
• Child Action scores:[6.7969328e-01 2.9682046e-01 7.2350442e-02 4.9117287e-03 1.4415729e-03
 1.3779745e-03 1.1435493e-03 1.1308132e-03 1.1234350e-03 2.9227952e-04]
• Child averaged monte carlo:0.08333333333333333
• Child probablities:[8.8704264e-01 8.7809019e-02 2.1403583e-02 1.4530470e-03 4.2646355e-04
 4.0764909e-04 3.3829862e-04 3.3453084e-04 3.3234814e-04 8.6465669e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=5.0,Q=0.08333333333333333,M=0.08333333333333333
----
 Tree depth: 11
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796]]
• Child Action scores:[0.3419183  0.05711152 0.01344401 0.00565774 0.00159467 0.00103528
 0.00088877 0.00082163 0.00068668 0.00063982]
• Child averaged monte carlo:0.09696966951543634
• Child probablities:[9.89137709e-01 7.20423227e-03 1.69587100e-03 7.13685760e-04
 2.01156930e-04 1.30594068e-04 1.12112837e-04 1.03643135e-04
 8.66195551e-05 8.07087345e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=32.0,Q=0.09696966951543634,M=0.09696966951543634
----
 Tree depth: 11
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11 16345    92   796]]
• Child Action scores:[8.3620238e-01 2.8483318e-02 5.2919285e-03 2.2445761e-03 9.2386076e-04
 5.2590226e-04 3.7894928e-04 3.7463155e-04 3.0068518e-04 2.5557398e-04]
• Child averaged monte carlo:0.0800000011920929
• Child probablities:[9.8672485e-01 9.2305271e-03 1.7149438e-03 7.2739489e-04 2.9939355e-04
 1.7042800e-04 1.2280527e-04 1.2140603e-04 9.7442397e-05 8.2823302e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=0.0800000011920929,M=0.0800000011920929
----
 Tree depth: 12
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287]]
• Child Action scores:[3.4858692e-01 2.1118685e-04 1.6152828e-05 1.1449877e-05 5.0596536e-06
 1.6273361e-06 1.4913237e-06 9.6319422e-07 8.5867197e-07 8.3352427e-07]
• Child averaged monte carlo:0.09687497466802597
• Child probablities:[9.99966264e-01 2.70528362e-05 2.06916206e-06 1.46671846e-06
 6.48136847e-07 2.08460222e-07 1.91037159e-07 1.23384268e-07
 1.09995064e-07 1.06773669e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=31.0,Q=0.09687497466802597,M=0.09687497466802597
----
 Tree depth: 12
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11 16345    92   796
    287]]
• Child Action scores:[9.8664153e-01 6.4206492e-05 4.1139260e-06 2.8403867e-06 1.0511727e-06
 3.8197223e-07 2.8157990e-07 2.5367692e-07 1.9984378e-07 1.9356821e-07]
• Child averaged monte carlo:0.07500000298023224
• Child probablities:[9.9997270e-01 2.3263223e-05 1.4905529e-06 1.0291257e-06 3.8085969e-07
 1.3839573e-07 1.0202170e-07 9.1911922e-08 7.2407168e-08 7.0133410e-08]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=0.07500000298023224,M=0.07500000298023224
----
 Tree depth: 13
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16]]
• Child Action scores:[3.44097614e-01 3.14138174e-01 3.59317474e-03 7.56752968e-04
 6.54705276e-04 2.40283596e-04 1.35359878e-04 1.07574684e-04
 9.87145686e-05 9.72776106e-05]
• Child averaged monte carlo:0.09677417047562138
• Child probablities:[9.0254706e-01 9.6624330e-02 4.6764727e-04 9.8490469e-05 8.5209089e-05
 3.1272615e-05 1.7616921e-05 1.4000713e-05 1.2847580e-05 1.2660562e-05]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=30.0,Q=0.09677417047562138,M=0.09677417047562138
----
 Tree depth: 13
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11 16345    92   796
    287    16]]
• Child Action scores:[7.92355835e-01 9.03523564e-01 1.28800550e-03 1.61673452e-04
 1.13299357e-04 1.09517314e-04 6.00572566e-05 2.44444454e-05
 2.26395223e-05 1.95197626e-05]
• Child averaged monte carlo:0.06666666766007741
• Child probablities:[6.2115842e-01 3.7800694e-01 5.3886254e-04 6.7639281e-05 4.7401023e-05
 4.5818731e-05 2.5126139e-05 1.0226817e-05 9.4716916e-06 8.1664784e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=0.06666666766007741,M=0.06666666766007741
----
 Tree depth: 14
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343]]
• Child Action scores:[3.6632827e-01 1.0430566e-02 4.4529318e-04 1.3645692e-04 1.1676765e-04
 8.0379388e-05 2.8068103e-05 2.1315323e-05 2.0072230e-05 1.9795443e-05]
• Child averaged monte carlo:0.09642855610166277
• Child probablities:[9.9843746e-01 1.4283997e-03 6.0980070e-05 1.8686907e-05 1.5990589e-05
 1.1007446e-05 3.8437483e-06 2.9189982e-06 2.7487642e-06 2.7108601e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=27.0,Q=0.09642855610166277,M=0.09642855610166277
----
 Tree depth: 14
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16    10]]
• Child Action scores:[1.2426299e+00 4.9572685e-03 6.5640729e-06 2.3819248e-06 5.7472744e-07
 4.9315315e-07 3.8127695e-07 3.7066448e-07 3.1814619e-07 2.6777519e-07]
• Child averaged monte carlo:0.06666666766007741
• Child probablities:[9.9792057e-01 2.0739711e-03 2.7462095e-06 9.9652527e-07 2.4044857e-07
 2.0632037e-07 1.5951474e-07 1.5507480e-07 1.3310274e-07 1.1202904e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=0.06666666766007741,M=0.06666666766007741
----
 Tree depth: 14
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11 16345    92   796
    287    16  1343]]
• Child Action scores:[1.9450129e+00 6.2703108e-03 1.6230837e-04 4.4925157e-05 3.9778413e-05
 1.9145687e-05 8.3679597e-06 7.6822707e-06 6.2047966e-06 5.8338496e-06]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[9.9661726e-01 3.2128836e-03 8.3166189e-05 2.3019480e-05 2.0382307e-05
 9.8101773e-06 4.2877109e-06 3.9363663e-06 3.1793143e-06 2.9892424e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 15
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287]]
• Child Action scores:[3.7194794e-01 1.6287979e-05 1.0081006e-05 3.1333072e-06 1.8837020e-06
 1.5583590e-06 1.3066552e-06 1.2765715e-06 1.0672341e-06 9.4006475e-07]
• Child averaged monte carlo:0.09629628393385145
• Child probablities:[9.9999392e-01 2.2714660e-06 1.4058626e-06 4.3696033e-07 2.6269464e-07
 2.1732342e-07 1.8222167e-07 1.7802631e-07 1.4883281e-07 1.3109822e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=26.0,Q=0.09629628393385145,M=0.09629628393385145
----
 Tree depth: 15
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16    10   259]]
• Child Action scores:[1.9515876e+00 9.2176033e-06 4.2535821e-06 2.7201490e-06 1.9799115e-06
 1.9086144e-06 9.7242560e-07 7.7540943e-07 7.7413853e-07 3.5321980e-07]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[9.9998605e-01 4.7230651e-06 2.1795195e-06 1.3937940e-06 1.0144992e-06
 9.7796681e-07 4.9826718e-07 3.9731685e-07 3.9666565e-07 1.8098849e-07]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 16
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17]]
• Child Action scores:[3.7643409e-01 1.9868001e-02 3.5796268e-03 1.9736027e-03 6.7970272e-05
 5.8889822e-05 5.4661501e-05 4.2664062e-05 3.7746966e-05 2.1914379e-05]
• Child averaged monte carlo:0.0961538369839008
• Child probablities:[9.9633431e-01 2.8235042e-03 5.0871202e-04 2.8047487e-04 9.6594686e-06
 8.3690175e-06 7.7681179e-06 6.0631237e-06 5.3643398e-06 3.1143211e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=25.0,Q=0.0961538369839008,M=0.0961538369839008
----
 Tree depth: 17
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343]]
• Child Action scores:[3.8270885e-01 5.3008487e-03 3.2414815e-03 2.1052207e-03 8.9463603e-04
 8.4525562e-04 8.1023667e-04 3.7692729e-04 3.5417688e-04 1.4613001e-04]
• Child averaged monte carlo:0.0959999942779541
• Child probablities:[9.9782783e-01 7.6823897e-04 4.6977992e-04 3.0510445e-04 1.2965739e-04
 1.2250082e-04 1.1742560e-04 5.4627140e-05 5.1329982e-05 2.1178263e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=24.0,Q=0.0959999942779541,M=0.0959999942779541
----
 Tree depth: 18
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269]]
• Child Action scores:[3.89569581e-01 2.55640160e-04 4.47679195e-05 2.83117788e-05
 1.78296068e-05 1.46394032e-05 1.39938720e-05 1.38473097e-05
 1.29365890e-05 1.25143915e-05]
• Child averaged monte carlo:0.09583333134651184
• Child probablities:[9.9992728e-01 3.7813283e-05 6.6218940e-06 4.1877665e-06 2.6372850e-06
 2.1654027e-06 2.0699183e-06 2.0482394e-06 1.9135291e-06 1.8510794e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=23.0,Q=0.09583333134651184,M=0.09583333134651184
----
 Tree depth: 19
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259]]
• Child Action scores:[3.9553946e-01 1.5237243e-02 7.8910240e-04 5.7596655e-05 2.7111004e-05
 1.9695801e-05 1.9268926e-05 1.7427425e-05 1.2609327e-05 1.2362044e-05]
• Child averaged monte carlo:0.09565217598624852
• Child probablities:[9.9752516e-01 2.3023079e-03 1.1923132e-04 8.7027047e-06 4.0964023e-06
 2.9759842e-06 2.9114847e-06 2.6332386e-06 1.9052366e-06 1.8678727e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=22.0,Q=0.09565217598624852,M=0.09565217598624852
----
 Tree depth: 20
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26]]
• Child Action scores:[0.3693626  0.25555146 0.13076435 0.0788396  0.04230295 0.04118577
 0.01462687 0.00547526 0.00390882 0.00342309]
• Child averaged monte carlo:0.09545455195687035
• Child probablities:[8.4774345e-01 6.3512638e-02 2.0202214e-02 1.2180189e-02 6.5355212e-03
 6.3629248e-03 2.2597534e-03 8.4589119e-04 6.0388580e-04 5.2884466e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=21.0,Q=0.09545455195687035,M=0.09545455195687035
----
 Tree depth: 21
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   198]]
• Child Action scores:[0.3731743  0.2848695  0.28435418 0.13113186 0.0967747  0.05692999
 0.02371602 0.00798531 0.00666049 0.0053916 ]
• Child averaged monte carlo:0.09500001668930054
• Child probablities:[0.76868284 0.10606877 0.04607502 0.02124781 0.01568078 0.00922459
 0.0038428  0.00129389 0.00107922 0.00087362]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=19.0,Q=0.09500001668930054,M=0.09500001668930054
----
 Tree depth: 21
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   628]]
• Child Action scores:[1.3601593  0.44793105 0.05020972 0.02103105 0.01803774 0.01619336
 0.0090383  0.00437952 0.00415341 0.00404255]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[0.6969405  0.22951818 0.02572727 0.01077623 0.00924247 0.00829742
 0.00463119 0.00224405 0.00212819 0.00207139]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 22
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   198   198]]
• Child Action scores:[4.4875747e-01 2.0781480e-04 1.5128613e-04 1.3809062e-04 1.0912205e-04
 1.0655196e-04 1.0059239e-04 9.9728903e-05 8.6100321e-05 7.3192918e-05]
• Child averaged monte carlo:0.09411766248590805
• Child probablities:[9.9828362e-01 3.6523546e-05 2.6588606e-05 2.4269490e-05 1.9178249e-05
 1.8726556e-05 1.7679158e-05 1.7527400e-05 1.5132171e-05 1.2863688e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=16.0,Q=0.09411766248590805,M=0.09411766248590805
----
 Tree depth: 22
 Node: action=1
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   198   437]]
• Child Action scores:[1.2447441e+00 5.2931369e-04 3.5448818e-05 2.4377354e-05 1.9803232e-05
 1.5704896e-05 1.0911047e-05 7.9840329e-06 6.7261030e-06 6.3901443e-06]
• Child averaged monte carlo:0.06666666766007741
• Child probablities:[9.9968958e-01 2.2144883e-04 1.4830714e-05 1.0198747e-05 8.2850729e-06
 6.5704535e-06 4.5648521e-06 3.3402780e-06 2.8139980e-06 2.6734431e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=0.06666666766007741,M=0.06666666766007741
----
 Tree depth: 23
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   198   198   437]]
• Child Action scores:[4.6131939e-01 1.0307934e-04 1.2800904e-05 7.9924084e-06 7.2900639e-06
 6.9492248e-06 6.7637420e-06 5.6999024e-06 5.0268468e-06 3.9125830e-06]
• Child averaged monte carlo:0.0937500149011612
• Child probablities:[9.9996209e-01 1.8673794e-05 2.3190044e-06 1.4479001e-06 1.3206637e-06
 1.2589176e-06 1.2253156e-06 1.0325911e-06 9.1066067e-07 7.0880128e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=15.0,Q=0.0937500149011612,M=0.0937500149011612
----
 Tree depth: 23
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   198   437 21412]]
• Child Action scores:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 24
 Node: action=0
• state:[[ 1003 23067   257  5598    12  2545   751   263    13   198  1003  1858
    389   734  5598  1643 17311   357   259    16   290   287    17     8
    290   257  2060  3283    12   259  5128  1643    11   269   259    13
    198  1003   464 23862   389   257  5598  1643  1988    11   685  5066
     25    15    60  2160    11   290   257  2060  3283    12   448  5072
   1643    11 42304    13   198  1003   464  8265   815 17624   262 17311
    357   259    16   290   287    17     8   290   262   269   259  1643
    284  7330   262  5072  2160   290 42304  3815    13   198 21412   751
    263    62  2414     7 22915   685  5066    25    15    60  2160    11
    198 50266 22915 42304    11   198 50266 15414   685  5066    25    15
     60   287    16    11   287    17    11   198 50266 15414   269   259
   1776   628 50284   562   570  1391    66   448    11  2160    92   796
    287    16  1343   287    17  1343   269   259    26   198   198   437
  21412]]
• Child Action scores:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.09333334763844808
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=14.0,Q=0.09333334763844808,M=0.09333334763844808
END ROBUST/MAX VALUES:
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.797222

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
//Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
Running getPromptScore: 
adder_64
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump/1093927_adder_64/synth_script.sh
Running bash in x seconds:  0.791753

Currently displaying area/delay scores for  adder_64  module.
Area of the chip design is:  612.598
Delay value for the chip design is:  2391.13
Product:  1464801.45574
Score (1/chip area):  0.1
MCTS Total Time:  54926.112544
