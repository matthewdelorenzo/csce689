Using GPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/prompt_tb_files/adder/prompt1_adder_64.v
Prompt str:  //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
Loading LLM model...
Loaded LLM:  codellama/CodeLlama-13b-hf
Initializing MCTS tree/LLM env...
Episode not stated yet!
Simulations per episode:  100
********-- EPISODE-1--************
ORIG MODILE:  adder_64
--------MCTS-------
Env seed:  42
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.481432  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.62487509e+00 1.28329797e-02 6.50489180e-03 2.00683252e-03
 1.65198716e-03 1.19895409e-03 2.89904235e-01 7.79970464e-04
 4.29666474e-04 3.67666827e-04]  taking action:  0
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.485786  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  2.0
Iteration TIME (sec):  45.165129070999996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [4.95028716e-01 1.57171261e-02 7.96683287e-03 2.45785784e-03
 2.02326280e-03 1.46841288e-03 3.55058725e-01 9.55264826e-04
 5.26231810e-04 4.50298060e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0579879  0.16797753 0.11641347 0.1145219  0.08567762 0.06965885
 0.0685717  0.03631411 0.02997482 0.02083742]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.611238  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  3.0
Iteration TIME (sec):  45.29299934000001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.09930678 0.01814857 0.00919931 0.00283809 0.00233626 0.00169558
 0.4099865  0.00110304 0.00060764 0.00051996]  taking action:  6
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.659766  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  4.0
Iteration TIME (sec):  46.35787377199998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.18971768  0.02029072  0.01028514  0.00317308  0.00261202  0.00189571
 -0.27081058  0.00123324  0.00067936  0.00058133]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.14788264 0.20572962 0.1425768  0.14026012 0.10493322 0.08531433
 0.08398284 0.04447552 0.03671151 0.02552052]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    wire [63:0] sum_temp;
    wire cout_temp;
    wire [63:0] in1_temp, in2_temp;
    wire cin_temp;
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign cin_temp = cin;
    assign sum = sum_temp;
    assign cout = cout_temp;
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
    adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  89.152251  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  5.0
Iteration TIME (sec):  89.73805027299997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.04640845  0.02222737  0.0112668   0.00347594  0.00286133  0.00207665
 -0.24893557  0.00135095  0.0007442   0.00063682]  taking action:  1
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin); 

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.479624  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  6.0
Iteration TIME (sec):  46.151059567999994
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.00996574 -0.48799585  0.01216954  0.00375444  0.00309058  0.00224304
 -0.22881942  0.00145919  0.00080383  0.00068784]  taking action:  2
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);</s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3826.797197  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  7.0
Iteration TIME (sec):  3820.2772172680006
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.06243754 -0.48716702 -0.49349511  0.00401367  0.00330397  0.00239791
 -0.21009577  0.00155994  0.00085933  0.00073533]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.24811041 -0.38122195  0.1646335   0.16195841  0.12116644  0.0985125
  0.09697503  0.05135591  0.04239079  0.02946856]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.36781862 0.34988952 0.21734586 0.15013298 0.10757767 0.10643403
 0.09100773 0.07496171 0.07349837 0.06480557]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.299266  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  8.0
Iteration TIME (sec):  44.95845912000004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.1106239  -0.48638857 -0.49310052  0.00425713  0.00350439  0.00254337
 -0.19251012  0.00165457  0.00091146  0.00077994]  taking action:  3
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);  

  wire [63:0] sum_temp;
  wire cout_temp;

  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.415553  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  9.0
Iteration TIME (sec):  46.07002600800024
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.07333378 -0.48565229 -0.49272731 -0.49775629  0.00369396  0.00268094
 -0.17587721  0.00174407  0.00096076  0.00082213]  taking action:  4
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  539

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);                      

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.917575  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  10.0
Iteration TIME (sec):  46.56497454200053
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.03786604 -0.484952   -0.49237234 -0.49764678 -0.49806287  0.0028118
 -0.16005715  0.00182919  0.00100766  0.00086226]  taking action:  5
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.445769  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  11.0
Iteration TIME (sec):  46.09133074099918
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.00397704 -0.48428287 -0.49203317 -0.49754214 -0.49797674 -0.49853159
 -0.14494128  0.00191053  0.00105246  0.0009006 ]  taking action:  7
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3796.659244  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  12.0
Iteration TIME (sec):  3790.3117427409998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.02852697 -0.4836411  -0.49170786 -0.49744178 -0.49789412 -0.49847163
 -0.13044316 -0.49900573  0.00109544  0.00093737]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.10905814 -0.3672021   0.18406583  0.181075    0.1354682   0.11014032
  0.10842138  0.05741765  0.04739435  0.03294685]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  
  wire [63:0] sum_temp;
  wire cout_temp;
  
  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
  
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.152866  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  13.0
Iteration TIME (sec):  46.80319202999999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.11683075 -0.48302356 -0.49139484 -0.49734521 -0.49781463 -0.49841393
 -0.11649275 -0.4989682   0.00113679  0.00097275]  taking action:  8
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.487655  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  14.0
Iteration TIME (sec):  46.13549806499941
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.0916827  -0.48242772 -0.49109281 -0.49725203 -0.49773792 -0.49835826
 -0.10303228 -0.49893198 -0.49941165  0.0010069 ]  taking action:  9
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);      

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.49413  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  15.0
Iteration TIME (sec):  46.15021252199949
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.06735985 -0.48185143 -0.49080069 -0.49716191 -0.49766374 -0.49830442
 -0.0900135  -0.49889696 -0.49939236 -0.49948004]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.05583709 -0.35452718 -0.39918298  0.19835773  0.14839797  0.12065268
  0.11876967  0.06289788  0.05191791  0.03609146]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  wire [63:0] sum_temp;
  wire cout_temp;
  wire [63:0] in1_temp, in2_temp;
  wire cin_temp;
  assign in1_temp = in1;
  assign in2_temp = in2;
  assign cin_temp = cin;
  assign sum = sum_temp;
  assign cout = cout_temp;
  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
  adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  88.961561  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  16.0
Iteration TIME (sec):  89.53483597299964
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.18038797 -0.48129288 -0.49051757 -0.49707456 -0.49759184 -0.49825224
 -0.07739559 -0.49886301 -0.49937366 -0.49946404]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.7229437e+00 9.6390555e-03 4.4805594e-03 2.1116791e-04 1.8406488e-04
 6.1442348e-05 4.1544601e-05 3.2613334e-05 2.7663165e-05 1.5579331e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.181305  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  17.0
Iteration TIME (sec):  45.83835367199936
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.16076783 -0.48075053 -0.49024266 -0.49698975 -0.49752202 -0.49820157
 -0.37676245 -0.49883004 -0.4993555  -0.4994485 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.0068953  -0.3428714  -0.39110518 -0.39287457  0.16028814  0.13031979
  0.12828591  0.06793748  0.05607775  0.03898324]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.155961  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  18.0
Iteration TIME (sec):  46.81039205399975
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.24897483 -0.48022305 -0.48997529 -0.49690726 -0.49745412 -0.49815229
 -0.3688184  -0.49879798 -0.49933784 -0.49943339]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03865862 -0.3320225  -0.38358653 -0.3854781  -0.41432238  0.1393177
  0.1371434   0.07262822  0.05994964  0.04167483]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  539

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
                      
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.662091  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  19.0
Iteration TIME (sec):  47.30966405599975
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.31796598 -0.47970928 -0.48971486 -0.49682692 -0.49738798 -0.49810429
 -0.36108079 -0.49876676 -0.49932064 -0.49941867]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.08144367 -0.32183293 -0.37652487 -0.3785312  -0.40912518 -0.42611563
  0.14546254  0.07703386  0.06358619  0.04420283]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
			
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3821.583955  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  20.0
Iteration TIME (sec):  3815.1948379880014
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.37348027 -0.4792082  -0.48946087 -0.49674856 -0.49732347 -0.49805747
 -0.35353432 -0.4987363  -0.49930386 -0.49940431]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [5.55083156e-01 1.18053835e-02 5.48754213e-03 2.58626795e-04
 2.25432508e-04 7.52511987e-05 5.08815392e-05 3.99430137e-05
 3.38803220e-05 1.90807077e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.6349615  0.34587768 0.28035527 0.156545   0.12121457 0.08668401
 0.04940086 0.03034251 0.02342553 0.02018997]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.901358  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  21.0
Iteration TIME (sec):  45.55275368799994
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.36108988 -0.47871891 -0.48921286 -0.49667204 -0.49726049 -0.49801176
 -0.50962411 -0.49870657 -0.49928748 -0.49939029]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.12191093 -0.31219542 -0.3698458  -0.37196064 -0.40420952 -0.42211902
 -0.4233345   0.08120082  0.06702573  0.04659388]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.274758    0.42852542  0.26619324  0.1838746   0.1317552   0.13035454
  0.11146126  0.09180897  0.09001675  0.0793703 ]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  wire [63:0] sum_temp;
  wire cout_temp;

  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.406042  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  22.0
Iteration TIME (sec):  45.062797958999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.40816189 -0.47824062 -0.48897042 -0.49659725 -0.49719892 -0.49796707
 -0.50422173 -0.4986775  -0.49927147 -0.49937659]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.12969959 -0.30302888 -0.3634931  -0.36571115 -0.3995341  -0.41831774
 -0.41959256  0.08516414  0.07029718  0.04886808]  taking action:  7
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
wire [63:0] sum_temp;
wire cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.656496  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  23.0
Iteration TIME (sec):  47.304249241000434
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.44760565 -0.47777263 -0.4887332  -0.49652406 -0.49713867 -0.49792335
 -0.49893557 -0.49864905 -0.4992558  -0.49936318]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.10211736 -0.2942704  -0.3574232  -0.3597399  -0.3950668  -0.41468567
 -0.41601717 -0.45552447  0.07342301  0.05104104]  taking action:  8
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  732

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
always @(*)
begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  19.64304  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  24.0
Iteration TIME (sec):  20.34963177999998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.48116916 -0.47731428 -0.48850087 -0.49645239 -0.49707967 -0.49788053
 -0.49375844 -0.49862119 -0.49924045 -0.49935005]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.79312086e+00 8.39032512e-03 4.81765298e-03 1.49004365e-04
 1.16123985e-04 6.26283581e-05 4.58760769e-05 3.74701776e-05
 2.14000902e-05 2.02382180e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin); 

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.176445  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  25.0
Iteration TIME (sec):  45.83051731699925
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.47241766 -0.65124336 -0.48827314 -0.49638213 -0.49702184 -0.49783855
 -0.48868385 -0.49859389 -0.49922541 -0.49933718]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.07566237 -0.28586984 -0.35160136 -0.35401267 -0.39078206 -0.41120204
 -0.41258788 -0.4537084  -0.46178946  0.0531252 ]  taking action:  9
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
logic [63:0] sum_temp;
logic cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.636376  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  26.0
Iteration TIME (sec):  47.28840907799895
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50213052 -0.65094956 -0.48804975 -0.49631321 -0.49696511 -0.49779738
 -0.48370596 -0.4985671  -0.49921065 -0.49932455]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.4553672e-01 1.3631683e-02 6.3364678e-03 2.9863650e-04 2.6030702e-04
 8.6892593e-05 5.8752939e-05 4.6122219e-05 3.9121624e-05 2.2032502e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.11116707  0.4236119   0.34336367  0.19172768  0.14845693  0.1061658
  0.06050345  0.03716183  0.0286903   0.02472756]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    
    wire [63:0] sum_temp;
    wire cout_temp;
    wire [63:0] in1_temp, in2_temp;
    wire cin_temp;
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign cin_temp = cin;
    assign sum = sum_temp;
    assign cout = cout_temp;
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
    adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  89.210038  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  27.0
Iteration TIME (sec):  89.77500248999968
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49430527 -0.65066115 -0.48783046 -0.49624556 -0.49690942 -0.49775696
 -0.58305555 -0.49854081 -0.49919617 -0.49931216]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [1.9513392e+00 2.7505856e-04 2.0279028e-08 7.4872091e-09 7.0043162e-09
 6.9812818e-09 6.0475371e-09 5.5315459e-09 4.7391944e-09 4.6849107e-09]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  32007

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);</s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3831.690854  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  28.0
Iteration TIME (sec):  3825.2151122239993
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.48661855 -0.65037784 -0.65841006 -0.4961791  -0.49685471 -0.49771726
 -0.57921552 -0.49851498 -0.49918194 -0.49929998]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.05020678 -0.2777866  -0.34599948 -0.34850177 -0.38665918 -0.40785
 -0.40928817 -0.45196095 -0.46034706 -0.4724347 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.23991296 -0.25259075  0.30737346  0.2123201   0.1521378   0.15052044
  0.12870437  0.10601187  0.10394239  0.09164892]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

wire [63:0] sum_temp;
wire cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  42.436458  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  29.0
Iteration TIME (sec):  43.112858759999654
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.51379239 -0.65009938 -0.65826891 -0.49611379 -0.49680094 -0.49767824
 -0.57544116 -0.49848959 -0.49916795 -0.49928802]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.7091787e+00 7.6478063e-03 3.1288150e-03 2.0252408e-04 1.4911361e-04
 1.3559674e-04 4.8611670e-05 4.7207126e-05 3.3835073e-05 3.1753203e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);  

  wire [63:0] sum_temp;
  wire cout_temp;

  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.171578  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  30.0
Iteration TIME (sec):  45.82266522200007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50685736 -0.64982552 -0.65813009 -0.66403305 -0.49674806 -0.49763986
 -0.57172919 -0.49846463 -0.4991542  -0.49927625]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [0.4293032  0.2192729  0.18795764 0.18462445 0.16250563 0.12024861
 0.1186427  0.10152539 0.09622192 0.0681053 ]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);                      

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.675661  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  31.0
Iteration TIME (sec):  46.34811902900037
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50003331 -0.64955605 -0.6579935  -0.66399091 -0.66446404 -0.49760209
 -0.56807662 -0.49844006 -0.49914067 -0.49926467]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5543209e+00 9.9127544e-03 3.1272941e-03 3.6488261e-04 2.4883068e-04
 1.2554065e-04 7.7998004e-05 7.2514827e-05 6.2277533e-05 3.9418970e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.204084  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  32.0
Iteration TIME (sec):  45.864359251998394
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.49331508 -0.64929075 -0.65785902 -0.66394942 -0.66442989 -0.6650433
 -0.5644807  -0.49841587 -0.49912734 -0.49925327]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.22051615 -0.2699873  -0.3405943  -0.34318444 -0.3826811  -0.4046157
 -0.40610433 -0.45027485 -0.4589553  -0.4714672 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.20921385 -0.22338805 -0.328173    0.23738109  0.17009524  0.16828698
  0.14389585  0.11852487  0.11621112  0.10246661]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   wire [63:0] sum_temp;
   wire cout_temp;

   assign sum = sum_temp;
   assign cout = cout_temp;

   adder_32 adder_32_0(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
   adder_32 adder_32_1(sum_temp[63:32], cout_temp, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  54.72699  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  33.0
Iteration TIME (sec):  55.36674036600016
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.51877927 -0.64902944 -0.65772657 -0.66390856 -0.66439625 -0.66501888
 -0.56093886 -0.49839205 -0.49911422 -0.49924204]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.8408921  0.7950329  0.10416058 0.04687038 0.01842616 0.01279582
 0.00985548 0.00629076 0.0049741  0.00403579]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3797.33419  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  34.0
Iteration TIME (sec):  3790.9233322649998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.51266624 -0.64877195 -0.65759605 -0.66386829 -0.6643631  -0.66499482
 -0.55744873 -0.66557907 -0.49910129 -0.49923097]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5448453e+00 9.8535838e-03 3.3812763e-03 4.4779750e-04 2.5691706e-04
 8.1685888e-05 6.5511995e-05 4.0112045e-05 3.8074253e-05 2.8338238e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.177427  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  35.0
Iteration TIME (sec):  45.834305591000884
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50663993 -0.64851811 -0.65746738 -0.6638286  -0.66433042 -0.66497111
 -0.55400811 -0.66556364 -0.66605905 -0.49922006]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [1.5620397e+00 1.1331268e-02 3.8213008e-03 3.8557459e-04 2.5378453e-04
 9.4768424e-05 6.6230859e-05 4.8832360e-05 3.2826480e-05 3.1734031e-05]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);      

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.16138  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  36.0
Iteration TIME (sec):  45.834113015000185
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.50069675 -0.64826778 -0.65734049 -0.66378945 -0.6642982  -0.66494772
 -0.55061496 -0.66554843 -0.66605066 -0.66613955]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.33459303 -0.2624439  -0.3353665  -0.3380416  -0.37883356 -0.4014875
 -0.40302497 -0.4486441  -0.4576092  -0.47053143]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.65070057 0.27355924 0.15972951 0.15170208 0.15049742 0.04917414
 0.02009445 0.01975108 0.01106863 0.01105743]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    wire [63:0] sum_temp;
    wire cout_temp;
    wire [63:0] in1_temp, in2_temp;
    wire cin_temp;
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign cin_temp = cin;
    assign sum = sum_temp;
    assign cout = cout_temp;
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
    adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  88.598821  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  37.0
Iteration TIME (sec):  89.16422632100148
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.52454904 -0.6480208  -0.6572153  -0.66375083 -0.6642664  -0.66492465
 -0.54726736 -0.66553342 -0.6660424  -0.66613248]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.3192436  -0.5034219  -0.33029968 -0.3330571  -0.3751045  -0.39845565
 -0.40004045 -0.44706354 -0.45630458 -0.46962452]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.18145972 -0.1969868  -0.31177297 -0.36998102  0.18632999  0.18434915
  0.15763001  0.12983748  0.1273029   0.11224654]  taking action:  4
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  732

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

always @(*)
begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  20.227173  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  38.0
Iteration TIME (sec):  20.93150868399971
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.54581919 -0.64777705 -0.65709175 -0.66371271 -0.66423503 -0.66490187
 -0.54396352 -0.6655186  -0.66603423 -0.6661255 ]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-6.8946779e-02  1.5240684e-02  7.0843860e-03  3.3388575e-04
  2.9103211e-04  9.7148870e-05  6.5687782e-05  5.1566203e-05
  4.3739303e-05  2.4633086e-05]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    </s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3830.801289  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  39.0
Iteration TIME (sec):  3824.379456439001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.54074096 -0.64753641 -0.65696977 -0.66367508 -0.66420405 -0.66487939
 -0.61725145 -0.66550398 -0.66602618 -0.6661186 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.40371946 -0.49868917 -0.3253798  -0.32821715 -0.37148356 -0.39551172
 -0.39714244 -0.44552884 -0.45503777 -0.46874386]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [0.86596286 0.28363934 0.17673585 0.12427547 0.08911925 0.05307221
 0.01751231 0.01063452 0.01038451 0.00671302]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29871

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  
  wire [63:0] sum_temp;
  wire cout_temp;
  
  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
  
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.819351  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  40.0
Iteration TIME (sec):  46.4718068780021
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.56016134 -0.64729876 -0.6568493  -0.66363791 -0.66417346 -0.66485719
 -0.61456711 -0.66548953 -0.66601822 -0.66611179]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.3912946  -0.49408615 -0.54706323 -0.3235099  -0.36796194 -0.3926485
 -0.39432392 -0.4440362  -0.45380569 -0.46788737]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.65625036 0.25657064 0.21500257 0.15757431 0.13067055 0.03924206
 0.03150591 0.01968204 0.01865967 0.01599579]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  wire [63:0] sum_temp;
  wire cout_temp;
  wire [63:0] in1_temp, in2_temp;
  wire cin_temp;
  assign in1_temp = in1;
  assign in2_temp = in2;
  assign cin_temp = cin;
  assign sum = sum_temp;
  assign cout = cout_temp;
  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
  adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  88.539137  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  41.0
Iteration TIME (sec):  89.11582455400276
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.57769433 -0.64706399 -0.6567303  -0.6636012  -0.66414323 -0.66483525
 -0.6119153  -0.66547526 -0.66601036 -0.66610507]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.37919268 -0.4896028  -0.54395616 -0.54595    -0.36453182 -0.38985968
 -0.3915786  -0.44258237 -0.45260566 -0.46705315]  taking action:  4
Leaf selection - depth:  2
Leaf selection - action scores:  [1.8561926e+00 1.5160079e-02 1.3969902e-02 1.2939776e-02 1.1332845e-02
 7.0812898e-03 6.8538450e-03 2.4170752e-03 1.4245819e-03 1.3796123e-03]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.856187  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  42.0
Iteration TIME (sec):  46.49788517900015
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.59360782 -0.64683199 -0.65661271 -0.66356492 -0.66411337 -0.66481358
 -0.60929487 -0.66546116 -0.66600259 -0.66609842]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.36738962 -0.4852302  -0.54092574 -0.54296887 -0.5741243  -0.38713974
 -0.38890114 -0.44116443 -0.45143524 -0.4662395 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.15593717 -0.1727083  -0.29669157 -0.35956347 -0.3993703   0.19911984
  0.17025988  0.14024052  0.13750286  0.12124013]  taking action:  5
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

logic [63:0] sum_temp;
logic cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.842504  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  43.0
Iteration TIME (sec):  47.4901985180004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.60812091 -0.64660268 -0.65649647 -0.66352906 -0.66408385 -0.66479216
 -0.60670475 -0.66544722 -0.66599492 -0.66609185]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-3.94356251e-03 -4.91652340e-01  7.76055641e-03  3.65753513e-04
  3.18809703e-04  1.06421256e-04  7.19573582e-05  5.64879483e-05
  4.79140072e-05  2.69841930e-05]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																															
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3798.193246  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  44.0
Iteration TIME (sec):  3792.0947551399986
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.60420638 -0.64637596 -0.65638155 -0.66349361 -0.66405467 -0.66477097
 -0.66069479 -0.66543344 -0.66598732 -0.66608535]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.4363814  -0.48096055 -0.5379668  -0.54005796 -0.5719465  -0.38448387
 -0.3862867  -0.43977988 -0.45029238 -0.46544504]  taking action:  5
Leaf selection - depth:  2
Leaf selection - action scores:  [1.4147732  0.15085186 0.09033326 0.04456673 0.04054713 0.03728707
 0.03458252 0.03200692 0.02986487 0.02128642]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
                      
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.308415  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  45.0
Iteration TIME (sec):  46.97156063199873
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.61771187 -0.64615175 -0.6562679  -0.66345854 -0.6640258  -0.66475003
 -0.65852403 -0.66541982 -0.66597982 -0.66607893]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.42652354 -0.47678685 -0.53507423 -0.5372125  -0.5698177  -0.58792514
 -0.383731   -0.43842643 -0.44917524 -0.46466845]  taking action:  6
Leaf selection - depth:  2
Leaf selection - action scores:  [0.7404906  0.3768425  0.22665463 0.11034009 0.08006838 0.05517712
 0.05483039 0.03603462 0.01997335 0.01155543]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
			
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3818.07148  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  46.0
Iteration TIME (sec):  3814.3761698900016
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.63013022 -0.64592996 -0.65615548 -0.66342386 -0.66399725 -0.6647293
 -0.65637673 -0.66540634 -0.66597239 -0.66607258]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.4168778  -0.47270292 -0.532244   -0.5344282  -0.5677347  -0.5862316
 -0.5874869  -0.4371021  -0.4480821  -0.46390855]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.13218138 -0.15011048 -0.28265414 -0.34986702 -0.39242232 -0.39356595
  0.18201546  0.14992343  0.14699674  0.12961115]  taking action:  6
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);


    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.845078  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  47.0
Iteration TIME (sec):  45.528826393998315
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.64159079 -0.64571052 -0.65604424 -0.66338954 -0.663969   -0.6647088
 -0.65425217 -0.665393   -0.66596504 -0.66606629]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.473272   -0.46870327 -0.5294721  -0.5317013  -0.56569463 -0.5845729
 -0.5858542  -0.4358051  -0.4470115  -0.4631643 ]  taking action:  7
Leaf selection - depth:  2
Leaf selection - action scores:  [1.5910109  0.07330741 0.0462103  0.03371033 0.02982466 0.02363083
 0.01922137 0.00978423 0.00894908 0.00741925]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29953

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
wire [63:0] sum_temp;
wire cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.295537  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  48.0
Iteration TIME (sec):  46.96800744800203
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.652203   -0.64549335 -0.65593416 -0.66335558 -0.66394105 -0.66468851
 -0.65214962 -0.6653798  -0.66595777 -0.66606007]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [5.98057747e-01 1.02760075e-02 5.90039557e-03 1.82492338e-04
 1.42222256e-04 7.67037636e-05 5.61864872e-05 4.58914074e-05
 2.62096528e-05 2.47866537e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.8367759  0.20821173 0.1584203  0.12709872 0.1161639  0.11332569
 0.0946476  0.04121765 0.03045896 0.01853583]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin); 

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.821426  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  49.0
Iteration TIME (sec):  45.50661914500233
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.64906246 -0.73395878 -0.6558252  -0.66332197 -0.66391337 -0.66466843
 -0.65006841 -0.66536674 -0.66595058 -0.66605391]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.46504116 -0.46478283 -0.5267551  -0.5290285  -0.563695   -0.58294713
 -0.5842538  -0.62302256 -0.44596213 -0.46243483]  taking action:  8
Leaf selection - depth:  2
Leaf selection - action scores:  [1.0228838e+00 5.2973270e-01 2.9937232e-01 4.6166908e-02 3.2532822e-02
 6.0259616e-03 5.6490563e-03 1.1015268e-03 1.0434686e-03 8.1095018e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  22798

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
always @(*)
begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  19.343739  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  50.0
Iteration TIME (sec):  20.060302088000753
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.65906606 -0.73379916 -0.65571732 -0.66328868 -0.66388598 -0.66464855
 -0.64800792 -0.6653538  -0.66594345 -0.66604781]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [ 5.5833101e-02 -4.9098349e-01 -4.9580881e-01  3.9505897e-04
  3.4435384e-04  1.1494810e-04  7.7722834e-05  6.1013961e-05
  5.1753046e-05  2.9146260e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.05101442 -0.25542754  0.3964822   0.22138806  0.17142329  0.1225897
  0.06986336  0.04291078  0.0331287   0.02855293]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    
    
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.304279  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  51.0
Iteration TIME (sec):  46.98303850500088
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.65610114 -0.7336411  -0.6556105  -0.66325573 -0.66385885 -0.66462886
 -0.69022158 -0.66534099 -0.66593639 -0.66604177]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [6.9494641e-01 3.3687658e-04 2.4836636e-08 9.1699208e-09 8.5785006e-09
 8.5502894e-09 7.4066899e-09 6.7747328e-09 5.8043041e-09 5.7378204e-09]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [1.7647899  0.03436349 0.02303318 0.02232006 0.01846209 0.01413777
 0.00701879 0.00386036 0.00295687 0.00286209]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  32008

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);</s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3828.587303  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  52.0
Iteration TIME (sec):  3824.6955736710006
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.6531646  -0.73348455 -0.7416285  -0.66322309 -0.66383198 -0.66460936
 -0.68845333 -0.66532831 -0.66592941 -0.66603579]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.45696712 -0.46093708 -0.5240899  -0.5264066  -0.5617335  -0.58135235
 -0.58268386 -0.6221912  -0.6299552  -0.46171921]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.10986945 -0.12888613 -0.26946992 -0.34075993 -0.38589665 -0.38710967
 -0.4034717   0.1590178   0.15591358  0.13747337]  taking action:  7
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

reg [63:0] sum;
reg cout;

always @(in1, in2, cin)
begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  29.931901  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  53.0
Iteration TIME (sec):  30.642790361998777
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66274649 -0.73332947 -0.7415499  -0.66319075 -0.66380536 -0.66459004
 -0.68670168 -0.66531574 -0.66592248 -0.66602987]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.50413716 -0.4571619  -0.5214736  -0.5238328  -0.5598079  -0.57978684
 -0.5811427  -0.621375   -0.6292815  -0.46101677]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.10152888  0.3350403   0.19562791  0.18579635  0.18432094  0.06022578
  0.02461058  0.02419003  0.01355625  0.01354253]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    reg [63:0] sum;
    reg cout;
    always @(in1, in2, cin)
    begin
        sum = in1 + in2 + cin;
        cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
    end
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  30.77532  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  54.0
Iteration TIME (sec):  31.475931537999713
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.6716925  -0.73317582 -0.74147201 -0.66315871 -0.66377899 -0.6645709
 -0.68496617 -0.66530329 -0.66591562 -0.666024  ]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [5.4665399e-01 9.3666120e-03 3.8320003e-03 2.4804033e-04 1.8262613e-04
 1.6607140e-04 5.9536895e-05 5.7816684e-05 4.1439333e-05 3.8889575e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.7052646  0.20969015 0.20342247 0.17337102 0.1629136  0.12447614
 0.07217798 0.03833274 0.02546629 0.02009673]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29871

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);  

  wire [63:0] sum_temp;
  wire cout_temp;

  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.817745  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  55.0
Iteration TIME (sec):  45.49588339700131
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.6690334  -0.73302356 -0.74139484 -0.74734521 -0.66375286 -0.66455193
 -0.68324637 -0.66529095 -0.66590883 -0.66601818]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.23710656  0.26855335  0.23020016  0.22611786  0.19902793  0.14727387
  0.14530703  0.1243427   0.11784729  0.08341162]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  462

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3802.281228  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  56.0
Iteration TIME (sec):  3798.525813342996
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66639794 -0.73287266 -0.74131835 -0.74732161 -0.7477952  -0.66453313
 -0.68154186 -0.66527872 -0.66590209 -0.66601242]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [4.5182329e-01 1.2140595e-02 3.8301377e-03 4.4688809e-04 3.0475410e-04
 1.5375526e-04 9.5527656e-05 8.8812165e-05 7.6274089e-05 4.8278183e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.69939315 0.2961355  0.17534006 0.16039427 0.15934442 0.10830921
 0.06389299 0.03258754 0.02777205 0.01996723]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.836085  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  57.0
Iteration TIME (sec):  45.520895825997286
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66378549 -0.73272307 -0.74124252 -0.74729822 -0.74777594 -0.74838586
 -0.67985224 -0.6652666  -0.66589541 -0.6660067 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.4971302  -0.59009016 -0.5189036  -0.52130455 -0.55791646 -0.578249
 -0.57962894 -0.62057334 -0.6286198  -0.46032673]  taking action:  9
Leaf selection - depth:  2
Leaf selection - action scores:  [1.6685356  0.06102365 0.02700934 0.02181756 0.01722197 0.01640414
 0.01296786 0.01228472 0.01078548 0.00484877]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29953

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
logic [63:0] sum_temp;
logic cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.312027  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  58.0
Iteration TIME (sec):  46.982531289999315
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67248895 -0.73257477 -0.74116735 -0.74727503 -0.74775685 -0.748372
 -0.67817712 -0.66525458 -0.66588879 -0.66600104]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.01493913 0.9737125  0.12757014 0.05740426 0.02256734 0.01567162
 0.01207045 0.00770457 0.00609201 0.00494281]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);	

	wire [63:0] sum_temp;
	wire cout_temp;
	
	adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
	adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
	
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.108988  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  59.0
Iteration TIME (sec):  46.78267785799835
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67000639 -0.73242772 -0.74109281 -0.74725203 -0.74773792 -0.74835826
 -0.67651614 -0.74893198 -0.66588223 -0.66599542]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [4.4602072e-01 1.2068126e-02 4.1412008e-03 5.4843770e-04 3.1465787e-04
 1.0004437e-04 8.0235484e-05 4.9127022e-05 4.6631249e-05 3.4707111e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.6697325  0.287449   0.18059883 0.17337964 0.15007192 0.10966498
 0.06561949 0.03502971 0.02728973 0.0272309 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.854315  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  60.0
Iteration TIME (sec):  45.533048738005164
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66754444 -0.73228189 -0.74101889 -0.74722923 -0.74771915 -0.74834464
 -0.67486894 -0.74892312 -0.74940677 -0.66598985]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [4.5655012e-01 1.3877912e-02 4.6801185e-03 4.7223052e-04 3.1082128e-04
 1.1606714e-04 8.1115904e-05 5.9807182e-05 4.0204064e-05 3.8866092e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.6737187  0.2786553  0.17838258 0.156937   0.15635405 0.11436534
 0.06169206 0.03179041 0.03145149 0.0278441 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);      

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.838237  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  61.0
Iteration TIME (sec):  45.51997229099652
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.66510258 -0.73213725 -0.74094557 -0.74720661 -0.74770053 -0.74833113
 -0.67323519 -0.74891433 -0.74940193 -0.74948823]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.49024302 -0.58735645 -0.51637757 -0.5188196  -0.55605733 -0.5767375
 -0.578141   -0.61978537 -0.6279694  -0.6397657 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.08876628 -0.10881162 -0.25699994 -0.33214623 -0.3797245  -0.38100314
 -0.39825028 -0.41619027  0.16434735  0.14490966]  taking action:  8
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

assign sum = in1 + in2 + cin;
assign cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  16.790087  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  62.0
Iteration TIME (sec):  17.505360525996366
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67356162 -0.73199377 -0.74087285 -0.74718417 -0.74768206 -0.74831772
 -0.67161456 -0.74890561 -0.74939713 -0.74948412]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-1.1082256e-01 -4.9036095e-01 -4.9551943e-01  4.2233581e-04
  3.6812975e-04  1.2288470e-04  8.3089202e-05  6.5226668e-05
  5.5326331e-05  3.1158663e-05]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     #1

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.123024  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  63.0
Iteration TIME (sec):  46.80076619299507
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67123605 -0.73185143 -0.74080069 -0.74716191 -0.74766374 -0.74830442
 -0.70667267 -0.74889696 -0.74939236 -0.74948004]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5304271  -0.5846679  -0.51389325 -0.51637566 -0.554229   -0.575251
 -0.5766777  -0.61901045 -0.6273297  -0.639321  ]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [0.0302918  0.34738582 0.21645634 0.15220575 0.10914835 0.06499992
 0.02144811 0.01302458 0.01271837 0.00822174]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
   wire [63:0] sum_temp;
   wire cout_temp;
   wire [63:0] in1_temp, in2_temp;
   wire cin_temp;
   assign in1_temp = in1;
   assign in2_temp = in2;
   assign cin_temp = cin;
   assign sum = sum_temp;
   assign cout = cout_temp;
   adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
   adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  88.559551  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  64.0
Iteration TIME (sec):  89.17914232300245
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.67927459 -0.73171019 -0.7407291  -0.74713982 -0.74764556 -0.74829123
 -0.70525463 -0.74888837 -0.74938763 -0.74947599]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.52436805 -0.5820225  -0.6335865  -0.51397085 -0.55242985 -0.5737882
 -0.57523775 -0.61824787 -0.6267003  -0.6388835 ]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.09813038  0.31423357  0.26332328  0.19298834  0.1600381   0.0480615
  0.03858669  0.02410547  0.02285334  0.01959076]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
  reg [63:0] sum;
  reg cout;
  always @(in1, in2, cin)
  begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
  end
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  30.79994  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  65.0
Iteration TIME (sec):  31.49928959400131
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.68684255 -0.73157004 -0.74065806 -0.74711791 -0.74762751 -0.74827813
 -0.70384745 -0.74887985 -0.74938294 -0.74947198]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.518403   -0.579418   -0.6317816  -0.63370246 -0.55065864 -0.5723481
 -0.5738202  -0.61749715 -0.6260806  -0.6384527 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.06869441 -0.08971813 -0.24513939 -0.32395345 -0.37385398 -0.37519503
 -0.39328396 -0.4120996  -0.41381553  0.15198255]  taking action:  9
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  22376

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

	wire [63:0] sum_temp;
	wire cout_temp;

	adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
	adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.376591  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  66.0
Iteration TIME (sec):  45.04519048500515
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.69398102 -0.73143094 -0.74058755 -0.74709615 -0.74760961 -0.74826514
 -0.70245089 -0.7488714  -0.74937828 -0.74946799]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.55315036 -0.57685274 -0.63000375 -0.63195354 -0.5489141  -0.57092977
 -0.5724239  -0.6167577  -0.6254702  -0.6380284 ]  taking action:  4
Leaf selection - depth:  2
Leaf selection - action scores:  [0.6366812  0.01856723 0.01710957 0.01584793 0.01387984 0.00867277
 0.00839421 0.0029603  0.00174475 0.00168967]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.489353   0.11718903 0.05801145 0.03810195 0.03343396 0.02563096
 0.02369891 0.02024624 0.01588653 0.01203279]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.553464  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  67.0
Iteration TIME (sec):  46.20154073199956
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70072662 -0.73129288 -0.74051757 -0.74707456 -0.74759184 -0.74825224
 -0.70106471 -0.74886301 -0.74937366 -0.74946404]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5478433  -0.5743249  -0.6282519  -0.6302301  -0.6603962  -0.56953204
 -0.571048   -0.6160291  -0.6248688  -0.6376103 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.04951602 -0.07147458 -0.23380676 -0.3161254  -0.3682448  -0.36964548
 -0.38853875 -0.40819103 -0.40998325 -0.4206297 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.87658304 0.1604297  0.15867865 0.15134813 0.0363248  0.01746273
 0.01377848 0.01261667 0.01111079 0.00994631]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.093071  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  68.0
Iteration TIME (sec):  44.74576798299677
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70711165 -0.73115583 -0.7404481  -0.74705313 -0.74757419 -0.74823943
 -0.69968869 -0.74885468 -0.74936907 -0.74946011]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-6.9016993e-02 -4.8977622e-01 -4.9524766e-01 -4.9977604e-01
  3.9046054e-04  1.3033889e-04  8.8129404e-05  6.9183327e-05
  5.8682432e-05  3.3048753e-05]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  47.119834  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  69.0
Iteration TIME (sec):  47.76559788099985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.70519747 -0.73101977 -0.74037914 -0.74703185 -0.74755668 -0.74822672
 -0.72849032 -0.74884641 -0.74936451 -0.74945621]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5777952  -0.5718329  -0.62652487 -0.6285312  -0.65912515 -0.5681542
 -0.56969166 -0.6153108  -0.6242759  -0.63719815]  taking action:  5
Leaf selection - depth:  2
Leaf selection - action scores:  [0.36636811 0.18475504 0.1106352  0.05458287 0.04965989 0.04566715
 0.04235476 0.03920031 0.03657684 0.02607043]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.9423417e+00 3.4677945e-03 3.2541826e-03 3.2595699e-04 1.8038139e-04
 1.7822361e-04 1.0143997e-04 9.6989752e-05 9.2824142e-05 8.9301320e-05]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
                      
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.050635  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  70.0
Iteration TIME (sec):  46.69380017899675
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.71131594 -0.73088467 -0.74031066 -0.74701073 -0.74753929 -0.7482141
 -0.72726959 -0.7488382  -0.74935999 -0.74945234]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5730324  -0.56937534 -0.62482166 -0.6268557  -0.65787166 -0.6750965
 -0.568354   -0.6146024  -0.62369114 -0.63679165]  taking action:  6
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.04654393  0.46153593  0.2775941   0.13513847  0.09806333  0.06757789
  0.06715325  0.04413321  0.02446226  0.01415246]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
	
	wire [63:0] sum_temp;
	wire cout_temp;
	
	adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
	adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
	
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.842772  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  71.0
Iteration TIME (sec):  46.492097152004135
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.71712497 -0.73075053 -0.74024266 -0.74698975 -0.74752202 -0.74820157
 -0.72605744 -0.74883004 -0.7493555  -0.7494485 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.5683336  -0.56695074 -0.6231414  -0.62520266 -0.656635   -0.67409104
 -0.67527574 -0.6139035  -0.6231143  -0.6363906 ]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.03988519 -0.3065644   0.22589165  0.21453914  0.21283549  0.06954274
  0.02841785  0.02793224  0.01565341  0.01563756]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    assign sum = in1 + in2 + cin;
    assign cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  16.791258  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  72.0
Iteration TIME (sec):  17.490523382999527
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7226482  -0.73061731 -0.74017514 -0.74696892 -0.74750487 -0.74818912
 -0.72485367 -0.74882195 -0.74935104 -0.74944468]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.56369627 -0.65164626 -0.621483   -0.6235713  -0.65541446 -0.6730987
 -0.6742989  -0.6132138  -0.62254494 -0.63599485]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.35408095 -0.05397663 -0.22293732 -0.30861723 -0.36286485 -0.3643227
 -0.38398746 -0.4044422  -0.40630758 -0.41738877]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.82463074 0.19849621 0.16792804 0.1357453  0.03473955 0.02914078
 0.02678718 0.02491982 0.01478916 0.01292101]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  wire [63:0] sum_temp;
  wire cout_temp;

  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.087213  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  73.0
Iteration TIME (sec):  44.74796654399688
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.72790679 -0.73048501 -0.74010807 -0.74694823 -0.74748784 -0.74817676
 -0.72365811 -0.74881391 -0.74934661 -0.74944089]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-2.9476225e-02 -4.8922321e-01 -4.9499059e-01 -4.9976391e-01
 -4.9979421e-01  1.3738926e-04  9.2896553e-05  7.2925628e-05
  6.1856714e-05  3.4836445e-05]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     \

always @(in1, in2, cin)
begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  24.841443  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  74.0
Iteration TIME (sec):  25.530934573995182
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.72624284 -0.73035359 -0.74004146 -0.74692768 -0.74747092 -0.74816448
 -0.74770061 -0.74880592 -0.74934221 -0.74943713]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.59060955 -0.6497563  -0.6198458  -0.62196064 -0.6542095  -0.672119
 -0.6733345  -0.6125328  -0.6219829  -0.6356041 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.34228116 -0.35809314 -0.21247846 -0.30139273 -0.35768813 -0.359201
 -0.3796081  -0.40083498 -0.40277082 -0.41427028]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [1.5920299  0.06837209 0.04764805 0.03339016 0.02953105 0.02267879
 0.02132227 0.00928823 0.00855808 0.00752329]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29953

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

wire [63:0] sum_temp;
wire cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  42.146426  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  75.0
Iteration TIME (sec):  42.79516007300117
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.73130727 -0.73022305 -0.73997529 -0.74690726 -0.74745412 -0.74815229
 -0.74662823 -0.74879798 -0.74933784 -0.74943339]  taking action:  1
Leaf selection - depth:  1
Leaf selection - action scores:  [1.7861855e-01 1.1865712e-02 6.8131899e-03 2.1072399e-04 1.6422411e-04
 8.8569876e-05 6.4878564e-05 5.2990832e-05 3.0264298e-05 2.8621162e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.01241851 0.25500625 0.19402444 0.15566352 0.14227115 0.13879506
 0.11591917 0.05048111 0.03730445 0.02270166]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin); 
    wire [63:0] sum_temp;
    wire cout_temp;
    wire [63:0] in1_temp, in2_temp;
    wire cin_temp;
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign cin_temp = cin;
    assign sum = sum_temp;
    assign cout = cout_temp;
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
    adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  89.219227  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  76.0
Iteration TIME (sec):  89.76309438199678
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.72970527 -0.7840747  -0.73990955 -0.74688698 -0.74743742 -0.74814017
 -0.74556289 -0.7487901  -0.7493335  -0.74942967]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.61398375 -0.64788985 -0.6182289  -0.62037003 -0.65301955 -0.6711515
 -0.6723821  -0.61186033 -0.6214278  -0.6352182 ]  taking action:  7
Leaf selection - depth:  2
Leaf selection - action scores:  [0.47429127 0.08978288 0.05659582 0.04128655 0.03652759 0.02894174
 0.02354127 0.01198318 0.01096034 0.00908669]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.3663659  0.27456152 0.19327104 0.04930285 0.02073605 0.01233631
 0.01079171 0.00765311 0.00728705 0.00448656]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
wire [63:0] sum_temp;
wire cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.074538  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  77.0
Iteration TIME (sec):  46.72281605099852
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.73458707 -0.78397163 -0.73984424 -0.74686683 -0.74742084 -0.74812813
 -0.74450445 -0.74878227 -0.74932918 -0.74942598]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.61011267 -0.64604604 -0.6166316  -0.6187987  -0.65184397 -0.67019576
 -0.67144126 -0.708397   -0.6208794  -0.63483703]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.33089575 -0.3472627  -0.46825796 -0.29442194 -0.3526932  -0.3542592
 -0.37538254 -0.39735445 -0.3993582  -0.41126132]  taking action:  3
Leaf selection - depth:  3
Leaf selection - action scores:  [0.66811913 0.26473343 0.17404181 0.11683187 0.06535474 0.02842765
 0.0250268  0.01149311 0.01080563 0.01054583]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

   wire [63:0] sum_temp;
   wire cout_temp;

   assign sum = sum_temp;
   assign cout = cout_temp;

   adder_32 adder_32_0(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
   adder_32 adder_32_1(sum_temp[63:32], cout_temp, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  54.437527  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  78.0
Iteration TIME (sec):  55.061017056999844
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.73925158 -0.78386921 -0.73977935 -0.74684681 -0.74740436 -0.74811617
 -0.74345277 -0.74877449 -0.7493249  -0.74942231]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6308945  -0.64422405 -0.61505324 -0.617246   -0.65068233 -0.6692513
 -0.67051154 -0.7079046  -0.6203375  -0.63446033]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.11232817 -0.2994367   0.24994224  0.17575204  0.12603365  0.07505544
  0.02476615  0.01503949  0.01468591  0.00949365]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
   assign sum = in1 + in2 + cin;
   assign cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  16.784526  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  79.0
Iteration TIME (sec):  17.496017413002846
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74371338 -0.78376743 -0.73971486 -0.74682692 -0.74738798 -0.74810429
 -0.74240772 -0.74876676 -0.74932064 -0.74941867]  taking action:  2
Leaf selection - depth:  1
Leaf selection - action scores:  [2.5320345e-01 3.8899155e-04 2.8678876e-08 1.0588512e-08 9.9055990e-09
 9.8730233e-09 8.5525089e-09 7.8227869e-09 6.7022330e-09 6.6254642e-09]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.58070874 0.04208651 0.02820978 0.02733638 0.02261136 0.01731517
 0.00859623 0.00472796 0.00362141 0.00350532]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.95156235 0.17032643 0.1330954  0.1300338  0.08740153 0.07407682
 0.0481233  0.02130172 0.01891803 0.01771847]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);</s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add('isActive')
            ->add('roles')
        ;
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\User'
        ));
    } <EOT></s><s> <PRE> <SUF>

    public function getName()
    {
        return 'appbundle_user';
    }
}
 <MID> <?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class UserType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('username')
            ->add('password')
            ->add('email')
            ->add
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3831.59873  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  80.0
Iteration TIME (sec):  3824.5222387479953
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74225816 -0.7836663  -0.79172064 -0.74680715 -0.7473717  -0.74809248
 -0.74136919 -0.74875907 -0.7493164  -0.74941505]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [ 8.1322789e-03 -4.8869720e-01 -4.9474609e-01 -4.9975237e-01
 -4.9978417e-01 -4.9992794e-01  9.7430733e-05  7.6485048e-05
  6.4875880e-05  3.6536774e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.00198114 -0.2265597  -0.2783597   0.24751936  0.19165705  0.13705945
  0.07810961  0.04797572  0.03703901  0.03192314]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  539

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);    
                      
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.873087  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  81.0
Iteration TIME (sec):  47.51631943399843
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74081191 -0.78356578 -0.79166969 -0.7467875  -0.74735553 -0.74808074
 -0.76197562 -0.74875144 -0.7493122  -0.74941145]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6273498  -0.64242315 -0.6907945  -0.61571115 -0.6495341  -0.66831774
 -0.66959256 -0.7074179  -0.6198019  -0.634088  ]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.03596091 -0.31857717  0.30405954  0.22284372  0.18479607  0.05549664
  0.04455608  0.0278346   0.02638876  0.02262146]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29871

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
 
  wire [63:0] sum_temp;
  wire cout_temp;
 
  assign sum = sum_temp;
  assign cout = cout_temp;
 
  adder_32 adder_32_0(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_1(sum_temp[63:32], cout_temp, in1[63:32], in2[63:32], cout_temp);
 
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  56.689224  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  82.0
Iteration TIME (sec):  57.30392195999593
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7451661  -0.78346587 -0.79161905 -0.74676797 -0.74733945 -0.74806907
 -0.76103524 -0.74874385 -0.74930802 -0.74940787]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.62384516 -0.6406425  -0.68956053 -0.691355   -0.6483989  -0.66739476
 -0.66868395 -0.7069368  -0.61927235 -0.63371986]  taking action:  8
Leaf selection - depth:  2
Leaf selection - action scores:  [0.12638581 0.64878744 0.36665472 0.05654268 0.0398444  0.00738027
 0.00691865 0.00134909 0.00127798 0.00099321]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  17743

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
always_comb begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  18.951339  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  83.0
Iteration TIME (sec):  19.661370897003508
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74933926 -0.78336657 -0.79156871 -0.74674856 -0.74732347 -0.74805747
 -0.76010051 -0.7487363  -0.74930386 -0.74940431]  taking action:  3
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3904792e-01 1.0815631e-02 4.4248127e-03 2.8641231e-04 2.1087848e-04
 1.9176274e-04 6.8747278e-05 6.6760957e-05 4.7850015e-05 4.4905813e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.06811538  0.25681695  0.24914064  0.21233526  0.1995276   0.15245152
  0.08839961  0.04694783  0.0311897   0.02461337]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);  
  
  wire [63:0] sum_temp;
  wire cout_temp;
  
  adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
  adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
  
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.361818  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  84.0
Iteration TIME (sec):  46.99937510800373
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74798067 -0.78326785 -0.79151867 -0.79738342 -0.74730759 -0.74804594
 -0.75917132 -0.7487288  -0.74929973 -0.74940078]  taking action:  4
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.19643682 -0.34495068  0.26581225  0.2610984   0.22981764  0.1700572
  0.1677861   0.14357857  0.13607833  0.09631544]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);                    

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.678368  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  85.0
Iteration TIME (sec):  46.325815507996595
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74663004 -0.78316972 -0.79146893 -0.79736808 -0.79783345 -0.74803448
 -0.75824759 -0.74872135 -0.74929562 -0.74939726]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.62037927 -0.6388816  -0.6883401  -0.6901545  -0.64727616 -0.666482
 -0.6677854  -0.7064609  -0.71406144 -0.6333558 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.31988397 -0.33678767 -0.46175104 -0.52511996 -0.34786218 -0.34947956
 -0.37129563 -0.39398813 -0.3960576  -0.40835106]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.03679532 0.19648546 0.19434087 0.18536285 0.04448861 0.02138739
 0.01687512 0.0154522  0.01360789 0.01218169]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    logic [63:0] sum_temp;
    logic cout_temp;

    assign sum_temp = in1 + in2 + cin;
    assign cout_temp = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);

    assign sum = sum_temp;
    assign cout = cout_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  35.900732  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  86.0
Iteration TIME (sec):  36.566425094002625
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75070666 -0.78307215 -0.79141947 -0.79735282 -0.79782089 -0.74802309
 -0.75732921 -0.74871394 -0.74929154 -0.74939377]  taking action:  5
Leaf selection - depth:  1
Leaf selection - action scores:  [6.6047192e-02 1.4018752e-02 4.4226618e-03 5.1602192e-04 3.5189971e-04
 1.7754128e-04 1.1030583e-04 1.0255145e-04 8.8073728e-05 5.5746841e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.07171091  0.36269042  0.21474683  0.19644207  0.19515626  0.13265115
  0.07825261  0.03991142  0.03401367  0.02445476]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);   
   
   wire [63:0] sum_temp;
   wire cout_temp;
   
   adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
   adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
   
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.375655  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  87.0
Iteration TIME (sec):  47.02139921700291
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74939996 -0.78297514 -0.7913703  -0.79733765 -0.7978084  -0.79840942
 -0.75641609 -0.74870657 -0.74928748 -0.74939029]  taking action:  7
Leaf selection - depth:  1
Leaf selection - action scores:  [0.0946005  0.06217313 0.1473053  0.06628473 0.02605852 0.01809602
 0.01393775 0.00889647 0.00703444 0.00570746]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);	 

	wire [63:0] sum_temp;
	wire cout_temp;
	
	adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
	adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
	
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.652123  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  88.0
Iteration TIME (sec):  47.28831371600245
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74810067 -0.78287868 -0.7913214  -0.79732256 -0.79779599 -0.79840041
 -0.75550815 -0.7989594  -0.74928344 -0.74938684]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.63948315 -0.6371398  -0.68713295 -0.68896693 -0.6461656  -0.665579
 -0.6668966  -0.7059902  -0.71367294 -0.63299567]  taking action:  9
Leaf selection - depth:  2
Leaf selection - action scores:  [0.52176523 0.0747384  0.03307955 0.02672094 0.02109252 0.02009089
 0.01588232 0.01504565 0.01320946 0.00593851]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.4505346  0.19472474 0.17349395 0.05331363 0.02486076 0.0194653
 0.01212953 0.0083085  0.00557056 0.0045875 ]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
logic [63:0] sum_temp;
logic cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.080202  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  89.0
Iteration TIME (sec):  46.72571828900254
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75208349 -0.78278276 -0.79127278 -0.79730756 -0.79778364 -0.79839145
 -0.75460529 -0.79895357 -0.74927943 -0.7493834 ]  taking action:  8
Leaf selection - depth:  1
Leaf selection - action scores:  [6.1580420e-02 1.3935071e-02 4.7818464e-03 6.3328131e-04 3.6333560e-04
 1.1552129e-04 9.2647955e-05 5.6726996e-05 5.3845124e-05 4.0076320e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.08987427  0.3520517   0.22118749  0.21234584  0.1837998   0.13431163
  0.08036713  0.04290247  0.03342296  0.0333509 ]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     
    wire [63:0] sum_temp;
    wire cout_temp;
    wire [63:0] in1_temp, in2_temp;
    wire cin_temp;
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign cin_temp = cin;
    assign sum = sum_temp;
    assign cout = cout_temp;
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
    adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  89.229985  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  90.0
Iteration TIME (sec):  89.7702940310046
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.7508254  -0.78268738 -0.79122443 -0.79729265 -0.79777136 -0.79838253
 -0.75370744 -0.79894777 -0.79942036 -0.74937999]  taking action:  9
Leaf selection - depth:  1
Leaf selection - action scores:  [6.9685936e-02 1.6024832e-02 5.4041352e-03 5.4528483e-04 3.5890550e-04
 1.3402279e-04 9.3664581e-05 6.9059388e-05 4.6423651e-05 4.4878696e-05]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.08743322  0.34128165  0.21847314  0.19220778  0.19149384  0.14006837
  0.07555704  0.03893514  0.03852005  0.03410192]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);      
    wire [63:0] sum_temp;
    wire cout_temp;
    wire [63:0] in1_temp, in2_temp;
    wire cin_temp;
    assign in1_temp = in1;
    assign in2_temp = in2;
    assign cin_temp = cin;
    assign sum = sum_temp;
    assign cout = cout_temp;
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1_temp[31:0], in2_temp[31:0], cin_temp);
    adder_32 adder_32_2(sum_temp[63:32], cout_temp, in1_temp[63:32], in2_temp[63:32], cout_temp);
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  89.238812  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  91.0
Iteration TIME (sec):  89.77925233299902
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.74957421 -0.78259251 -0.79117635 -0.79727781 -0.79775915 -0.79837367
 -0.7528145  -0.79894201 -0.79941718 -0.79950128]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.63629055 -0.6354163  -0.6859386  -0.68779194 -0.6450668  -0.66468567
 -0.6660172  -0.7055245  -0.7132885  -0.7244795 ]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.01442397 -0.2837324  -0.37372273  0.23986204  0.2379573   0.07775114
  0.03177212  0.03122919  0.01750104  0.01748333]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  259

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
   
   wire [63:0] sum_temp;
   wire cout_temp;
   
   adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
   adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
   
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.866815  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  92.0
Iteration TIME (sec):  46.512339189997874
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75346591 -0.78249816 -0.79112852 -0.79726306 -0.797747   -0.79836486
 -0.75192641 -0.79893627 -0.79941402 -0.79949858]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-1.2994456e-01 -4.8819461e-01 -4.9451247e-01 -4.9974138e-01
 -4.9977458e-01 -4.9992475e-01  1.0176308e-04  7.9886027e-05
  6.7760644e-05  3.8161415e-05]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  5453

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  0.012937  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  93.0
Iteration TIME (sec):  0.7612954379947041
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75225343 -0.78240432 -0.79108095 -0.79724838 -0.79773492 -0.79835609
 -0.7701936  -0.79893057 -0.79941088 -0.79949589]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.633131   -0.6947589  -0.6847566  -0.6866291  -0.6439794  -0.66380155
 -0.6651468  -0.7050636  -0.712908   -0.72421503]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.4819084  -0.32663518 -0.45544446 -0.52076364 -0.34317994 -0.34484708
 -0.36733457 -0.39072546 -0.39285862 -0.40553045]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.0049811  0.24310721 0.205669   0.16625337 0.04254708 0.03569002
 0.03280746 0.03052042 0.01811295 0.01582494]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

  logic [63:0] sum_temp;
  logic cout_temp;

  assign sum_temp = in1 + in2 + cin;
  assign cout_temp = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);

  assign sum = sum_temp;
  assign cout = cout_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  35.906303  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  94.0
Iteration TIME (sec):  36.56742497999949
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75602644 -0.78231097 -0.79103364 -0.79723378 -0.7977229  -0.79834737
 -0.76938254 -0.7989249  -0.79940776 -0.79949322]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6505588  -0.69335204 -0.68358654 -0.6854781  -0.642903   -0.66292644
 -0.66428536 -0.70460737 -0.71253145 -0.72395325]  taking action:  4
Leaf selection - depth:  2
Leaf selection - action scores:  [0.2083509  0.02143959 0.01975643 0.01829961 0.01602706 0.01001446
 0.0096928  0.00341826 0.00201466 0.00195107]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.41203874 0.14352666 0.07104922 0.04666517 0.04094807 0.03139139
 0.02902512 0.02479647 0.01945695 0.0147371 ]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.82682043 0.18294641 0.18216507 0.14540567 0.03460295 0.02126708
 0.01732646 0.0153357  0.01108502 0.008098  ]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
    
    wire [63:0] sum_temp;
    wire cout_temp;
    
    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
    
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  45.273492  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  95.0
Iteration TIME (sec):  45.92566922100377
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.75965755 -0.78221811 -0.79098657 -0.79721926 -0.79771095 -0.79833869
 -0.76857574 -0.79891925 -0.79940465 -0.79949056]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6476346  -0.69195914 -0.6824282  -0.68433857 -0.71346986 -0.66206
 -0.6634325  -0.7041557  -0.7121586  -0.723694  ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.47413602 -0.48758286 -0.44932085 -0.51653373 -0.33863348 -0.34034896
 -0.3634884  -0.38755745 -0.38975245 -0.40279165]  taking action:  4
Leaf selection - depth:  3
Leaf selection - action scores:  [9.9844611e-01 6.2805313e-01 2.6029485e-01 2.4032723e-02 2.2929605e-02
 7.1258270e-03 2.9043886e-03 1.2551052e-03 8.1933837e-04 6.4032211e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  22798

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

always @(*)
begin
    sum = in1 + in2 + cin;
    cout = (in1[63] & in2[63]) | (in1[63] & cin) | (in2[63] & cin);
end

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  19.9189  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  96.0
Iteration TIME (sec):  20.625695916998666
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76315488 -0.78212574 -0.79093975 -0.79720482 -0.79769906 -0.79833006
 -0.76777313 -0.79891364 -0.79940156 -0.79948791]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6634368  -0.6905799  -0.6812811  -0.68321013 -0.7126256  -0.661202
 -0.6625879  -0.7037084  -0.7117894  -0.7234374 ]  taking action:  5
Leaf selection - depth:  2
Leaf selection - action scores:  [0.00026381 0.21333674 0.12775052 0.06302687 0.05734231 0.05273188
 0.04890706 0.04526461 0.0422353  0.03010354]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
                      wire [63:0] sum_temp;
                      wire cout_temp;
                      wire [63:0] in1_temp, in2_temp;
                      wire cin_temp;
                      assign in1_temp = in1;
                      assign in2_temp = in2;
                      assign cin_temp = cin;
                      assign sum_temp = in1_temp + in2_temp + cin_temp;
                      assign cout_temp = (in1_temp[63] & in2_temp[63]) | (in1_temp[63] & cin_temp) | (in2_temp[63] & cin_temp);
                      assign sum = sum_temp;
                      assign cout = cout_temp;
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  76.858294  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  97.0
Iteration TIME (sec):  77.4273486739985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76652595 -0.78203384 -0.79089316 -0.79719045 -0.79768723 -0.79832148
 -0.76697465 -0.79890805 -0.79939848 -0.79948528]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6607197  -0.68921375 -0.680145   -0.6820925  -0.7117895  -0.72828186
 -0.6617514  -0.7032654  -0.7114238  -0.7231832 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.4665767  -0.480392   -0.44336504 -0.5124197  -0.55614114 -0.33597416
 -0.35974765 -0.38447624 -0.3867314  -0.4001279 ]  taking action:  5
Leaf selection - depth:  3
Leaf selection - action scores:  [1.684797   0.05540597 0.02484141 0.02398721 0.01568058 0.01511742
 0.01203051 0.01087529 0.00968284 0.00578436]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29953

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

logic [63:0] sum_temp;
logic cout_temp;

adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

assign sum = sum_temp;

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  46.532184  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  98.0
Iteration TIME (sec):  47.172782640998776
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76977761 -0.78194241 -0.79084682 -0.79717615 -0.79767546 -0.79831293
 -0.76618023 -0.7989025  -0.79939542 -0.79948266]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [-1.0122305e-01 -4.8771256e-01 -4.9428838e-01 -4.9973083e-01
 -4.9976537e-01 -4.9992168e-01 -4.9994704e-01  8.3148014e-05
  7.0527509e-05  3.9719656e-05]  taking action:  7
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);     /






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  3798.867621  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  99.0
Iteration TIME (sec):  3793.5279973459983
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.76871109 -0.78185144 -0.79080071 -0.79716192 -0.79766375 -0.79830443
 -0.78214765 -0.79889697 -0.79939237 -0.79948005]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.6751267  -0.6878605  -0.6790196  -0.6809854  -0.7109612  -0.7276084
 -0.66092277 -0.7028266  -0.7110616  -0.7229314 ]  taking action:  6
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.02360594 -0.2335321   0.32053804  0.15604445  0.11323378  0.07803223
  0.07754189  0.05096064  0.02824658  0.01634185]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);
	wire [63:0] sum_temp;
	wire cout_temp;
	
	adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
	adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);
	
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.884936  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  100.0
Iteration TIME (sec):  45.531058854998264
ROBUST FINAL VALUE, ITERATION:  1.0
Adding child.
<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  43.812885  seconds
Running getPromptScore: 
<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  43.811163  seconds
Running getPromptScore: 
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.77187443 -0.78176092 -0.79075482 -0.79714777 -0.7976521  -0.79829598
 -0.78141736 -0.79889147 -0.79938934 -0.79947746]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [-0.67259324 -0.68651974 -0.67790455 -0.6798884  -0.7101406  -0.72694117
 -0.7280814  -0.7023918  -0.71070266 -0.72268194]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [-0.45921385 -0.47338805 -0.43756402 -0.5084126  -0.55326986 -0.55447537
 -0.35610414 -0.38147512 -0.38378888 -0.3975334 ]  taking action:  6
Leaf selection - depth:  3
Leaf selection - action scores:  [0.32616067 0.2409322  0.19599237 0.16790307 0.14502874 0.13974306
 0.09922618 0.07168579 0.06241947 0.05630622]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);


    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  44.582829  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  101.0
Iteration TIME (sec):  45.22714711900335
----
 Tree depth: 0
 Node: action=None
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416]]
• Child Action scores:[-0.77492984 -0.78167085 -0.79070917 -0.79713368 -0.7976405  -0.79828756
 -0.78069066 -0.79888599 -0.79938633 -0.79947488]
• Child averaged monte carlo:-0.9901960784313726
• Child probablities:[8.32579851e-01 6.57557028e-03 3.33308196e-03 1.02829339e-03
 8.46471972e-04 6.14339544e-04 1.48545834e-01 3.99653916e-04
 2.20159476e-04 1.88391092e-04]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=101.0,Q=-0.9901960784313726,M=-0.9901960784313726
----
 Tree depth: 1
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13]]
• Child Action scores:[-0.68579304 -0.68519104 -0.6767996  -0.6788014  -0.70932734 -0.72628003
 -0.7274305  -0.7019609  -0.71034706 -0.7224347 ]
• Child averaged monte carlo:-0.9821428571428571
• Child probablities:[0.542109   0.08607105 0.05964982 0.05868059 0.04390088 0.03569293
 0.03513588 0.01860721 0.01535898 0.01067701]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=55.0,Q=-0.9821428571428571,M=-0.9821428571428571
----
 Tree depth: 1
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416 29871]]
• Child Action scores:[-4.1206777e-02  1.3266268e-02  7.6173777e-03  2.3559657e-04
  1.8360814e-04  9.9024131e-05  7.2536444e-05  5.9245551e-05
  3.3836513e-05  3.1999429e-05]
• Child averaged monte carlo:-0.8
• Child probablities:[9.1878831e-01 4.2991708e-03 2.4685471e-03 7.6349272e-05 5.9501490e-05
 3.2090535e-05 2.3506727e-05 1.9199577e-05 1.0965326e-05 1.0369986e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416     2]]
• Child Action scores:[2.13345289e-02 4.34905756e-04 3.20639586e-08 1.18383161e-08
 1.10747962e-08 1.10383755e-08 9.56199475e-09 8.74614159e-09
 7.49332418e-09 7.40749373e-09]
• Child averaged monte carlo:-0.8
• Child probablities:[9.9985886e-01 1.4093897e-04 1.0390897e-08 3.8364174e-09 3.5889851e-09
 3.5771823e-09 3.0987350e-09 2.8343432e-09 2.4283453e-09 2.4005304e-09]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   259]]
• Child Action scores:[-7.4387789e-02  1.2092243e-02  4.9470910e-03  3.2021868e-04
  2.3576930e-04  2.1439725e-04  7.6861797e-05  7.4641015e-05
  5.3497944e-05  5.0206221e-05]
• Child averaged monte carlo:-0.8
• Child probablities:[8.75776708e-01 3.91870691e-03 1.60319300e-03 1.03772574e-04
 7.64052456e-05 6.94792543e-05 2.49084351e-05 2.41887519e-05
 1.73369626e-05 1.62702217e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   462]]
• Child Action scores:[-0.16060606 -0.32664955 -0.35140646  0.29191688  0.25694394  0.19012973
  0.18759055  0.16052572  0.1521402   0.10768393]
• Child averaged monte carlo:-0.8
• Child probablities:[0.21997333 0.1123546  0.09630878 0.09460087 0.08326726 0.06161493
 0.06079207 0.05202122 0.04930374 0.0348969 ]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416  1678]]
• Child Action scores:[-1.3560075e-01  1.5673440e-02  4.9446863e-03  5.7693000e-04
  3.9343582e-04  1.9849719e-04  1.2332566e-04  1.1465600e-04
  9.8469420e-05  6.2326864e-05]
• Child averaged monte carlo:-0.8
• Child probablities:[7.9642814e-01 5.0792578e-03 1.6024137e-03 1.8696446e-04 1.2749989e-04
 6.4326552e-05 3.9965882e-05 3.7156322e-05 3.1910771e-05 2.0198131e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268]]
• Child Action scores:[-7.3586583e-02 -4.8724872e-01 -4.9407277e-01 -4.9972066e-01
 -4.9975652e-01 -4.9991873e-01 -4.9994504e-01 -4.9995685e-01
  7.3189854e-05  4.1219035e-05]
• Child averaged monte carlo:-0.9285714285714286
• Child probablities:[8.8282979e-01 4.9390155e-03 2.2958217e-03 1.0820163e-04 9.4314142e-05
 3.1482825e-05 2.1287296e-05 1.6710948e-05 1.4174501e-05 7.9827905e-06]
• Child visitation:[1 1 1 1 1 1 1 1 0 0]
• N=13.0,Q=-0.9285714285714286,M=-0.9285714285714286
----
 Tree depth: 1
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12]]
• Child Action scores:[ 0.16478354  0.12852865 -0.41765383  0.07410858  0.02913431  0.02023197
  0.01558288  0.00994656  0.00786475  0.00638114]
• Child averaged monte carlo:-0.8
• Child probablities:[0.4308699  0.40737185 0.05337149 0.02401621 0.00944149 0.00655653
 0.00504991 0.00322336 0.00254871 0.00206792]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=8
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   418]]
• Child Action scores:[-1.3934624e-01  1.5579883e-02  5.3462670e-03  7.0802995e-04
  4.0622154e-04  1.2915672e-04  1.0358356e-04  6.3422711e-05
  6.0200677e-05  4.4806686e-05]
• Child averaged monte carlo:-0.8
• Child probablities:[7.9157293e-01 5.0489390e-03 1.7325531e-03 2.2944974e-04 1.3164333e-04
 4.1855539e-05 3.3568100e-05 2.0553260e-05 1.9509103e-05 1.4520406e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 1
 Node: action=9
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   539]]
• Child Action scores:[-1.3254958e-01  1.7916307e-02  6.0420069e-03  6.0964690e-04
  4.0126854e-04  1.4984203e-04  1.0472018e-04  7.7210738e-05
  5.1903222e-05  5.0175906e-05]
• Child averaged monte carlo:-0.8
• Child probablities:[8.0038327e-01 5.8060987e-03 1.9580200e-03 1.9756696e-04 1.3003823e-04
 4.8558981e-05 3.3936441e-05 2.5021516e-05 1.6820164e-05 1.6260397e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13]]
• Child Action scores:[-0.45203286 -0.4665571  -0.43190634 -0.50450456 -0.5504695  -0.55170476
 -0.5683671  -0.37854815 -0.38091904 -0.39500296]
• Child averaged monte carlo:-0.9523809523809523
• Child probablities:[0.18846887 0.17928207 0.1113672  0.07692757 0.05512239 0.05453639
 0.04663202 0.0384101  0.03766029 0.03320613]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=20.0,Q=-0.9523809523809523,M=-0.9523809523809523
----
 Tree depth: 2
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678]]
• Child Action scores:[ 0.06352323 -0.26309073 -0.3616702  -0.36862215  0.26066917  0.08517211
  0.03480461  0.03420987  0.01917143  0.01915202]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[0.33341652 0.14017072 0.0818448  0.07773157 0.07711431 0.02519664
 0.01029632 0.01012038 0.00567152 0.00566578]
• Child visitation:[1 1 1 1 0 0 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 2
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259]]
• Child Action scores:[ 0.18460369 -0.27576345 -0.36027804  0.19649675  0.1409099   0.08391452
  0.02768939  0.01681466  0.01641935  0.01061422]
• Child averaged monte carlo:-0.8
• Child probablities:[0.44371608 0.14533572 0.09055878 0.06367828 0.04566437 0.027194
 0.00897324 0.00544909 0.00532098 0.00343973]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871]]
• Child Action scores:[ 0.01881146 -0.29716313 -0.33002555  0.24914685  0.20660828  0.06204713
  0.04981521  0.03112003  0.02950353  0.02529156]
• Child averaged monte carlo:-0.8
• Child probablities:[0.3362602  0.13146582 0.1101665  0.08074048 0.0669551  0.02010748
 0.01614351 0.010085   0.00956115 0.00819618]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268]]
• Child Action scores:[-0.01627547  0.02397019  0.02208835  0.02045958  0.0179188   0.0111965
  0.01083688  0.00382173  0.00225246  0.00218136]
• Child averaged monte carlo:-0.8
• Child probablities:[9.5110607e-01 7.7679669e-03 7.1581248e-03 6.6302922e-03 5.8069071e-03
 3.6284260e-03 3.5118842e-03 1.2385002e-03 7.2995038e-04 7.0690812e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462]]
• Child Action scores:[ 0.07898426 -0.38074115  0.14282942  0.07046618  0.06411064  0.05895603
  0.05467976  0.05060737  0.0472205   0.03365678]
• Child averaged monte carlo:-0.8
• Child probablities:[0.72492445 0.07729592 0.04628642 0.02283582 0.0207762  0.01910575
 0.01771995 0.01640022 0.01530265 0.01090708]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    12]]
• Child Action scores:[ 0.08540922 -0.20207986 -0.32081378  0.17446299  0.12659922  0.08724269
  0.08669446  0.05697573  0.03158064  0.01827074]
• Child averaged monte carlo:-0.8
• Child probablities:[0.3794246  0.19309267 0.11613698 0.05653784 0.04102673 0.02827255
 0.02809489 0.018464   0.01023427 0.00592096]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=4.0,Q=-0.8,M=-0.8
----
 Tree depth: 2
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 22376]]
• Child Action scores:[0.08334309 0.10367234 0.06535123 0.04767361 0.04217843 0.03341904
 0.02718312 0.01383698 0.01265591 0.01049241]
• Child averaged monte carlo:-0.75
• Child probablities:[0.815228   0.03756244 0.02367798 0.01727305 0.01528204 0.01210835
 0.00984896 0.0050134  0.00458547 0.0038016 ]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=8
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 21936]]
• Child Action scores:[ 0.223288   -0.12542242  0.4233764   0.06528986  0.04600836  0.008522
  0.00798897  0.00155779  0.00147569  0.00114686]
• Child averaged monte carlo:-0.75
• Child probablities:[5.2412176e-01 2.7143303e-01 1.5339725e-01 2.3655748e-02 1.6669694e-02
 3.0876799e-03 2.8945550e-03 5.6441815e-04 5.3466938e-04 4.1552781e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=9
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 19227]]
• Child Action scores:[0.11988854 0.08630046 0.03819697 0.03085469 0.02435554 0.02319896
 0.01833933 0.01737322 0.01525297 0.0068572 ]
• Child averaged monte carlo:-0.75
• Child probablities:[0.8549513  0.03126828 0.01383948 0.01117923 0.00882447 0.00840542
 0.00664468 0.00629464 0.00552644 0.00248449]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416 29871    13]]
• Child Action scores:[ 0.09168988 -0.35277206  0.22404012  0.17974474  0.16428056  0.16026673
  0.13385192  0.05829056  0.04307547  0.02621362]
• Child averaged monte carlo:-0.75
• Child probablities:[0.4287608  0.10668691 0.08117396 0.06512491 0.05952194 0.05806765
 0.04849707 0.02111977 0.01560705 0.00949769]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416     2     1]]
• Child Action scores:[0.16526324 0.04859731 0.03257384 0.03156533 0.02610934 0.01999383
 0.00992607 0.00545938 0.00418164 0.0040476 ]
• Child averaged monte carlo:-0.75
• Child probablities:[0.90427166 0.01760772 0.01180212 0.01143671 0.00945991 0.00724414
 0.0035964  0.00197804 0.00151509 0.00146652]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   259    13]]
• Child Action scores:[-0.00130263 -0.35172665  0.28768283  0.24518363  0.23039462  0.17603585
  0.10207508  0.05421069  0.03601477  0.02842107]
• Child averaged monte carlo:-0.75
• Child probablities:[0.3613749  0.10744444 0.10423291 0.08883465 0.08347631 0.0637811
 0.03698372 0.01964155 0.01304883 0.01029749]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   462   539]]
• Child Action scores:[1.86740315e+00 1.41538605e-02 4.71416907e-03 1.95581059e-04
 1.52946639e-04 6.61228696e-05 5.55122133e-05 3.36366102e-05
 3.24811263e-05 3.04130208e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[9.56850290e-01 7.25238444e-03 2.41552247e-03 1.00214995e-04
 7.83692813e-05 3.38811078e-05 2.84442485e-05 1.72352720e-05
 1.66432055e-05 1.55835169e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   462   462]]
• Child Action scores:[0.717263   0.10963746 0.09998    0.09290906 0.09255743 0.08948673
 0.08596978 0.07647288 0.07635832 0.07417734]
• Child averaged monte carlo:-0.5
• Child probablities:[0.36752284 0.05617782 0.05122937 0.04760625 0.04742608 0.04585266
 0.04405059 0.03918441 0.03912571 0.03800819]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   462   268]]
• Child Action scores:[1.7381362e+00 1.8144650e-02 6.7596426e-03 4.4384270e-04 3.5772010e-04
 1.6955777e-04 7.3214520e-05 6.0405753e-05 4.4498716e-05 3.9124938e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[8.9061439e-01 9.2972498e-03 3.4636152e-03 2.2742331e-04 1.8329443e-04
 8.6880755e-05 3.7514841e-05 3.0951680e-05 2.2800974e-05 2.0047470e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416  1678    13]]
• Child Action scores:[-0.00545436 -0.2906006   0.24796827  0.22683175  0.22534704  0.15317236
  0.09035833  0.04608573  0.03927561  0.02823792]
• Child averaged monte carlo:-0.75
• Child probablities:[0.3583664  0.1517387  0.08984358 0.08218542 0.08164748 0.05549723
 0.03273853 0.01669773 0.01423029 0.01023113]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268    13]]
• Child Action scores:[ 0.04989278 -0.20046115 -0.25720525 -0.36442804  0.20994979  0.1501411
  0.08556479  0.05255476  0.0405742   0.03497005]
• Child averaged monte carlo:-0.8333333333333334
• Child probablities:[0.32535186 0.17722641 0.14365298 0.08021306 0.06210989 0.04441656
 0.02531281 0.01554739 0.01200315 0.01034526]
• Child visitation:[1 1 1 1 0 0 0 0 0 0]
• N=5.0,Q=-0.8333333333333334,M=-0.8333333333333334
----
 Tree depth: 2
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268     2]]
• Child Action scores:[1.9513617e+00 2.5262873e-04 1.8567532e-08 6.9308257e-09 6.5680466e-09
 6.4929386e-09 5.6158478e-09 5.1171121e-09 4.4135917e-09 4.3924113e-09]
• Child averaged monte carlo:-0.5
• Child probablities:[9.9987030e-01 1.2944601e-04 9.5139328e-09 3.5513288e-09 3.3654421e-09
 3.3269572e-09 2.8775391e-09 2.6219888e-09 2.2615076e-09 2.2506550e-09]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268    12]]
• Child Action scores:[0.83788824 0.7038387  0.09474415 0.0759724  0.03698301 0.03488868
 0.01602098 0.0157612  0.01325999 0.01140119]
• Child averaged monte carlo:-0.5
• Child probablities:[0.42933077 0.36064428 0.04854654 0.03892797 0.01894995 0.01787683
 0.00820909 0.00807598 0.00679437 0.00584193]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268   396]]
• Child Action scores:[0.28897512 0.10528082 0.07685392 0.05779893 0.05234034 0.04372619
 0.04154574 0.04014604 0.03475142 0.03427068]
• Child averaged monte carlo:-0.5
• Child probablities:[0.14806975 0.0539455  0.03937966 0.02961596 0.02681899 0.02240513
 0.02128788 0.02057068 0.0178065  0.01756017]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268  6756]]
• Child Action scores:[1.8825144e+00 2.6487494e-02 1.1543774e-02 5.5450215e-03 3.3567080e-03
 3.3463645e-03 3.0553818e-03 2.8967361e-03 2.6135885e-03 1.1960769e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[9.6459323e-01 1.3572091e-02 5.9149861e-03 2.8412479e-03 1.7199644e-03
 1.7146645e-03 1.5655661e-03 1.4842766e-03 1.3391929e-03 6.1286526e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268   320]]
• Child Action scores:[1.504635   0.11998209 0.07057535 0.01917051 0.01853753 0.01233351
 0.00892476 0.00878444 0.00551759 0.00516614]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7709693  0.06147837 0.03616254 0.0098229  0.00949856 0.00631964
 0.00457301 0.00450111 0.00282719 0.00264711]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268  1095]]
• Child Action scores:[1.9118916e+00 1.0871202e-02 1.0001935e-02 7.5223371e-03 2.0514661e-03
 1.3227097e-03 1.2278473e-03 6.6872040e-04 5.6766393e-04 5.0885114e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.7964603e-01 5.5703628e-03 5.1249536e-03 3.8544170e-03 1.0511635e-03
 6.7775144e-04 6.2914431e-04 3.4264982e-04 2.9086883e-04 2.6073339e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268   847]]
• Child Action scores:[0.4844741  0.43991256 0.30924687 0.22839043 0.03183675 0.02261453
 0.01758488 0.01298341 0.01165647 0.01081756]
• Child averaged monte carlo:-0.5
• Child probablities:[0.24824269 0.22540952 0.15845692 0.11702639 0.01631303 0.0115876
 0.00901042 0.00665265 0.00597273 0.00554288]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12    12]]
• Child Action scores:[1.2834284  0.30780843 0.08875779 0.07411296 0.02715295 0.02696782
 0.02020563 0.01114604 0.0074317  0.00608737]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6576239  0.15771988 0.04547916 0.0379752  0.01391307 0.01381821
 0.01035329 0.00571119 0.00380798 0.00311915]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12    13]]
• Child Action scores:[0.69011384 0.5131034  0.13510501 0.10943351 0.09236113 0.08826635
 0.06765202 0.0362394  0.03105988 0.02088786]
• Child averaged monte carlo:-0.5
• Child probablities:[0.3536117  0.26291224 0.0692273  0.05607332 0.04732549 0.04522735
 0.03466464 0.01856893 0.01591496 0.01070286]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12 29871]]
• Child Action scores:[1.79834485e+00 1.06487393e-01 1.07311895e-02 1.70856249e-04
 4.87789439e-05 4.09044151e-05 2.71491826e-05 2.08169913e-05
 1.47284400e-05 1.29979644e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[9.21465099e-01 5.45637384e-02 5.49862068e-03 8.75460973e-05
 2.49941459e-05 2.09592672e-05 1.39111380e-05 1.06665475e-05
 7.54679695e-06 6.66010783e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   418    13]]
• Child Action scores:[-0.0264276  -0.29674286  0.2554053   0.24519585  0.21223374  0.1550897
  0.09279997  0.0495395   0.03859351  0.0385103 ]
• Child averaged monte carlo:-0.75
• Child probablities:[0.3431684  0.14728779 0.09253816 0.08883908 0.07689628 0.05619192
 0.03362318 0.01794909 0.01398315 0.01395301]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   539    13]]
• Child Action scores:[-0.02360895 -0.30296096  0.25227106  0.22194242  0.22111803  0.16173701
  0.08724575  0.04495843  0.04447912  0.0393775 ]
• Child averaged monte carlo:-0.75
• Child probablities:[0.3452109  0.14278191 0.09140255 0.08041392 0.08011523 0.05860037
 0.03161078 0.01628929 0.01611562 0.01426721]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678]]
• Child Action scores:[ 0.11983782 -0.38655907  0.2244055   0.21403858  0.05137102  0.02469604
  0.01948571  0.01784266  0.01571303  0.0140662 ]
• Child averaged monte carlo:-0.75
• Child probablities:[0.44915783 0.08220357 0.08130634 0.07755021 0.01861269 0.00894784
 0.00706004 0.00646473 0.00569313 0.00509645]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871]]
• Child Action scores:[ 0.08310199 -0.35964197  0.23748611  0.19197285  0.04912914  0.04121128
  0.03788279  0.03524194  0.02091504  0.01827306]
• Child averaged monte carlo:-0.75
• Child probablities:[0.42253765 0.1017087  0.08604569 0.06955538 0.01780041 0.01493162
 0.01372565 0.01276882 0.00757791 0.00662068]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 22376]]
• Child Action scores:[0.47491527 0.08373836 0.0583567  0.04089443 0.03616801 0.02777573
 0.02611434 0.01137571 0.01048147 0.00921412]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.8157501  0.0350336  0.02441468 0.01710899 0.0151316  0.01162053
 0.01092545 0.00475925 0.00438513 0.00385491]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13   259]]
• Child Action scores:[-0.09086224  0.32423094  0.2131568   0.14308923  0.08004288  0.03481661
  0.03065145  0.01407613  0.01323414  0.01291595]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.34234172 0.13564841 0.08917836 0.05986421 0.03348752 0.01456622
 0.01282364 0.00588903 0.00553676 0.00540364]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 21936]]
• Child Action scores:[0.11142093 0.76920485 0.3187948  0.02943396 0.02808292 0.00872732
 0.00355714 0.00153718 0.00100348 0.00078423]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[5.1160002e-01 3.2181203e-01 1.3337409e-01 1.2314277e-02 1.1749043e-02
 3.6512469e-03 1.4881977e-03 6.4311118e-04 4.1982587e-04 3.2809863e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 19227]]
• Child Action scores:[0.53172326 0.06785818 0.03042439 0.02937821 0.01920472 0.01851499
 0.0147343  0.01331946 0.01185901 0.00708436]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.86328363 0.02838981 0.01272864 0.01229095 0.00803467 0.00774611
 0.00616439 0.00557246 0.00496145 0.00296388]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13    13]]
• Child Action scores:[-0.30026817  0.29508048  0.24004065  0.20563842  0.17762321  0.1711496
  0.12152676  0.0877968   0.07644793  0.06896076]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.1671235  0.12345275 0.10042574 0.0860329  0.07431218 0.07160381
 0.05084312 0.03673153 0.0319835  0.0288511 ]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727]]
• Child Action scores:[1.7480873  0.04646152 0.02276373 0.01458232 0.01234308 0.0104909
 0.00927844 0.00785439 0.00574436 0.00524015]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8957133  0.02380671 0.01166405 0.00747193 0.00632455 0.0053755
 0.00475424 0.00402456 0.00294339 0.00268503]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=8
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 16645]]
• Child Action scores:[1.4913645  0.25863928 0.09830424 0.01716578 0.01291432 0.01268877
 0.00895937 0.00670391 0.00297344 0.00296514]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7641695  0.13252579 0.05037072 0.00879568 0.00661725 0.00650168
 0.00459075 0.00343506 0.00152358 0.00151932]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=9
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13    12]]
• Child Action scores:[0.59638953 0.2188557  0.16925651 0.14205861 0.14009367 0.08783634
 0.02314977 0.02136006 0.01774256 0.01699605]
• Child averaged monte carlo:-0.5
• Child probablities:[0.30558774 0.11214083 0.0867264  0.07279029 0.07178347 0.04500701
 0.01186186 0.01094481 0.00909122 0.00870871]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  8014]]
• Child Action scores:[1.5709591  0.07897429 0.05312048 0.04053572 0.03266225 0.02199574
 0.01548754 0.00999929 0.009871   0.00743262]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8049535  0.04046613 0.02721873 0.02077035 0.01673602 0.01127053
 0.00793576 0.0051236  0.00505786 0.00380845]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  1072]]
• Child Action scores:[1.7358614  0.0474791  0.01993571 0.01581976 0.01388969 0.01334864
 0.01009629 0.00914091 0.00687457 0.00662033]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8894488  0.02432811 0.01021498 0.00810599 0.00711702 0.00683979
 0.0051733  0.00468377 0.00352251 0.00339223]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  3566]]
• Child Action scores:[1.5623231  0.2290164  0.09461027 0.01131411 0.01085248 0.00874079
 0.00299555 0.00264004 0.00187538 0.00160882]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8005284  0.11734714 0.04847795 0.00579731 0.00556077 0.00447875
 0.00153491 0.00135275 0.00096094 0.00082435]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678    13]]
• Child Action scores:[1.3006047  0.2452131  0.1566466  0.04170394 0.02741694 0.02198622
 0.01661061 0.01278214 0.01117729 0.01034764]
• Child averaged monte carlo:-0.5
• Child probablities:[0.66642493 0.12564626 0.08026512 0.02136894 0.01404834 0.01126566
 0.00851121 0.00654952 0.0057272  0.00530209]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259    13]]
• Child Action scores:[1.4638906  0.13800636 0.09826573 0.03754772 0.028489   0.0153343
 0.01410118 0.01205358 0.01162252 0.01064692]
• Child averaged monte carlo:-0.5
• Child probablities:[0.75009197 0.07071394 0.05035099 0.01923931 0.01459766 0.00785724
 0.00722539 0.00617621 0.00595534 0.00545544]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259  8014]]
• Child Action scores:[1.5707366  0.0673572  0.06205431 0.04080441 0.03212748 0.0278474
 0.0180371  0.01012787 0.00868093 0.00777849]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8048395  0.03451358 0.0317964  0.02090803 0.016462   0.0142689
 0.00924214 0.00518948 0.00444807 0.00398567]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259  3566]]
• Child Action scores:[1.511941   0.2645442  0.10084956 0.01599513 0.01059914 0.01017411
 0.00335049 0.00333547 0.00264517 0.00178215]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7747128  0.13555144 0.05167493 0.00819584 0.00543096 0.00521318
 0.00171678 0.00170908 0.00135537 0.00091317]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871  8014]]
• Child Action scores:[1.5838208  0.06620408 0.05412357 0.03813865 0.03430864 0.02209548
 0.01627789 0.00987009 0.00896687 0.00811253]
• Child averaged monte carlo:-0.5
• Child probablities:[0.81154376 0.03392272 0.02773271 0.0195421  0.01757962 0.01132164
 0.00834073 0.00505739 0.00459459 0.00415683]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871  1072]]
• Child Action scores:[1.7516086  0.04422491 0.02078913 0.01392871 0.01249555 0.01193795
 0.0087512  0.00765859 0.00696693 0.00631452]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8975176  0.02266067 0.01065227 0.00713702 0.00640268 0.00611696
 0.00448408 0.00392423 0.00356983 0.00323554]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871    13]]
• Child Action scores:[0.51059216 0.4076001  0.20841618 0.16902268 0.06116466 0.0597508
 0.0427284  0.03989709 0.0397376  0.03422484]
• Child averaged monte carlo:-0.5
• Child probablities:[0.2616255  0.20885275 0.10679166 0.08660658 0.03134054 0.03061608
 0.02189387 0.02044312 0.0203614  0.01753668]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13]]
• Child Action scores:[0.03542101 0.16573031 0.08204057 0.05388429 0.04728276 0.03624766
 0.03351532 0.0286325  0.02246694 0.01701694]
• Child averaged monte carlo:-0.75
• Child probablities:[0.76313883 0.06004721 0.02972485 0.01952329 0.01713143 0.01313321
 0.01214323 0.0103741  0.0081402  0.00616556]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462   539]]
• Child Action scores:[6.89436555e-01 4.24716342e-03 3.98554374e-03 3.99214157e-04
 2.20921196e-04 2.18278466e-04 1.24238082e-04 1.18787699e-04
 1.13685892e-04 1.09371336e-04]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[9.9524850e-01 1.7768848e-03 1.6674309e-03 1.6701913e-04 9.2426744e-05
 9.1321104e-05 5.1977455e-05 4.9697181e-05 4.7562738e-05 4.5757657e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462   418]]
• Child Action scores:[0.3649716  0.2698173  0.25701252 0.25453278 0.13489957 0.03026709
 0.02013702 0.01946733 0.0135334  0.01328623]
• Child averaged monte carlo:-0.5
• Child probablities:[0.18701006 0.13825336 0.13169225 0.13042164 0.06912203 0.01550874
 0.01031813 0.00997499 0.00693446 0.00680781]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    12    12]]
• Child Action scores:[1.712655   0.06212496 0.06211501 0.01934041 0.01700355 0.01514185
 0.01237462 0.00996285 0.00665481 0.00363105]
• Child averaged monte carlo:-0.5
• Child probablities:[0.87755793 0.03183259 0.03182749 0.00990995 0.00871255 0.00775863
 0.00634071 0.00510493 0.0034099  0.00186054]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    12    13]]
• Child Action scores:[1.4927022  0.09572495 0.07135444 0.04846739 0.04761661 0.02432842
 0.02282407 0.01537786 0.01488937 0.00871973]
• Child averaged monte carlo:-0.5
• Child probablities:[0.76485497 0.0490491  0.03656175 0.02483451 0.02439857 0.01246579
 0.01169497 0.00787956 0.00762926 0.00446796]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    12 22376]]
• Child Action scores:[1.5102667  0.08405687 0.06359704 0.04713535 0.0365614  0.02828543
 0.02432901 0.01863917 0.01213935 0.0111326 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7738549  0.04307042 0.03258688 0.02415198 0.01873392 0.01449335
 0.01246609 0.00955064 0.00622016 0.0057043 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 22376   518]]
• Child Action scores:[0.33672482 0.33626783 0.23670773 0.06038341 0.02539638 0.01510883
 0.0132171  0.00937311 0.00892478 0.00549489]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.7001207  0.14068429 0.09903135 0.02526259 0.01062508 0.00632108
 0.00552963 0.00392143 0.00373386 0.00229889]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 21936   732]]
• Child Action scores:[0.5442642  0.42733398 0.34062302 0.2832911  0.19017486 0.08136359
 0.04729441 0.01969581 0.00478229 0.00145176]
• Child averaged monte carlo:-0.5
• Child probablities:[0.27887893 0.21896431 0.17453395 0.14515729 0.09744488 0.04169039
 0.02423348 0.01009206 0.00245042 0.00074388]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 21936 29918]]
• Child Action scores:[1.9312373e+00 7.3127854e-03 4.5327460e-03 3.8989615e-03 2.0341875e-03
 7.0223387e-04 4.2263756e-04 7.8129931e-05 7.7163961e-05 7.6554192e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[9.8955870e-01 3.7470434e-03 2.3225618e-03 1.9978131e-03 1.0423100e-03
 3.5982198e-04 2.1655789e-04 4.0033479e-05 3.9538521e-05 3.9226077e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 19227   518]]
• Child Action scores:[0.3882674  0.23848812 0.21248583 0.0652956  0.03044809 0.02384002
 0.01485558 0.01017579 0.00682252 0.00561852]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.7432484  0.09977622 0.08889765 0.0273177  0.01273856 0.00997394
 0.00621513 0.00425724 0.00285434 0.00235062]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416 29871    13    13]]
• Child Action scores:[0.3386274  0.29258564 0.19456366 0.14821228 0.12428109 0.12105725
 0.11866089 0.08035431 0.06229378 0.0548634 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.1735114  0.14991978 0.09969368 0.07594341 0.06368116 0.06202928
 0.06080139 0.04117325 0.0319191  0.0281118 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416 29871    13  1678]]
• Child Action scores:[0.5932957  0.28916246 0.24055222 0.17738019 0.13676143 0.06454057
 0.0194249  0.01880126 0.01251039 0.00961806]
• Child averaged monte carlo:-0.5
• Child probablities:[0.30400246 0.14816575 0.12325805 0.09088894 0.07007604 0.03307034
 0.00995325 0.00963369 0.00641027 0.00492826]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416     2     1 32007]]
• Child Action scores:[0.08271056 0.20860642 0.16300792 0.15925823 0.10704458 0.09072521
 0.05893877 0.02608917 0.02316976 0.0217006 ]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.48757693 0.08727462 0.06819758 0.06662883 0.04478421 0.03795668
 0.0246582  0.01091492 0.00969353 0.00907888]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   259    13    13]]
• Child Action scores:[0.35516575 0.31705415 0.18637104 0.15189534 0.12683104 0.12499587
 0.11476262 0.06930797 0.05844131 0.04679863]
• Child averaged monte carlo:-0.5
• Child probablities:[0.18198559 0.16245735 0.09549582 0.0778306  0.06498774 0.06404741
 0.05880393 0.03551314 0.02994511 0.02397944]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   259    13   259]]
• Child Action scores:[1.2304957  0.16153802 0.10747317 0.09677278 0.08569653 0.05022622
 0.01208211 0.01075817 0.01058243 0.00605498]
• Child averaged monte carlo:-0.5
• Child probablities:[0.63050133 0.08277147 0.05506885 0.04958601 0.04391057 0.02573573
 0.00619083 0.00551245 0.00542239 0.00310255]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416  1678    13    13]]
• Child Action scores:[0.40472025 0.2585895  0.20541033 0.16505909 0.12209418 0.11594035
 0.11149822 0.06369995 0.05778811 0.04778   ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.20737712 0.13250029 0.10525148 0.08457565 0.0625606  0.0594074
 0.05713127 0.03263961 0.02961041 0.02448229]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416  1678    13  1678]]
• Child Action scores:[0.688405   0.40263978 0.20246503 0.15983008 0.09693296 0.05505111
 0.01825062 0.01465083 0.01251677 0.00836336]
• Child averaged monte carlo:-0.5
• Child probablities:[0.35273612 0.20631109 0.10374232 0.08189633 0.04966808 0.02820798
 0.00935155 0.00750703 0.00641355 0.00428536]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268    13    13]]
• Child Action scores:[0.5332572  0.22862819 0.15808608 0.14583878 0.1172318  0.11181078
 0.09963262 0.05900139 0.05850463 0.0453933 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.27323896 0.11714822 0.0810027  0.07472724 0.06006913 0.05729142
 0.05105138 0.03023209 0.02997755 0.02325936]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268    13  1678]]
• Child Action scores:[0.63469744 0.27148715 0.23141363 0.18096052 0.14435746 0.06257552
 0.0199486  0.01971807 0.01686243 0.00931923]
• Child averaged monte carlo:-0.5
• Child probablities:[0.32521656 0.13910899 0.11857547 0.09272349 0.07396822 0.03206346
 0.01022159 0.01010346 0.00864025 0.00477514]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268    13   268]]
• Child Action scores:[1.8294991  0.01995674 0.01918116 0.01649198 0.01205742 0.01061404
 0.0096903  0.00365476 0.00308532 0.00195369]
• Child averaged monte carlo:-0.5
• Child probablities:[0.9374284  0.01022576 0.00982835 0.00845043 0.00617817 0.00543859
 0.00496527 0.00187268 0.00158091 0.00100106]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268    13   462]]
• Child Action scores:[1.2077129  0.13277842 0.12396062 0.10280774 0.06528168 0.05359681
 0.04461888 0.0425396  0.04014086 0.03032419]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6188275  0.06803516 0.06351695 0.05267829 0.03345009 0.0274628
 0.02286255 0.02179713 0.02056802 0.015538  ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   418    13    13]]
• Child Action scores:[0.3799375  0.26249123 0.18765019 0.16145726 0.12752832 0.12443284
 0.10626418 0.06420231 0.06142743 0.05191617]
• Child averaged monte carlo:-0.5
• Child probablities:[0.19467853 0.1344995  0.09615125 0.08273008 0.06534503 0.06375892
 0.05444936 0.03289702 0.03147518 0.02660165]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   418    13  1678]]
• Child Action scores:[0.57209873 0.34667987 0.2532439  0.17783676 0.13804789 0.0607688
 0.01904468 0.01879471 0.0160001  0.00864473]
• Child averaged monte carlo:-0.5
• Child probablities:[0.29314122 0.17763746 0.12976122 0.09112288 0.07073522 0.0311377
 0.00975842 0.00963034 0.00819839 0.00442953]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   539    13    13]]
• Child Action scores:[0.37720177 0.2809554  0.19427204 0.1542011  0.12420054 0.11667494
 0.1103379  0.06473861 0.06224289 0.04998334]
• Child averaged monte carlo:-0.5
• Child probablities:[0.19327676 0.14396049 0.09954426 0.07901206 0.06363989 0.0597838
 0.05653672 0.03317182 0.03189302 0.02561127]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   539    13  1678]]
• Child Action scores:[0.59550977 0.30103827 0.26436827 0.1777683  0.14218035 0.05900676
 0.01894209 0.01880325 0.01582565 0.00862793]
• Child averaged monte carlo:-0.5
• Child probablities:[0.30513695 0.15425086 0.1354613  0.0910878  0.07285267 0.03023484
 0.00970585 0.00963471 0.008109   0.00442092]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014]]
• Child Action scores:[1.5596597  0.07816362 0.05713573 0.04100016 0.03318531 0.02519946
 0.01566055 0.00935199 0.008712   0.00737134]
• Child averaged monte carlo:-0.5
• Child probablities:[0.79916376 0.04005075 0.02927613 0.02100833 0.01700403 0.01291211
 0.00802441 0.00479193 0.00446399 0.00377705]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  5900]]
• Child Action scores:[1.7331777  0.05080919 0.02046723 0.01912375 0.01289733 0.00925127
 0.00819761 0.00800428 0.00786537 0.00656548]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8880737  0.02603444 0.01048733 0.00979894 0.00660855 0.00474032
 0.00420042 0.00410136 0.00403019 0.00336413]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014]]
• Child Action scores:[1.5729696  0.06358164 0.05844085 0.03844608 0.03417819 0.02652366
 0.01668454 0.00869293 0.0085115  0.00753406]
• Child averaged monte carlo:-0.5
• Child probablities:[0.80598366 0.03257899 0.02994487 0.01969962 0.01751277 0.01359062
 0.0085491  0.00445422 0.00436126 0.00386042]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  5900]]
• Child Action scores:[1.7266656  0.04433773 0.02288894 0.02092336 0.01323226 0.01189424
 0.00868639 0.00831996 0.00794585 0.00619909]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8847369  0.02271849 0.0117282  0.01072105 0.00678016 0.00609457
 0.00445087 0.00426312 0.00407142 0.00317639]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 22376   518]]
• Child Action scores:[1.3388898  0.30376458 0.18605486 0.04901375 0.02392602 0.01279713
 0.01256127 0.00803651 0.00710731 0.00452337]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6860421  0.15564781 0.0953338  0.02511446 0.0122596  0.0065572
 0.00643635 0.00411788 0.00364176 0.00231776]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13   259  8014]]
• Child Action scores:[1.551352   0.07549939 0.05730445 0.04085877 0.03297161 0.0328466
 0.01954461 0.00957358 0.00896022 0.00769717]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7949069  0.0386856  0.02936258 0.02093588 0.01689452 0.01683047
 0.01001458 0.00490546 0.00459118 0.003944  ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 21936   732]]
• Child Action scores:[0.4637091  0.40107492 0.38410804 0.30538544 0.24609703 0.073861
 0.04086889 0.02127948 0.0044337  0.00142589]
• Child averaged monte carlo:-0.5
• Child probablities:[0.23760279 0.20550928 0.1968155  0.15647835 0.12609918 0.0378461
 0.02094106 0.01090352 0.00227181 0.00073062]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 19227   518]]
• Child Action scores:[1.4052889  0.21737939 0.19308951 0.0516743  0.02440721 0.01991747
 0.01374303 0.01033021 0.00630485 0.00465149]
• Child averaged monte carlo:-0.5
• Child probablities:[0.7200647  0.11138438 0.09893834 0.02647772 0.01250616 0.01020563
 0.00704188 0.00529316 0.00323058 0.00238341]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13    13  1678]]
• Child Action scores:[0.6714548  0.21279803 0.2019375  0.14267169 0.08336248 0.03397289
 0.02659609 0.01667188 0.01357192 0.00817233]
• Child averaged monte carlo:-0.5
• Child probablities:[0.34405088 0.10903691 0.10347201 0.07310443 0.04271462 0.01740758
 0.01362774 0.00854261 0.0069542  0.00418747]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678]]
• Child Action scores:[0.00632203 0.2240627  0.22310574 0.17808485 0.04237978 0.02604675
 0.0212205  0.01878233 0.01357633 0.00991798]
• Child averaged monte carlo:-0.6666666666666666
• Child probablities:[0.42365965 0.09374105 0.09334069 0.07450531 0.01773042 0.01089717
 0.00887801 0.00785796 0.00567992 0.00414938]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.6666666666666666,M=-0.6666666666666666
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462   539    13]]
• Child Action scores:[0.30030543 0.26847985 0.15759727 0.13683464 0.12522869 0.09991731
 0.08663432 0.08527141 0.08033068 0.06959326]
• Child averaged monte carlo:-0.5
• Child probablities:[0.15387537 0.13756806 0.08075225 0.07011355 0.0641667  0.05119725
 0.0443911  0.04369275 0.04116114 0.03565932]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 22376   518 29953]]
• Child Action scores:[1.39138591e+00 3.95076573e-01 1.07559554e-01 2.48339362e-02
 1.19235683e-02 9.21418797e-03 3.42058018e-03 3.39836581e-03
 1.84453977e-03 1.23004615e-03]
• Child averaged monte carlo:-0.5
• Child probablities:[7.1294087e-01 2.0243575e-01 5.5113107e-02 1.2724815e-02 6.1095911e-03
 4.7213151e-03 1.7526923e-03 1.7413098e-03 9.4513519e-04 6.3027098e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 19227   518 29953]]
• Child Action scores:[1.31914    0.3958058  0.17568131 0.01621987 0.01427472 0.01039347
 0.00837054 0.0041251  0.00404528 0.0023482 ]
• Child averaged monte carlo:-0.5
• Child probablities:[0.67592233 0.2028094  0.09001844 0.008311   0.00731431 0.00532558
 0.00428903 0.00211369 0.00207278 0.00120321]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416     2     1 32007 32008]]
• Child Action scores:[0.08281061 0.04778304 0.04550659 0.04490063 0.03507315 0.0333322
 0.03168244 0.02974924 0.02901457 0.02254494]
• Child averaged monte carlo:-0.5
• Child probablities:[0.04243184 0.02448385 0.0233174  0.02300691 0.01797135 0.01707929
 0.01623396 0.0152434  0.01486696 0.01155194]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518]]
• Child Action scores:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.0
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=0.0,Q=0.0,M=0.0
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29953 29946 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29953 29946  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29953 29946  2586   995 29892   518 29953 29941 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29953 29946
  29898  4905   518 29953 29941 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29953 29941 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678  8014]]
• Child Action scores:[1.5663878  0.07245142 0.05650087 0.0423737  0.03288832 0.02661442
 0.01635123 0.01004255 0.00835903 0.00654167]
• Child averaged monte carlo:-0.5
• Child probablities:[0.8026112  0.03712383 0.02895083 0.02171212 0.01685185 0.01363713
 0.00837831 0.00514577 0.00428314 0.00335193]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
END ROBUST/MAX VALUES:
<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  43.800799  seconds
Running getPromptScore: 
<s> //Design a 64-bit adder.
//There are two 64 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 64 bit value, [63:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_64(output [63:0] sum,
                      output cout,
                      input [63:0] in1, in2,
                      input cin);

    wire [63:0] sum_temp;
    wire cout_temp;

    adder_32 adder_32_1(sum_temp[31:0], cout_temp, in1[31:0], in2[31:0], cin);
    adder_32 adder_32_2(sum_temp[63:32], cout, in1[63:32], in2[63:32], cout_temp);

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/mcts_large_dump_2k/2937117_adder_64/2937117_adder_64.v:1: syntax error\nI give up.\n'
LLM generates return in:  43.80371  seconds
Running getPromptScore: 
MCTS Total Time:  50191.259896
