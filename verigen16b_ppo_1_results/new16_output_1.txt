Using GPU
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/prompt_tb_files/adder/prompt1_adder_32.v
Prompt str:  //Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
Loading LLM model...
Loaded LLM:  codellama/CodeLlama-13b-hf
Initializing MCTS tree/LLM env...
Episode not stated yet!
Simulations per episode:  100
********-- EPISODE-1--************
ORIG MODILE:  adder_32
--------MCTS-------
Env seed:  42
Initializing MCTS tree.
Initialize search (creating root node)

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.782852  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [1.64953175e+00 7.36148078e-03 6.77986232e-04 4.88335208e-04
 3.80008379e-04 3.35627549e-04 2.88924639e-01 8.41995465e-05
 8.03437646e-05 6.11224066e-05]  taking action:  0
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.40314  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  2.0
Iteration TIME (sec):  22.991460388
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [9.60127775e-01 9.01593584e-03 8.30360160e-04 5.98086041e-04
 4.65413313e-04 4.11058119e-04 3.53858969e-01 1.03122963e-04
 9.84006136e-05 7.48593541e-05]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [1.3578335  0.15718064 0.13030733 0.11145777 0.05517559 0.03974149
 0.01630987 0.01373429 0.00846145 0.00712526]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.214245  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  3.0
Iteration TIME (sec):  22.80070334700001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [7.10930054e-01 1.04107060e-02 9.58817324e-04 6.90610274e-04
 5.37413003e-04 4.74649032e-04 4.08601142e-01 1.19076141e-04
 1.13623241e-04 8.64401364e-05]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.7814998  0.19250618 0.15959324 0.13650733 0.06757603 0.04867319
 0.01997543 0.016821   0.01036312 0.00872662]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.7133839  0.33175436 0.19809957 0.14047362 0.10940097 0.09961072
 0.08929048 0.02222615 0.02205319 0.0210433 ]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.976094  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  4.0
Iteration TIME (sec):  22.553761272000003
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [5.77034672e-01 1.16395231e-02 1.07199036e-03 7.72125759e-04
 6.00846003e-04 5.30673750e-04 4.56829965e-01 1.33131172e-04
 1.27034646e-04 9.66430105e-05]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.5734222  0.22228698 0.18428239 0.15762508 0.07803007 0.05620295
 0.02306565 0.01942322 0.0119663  0.01007663]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.38685665 0.40631446 0.24262142 0.17204435 0.13398829 0.12199771
 0.10935806 0.02722137 0.02700953 0.02577267]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.003581  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  5.0
Iteration TIME (sec):  22.58665724699999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [4.91414562e-01 1.27504587e-02 1.17430660e-03 8.45821391e-04
 6.58193819e-04 5.81323967e-04 5.00432154e-01 1.45837892e-04
 1.39159482e-04 1.05867114e-04]  taking action:  6
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);	

	wire [31:0] sum_wire;
	wire cout_wire;
	
	assign sum = sum_wire;
	assign cout = cout_wire;
	
	adder_32_bit adder_32_bit_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);
	
	genvar i;
	generate
		for(i = 1; i < 32; i = i + 1) begin
			adder_32_bit adder_32_bit_inst(sum_wire[i], cout_wire, in1[i], in2[i], cout_wire);
		end
	endgenerate
	
endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
LLM generates return in:  39.584962  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  6.0
Iteration TIME (sec):  40.081714226
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 5.37198267e-01  1.37720695e-02  1.26839610e-03  9.13591519e-04
  7.10930578e-04  6.27901649e-04 -2.29735748e-01  1.57522927e-04
  1.50309420e-04  1.14349552e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.46173084 0.2485244  0.20603397 0.17623019 0.08724027 0.06283681
 0.02578817 0.02171582 0.01337873 0.01126602]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.45443863 0.18458575 0.2801551  0.1986597  0.15471634 0.14087082
 0.12627581 0.03143253 0.03118792 0.02975972]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.8098879  0.39470783 0.23203677 0.03969681 0.02728319 0.00637986
 0.00545698 0.00310929 0.00276546 0.00148025]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.860899  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  7.0
Iteration TIME (sec):  22.448096434000007
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 4.66510581e-01  1.47229616e-02  1.35597246e-03  9.76670415e-04
  7.60016757e-04  6.71255098e-04 -2.11075361e-01  1.68399093e-04
  1.60687529e-04  1.22244813e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.39036727 0.27224484 0.2256989  0.1930505  0.09556693 0.06883428
 0.02824953 0.02378849 0.01465566 0.01234131]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.30931967 0.21227483 0.3132229  0.22210829 0.17297812 0.15749836
 0.14118063 0.03514264 0.03486915 0.03327238]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.369674  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  8.0
Iteration TIME (sec):  22.961081729
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 4.14169320e-01  1.56160589e-02  1.43822599e-03  1.03591541e-03
  8.06119504e-04  7.11973547e-04 -1.93549143e-01  1.78614211e-04
  1.70434862e-04  1.29660205e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.34004563 0.29405805 0.24378268 0.20851839 0.10322408 0.07434952
 0.03051298 0.02569451 0.01582993 0.01333013]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.34520572 0.23730768 0.12155925 0.24330744 0.18948804 0.17253082
 0.15465565 0.03849683 0.03819725 0.03644807]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.445953   0.4834164  0.28418586 0.04861847 0.03341495 0.0078137
 0.00668341 0.00380809 0.00338699 0.00181292]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  12.035171  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  9.0
Iteration TIME (sec):  12.67409656000001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 3.73558134e-01  1.64607714e-02  1.51602330e-03  1.09195072e-03
  8.49724566e-04  7.50486014e-04 -1.76972434e-01  1.88275910e-04
  1.79654119e-04  1.36673856e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.30223814 0.31436127 0.26061466 0.22291553 0.11035118 0.07948298
 0.03261975 0.02746858 0.0169229  0.01425051]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.070911  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  10.0
Iteration TIME (sec):  22.665444880999985
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 3.40943863e-01  1.72642027e-02  1.59001865e-03  1.14524758e-03
  8.91198644e-04  7.87116372e-04 -1.61205830e-01  1.97465440e-04
  1.88422830e-04  1.43344750e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.3257714  0.11671524 0.27642357 0.23643762 0.1170451  0.08430443
 0.03459847 0.02913483 0.01794945 0.01511495]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.25865477 0.2603278  0.13530518 0.2628021  0.20467049 0.18635459
 0.1670472  0.04158133 0.04125774 0.03936841]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign sum = in1 + in2 + cin;
assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.73768  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  11.0
Iteration TIME (sec):  12.364713500999983
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 3.14051099e-01  1.80318717e-02  1.66072032e-03  1.19617208e-03
  9.30826625e-04  8.22116238e-04 -1.46141031e-01  2.06245925e-04
  1.96801227e-04  1.49718708e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.29202598 0.1257333  0.29137602 0.24922714 0.12337637 0.08886467
 0.03646999 0.03071081 0.01892038 0.01593256]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.28169197 0.28175434 0.14809957 0.09047362 0.21880195 0.19922143
 0.17858097 0.04445231 0.04410638 0.0420866 ]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.7180228  0.43550286 0.26414585 0.07109389 0.02827919 0.00737707
 0.00687618 0.00666463 0.00277823 0.0024327 ]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.678534  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  12.0
Iteration TIME (sec):  22.266983674000016
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 2.91408834e-01  1.87681671e-02  1.72853251e-03  1.24501538e-03
  9.68835069e-04  8.55685711e-04 -1.31691908e-01  2.14667565e-04
  2.04837212e-04  1.55832172e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.26493353 0.13431065 0.30559778 0.26139164 0.12939824 0.09320205
 0.03825005 0.03220977 0.01984386 0.01671021]  taking action:  2
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.919759  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  13.0
Iteration TIME (sec):  23.50211570500005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 2.72020890e-01  1.94766474e-02  1.79378296e-03  1.29201352e-03
  1.00540767e-03  8.87987027e-04 -1.17788629e-01  2.22771060e-04
  2.12569620e-04  1.61714688e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.2806666  0.14250618 0.10959324 0.27301466 0.13515206 0.09734637
 0.03995087 0.03364201 0.02072624 0.01745324]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.30332893 0.16791907 0.16011631 0.09899478 0.2320745  0.21130623
 0.18941371 0.04714879 0.04678188 0.04463958]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.5226772  0.2291006  0.32814956 0.05613977 0.03858425 0.00902248
 0.00771734 0.00439721 0.00391096 0.00209338]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.8228322  0.03417807 0.01887492 0.01181163 0.01026212 0.01010302
 0.00528249 0.00343738 0.00276201 0.00251484]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.308622  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  14.0
Iteration TIME (sec):  21.891271318999998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 2.55186817e-01  2.01602454e-02  1.85674176e-03  1.33736104e-03
  1.04069580e-03  9.19153897e-04 -1.04373645e-01  2.30589955e-04
  2.20030461e-04  1.67390604e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.25618097 0.15036678 0.11610991 0.28416267 0.14067072 0.10132132
 0.04158218 0.03501571 0.02157255 0.01816591]  taking action:  3
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum_wire;
  wire cout_wire;
  
  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  
  assign sum = sum_wire;
  assign cout = cout_wire;
  
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.808323  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  15.0
Iteration TIME (sec):  23.38832934499999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 2.40398579e-01  2.08214119e-02  1.91763465e-03  1.38122055e-03
  1.07482601e-03  9.49298063e-04 -9.13988577e-02  2.38152281e-04
  2.27246483e-04  1.72880273e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.26924893 0.15793043 0.12238039 0.09744476 0.1459809  0.10514609
 0.04315187 0.03633752 0.0223869  0.01885166]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [0.239035   0.18060842 0.17148204 0.10705428 0.24462801 0.22273633
 0.19965959 0.04969919 0.04931243 0.04705425]  taking action:  4
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

wire [31:0] sum_wire;
wire cout_wire;

assign sum = sum_wire;
assign cout = cout_wire;

full_adder fa0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
full_adder fa1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
full_adder fa2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
full_adder fa3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
full_adder fa4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
full_adder fa5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
full_adder fa6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
full_adder fa7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
full_adder fa8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
full_adder fa9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
full_adder fa10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
full_adder fa11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
full_adder fa12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
full_adder fa13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
full_adder fa14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
full_adder fa15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
full_adder fa16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
full_adder fa17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
full_adder fa18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
full_adder fa19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
full_adder fa20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
full_adder fa21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
full_adder fa22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
full_adder fa23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
full_adder fa24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
full_adder fa25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
full_adder fa26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
full_adder fa27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
full_adder fa28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
full_adder fa29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
full_adder fa30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
full_adder fa31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:45: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:46: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:47: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
LLM generates return in:  301.839608  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  16.0
Iteration TIME (sec):  301.13533950999994
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.16727799  0.02146222  0.00197665  0.00142373  0.00110791  0.00097851
 -0.07882358  0.00024548  0.00023424  0.0001782 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.16532546 0.16522846 0.12843066 0.10261983 0.15110458 0.10883655
 0.04466643 0.03761291 0.02317264 0.01951332]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.25460672  0.19267765  0.18229234  0.11471993 -0.37171596  0.23360784
  0.20940475  0.05212496  0.05171932  0.04935091]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.36018172 0.26204392 0.36688232 0.06276616 0.04313851 0.01008744
 0.00862825 0.00491623 0.00437258 0.00234047]  taking action:  2
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    reg [31:0] sum_reg;
    reg cout_reg;

    always @(*) begin
        sum_reg = in1 + in2 + cin;
        cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    end

    assign sum = sum_reg;
    assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  23.785491  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  17.0
Iteration TIME (sec):  24.364888432000043
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.1592872   0.02208444  0.00203396  0.00146501  0.00114003  0.00100688
 -0.06661304  0.0002526   0.00024103  0.00018337]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.15337776 0.17228699 0.1342824  0.10762508 0.15606014 0.1124059
 0.04613129 0.03884644 0.0239326  0.02015327]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.6043248  0.40256718 0.35526425 0.23665701 0.04377715 0.02697032
 0.00760733 0.00640601 0.0047235  0.00461408]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.627154  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  18.0
Iteration TIME (sec):  22.225572149000072
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.15201166  0.02268961  0.00208969  0.00150515  0.00117126  0.00103447
 -0.05473723  0.00025952  0.00024764  0.00018839]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.16322754 0.08608545 0.13995394 0.11247621 0.1608631  0.11586535
 0.04755104 0.040042   0.02466916 0.02077351]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.20790443  0.20420966  0.19262142  0.12204435 -0.3660117   0.24399543
  0.21871611  0.05444274  0.05401907  0.05154535]  taking action:  5
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  3566

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

   assign sum = in1 + in2 + cin;
   assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  12.085489  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  19.0
Iteration TIME (sec):  12.720807479999962
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.14534875  0.02327905  0.00214398  0.00154425  0.00120169  0.00106135
 -0.04317004  0.00026626  0.00025407  0.00019329]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.15180776 0.09051397 0.145461   0.11718665 0.16552678 0.11922447
 0.04892962 0.04120288 0.02538436 0.02137577]  taking action:  4
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.77197  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  20.0
Iteration TIME (sec):  22.36430798799995
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.13921547  0.02385392  0.00219693  0.00158239  0.00123137  0.00108756
 -0.03188858  0.00027284  0.00026034  0.00019806]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.16039416 0.09482109 0.15081708 0.12176795 0.0350313  0.1224915
 0.05027041 0.04233193 0.02607995 0.02196152]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.21979654  0.21527031  0.20252837  0.12906943 -0.36054057  0.07697925
  0.22764695  0.0566658   0.05622483  0.0536501 ]  taking action:  6
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  732

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

always @(*) begin
    sum = in1 + in2 + cin;
    cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:11: error: sum is not a valid l-value in tb_adder_32.uut.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:5:      : sum is declared here as wire.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:12: error: cout is not a valid l-value in tb_adder_32.uut.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:6:      : cout is declared here as wire.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:10: warning: @* found no sensitivities so it will never trigger.\n2 error(s) during elaboration.\n'
LLM generates return in:  13.183441  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  21.0
Iteration TIME (sec):  13.815213027000027
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.08854391  0.02441527  0.00224863  0.00161962  0.00126035  0.00111315
 -0.02087269  0.00027926  0.00026647  0.00020272]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.08527477 0.09901626 0.15603398 0.1262302  0.03724027 0.12567362
 0.05157635 0.04343164 0.02675746 0.02253204]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [1.9282176e+00 7.8801848e-03 3.9009741e-03 2.4796103e-03 2.4033207e-03
 2.4033207e-03 2.4744024e-04 2.3610916e-04 1.6227528e-04 1.6227528e-04]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.630361  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  22.0
Iteration TIME (sec):  23.207988935000003
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.08542069  0.024964    0.00229916  0.00165603  0.00128867  0.00113817
 -0.01010444  0.00028553  0.00027246  0.00020728]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.09284882 0.10310782 0.07408134 0.13058223 0.03939467 0.12877715
 0.05285003 0.0445042  0.02741824 0.02308847]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [1.1854203  0.30444115 0.176197   0.11922087 0.03636031 0.01469089
 0.00317713 0.00300804 0.00247435 0.00216661]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29871

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum_wire;
  wire cout_wire;
  
  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  
  assign sum = sum_wire;
  assign cout = cout_wire;
  
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.632773  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  23.0
Iteration TIME (sec):  23.211744358000033
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.08246118 0.02550092 0.00234861 0.00169164 0.00131639 0.00116265
 0.00043215 0.00029168 0.00027832 0.00021173]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.1002446  0.10710306 0.07739349 0.05655452 0.04149837 0.13180761
 0.05409373 0.04555149 0.02806346 0.0236318 ]  taking action:  5
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  539

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  23.012469  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  24.0
Iteration TIME (sec):  23.595660759999987
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.07965113 0.02602676 0.00239704 0.00172653 0.00134353 0.00118662
 0.01075143 0.00029769 0.00028406 0.0002161 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.10747413 0.1110085  0.0806312  0.05932388 0.04355476 0.01738497
 0.05530947 0.04657525 0.02869418 0.02416292]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.32007188 0.4930421  0.43510807 0.28984445 0.05361584 0.03303176
 0.00931704 0.00784573 0.00578508 0.00565107]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.608647  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  25.0
Iteration TIME (sec):  12.238457604000018
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.076978   0.0265422  0.00244451 0.00176072 0.00137014 0.00121012
 0.0208663  0.00030359 0.00028968 0.00022038]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.11454807 0.06112242 0.08379927 0.06203366 0.04556693 0.01883427
 0.05649906 0.04757698 0.02931133 0.02468261]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.23123938  0.22591317  0.21206109  0.13582912 -0.3552761   0.08177258
 -0.3818798   0.05880488  0.05834725  0.05567534]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.40092233 0.291827   0.15094973 0.06875689 0.04725587 0.01105024
 0.00945177 0.00538546 0.00478992 0.00256386]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.0662524  0.04185942 0.02311697 0.01446623 0.01256848 0.01237362
 0.0064697  0.00420991 0.00338276 0.00308004]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.8229982e+00 5.4196309e-02 3.5542808e-02 1.5527502e-02 8.4421569e-03
 4.3118312e-03 3.8651009e-03 3.8051780e-03 1.8836997e-03 9.6209964e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.030637  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  26.0
Iteration TIME (sec):  21.624918110999943
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.0744307  0.02704781 0.00249108 0.00179426 0.00139624 0.00123317
 0.03078845 0.00030937 0.0002952  0.00022458]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.1067111  0.06392936 0.08690199 0.06468756 0.04753759 0.02025369
 0.05766411 0.04855806 0.02991575 0.02519159]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.19338322  0.23618224  0.22125901  0.14235143 -0.35019654  0.08639759
 -0.37773398  0.06086883  0.06039515  0.05762945]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.38969737 0.5333799  0.3235113  0.08707187 0.0346348  0.00903503
 0.00842157 0.00816247 0.00340262 0.00297944]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  assign sum = in1 + in2 + cin;
  assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.822731  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  27.0
Iteration TIME (sec):  12.444691167999963
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.07199936 0.02754414 0.00253679 0.00182718 0.00142186 0.0012558
 0.0405285  0.00031505 0.00030062 0.0002287 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.09973365 0.06668071 0.08994324 0.06728888 0.04946921 0.02164498
 0.05880609 0.0495197  0.0305082  0.02569048]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.20253637  0.15958574  0.2301551   0.1486597  -0.34528366  0.09087083
 -0.3737242   0.06286506  0.06237584  0.05951944]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [1.9165760e+00 4.6406672e-03 4.3936949e-03 4.1924929e-03 3.2144960e-03
 2.7495041e-03 2.7068772e-03 1.2200850e-03 1.1918218e-03 9.2096854e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.885243  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  28.0
Iteration TIME (sec):  22.45680391099995
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.06967521 0.02803168 0.00258169 0.00185953 0.00144703 0.00127803
 0.05009612 0.00032062 0.00030594 0.00023275]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.09347056 0.06937964 0.09292657 0.06984066 0.05136404 0.02300978
 0.0599263  0.05046301 0.03108936 0.02617987]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.21140766  0.16680545  0.12585148  0.15477373 -0.34052205  0.09520632
 -0.36983788  0.06479982  0.06429555  0.06135123]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.3037904  0.31921536 0.16705053 0.07426593 0.05104217 0.01193562
 0.01020908 0.00581696 0.00517371 0.00276929]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [1.4863968e+00 3.6425722e-01 8.7881140e-02 4.0465319e-03 9.5365610e-04
 9.5365610e-04 7.4270810e-04 5.5193377e-04 4.4003999e-04 3.6196696e-04]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  353

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.649306  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  29.0
Iteration TIME (sec):  12.274608831000023
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.06745035 0.02851089 0.00262583 0.00189131 0.00147177 0.00129988
 0.05950016 0.0003261  0.00031117 0.00023673]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.08780825 0.07202902 0.09585512 0.07234559 0.05322408 0.02434952
 0.06102596 0.05138902 0.03165985 0.02666027]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [1.1307874e+00 9.6512167e-03 4.7776978e-03 3.0368899e-03 2.9434548e-03
 2.9434548e-03 3.0305117e-04 2.8917348e-04 1.9874581e-04 1.9874581e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.7599727  0.06511654 0.02757208 0.01475827 0.01204535 0.00834357
 0.00742092 0.00670425 0.0049434  0.00486676]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.426457  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  30.0
Iteration TIME (sec):  22.994946530999982
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [0.06531772 0.02898218 0.00266923 0.00192258 0.00149609 0.00132137
 0.06874872 0.00033149 0.00031631 0.00024064]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [1.0255473  0.6725703  0.06870738 0.03145653 0.01311303 0.0113928
 0.00649142 0.00217435 0.0018026  0.00123891]  taking action:  0
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);	

	wire [31:0] sum_wire;
	wire cout_wire;
	
	assign sum = sum_wire;
	assign cout = cout_wire;
	
	adder_32_bit adder_32_bit_inst(sum_wire[0], cout_wire, in1[0], in2[0], cin);
	
	genvar i;
	generate
		for(i = 1; i < 32; i = i + 1) begin
			adder_32_bit adder_32_bit_inst(sum_wire[i], cout_wire, in1[i], in2[i], cout_wire);
		end
	endgenerate
	
endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: adder_32_bit\n33 error(s) during elaboration.\n*** These modules were missing:\n        adder_32_bit referenced 32 times.\n***\n'
LLM generates return in:  39.133382  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  31.0
Iteration TIME (sec):  39.63187441700006
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 6.89009651e-02  2.94459231e-02  2.71194493e-03  1.95334083e-03
  1.52003351e-03  1.34251020e-03 -2.81433835e-01  3.36798186e-04
  3.21375058e-04  2.44489627e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.09280425 0.07463151 0.04904888 0.07480618 0.0550512  0.02566554
 0.06210615 0.05229863 0.03222025 0.02713217]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.18001896  0.17381576  0.13143289  0.16071042 -0.33589855  0.09941608
 -0.36606428  0.06667846  0.06615957  0.0631299 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.32994395 0.1964719  0.18203677 0.07939362 0.05456638 0.01275972
 0.01091396 0.00621859 0.00553093 0.00296049]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.7926247  0.04833509 0.02669317 0.01670416 0.01451283 0.01428782
 0.00747056 0.00486119 0.00390607 0.00355652]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.0663539  0.06637665 0.04353087 0.01901723 0.01033949 0.00528089
 0.00473376 0.00466037 0.00230705 0.00117833]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.6570560e+00 2.0418935e-01 5.0826747e-02 2.8960209e-02 5.6141927e-03
 1.3758170e-03 1.2924606e-03 1.1953305e-03 4.0669076e-04 3.1182059e-04]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29901

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.923504  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  32.0
Iteration TIME (sec):  21.51077941099993
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 6.66810332e-02  2.99024763e-02  2.75399309e-03  1.98362699e-03
  1.54360133e-03  1.36332555e-03 -2.75460877e-01  3.42020175e-04
  3.26357914e-04  2.48280389e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.08730876 0.07718949 0.05116953 0.07722468 0.05684708 0.02695907
 0.06316787 0.05319269 0.03277106 0.027596  ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.15542188  0.18063389  0.1368613   0.1664844  -0.33140177  0.10351042
 -0.36239412  0.06850561  0.0679725   0.06485981]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.4577188  0.257947   0.37355864 0.10054194 0.03999282 0.01043275
 0.00972439 0.00942521 0.00392901 0.00344036]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.8185674  0.03518049 0.0191273  0.01254399 0.0108136  0.00910596
 0.00468735 0.00379593 0.00286532 0.0026089 ]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.34914  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  33.0
Iteration TIME (sec):  21.937313369000094
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 6.45546768e-02  3.03521628e-02  2.79540885e-03  2.01345764e-03
  1.56681468e-03  1.38382783e-03 -2.69577752e-01  3.47163624e-04
  3.31265828e-04  2.52014139e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.08228981 0.07970519 0.05325511 0.0796032  0.05861326 0.02823119
 0.06421204 0.05407196 0.03331277 0.02805216]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.16176866  0.12981987  0.14214858  0.1721083  -0.3270219   0.10749836
 -0.35881937  0.07028528  0.06973831  0.06654476]  taking action:  3
Leaf selection - depth:  3
Leaf selection - action scores:  [1.4239537e+00 4.4806686e-01 6.1594188e-02 4.7496334e-03 3.4478644e-03
 1.2293739e-03 6.3779077e-04 4.9284648e-04 4.1501838e-04 4.1178867e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  353

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign sum = in1 + in2 + cin;
assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.393179  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  34.0
Iteration TIME (sec):  12.020530406000034
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 6.25152413e-02  3.07952835e-02  2.83621989e-03  2.04285274e-03
  1.58968910e-03  1.40403077e-03 -2.63780527e-01  3.52231974e-04
  3.36102081e-04  2.55693372e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.07768261 0.08218063 0.05530733 0.08194368 0.06035118 0.02948298
 0.0652395  0.05493717 0.03384581 0.02850103]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.37732217 0.23465799 0.50241953 0.33468354 0.06191023 0.03814179
 0.01075839 0.00905947 0.00668003 0.00652529]  taking action:  2
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    reg [31:0] sum_reg;
    reg cout_reg;
    
    always @(*) begin
        sum_reg = in1 + in2 + cin;
        cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    end
    
    assign sum = sum_reg;
    assign cout = cout_reg;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  23.781989  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  35.0
Iteration TIME (sec):  24.358771554999976
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.06055672  0.03123212  0.00287645  0.00207183  0.00161224  0.00142395
 -0.25806554  0.00035723  0.00034087  0.00025932]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.0816927  0.04769416 0.05732772 0.08424786 0.06206216 0.03071534
 0.06625102 0.05578896 0.03437058 0.02894293]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.67591876 0.37286273 0.21579638 0.14601515 0.0445321  0.0179926
 0.00389117 0.00368409 0.00303045 0.00265355]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.6810389  0.11262257 0.07862324 0.01097826 0.00803187 0.00742826
 0.0070881  0.00487157 0.00433287 0.00316999]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  8014

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum_wire;
  wire cout_wire;
  
  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  
  assign sum = sum_wire;
  assign cout = cout_wire;
  
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.29611  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  36.0
Iteration TIME (sec):  22.864855427000066
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.0586737   0.03166293  0.00291613  0.00210041  0.00163448  0.00144359
 -0.2524294   0.00036216  0.00034557  0.0002629 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.08564249 0.04961447 0.05931772 0.03988803 0.06374739 0.03192918
 0.06724734 0.05662794 0.03488746 0.02937819]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.16795866  0.13500139  0.14730531  0.08506218 -0.32275015  0.1113878
 -0.35533288  0.07202098  0.07146051  0.06818809]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.2636063  0.2124339  0.19611216 0.08420964 0.05787638 0.01353372
 0.01157601 0.00659581 0.00586643 0.00314008]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.6455377  0.05404028 0.02984387 0.01867582 0.01622583 0.01597427
 0.00835234 0.00543497 0.00436712 0.00397631]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.7927029  0.07664515 0.05026512 0.0219592  0.01193901 0.00609785
 0.00546608 0.00538133 0.00266395 0.00136061]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [9.6473533e-01 2.5007987e-01 6.2249798e-02 3.5468869e-02 6.8759536e-03
 1.6850248e-03 1.5829345e-03 1.4639749e-03 4.9809244e-04 3.8190070e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.9505851e+00 7.4147392e-04 1.8747395e-04 2.9662686e-05 1.9151672e-05
 1.2857823e-05 8.4985022e-06 6.0263401e-06 5.1144889e-06 1.8962721e-06]  taking action:  0
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29900

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.402853  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  37.0
Iteration TIME (sec):  20.98934187499981
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.05686125  0.03208795  0.00295527  0.0021286   0.00165642  0.00146297
 -0.24686892  0.00036702  0.00035021  0.00026643]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.08091937 0.05150677 0.06127867 0.04156532 0.06540804 0.03312529
 0.0682291  0.05745467 0.03539679 0.02980709]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.14660269  0.14006095  0.15234062  0.08863275 -0.31857902  0.11518568
 -0.35192847  0.07371581  0.07314216  0.06979273]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [1.1236584  0.00568363 0.00538116 0.00513473 0.00393694 0.00336744
 0.00331523 0.00149429 0.00145968 0.00112795]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.9115409e+00 1.3710540e-02 9.2770169e-03 6.0840161e-03 3.6329317e-03
 3.4128234e-03 2.0062954e-03 7.1536668e-04 6.9335714e-04 4.6187543e-04]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.330116  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  38.0
Iteration TIME (sec):  21.91772317699997
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.05511491  0.03250742  0.00299391  0.00215643  0.00167807  0.00148209
 -0.24138113  0.00037182  0.00035479  0.00026991]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.07655653 0.05337219 0.06321178 0.04321881 0.06704511 0.03430443
 0.06919693 0.05826966 0.0358989  0.0302299 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.15192026  0.14500675  0.09294707  0.09212307 -0.31450164  0.11889818
 -0.34860063  0.07537256  0.07478601  0.0713613 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.21849406 0.22753116 0.20942499 0.08876476 0.06100706 0.0142658
 0.01220218 0.00695259 0.00618376 0.00330993]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [8.6022842e-01 4.4612217e-01 1.0763198e-01 4.9559693e-03 1.1679854e-03
 1.1679854e-03 9.0962794e-04 6.7597802e-04 5.3893676e-04 4.4331720e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.8999587e+00 4.1324787e-02 4.0917080e-03 2.9471468e-03 1.1012682e-03
 5.3671532e-04 4.9638044e-04 3.2553426e-04 2.0371415e-04 1.2748105e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  297

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.284834  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  39.0
Iteration TIME (sec):  11.922792208999908
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.0534306   0.03292154  0.00303205  0.0021839   0.00169945  0.00150097
 -0.23596327  0.00037655  0.00035931  0.00027335]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.072511   0.05521192 0.06511825 0.04484949 0.0686596  0.03546731
 0.07015143 0.05907343 0.03639408 0.03064689]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.13374856  0.14984615  0.09655924  0.0955383  -0.31051195  0.12253082
 -0.34534436  0.07699366  0.07639449  0.07289613]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.31176457 0.29429522 0.41765127 0.1124093  0.04471333 0.01166417
 0.0108722  0.0105377  0.00439277 0.00384643]  taking action:  2
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  reg [31:0] sum_reg;
  reg cout_reg;

  always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  end

  assign sum = sum_reg;
  assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.841181  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  40.0
Iteration TIME (sec):  23.415073284000073
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.05180459  0.03333052  0.00306971  0.00221103  0.00172056  0.00151962
 -0.23061271  0.00038123  0.00036377  0.00027674]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [0.0687464  0.05702691 0.06699911 0.04645828 0.07025242 0.03661456
 0.07109309 0.05986639 0.03688261 0.03105827]  taking action:  6
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
wire [31:0] sum_wire;
wire cout_wire;

assign sum_wire = in1 + in2 + cin;
assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

assign sum = sum_wire;
assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.194304  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  41.0
Iteration TIME (sec):  20.784841099000005
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.05023349  0.03373454  0.00310692  0.00223783  0.00174142  0.00153804
 -0.22532701  0.00038585  0.00036818  0.0002801 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07184125  0.05881818  0.06885539  0.04804604  0.0718244   0.03774683
 -0.01398877  0.06064899  0.03736476  0.03146428]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.13838118  0.1121548   0.10009693  0.09888308 -0.30660456  0.12608853
 -0.34215522  0.07858133  0.0779698   0.0743993 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.23322591 0.15641798 0.22208725 0.09309728 0.06398475 0.01496209
 0.01279776 0.00729194 0.00648559 0.00347148]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.55144763 0.05919816 0.03269232 0.02045834 0.01777451 0.01749894
 0.00914953 0.00595372 0.00478394 0.00435583]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.6456033  0.08569188 0.05619811 0.02455113 0.01334822 0.0068176
 0.00611126 0.00601651 0.00297839 0.00152121]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [7.1447700e-01 2.8876734e-01 7.1879871e-02 4.0955920e-02 7.9396674e-03
 1.9456990e-03 1.8278152e-03 1.6904526e-03 5.7514757e-04 4.4098092e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.1444846e+00 9.0811634e-04 2.2960777e-04 3.6329224e-05 2.3455912e-05
 1.5747553e-05 1.0408497e-05 7.3807296e-06 6.2639438e-06 2.3224495e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [1.9419817e+00 8.1883650e-03 8.3649415e-04 3.4329647e-04 1.4997512e-04
 4.5383880e-05 2.3729512e-05 1.2801112e-05 9.5875903e-06 8.7980670e-06]  taking action:  0
Adding child.
Leaf selection - depth:  9
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29962

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.083963  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  42.0
Iteration TIME (sec):  20.664579494999998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04871415  0.03413378  0.00314369  0.00226432  0.00176203  0.00155624
 -0.22010387  0.00039042  0.00037254  0.00028341]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06816989  0.06058665  0.07068801  0.04961357  0.07337637  0.03886467
 -0.01353001  0.06142162  0.03784076  0.03186512]  taking action:  4
Leaf selection - depth:  2
Leaf selection - action scores:  [0.55616087 0.38826287 0.35351735 0.3071412  0.0485968  0.02856858
 0.01010717 0.00913107 0.00751101 0.00673283]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.239574  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  43.0
Iteration TIME (sec):  21.823128293999844
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04724371  0.03452841  0.00318004  0.0022905   0.0017824   0.00157423
 -0.21494113  0.00039493  0.00037685  0.00028669]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0710713   0.06233312  0.07249787  0.05116162  0.01660603  0.03996862
 -0.01307695  0.06218465  0.03831085  0.03226097]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [8.4230387e-01 1.1144265e-02 5.5168103e-03 3.5066982e-03 3.3988087e-03
 3.3988087e-03 3.4993334e-04 3.3390877e-04 2.2949190e-04 2.2949190e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.0277588  0.07975115 0.03376876 0.01807512 0.01475248 0.01021874
 0.00908874 0.00821099 0.00605441 0.00596054]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.7149127  0.447381   0.25095797 0.04642256 0.03044466 0.0053738
 0.00529049 0.00261898 0.00255831 0.00234764]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.910069  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  44.0
Iteration TIME (sec):  22.489598902999887
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04581948  0.03491857  0.00321597  0.00231638  0.00180254  0.00159202
 -0.20983672  0.00039939  0.0003811   0.00028993]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07393755  0.06405844  0.03942864  0.05269091  0.01761544  0.04105919
 -0.01262938  0.06293844  0.03877524  0.03265203]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.12267853  0.11602622  0.10356453  0.10216159 -0.3027746   0.12957577
 -0.3390293   0.08013754  0.07951391  0.0758727 ]  taking action:  5
Leaf selection - depth:  3
Leaf selection - action scores:  [0.6067448  0.57896    0.17935342 0.11049644 0.04193972 0.03587294
 0.00763779 0.0039316  0.00255834 0.00249908]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

   assign sum = in1 + in2 + cin;
   assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.705178  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  45.0
Iteration TIME (sec):  12.32630930099981
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04443904  0.03530442  0.00325151  0.00234197  0.00182246  0.00160961
 -0.20478872  0.00040381  0.00038532  0.00029313]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.07022282  0.06576332  0.04084204  0.05420209  0.01861289  0.04213685
 -0.01218711  0.06368329  0.03923414  0.03303845]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.12676165  0.1198239   0.10696606  0.10537768 -0.29901758  0.05533104
 -0.3359629   0.08166412  0.0810286   0.07731802]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.19768745 0.1667082  0.23418586 0.09723693 0.06682989 0.0156274
 0.01336682 0.00761619 0.00677398 0.00362585]  taking action:  2
Leaf selection - depth:  4
Leaf selection - action scores:  [1.9119108e+00 8.3174724e-03 5.2457647e-03 3.8679841e-03 3.2827153e-03
 3.0598273e-03 2.2211964e-03 1.2557507e-03 9.9338044e-04 9.8565000e-04]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    reg [31:0] sum_reg;
    reg cout_reg;

    always @(*) begin
        sum_reg = in1 + in2 + cin;
        cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    end

    assign sum = sum_reg;
    assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.684534  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  46.0
Iteration TIME (sec):  23.257837495000103
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.0431001   0.0356861   0.00328666  0.00236729  0.00184216  0.00162701
 -0.1997953   0.00040817  0.00038948  0.0002963 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06674305  0.06744851  0.04223911  0.05569582  0.01959883  0.04320205
 -0.01174995  0.06441955  0.03968773  0.03342042]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.4277607  0.26825726 0.23086105 0.37418756 0.06921775 0.04264382
 0.01202824 0.01012879 0.0074685  0.0072955 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.8184861  0.03153418 0.01897761 0.0115105  0.01124386 0.0109834
 0.0047239  0.00385553 0.00359375 0.00300269]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.007011  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  47.0
Iteration TIME (sec):  21.584596367999893
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04180056  0.03606374  0.00332144  0.00239234  0.00186165  0.00164423
 -0.19485473  0.00041249  0.0003936   0.00029944]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06931324  0.04092887  0.04362038  0.05717264  0.0205736   0.04425522
 -0.01131774  0.06514747  0.04013619  0.03379806]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.11301832  0.12355187  0.11030518  0.10853473 -0.2953295   0.05756973
 -0.3329528   0.08316266  0.08251549  0.07873682]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.347884   0.3271565  0.17875701 0.12313822 0.048981   0.01277746
 0.0119099  0.01154347 0.00481203 0.00421356]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.0636406  0.04308713 0.02342607 0.01536319 0.0132439  0.01115248
 0.00574081 0.00464905 0.00350928 0.00319524]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.8189976e+00 5.1600993e-02 3.9563850e-02 1.7016200e-02 8.6910250e-03
 5.1896474e-03 4.2356667e-03 3.0508367e-03 2.0322953e-03 1.1400143e-03]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.75076  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  48.0
Iteration TIME (sec):  21.33999504899998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.04053844  0.03643747  0.00335586  0.00241714  0.00188095  0.00166127
 -0.18996535  0.00041677  0.00039768  0.00030254]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06592903  0.04230198  0.0449864   0.05863316  0.02153762  0.04529674
 -0.0108903   0.06586735  0.0405797   0.03417153]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.1166527   0.09475472  0.11358516  0.11163587 -0.29170674  0.05976877
 -0.329996    0.08463468  0.08397605  0.0801305 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.20925957 0.17657785 0.13052666 0.10120741 0.06955875 0.01626551
 0.01391263 0.00792718 0.00705058 0.0037739 ]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.4850345  0.06394131 0.03531175 0.02209753 0.01919867 0.01890102
 0.00988263 0.00643075 0.00516725 0.00470483]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.5515051  0.09387075 0.06156195 0.02689442 0.01462224 0.00746831
 0.00669455 0.00659076 0.00326266 0.00166641]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [5.8000886e-01 3.2285169e-01 8.0364138e-02 4.5790110e-02 8.8768173e-03
 2.1753574e-03 2.0435594e-03 1.8899834e-03 6.4303452e-04 4.9303164e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [8.5284799e-01 1.0486024e-03 2.6512821e-04 4.1949374e-05 2.7084554e-05
 1.8183708e-05 1.2018696e-05 8.5225320e-06 7.2329790e-06 2.6817336e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [1.1392162e+00 1.0028658e-02 1.0244919e-03 4.2045061e-04 1.8368127e-04
 5.5583674e-05 2.9062598e-05 1.5678097e-05 1.1742352e-05 1.0775387e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [1.9511838e+00 3.4492317e-04 2.5779300e-05 1.0662781e-05 7.1029435e-06
 6.1711448e-06 5.8427222e-06 5.4887296e-06 4.2746269e-06 3.3551933e-06]  taking action:  0
Adding child.
Leaf selection - depth:  10
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  19.956312  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  49.0
Iteration TIME (sec):  20.54297008200001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.03931195  0.0368074   0.00338993  0.00244168  0.00190004  0.00167814
 -0.18512562  0.000421    0.00040172  0.00030561]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06274478  0.04366023  0.04633763  0.06007788  0.0224912   0.04632701
 -0.01046748  0.06657945  0.04101841  0.03454096]  taking action:  7
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
					  
			
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:301: syntax error\nI give up.\n'
LLM generates return in:  666.512772  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  50.0
Iteration TIME (sec):  664.1860270929999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01936937  0.03717366  0.00342366  0.00246597  0.00191895  0.00169484
 -0.18033405  0.00042519  0.00040572  0.00030865]  taking action:  1
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin); 

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.805601  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  51.0
Iteration TIME (sec):  23.376186249000057
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.02106244 -0.03123183  0.00345707  0.00249003  0.00193767  0.00171137
 -0.17558923  0.00042934  0.00040967  0.00031166]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06506668  0.04500412  0.0476746   0.06150733  0.0234347   0.04734637
 -0.01004913 -0.466358    0.04145248  0.03490649]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.10449456  0.09783987  0.11680907  0.11468399 -0.28814593  0.06193022
 -0.32708973  0.08608153  0.08541164  0.08150035]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [0.83681595 0.00656289 0.00621362 0.00592908 0.00454598 0.00388839
 0.0038281  0.00172546 0.00168549 0.00130245]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.1205751e+00 1.6791914e-02 1.1361979e-02 7.4513676e-03 4.4494146e-03
 4.1798381e-03 2.4572001e-03 8.7614171e-04 8.4918563e-04 5.6567957e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.8644967e+00 6.2810443e-02 1.3165786e-02 6.7244256e-03 2.8921391e-03
 5.6066673e-04 5.0257839e-04 1.6573278e-04 1.1752214e-04 7.5877993e-05]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29901

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.19804  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  52.0
Iteration TIME (sec):  21.78011004500013
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.02023443 -0.03105223  0.00349015  0.00251386  0.00195621  0.00172775
 -0.17088982  0.00043344  0.00041359  0.00031465]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06196564  0.04633408  0.04899767  0.06292194  0.02436841  0.04835517
 -0.00963512 -0.46600938  0.04188205  0.03526822]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.49214584 0.4305448  0.2491802  0.16860376 0.05142124 0.02077606
 0.00449314 0.00425402 0.00349926 0.00306405]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.9794218  0.13793392 0.0962934  0.01344557 0.00983699 0.00909773
 0.00868111 0.00596644 0.00530666 0.00388243]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.71484214 0.420234   0.26297578 0.0501898  0.03190258 0.0108543
 0.00653224 0.00512721 0.00223991 0.00199222]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum_wire;
  wire cout_wire;
  
  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  
  assign sum = sum_wire;
  assign cout = cout_wire;
  
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.977813  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  53.0
Iteration TIME (sec):  22.552386347000265
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01942443 -0.03087431  0.00352292  0.00253746  0.00197458  0.00174397
 -0.16623453  0.00043751  0.00041748  0.0003176 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06416675  0.04765054  0.05030733  0.03145777  0.02529265  0.04935372
 -0.00922531 -0.46566427  0.04230726  0.03562628]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.10775679  0.10087401  0.07598375  0.11768172 -0.28464398  0.06405593
 -0.3242315   0.08750446  0.08682349  0.08284755]  taking action:  3
Leaf selection - depth:  3
Leaf selection - action scores:  [8.2198995e-01 5.4876763e-01 7.5437166e-02 5.8170892e-03 4.2227544e-03
 1.5056693e-03 7.8113104e-04 6.0361117e-04 5.0829165e-04 5.0433609e-04]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.90611112e+00 3.60198580e-02 3.91697790e-03 2.95669003e-03
 6.91387686e-04 5.30105317e-04 3.31731426e-04 3.21525120e-04
 1.25911043e-04 1.11116104e-04]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  297

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign sum = in1 + in2 + cin;
assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.075442  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  54.0
Iteration TIME (sec):  11.704952683000101
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01863177 -0.03069804  0.00355539  0.00256085  0.00199278  0.00176005
 -0.16162216  0.00044155  0.00042133  0.00032053]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.06114765  0.04895388  0.05160394  0.03256683  0.02620769  0.05034234
 -0.00881959 -0.4653226   0.04272823  0.03598078]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.11096681  0.10385963  0.07847966  0.06547362 -0.28119805  0.06614762
 -0.32141903  0.08890462  0.08821277  0.0841732 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.18034521 0.18607469 0.1379705  0.10502788 0.07218453 0.01687952
 0.01443782 0.00822642 0.00731673 0.00391636]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [6.3402748e-01 5.1513749e-01 1.2428270e-01 5.7226601e-03 1.3486734e-03
 1.3486734e-03 1.0503478e-03 7.8055216e-04 6.2231050e-04 5.1189860e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.1134825e+00 5.0612319e-02 5.0112987e-03 3.6095029e-03 1.3487727e-03
 6.5733929e-04 6.0793944e-04 3.9869643e-04 2.4949785e-04 1.5613176e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.6194080e+00 2.3697174e-01 4.6662506e-02 3.0127577e-02 6.2171770e-03
 3.6548900e-03 1.7812509e-03 1.7673891e-03 1.6345677e-03 3.8824388e-04]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.046687  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  55.0
Iteration TIME (sec):  11.680462971999987
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01785585 -0.03052335  0.00358757  0.00258403  0.00201082  0.00177597
 -0.15705153  0.00044554  0.00042514  0.00032343]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05829157  0.05024452  0.05288793  0.03366507  0.02711381  0.05132132
 -0.00841782 -0.4649843   0.04314511  0.03633182]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09985194  0.10679894  0.08093685  0.06765163 -0.27780557  0.06820688
 -0.3186502   0.09028307  0.08958048  0.08547829]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.26082444 0.35737562 0.19708583 0.13300449 0.05290553 0.01380123
 0.01286416 0.01246837 0.00519759 0.00455116]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [1.4412591e+00 4.2603537e-01 7.1756065e-02 3.3299583e-03 1.1508029e-03
 9.6907315e-04 7.4301421e-04 5.2277581e-04 4.6496643e-04 3.5097502e-04]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  353

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  assign sum = in1 + in2 + cin;
  assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.461176  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  56.0
Iteration TIME (sec):  12.0881717379998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.0170961  -0.03035022  0.00361946  0.002607    0.00202869  0.00179176
 -0.15252152  0.0004495   0.00042892  0.0003263 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05558464  0.05152281  0.0541596   0.03475279  0.02801125  0.05229092
 -0.00801989 -0.4646492   0.04355799  0.0366795 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.10275714  0.08348228  0.0833571   0.06979689 -0.27446413  0.07023517
 -0.31592298  0.09164079  0.09092764  0.08676375]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.18974614 0.13619038 0.14515296 0.10871419 0.07471809 0.01747196
 0.01494456 0.00851515 0.00757353 0.00405382]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.43509495 0.06835614 0.03774985 0.02362325 0.02052424 0.02020604
 0.01056497 0.00687476 0.00552402 0.00502968]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.48508617 0.10139201 0.0664945  0.0290493  0.01579383 0.0080667
 0.00723094 0.00711884 0.00352408 0.00179992]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.494021   0.3536663  0.0880345  0.05016055 0.00972407 0.00238298
 0.00223861 0.00207037 0.00070441 0.00054009]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [6.9603646e-01 1.1723731e-03 2.9642234e-04 4.6900823e-05 3.0281451e-05
 2.0330002e-05 1.3437310e-05 9.5284804e-06 8.0867167e-06 2.9982693e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [8.48792255e-01 1.15800975e-02 1.18298130e-03 4.85494529e-04
 2.12096857e-04 6.41824954e-05 3.35585974e-05 1.81035066e-05
 1.35589007e-05 1.24423450e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [1.1448512e+00 4.2244291e-04 3.1573065e-05 1.3059187e-05 8.6992941e-06
 7.5580779e-06 7.1558443e-06 6.7222936e-06 5.2353275e-06 4.1092558e-06]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.45391914 0.26270825 0.14508128 0.12312888 0.07705208 0.07238373
 0.06961075 0.06095321 0.05092832 0.04821796]  taking action:  0
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29918

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  19.716237  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  57.0
Iteration TIME (sec):  20.30409500199994
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01635192 -0.03017861  0.00365107  0.00262977  0.00204641  0.00180741
 -0.14803109  0.00045343  0.00043266  0.00032915]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05301462  0.05278908  0.05541934  0.0358303   0.02890026  0.05325141
 -0.00762571 -0.46431726  0.04396699  0.03702392]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [6.8719494e-01 1.2459666e-02 6.1679813e-03 3.9206077e-03 3.7999835e-03
 3.7999835e-03 3.9123738e-04 3.7332132e-04 2.5657972e-04 2.5657972e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.7629924  0.09208869 0.03899281 0.02087134 0.01703469 0.01179959
 0.01049477 0.00948124 0.00699103 0.00688264]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.38779283 0.54792756 0.3073595  0.05685579 0.03728694 0.00658154
 0.0064795  0.00320758 0.00313328 0.00287526]  taking action:  1
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.893793  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  58.0
Iteration TIME (sec):  12.50825917200018
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01562281 -0.03000846  0.00368241  0.00265234  0.00206397  0.00182292
 -0.1435792   0.00045732  0.00043638  0.00033198]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0548726   0.0540437   0.03055623  0.0368979   0.02978107  0.05420306
 -0.00723515 -0.4639884   0.04437223  0.03736516]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09276868  0.08597851  0.085742    0.07191083 -0.27117145  0.07223383
 -0.31323555  0.09297868  0.09225512  0.08803044]  taking action:  7
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    
    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  12.323543  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  59.0
Iteration TIME (sec):  12.947053896999932
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01490823 -0.02983976  0.00371348  0.00267472  0.00208139  0.00183831
 -0.13916488  0.00046118  0.00044006  0.00033478]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05236059  0.05528695  0.03158692  0.03795581  0.03065392  0.05514609
 -0.00684813 -0.46366248  0.04477379  0.03770331]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.28224045 0.29863337 0.25766784 0.40990195 0.07582425 0.04671396
 0.01317628 0.01109554 0.00818134 0.00799181]  taking action:  3
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  259

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
   
   wire [31:0] sum_wire;
   wire cout_wire;
   
   assign sum_wire = in1 + in2 + cin;
   assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
   
   assign sum = sum_wire;
   assign cout = cout_wire;
   
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.382321  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  60.0
Iteration TIME (sec):  22.951002264999715
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01420772 -0.02967245  0.0037443   0.00269692  0.00209866  0.00185356
 -0.1347872   0.00046501  0.00044371  0.00033756]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05413471  0.03415929  0.03260846  0.03900433  0.03151902  0.05608075
 -0.00646455 -0.46333948  0.04517179  0.03803846]  taking action:  5
Leaf selection - depth:  2
Leaf selection - action scores:  [1.7282565  0.05301068 0.04534243 0.03643367 0.01449231 0.01278942
 0.01239593 0.01182828 0.01128662 0.00980599]  taking action:  0
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.544387  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  61.0
Iteration TIME (sec):  23.122556821000217
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.0135208  -0.02950651  0.00377487  0.00271894  0.0021158   0.0018687
 -0.13044525  0.0004688   0.00044734  0.00034032]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05589332  0.03520623  0.03362107  0.04004368  0.03237654  0.00467148
 -0.00608432 -0.46301928  0.04556631  0.03837068]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09541446  0.0884393   0.08809306  0.07399477 -0.2679255   0.07420415
 -0.31058627 -0.00285121  0.09356376  0.08927916]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.16563429 0.14328048 0.1520997  0.11227953 0.07716851 0.01804497
 0.01543467 0.00879441 0.00782191 0.00418677]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.39585137 0.07250264 0.04003976 0.02505624 0.02176924 0.02143174
 0.01120584 0.00729178 0.00585911 0.00533478]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.43514234 0.10839262 0.07108562 0.031055   0.01688431 0.00862366
 0.0077302  0.00761036 0.0037674  0.0019242 ]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.43334463 0.3820033  0.09508813 0.05417959 0.01050319 0.00257392
 0.00241797 0.00223626 0.00076085 0.00058336]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.9570247e-01 1.2842704e-03 3.2471440e-04 5.1377276e-05 3.3171666e-05
 2.2270402e-05 1.4719836e-05 1.0437927e-05 8.8585539e-06 3.2844396e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [6.9263566e-01 1.2946942e-02 1.3226133e-03 5.4279936e-04 2.3713148e-04
 7.1758208e-05 3.7519651e-05 2.0240333e-05 1.5159311e-05 1.3910964e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [8.5313022e-01 4.8779504e-04 3.6457433e-05 1.5079450e-05 1.0045079e-05
 8.7273165e-06 8.2628567e-06 7.7622362e-06 6.0452353e-06 4.7449598e-06]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.22796758 0.32175058 0.17768756 0.15080146 0.09436914 0.0886516
 0.08525541 0.07465214 0.06237419 0.0590547 ]  taking action:  1
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29918

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] temp_sum;
    wire temp_cout;

    assign temp_sum = in1 + in2 + cin;
    assign temp_cout = (temp_sum[32] == 1'b1);

    assign sum = temp_sum[31:0];
    assign cout = temp_cout;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

LLM generates return in:  16.233692  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  62.0
Iteration TIME (sec):  16.834678088000146
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01284705 -0.0293419   0.00380519  0.00274077  0.00213279  0.0018837
 -0.12613818  0.00047257  0.00045093  0.00034305]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05337639  0.0362442   0.03462499  0.04107413  0.03322672  0.00528385
 -0.00570735 -0.46270186  0.04595745  0.03870005]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0863753   0.09086618  0.09041169  0.07604998 -0.2647243   0.0761473
 -0.30797356 -0.00220084  0.09485436  0.09051066]  taking action:  8
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);


    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.607599  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  63.0
Iteration TIME (sec):  22.18843245800008
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01218604 -0.02917859  0.00383527  0.00276244  0.00214965  0.0018986
 -0.12186516  0.0004763   0.00045449  0.00034576]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.05097798  0.0372734   0.03562044  0.04209586  0.03406972  0.00589103
 -0.00533357 -0.46238708  0.04634528  0.03902664]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08879813  0.09326045  0.09269919  0.07807757 -0.2615661   0.07806434
 -0.3053959  -0.00155922 -0.00193619  0.09172562]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.28401142 0.22366858 0.21414585 0.14218777 0.05655839 0.01475414
 0.01375237 0.01332925 0.00555646 0.0048654 ]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.79061425 0.04975273 0.02705009 0.01773988 0.01529273 0.01287777
 0.00662891 0.00536826 0.00405217 0.00368954]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.063904   0.06319805 0.04845562 0.0208405  0.01064429 0.00635599
 0.00518761 0.0037365  0.00248904 0.00139623]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.6526870e+00 2.1678536e-01 4.2687569e-02 2.6713196e-02 7.3029823e-03
 1.4380424e-03 1.4157476e-03 1.3093525e-03 4.6686403e-04 3.5795703e-04]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29901

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  wire [31:0] sum_wire;
  wire cout_wire;

  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

  assign sum = sum_wire;
  assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.591082  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  64.0
Iteration TIME (sec):  21.17437444699999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01153736 -0.02901655  0.00386512  0.00278394  0.00216638  0.00191337
 -0.1176254   0.00048001  0.00045803  0.00034845]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.04868932  0.03829406  0.03660762  0.04310913  0.03490572  0.00649318
 -0.00496289 -0.46207494  0.0467299   0.03935052]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09118929  0.0738875   0.0949568   0.08007868 -0.2584492   0.07995633
 -0.30285197 -0.00092598 -0.00130787  0.0929247 ]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [0.68259317 0.00733754 0.00694704 0.00662891 0.00508256 0.00434735
 0.00427995 0.00192912 0.00188444 0.00145618]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [8.3444232e-01 1.9389631e-02 1.3119683e-02 8.6040981e-03 5.1377411e-03
 4.8264614e-03 2.8373301e-03 1.0116813e-03 9.8055508e-04 6.5319048e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.0917665e+00 7.6926768e-02 1.6124729e-02 8.2357060e-03 3.5421327e-03
 6.8667368e-04 6.1553036e-04 2.0298039e-04 1.4393464e-04 9.2931186e-05]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.9511147e+00 3.4491098e-04 9.7286611e-05 2.1039705e-05 6.8305926e-06
 6.8305926e-06 6.1229039e-06 3.4079092e-06 3.0074691e-06 8.1579788e-07]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29900

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  20.840709  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  65.0
Iteration TIME (sec):  21.415050646000054
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01090064 -0.02885576  0.00389473  0.00280527  0.00218298  0.00192803
 -0.11341812  0.00048369  0.00046154  0.00035112]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.04650249  0.03930639  0.03758675  0.04411411  0.03573489  0.00709041
 -0.00459523 -0.46176535  0.04711137  0.03967175]  taking action:  8
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.725032  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  66.0
Iteration TIME (sec):  22.30370734899998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 0.01027549 -0.02869618  0.00392413  0.00282644  0.00219946  0.00194258
 -0.1092426   0.00048734  0.00046502  0.00035377]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.0480206   0.04031058  0.03855801  0.04511103  0.03655741  0.00768284
 -0.00423053 -0.46145824 -0.02625511  0.0399904 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09354997  0.07596116  0.06432136  0.08205427 -0.255372    0.08182422
 -0.3003404  -0.00030081 -0.00068757  0.0941085 ]  taking action:  9
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  22376

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

	wire [31:0] sum_wire;
	wire cout_wire;

	assign sum = sum_wire;
	assign cout = cout_wire;

	full_adder fa0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
	full_adder fa1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
	full_adder fa2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
	full_adder fa3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
	full_adder fa4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
	full_adder fa5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
	full_adder fa6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
	full_adder fa7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
	full_adder fa8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
	full_adder fa9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
	full_adder fa10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
	full_adder fa11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
	full_adder fa12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
	full_adder fa13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
	full_adder fa14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
	full_adder fa15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
	full_adder fa16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
	full_adder fa17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
	full_adder fa18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
	full_adder fa19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
	full_adder fa20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
	full_adder fa21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
	full_adder fa22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
	full_adder fa23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
	full_adder fa24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
	full_adder fa25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
	full_adder fa26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
	full_adder fa27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
	full_adder fa28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
	full_adder fa29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
	full_adder fa30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
	full_adder fa31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:45: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:46: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:47: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
LLM generates return in:  311.973372  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  67.0
Iteration TIME (sec):  311.1852048689998
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.00440093 -0.02853778  0.00395331  0.00284746  0.00221581  0.00195703
 -0.10509813  0.00049096  0.00046848  0.0003564 ]  taking action:  2
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);  

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    full_adder fa0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    full_adder fa1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    full_adder fa2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    full_adder fa3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    full_adder fa4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    full_adder fa5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    full_adder fa6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    full_adder fa7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    full_adder fa8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    full_adder fa9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    full_adder fa10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    full_adder fa11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    full_adder fa12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    full_adder fa13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    full_adder fa14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    full_adder fa15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    full_adder fa16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    full_adder fa17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    full_adder fa18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    full_adder fa19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    full_adder fa20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    full_adder fa21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    full_adder fa22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    full_adder fa23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    full_adder fa24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    full_adder fa25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    full_adder fa26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    full_adder fa27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    full_adder fa28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    full_adder fa29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    full_adder fa30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    full_adder fa31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:45: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:46: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:47: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
LLM generates return in:  313.40839  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  68.0
Iteration TIME (sec):  312.6104031929999
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-3.29991192e-03 -2.83805461e-02 -4.98008866e-01  2.86831989e-03
  2.23204384e-03  1.97136549e-03 -1.00984020e-01  4.94560355e-04
  4.71912765e-04  3.59012850e-04]  taking action:  3
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);    

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.822227  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  69.0
Iteration TIME (sec):  23.393581937999897
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-2.20684660e-03 -2.82244469e-02 -4.97994490e-01 -4.85554857e-02
  2.24815989e-03  1.98559936e-03 -9.68996155e-02  4.98131235e-04
  4.75320121e-04  3.61605034e-04]  taking action:  4
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);   

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum = sum_wire;
    assign cout = cout_wire;

    full_adder fa0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
    full_adder fa1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
    full_adder fa2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
    full_adder fa3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
    full_adder fa4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
    full_adder fa5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
    full_adder fa6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
    full_adder fa7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
    full_adder fa8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
    full_adder fa9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
    full_adder fa10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
    full_adder fa11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
    full_adder fa12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
    full_adder fa13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
    full_adder fa14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
    full_adder fa15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
    full_adder fa16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
    full_adder fa17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
    full_adder fa18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
    full_adder fa19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
    full_adder fa20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
    full_adder fa21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
    full_adder fa22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
    full_adder fa23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
    full_adder fa24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
    full_adder fa25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
    full_adder fa26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
    full_adder fa27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
    full_adder fa28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
    full_adder fa29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
    full_adder fa30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
    full_adder fa31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:45: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:46: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:47: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
LLM generates return in:  313.04141  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  70.0
Iteration TIME (sec):  312.2411130820001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-1.12156139e-03 -2.80694588e-02 -4.97980215e-01 -4.85452043e-02
 -4.98867919e-01  1.99973191e-03 -9.28442827e-02  5.01676697e-04
  4.78703225e-04  3.64178768e-04]  taking action:  5
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  539

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);                      

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  23.084322  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  71.0
Iteration TIME (sec):  23.647703497000293
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-4.38924978e-05 -2.79155584e-02 -4.97966041e-01 -4.85349951e-02
 -4.98859975e-01 -4.89931181e-02 -8.88174094e-02  5.05197279e-04
  4.82062587e-04  3.66734440e-04]  taking action:  7
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);     

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.246933  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  72.0
Iteration TIME (sec):  22.81642334800017
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 1.02631821e-03 -2.77627231e-02 -4.97951965e-01 -4.85248566e-02
 -4.98852085e-01 -4.89861500e-02 -8.48184048e-02 -4.97456540e-02
  4.85398700e-04  3.69272425e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02392851  0.04130685  0.03952159  0.04610007  0.03737342  0.0082706
 -0.00386871 -0.46115357 -0.0260674   0.04030654]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.39357853 0.48136368 0.2785919  0.18850473 0.0574907  0.02322834
 0.00502348 0.00475614 0.00391229 0.00342572]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
   assign sum = in1 + in2 + cin;
   assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.528595  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  73.0
Iteration TIME (sec):  12.1544635070004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 5.18608424e-04 -2.76109310e-02 -4.97937985e-01 -4.85147872e-02
 -4.98844250e-01 -4.89792294e-02 -8.08466980e-02 -4.97439178e-02
  4.88712041e-04  3.71793085e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02538645  0.04229536  0.04047767  0.02256784  0.03818309  0.00885378
 -0.00350971 -0.46085125 -0.02588115  0.04062021]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.3101961  0.3265671  0.28231928 0.17137237 0.08189955 0.05045684
 0.01423201 0.01198455 0.00883685 0.00863215]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [1.4436374e+00 3.9466849e-01 9.6717671e-02 5.2065691e-03 1.2561433e-03
 1.1986202e-03 7.9845323e-04 5.1552011e-04 5.1150832e-04 4.3751628e-04]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  353

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.300021  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  74.0
Iteration TIME (sec):  11.919442468999932
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 1.93568339e-05 -2.74601612e-02 -4.97924100e-01 -4.85047856e-02
 -4.98836467e-01 -4.89723554e-02 -7.69017377e-02 -4.97421933e-02
  4.92003068e-04  3.74296770e-04]  taking action:  8
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);        

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.075249  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  75.0
Iteration TIME (sec):  22.644753260000016
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 1.03630930e-03 -2.73103931e-02 -4.97910306e-01 -4.84948505e-02
 -4.98828736e-01 -4.89655272e-02 -7.29829906e-02 -4.97404803e-02
 -4.97523646e-02  3.76783819e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02683322  0.02536675  0.04142643  0.02337936  0.03898655  0.00943249
 -0.00315345 -0.46055126 -0.02569633  0.04093148]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [5.8795416e-01 1.3648881e-02 6.7566852e-03 4.2948108e-03 4.1626734e-03
 4.1626734e-03 4.2857908e-04 4.0895303e-04 2.8106902e-04 2.8106902e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.6206902  0.10295829 0.04359528 0.02333487 0.01904537 0.01319234
 0.01173351 0.01060034 0.0078162  0.00769502]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.45551962 0.2663461  0.35490817 0.06565141 0.04305524 0.0075997
 0.00748188 0.0037038  0.003618   0.00332006]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.8333504  0.03057401 0.01868952 0.01160459 0.01024101 0.00984868
 0.00443915 0.00260964 0.00224965 0.00218044]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.607112  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  76.0
Iteration TIME (sec):  22.18273876899957
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [ 5.23502510e-04 -2.71616072e-02 -4.97896603e-01 -4.84849806e-02
 -4.98821055e-01 -4.89587437e-02 -6.90899411e-02 -4.97387785e-02
 -4.97507408e-02  3.79254559e-04]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02826908  0.02621859  0.02202974  0.02418474  0.03978394  0.01000683
 -0.00279989 -0.4602535  -0.0255129   0.0412404 ]  taking action:  9
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  732

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
always @(*) begin
    sum = in1 + in2 + cin;
    cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end
endmodule
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:10: error: sum is not a valid l-value in tb_adder_32.uut.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:5:      : sum is declared here as wire.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:11: error: cout is not a valid l-value in tb_adder_32.uut.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:6:      : cout is declared here as wire.\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:9: warning: @* found no sensitivities so it will never trigger.\n2 error(s) during elaboration.\n'
LLM generates return in:  12.781413  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  77.0
Iteration TIME (sec):  13.409717439999895
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-1.32158510e-02 -2.70137844e-02 -4.97882989e-01 -4.84751745e-02
 -4.98813424e-01 -4.89520041e-02 -6.52220900e-02 -4.97370877e-02
 -4.97491274e-02  3.81709307e-04]  taking action:  9
Adding child.
Leaf selection - depth:  1
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);      

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.064208  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  78.0
Iteration TIME (sec):  22.6287465180003
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01224785 -0.02686691 -0.49786946 -0.04846543 -0.49880584 -0.04894531
 -0.06137895 -0.04973541 -0.04974752 -0.04980793]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02969424  0.02706409  0.02283082  0.02498414  0.0405754   0.0105769
 -0.00244896 -0.45995802 -0.02533084 -0.4792265 ]  taking action:  4
Leaf selection - depth:  2
Leaf selection - action scores:  [0.2905776  0.47552297 0.4329686  0.37616962 0.05951868 0.03498923
 0.0123787  0.01118323 0.00919907 0.008246  ]  taking action:  1
Adding child.
Leaf selection - depth:  3
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  reg [31:0] sum_reg;
  reg cout_reg;

  always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  end

  assign sum = sum_reg;
  assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.828978  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  79.0
Iteration TIME (sec):  23.374597328000164
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01257168 -0.02672095 -0.49785602 -0.04845575 -0.49879831 -0.04893865
 -0.05756007 -0.04973374 -0.04974593 -0.04980671]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03110899  0.02790339  0.02362603  0.02577768  0.0060208   0.01114279
 -0.00210059 -0.45966464 -0.02515011 -0.4790743 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 9.5881335e-02  7.8009069e-02  6.6155650e-02  8.4005341e-02
 -2.5233302e-01  8.3668895e-02 -2.9786009e-01  3.1659752e-04
 -7.4967742e-05 -4.5236120e-01]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.14612085 0.15015222 0.15883252 0.11573509 0.07954348 0.01860032
 0.0159097  0.00906507 0.00806264 0.00431562]  taking action:  2
Leaf selection - depth:  4
Leaf selection - action scores:  [1.1208016  0.01018678 0.00642472 0.00473729 0.00402049 0.00374751
 0.0027204  0.00153797 0.00121664 0.00120717]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.9040536e+00 1.9259229e-02 1.0471061e-02 7.4250936e-03 3.2948658e-03
 3.0472525e-03 2.1948537e-03 6.5901456e-04 5.9073686e-04 5.4634223e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    reg [31:0] sum_reg;
    reg cout_reg;

    always @(*) begin
        sum_reg = in1 + in2 + cin;
        cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    end

    assign sum = sum_reg;
    assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.373243  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  80.0
Iteration TIME (sec):  22.950350463000177
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01289208 -0.02657591 -0.49784266 -0.04844613 -0.49879082 -0.04893204
 -0.05376497 -0.04973208 -0.04974435 -0.04980551]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02935842  0.02873664  0.0244155   0.0265655   0.0066058   0.0117046
 -0.00175474 -0.4593734  -0.02497069 -0.4789232 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0871742   0.08003215  0.06796771  0.08593275 -0.24933088  0.08549122
 -0.2954098   0.00092652  0.00053021 -0.45178375]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.15296635 0.15682471 0.09902757 0.11909042 0.08184957 0.01913957
 0.01637094 0.00932788 0.00829639 0.00444074]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [5.1254994e-01 5.7594121e-01 1.3895229e-01 6.3981283e-03 1.5078626e-03
 1.5078626e-03 1.1743245e-03 8.7268383e-04 6.9576426e-04 5.7232002e-04]  taking action:  1
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13147

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.473821  seconds
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/synth_script.sh
Running bash in x seconds:  0.703255

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  81.0
Iteration TIME (sec):  4.140282786000171
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01039218 -0.02643176 -0.49782938 -0.04843657 -0.49878338 -0.04892547
 -0.04999323 -0.04973043 -0.04974278 -0.04980431]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03233093  0.02956396  0.02519935  0.02734771  0.00718663  0.01226242
 -0.00141135 -0.45908424 -0.02479254 -0.47877318]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08988553  0.08203128  0.0697583   0.08783734 -0.2463643   0.08729196
 -0.29298854  0.00152922  0.00112822 -0.45121312]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.15962419 0.15276189 0.10379635 0.12235378 0.08409244 0.01966405
 0.01681955 0.00958349 0.00852373 0.00456242]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3639974  0.07642449 0.04220561 0.0264116  0.02294679 0.02259103
 0.011812   0.00768621 0.00617605 0.00562335]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.39589536 0.11496773 0.07539768 0.0329388  0.01790852 0.00914678
 0.00819912 0.008072   0.00399593 0.00204092]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.38773027 0.4083787  0.10165349 0.05792042 0.01122839 0.00275163
 0.00258492 0.00239066 0.00081338 0.00062364]  taking action:  1
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29901

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [32:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = sum_wire[32];
    assign sum = sum_wire[31:0];
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  15.234957  seconds
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/synth_script.sh
Running bash in x seconds:  0.703089

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  82.0
Iteration TIME (sec):  15.840123593000044
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.00796716 -0.02628849 -0.49781619 -0.04842706 -0.49877598 -0.04891894
 -0.04624443 -0.04972879 -0.04974121 -0.04980312]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03515917  0.03038547  0.02597771  0.02812443  0.00776339  0.01281631
 -0.00107038 -0.45879713 -0.02461565 -0.47862422]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09230336  0.08400731  0.07152822  0.08971992 -0.24343196  0.08907189
 -0.29059523  0.00212496  0.00171932 -0.45064908]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.1600991  0.15802929 0.10844116 0.12553233 0.08627702 0.02017488
 0.01725649 0.00983245 0.00874516 0.00468095]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3574921  0.08015469 0.04426562 0.02770072 0.0240668  0.02369368
 0.01238853 0.00806137 0.00647749 0.00589782]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.38626087 0.12118662 0.07947613 0.03472055 0.01887724 0.00964155
 0.00864263 0.00850864 0.00421208 0.00215132]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.4164495  0.26657552 0.1078198  0.06143388 0.0119095  0.00291855
 0.00274172 0.00253568 0.00086272 0.00066147]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [5.2486849e-01 1.3871706e-03 3.5073166e-04 5.5493805e-05 3.5829496e-05
 2.4054785e-05 1.5899241e-05 1.1274250e-05 9.5683326e-06 3.5476003e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.9272224e-01 1.4182664e-02 1.4488503e-03 5.9460691e-04 2.5976452e-04
 7.8607183e-05 4.1100717e-05 2.2172175e-05 1.6606195e-05 1.5238697e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [6.9627309e-01 5.4537144e-04 4.0760649e-05 1.6859338e-05 1.1230739e-05
 9.7574357e-06 9.2381542e-06 8.6784430e-06 6.7587785e-06 5.3050258e-06]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.27096927 0.13576278 0.2051759  0.17413053 0.10896809 0.10236605
 0.09844447 0.08620086 0.07202351 0.06819049]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [1.6227487  0.14859904 0.08466919 0.02562169 0.00717069 0.00705952
 0.00668382 0.00627887 0.00599133 0.00296593]  taking action:  0
Adding child.
Leaf selection - depth:  12
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  22376

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  19.557208  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  83.0
Iteration TIME (sec):  20.148165053999946
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.0083536  -0.02614608 -0.49780307 -0.04841761 -0.49876863 -0.04891244
 -0.04251813 -0.04972716 -0.04973966 -0.04980194]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.03340854  0.0312013   0.02675067  0.02889577  0.00833615  0.01336637
 -0.00073176 -0.45851198 -0.02443997 -0.4784763 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08494651  0.085961    0.07327812  0.09158121 -0.24053282  0.0908317
 -0.28822905  0.00271396  0.00230373 -0.45009142]  taking action:  3
Leaf selection - depth:  3
Leaf selection - action scores:  [6.0459149e-01 6.3366222e-01 8.7107338e-02 6.7169960e-03 4.8760166e-03
 1.7385972e-03 9.0197235e-04 6.9699012e-04 5.8692461e-04 5.8235711e-04]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  13147

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign {cout, sum} = in1 + in2 + cin;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  3.469814  seconds
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/synth_script.sh
Running bash in x seconds:  0.712329

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  300.314
Delay value for the chip design is:  1228.16
Product:  368833.6422400001
Score (1/chip area):  0.1
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  84.0
Iteration TIME (sec):  4.135957867999878
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.00603202 -0.02600451 -0.49779004 -0.04840822 -0.49876132 -0.04890599
 -0.03881395 -0.04972554 -0.04973811 -0.04980077]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 3.6073506e-02  3.2011561e-02  2.7518362e-02  2.9661849e-02
  8.9050010e-03  1.3912678e-02 -3.9545447e-04 -4.5822877e-01
 -2.4265500e-02 -4.7832939e-01]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0867271   0.0878931   0.07500868  0.09473756 -0.23766568  0.09257207
 -0.28588897  0.00329645  0.00288169 -0.44953993]  taking action:  3
Leaf selection - depth:  3
Leaf selection - action scores:  [6.8382275e-01 4.0422794e-01 9.7388960e-02 7.5098295e-03 5.4515521e-03
 1.9438106e-03 1.0084357e-03 7.7925861e-04 6.5620162e-04 6.5109506e-04]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.1172500e+00 4.4115137e-02 4.7972985e-03 3.6211910e-03 8.4677350e-04
 6.4924377e-04 4.0628636e-04 3.9378626e-04 1.5420890e-04 1.3608889e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.6029398e+00 2.4200772e-01 5.9306547e-02 2.8903699e-02 5.9646158e-03
 2.5854693e-03 2.3911686e-03 2.3176000e-03 1.6306351e-03 3.2360945e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

assign sum = in1 + in2 + cin;
assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  10.93585  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  85.0
Iteration TIME (sec):  11.565401050999753
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.00644398 -0.02586377 -0.49777707 -0.04839889 -0.49875406 -0.04889957
 -0.0351315  -0.04972393 -0.04973658 -0.0497996 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 3.4361735e-02  3.2816358e-02  2.8280884e-02  3.0422777e-02
  9.4700307e-03  1.4455304e-02 -6.1411411e-05 -4.5794749e-01
 -2.4092201e-02 -4.7818345e-01]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0884884   0.08980431  0.07672053  0.06349519 -0.23482957  0.0942936
 -0.28357416  0.00387264  0.0034534  -0.4489944 ]  taking action:  5
Leaf selection - depth:  3
Leaf selection - action scores:  [0.3215538  0.7090783  0.21966219 0.13532995 0.05136546 0.0439352
 0.00935434 0.0048152  0.00313331 0.00306073]  taking action:  1
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

   wire [31:0] sum_wire;
   wire cout_wire;

   assign sum = sum_wire;
   assign cout = cout_wire;

   full_adder fa0(sum_wire[0], cout_wire, in1[0], in2[0], cin);
   full_adder fa1(sum_wire[1], cout_wire, in1[1], in2[1], cout_wire);
   full_adder fa2(sum_wire[2], cout_wire, in1[2], in2[2], cout_wire);
   full_adder fa3(sum_wire[3], cout_wire, in1[3], in2[3], cout_wire);
   full_adder fa4(sum_wire[4], cout_wire, in1[4], in2[4], cout_wire);
   full_adder fa5(sum_wire[5], cout_wire, in1[5], in2[5], cout_wire);
   full_adder fa6(sum_wire[6], cout_wire, in1[6], in2[6], cout_wire);
   full_adder fa7(sum_wire[7], cout_wire, in1[7], in2[7], cout_wire);
   full_adder fa8(sum_wire[8], cout_wire, in1[8], in2[8], cout_wire);
   full_adder fa9(sum_wire[9], cout_wire, in1[9], in2[9], cout_wire);
   full_adder fa10(sum_wire[10], cout_wire, in1[10], in2[10], cout_wire);
   full_adder fa11(sum_wire[11], cout_wire, in1[11], in2[11], cout_wire);
   full_adder fa12(sum_wire[12], cout_wire, in1[12], in2[12], cout_wire);
   full_adder fa13(sum_wire[13], cout_wire, in1[13], in2[13], cout_wire);
   full_adder fa14(sum_wire[14], cout_wire, in1[14], in2[14], cout_wire);
   full_adder fa15(sum_wire[15], cout_wire, in1[15], in2[15], cout_wire);
   full_adder fa16(sum_wire[16], cout_wire, in1[16], in2[16], cout_wire);
   full_adder fa17(sum_wire[17], cout_wire, in1[17], in2[17], cout_wire);
   full_adder fa18(sum_wire[18], cout_wire, in1[18], in2[18], cout_wire);
   full_adder fa19(sum_wire[19], cout_wire, in1[19], in2[19], cout_wire);
   full_adder fa20(sum_wire[20], cout_wire, in1[20], in2[20], cout_wire);
   full_adder fa21(sum_wire[21], cout_wire, in1[21], in2[21], cout_wire);
   full_adder fa22(sum_wire[22], cout_wire, in1[22], in2[22], cout_wire);
   full_adder fa23(sum_wire[23], cout_wire, in1[23], in2[23], cout_wire);
   full_adder fa24(sum_wire[24], cout_wire, in1[24], in2[24], cout_wire);
   full_adder fa25(sum_wire[25], cout_wire, in1[25], in2[25], cout_wire);
   full_adder fa26(sum_wire[26], cout_wire, in1[26], in2[26], cout_wire);
   full_adder fa27(sum_wire[27], cout_wire, in1[27], in2[27], cout_wire);
   full_adder fa28(sum_wire[28], cout_wire, in1[28], in2[28], cout_wire);
   full_adder fa29(sum_wire[29], cout_wire, in1[29], in2[29], cout_wire);
   full_adder fa30(sum_wire[30], cout_wire, in1[30], in2[30], cout_wire);
   full_adder fa31(sum_wire[31], cout_wire, in1[31], in2[31], cout_wire);

endmodule
Verilog compilation failed, error:  33
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:16: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:17: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:18: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:19: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:20: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:21: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:22: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:23: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:24: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:25: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:26: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:27: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:28: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:29: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:30: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:31: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:32: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:33: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:34: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:35: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:36: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:37: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:38: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:39: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:40: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:41: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:42: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:43: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:44: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:45: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:46: error: Unknown module type: full_adder\n/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:47: error: Unknown module type: full_adder\n33 error(s) during elaboration.\n*** These modules were missing:\n        full_adder referenced 32 times.\n***\n'
LLM generates return in:  311.342244  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  86.0
Iteration TIME (sec):  310.55147148000015
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.018692   -0.02572385 -0.49776419 -0.0483896  -0.49874684 -0.04889319
 -0.0314704  -0.04972233 -0.04973505 -0.04979844]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 1.3963550e-02  3.3615813e-02  2.9038325e-02  3.1178631e-02
  1.0031298e-02  1.4994331e-02  2.7040765e-04 -4.5766807e-01
 -2.3920055e-02 -4.7803849e-01]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.33621654 0.20171145 0.30526423 0.18665701 0.0875543  0.05394064
 0.01521466 0.01281202 0.00944699 0.00922815]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.0635909  0.03862133 0.02324273 0.01409743 0.01377086 0.01345186
 0.00578557 0.00472205 0.00440143 0.00367753]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [1.8086157e+00 5.1306482e-02 4.7450732e-02 1.9473745e-02 9.1987438e-03
 5.0012707e-03 4.4831103e-03 2.5946251e-03 2.2897485e-03 1.0986333e-03]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.462953  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  87.0
Iteration TIME (sec):  22.04523682099989
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01893826 -0.02558473 -0.49775137 -0.04838038 -0.49873965 -0.04888685
 -0.02783027 -0.04972074 -0.04973353 -0.04979728]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01510704  0.01947557  0.02979082  0.03192954  0.01058888  0.01552982
  0.00060005 -0.4573905  -0.02374904 -0.47789448]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.43830204 0.21365376 0.30518216 0.20649658 0.0629779  0.02544537
 0.00550295 0.00521009 0.0042857  0.00375268]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.72578263 0.15927237 0.11119004 0.01552561 0.01135878 0.01050515
 0.01002409 0.00688945 0.0061276  0.00448305]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3877496  0.51467943 0.32207823 0.0614697  0.03907252 0.01329375
 0.00800032 0.00627952 0.00274332 0.00243996]  taking action:  1
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  2533

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  assign sum = in1 + in2 + cin;
  assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.982135  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  88.0
Iteration TIME (sec):  12.60319855500029
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01918272 -0.0254464  -0.49773863 -0.0483712  -0.49873251 -0.04888054
 -0.02421078 -0.04971916 -0.04973202 -0.04979613]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01624313  0.02017696  0.03053842  0.01372193  0.01114286  0.01606183
  0.00092756 -0.4571147  -0.02357913 -0.4777514 ]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [5.1789415e-01 1.4742476e-02 7.2980542e-03 4.6389257e-03 4.4962014e-03
 4.4962014e-03 4.6291831e-04 4.4171978e-04 3.0358924e-04 3.0358924e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.52967244 0.11278515 0.04775624 0.02556207 0.02086315 0.01445148
 0.01285342 0.01161209 0.00856222 0.00842948]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.3101254  0.3036857  0.3967994  0.0734005  0.04813723 0.00849673
 0.008365   0.00414097 0.00404505 0.00371194]  taking action:  2
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  518

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    reg [31:0] sum_reg;
    reg cout_reg;
    
    always @(*) begin
        sum_reg = in1 + in2 + cin;
        cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    end
    
    assign sum = sum_reg;
    assign cout = cout_reg;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  23.648931  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  89.0
Iteration TIME (sec):  24.215132820000235
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.0194254  -0.02530884 -0.49772597 -0.04836207 -0.49872541 -0.04887427
 -0.02061155 -0.04971759 -0.04973052 -0.04979499]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01737194  0.02087387  0.0148711   0.01435731  0.0116933   0.01659045
  0.00125298 -0.45684066 -0.0234103  -0.47760922]  taking action:  1
Leaf selection - depth:  2
Leaf selection - action scores:  [0.24549164 0.21799132 0.32681462 0.20101266 0.09286536 0.05721268
 0.01613758 0.0135892  0.01002005 0.00978793]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [1.9001383e+00 1.0128031e-02 6.0951565e-03 4.5650615e-03 3.9661941e-03
 3.9353292e-03 3.5552734e-03 2.1396014e-03 1.3706799e-03 1.1908674e-03]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    reg [31:0] sum_reg;
    reg cout_reg;
    
    always @(*) begin
        sum_reg = in1 + in2 + cin;
        cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    end
    
    assign sum = sum_reg;
    assign cout = cout_reg;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  23.237329  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  90.0
Iteration TIME (sec):  23.80740649900008
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01966628 -0.02517205 -0.49771337 -0.048353   -0.49871835 -0.04886803
 -0.01703227 -0.04971602 -0.04972903 -0.04979385]  taking action:  6
Leaf selection - depth:  1
Leaf selection - action scores:  [0.12801689 0.823727   0.08414901 0.03852622 0.01606012 0.01395328
 0.00795034 0.00266303 0.00220773 0.00151735]  taking action:  1
Adding child.
Leaf selection - depth:  2
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  12

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																
Verilog compilation failed, error:  2
Compilation output:  b'/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/1862313_adder_32.v:8: syntax error\nI give up.\n'
LLM generates return in:  657.559735  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  91.0
Iteration TIME (sec):  655.2625695520001
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01890417 -0.025036   -0.49770084 -0.04834398 -0.49871133 -0.04886183
 -0.26010444 -0.04971447 -0.04972754 -0.04979272]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01849365  0.00940975  0.01551698  0.01498868  0.01224027  0.01711574
  0.00157635 -0.45656836 -0.02324254 -0.47746795]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09023109  0.09169531  0.07841428  0.06469624 -0.23202342 -0.1780023
 -0.2812839   0.00444274  0.00401907 -0.44845465]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.2246313  0.24128035 0.23016898 0.15081291 0.05998923 0.01564912
 0.01458659 0.01413781 0.00589351 0.00516053]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [8.3258736e-01 5.2178466e-01 8.7882869e-02 4.0783496e-03 1.4094400e-03
 1.1868674e-03 9.1000291e-04 6.4026698e-04 5.6946528e-04 4.2985487e-04]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.9095901e+00 3.1845428e-02 3.9241267e-03 3.3044466e-03 9.7679254e-04
 4.3344902e-04 4.3344902e-04 3.5934188e-04 1.6710949e-04 1.0539463e-04]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  297

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  assign sum = in1 + in2 + cin;
  assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  11.619098  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  92.0
Iteration TIME (sec):  12.240819049000493
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01915674 -0.0249007  -0.49768838 -0.048335   -0.49870434 -0.04885566
 -0.25744916 -0.04971292 -0.04972607 -0.0497916 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01716737  0.01002914  0.01615884  0.01561612  0.01278383  0.01763776
  0.0018977  -0.45629776 -0.02307583 -0.4773276 ]  taking action:  5
Leaf selection - depth:  2
Leaf selection - action scores:  [1.0083367  0.06492455 0.05553291 0.04462195 0.01774939 0.01566378
 0.01518185 0.01448663 0.01382324 0.01200984]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [1.9510502e+00 4.3599395e-04 4.3849064e-05 4.8814431e-06 2.2878864e-06
 2.2524162e-06 2.2524162e-06 1.6223544e-06 1.5360141e-06 1.4095259e-06]  taking action:  0
Adding child.
Leaf selection - depth:  4
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  1678

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
                      
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.773627  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  93.0
Iteration TIME (sec):  23.346990443999857
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01940712 -0.02476612 -0.49767598 -0.04832607 -0.4986974  -0.04884953
 -0.25480812 -0.04971138 -0.0497246  -0.04979048]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01825263  0.01064471  0.01679675  0.0162397   0.01332404 -0.01138258
  0.00221707 -0.45602882 -0.02291014 -0.47718805]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.09195572  0.07421001  0.08009046  0.06588481 -0.22924641 -0.17673804
 -0.27901733  0.00500693  0.00457886 -0.4479205 ]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.14369473 0.1631666  0.11297126 0.12863237 0.08840764 0.02067311
 0.01768264 0.01007527 0.00896113 0.00479655]  taking action:  1
Leaf selection - depth:  4
Leaf selection - action scores:  [0.56862867 0.365456   0.1522146  0.0070088  0.00165178 0.00165178
 0.00128641 0.00095598 0.00076217 0.00062695]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [8.2898247e-01 5.8442071e-02 5.7865488e-03 4.1678948e-03 1.5574284e-03
 7.5903005e-04 7.0198794e-04 4.6037495e-04 2.8809530e-04 1.8028542e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [9.4168085e-01 2.9022992e-01 5.7149667e-02 3.6898598e-02 7.6144561e-03
 4.4763079e-03 2.1815780e-03 2.1646009e-03 2.0019284e-03 4.7549972e-04]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.9499916e+00 1.5692225e-03 1.5504776e-05 1.0573338e-05 9.3309391e-06
 6.1193787e-06 2.3226544e-06 2.2336746e-06 1.3442491e-06 1.1588153e-06]  taking action:  0
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  718

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    assign sum = in1 + in2 + cin;
    assign cout = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  10.855626  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  94.0
Iteration TIME (sec):  11.479088041999603
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01965531 -0.02463225 -0.49766365 -0.04831719 -0.49869049 -0.04884342
 -0.25218109 -0.04970985 -0.04972314 -0.04978937]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01694466  0.01125652  0.01743077  0.01685948  0.01386097 -0.01099584
  0.0025345  -0.4557615  -0.02274546 -0.47704938]  taking action:  2
Leaf selection - depth:  2
Leaf selection - action scores:  [4.6520507e-01 1.5760370e-02 7.8019481e-03 4.9592205e-03 4.8066415e-03
 4.8066415e-03 4.9488049e-04 4.7221832e-04 3.2455055e-04 3.2455055e-04]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.46543452 0.1218219  0.05158263 0.0276102  0.02253478 0.01560939
 0.01388328 0.0125425  0.00924826 0.00910488]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.34608835 0.33744326 0.16733597 0.08040623 0.05273169 0.0093077
 0.00916339 0.00453621 0.00443113 0.00406623]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.0726933  0.03744537 0.02288989 0.01421266 0.01254263 0.01206213
 0.00543683 0.00319614 0.00275525 0.00267048]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.8423026e+00 4.1993778e-02 3.4814067e-02 1.4066153e-02 6.6443807e-03
 3.3410043e-03 3.1880087e-03 2.8577126e-03 1.5537114e-03 7.8125513e-04]  taking action:  0
Adding child.
Leaf selection - depth:  7
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29896

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
    
    wire [31:0] sum_wire;
    wire cout_wire;
    
    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
    
    assign sum = sum_wire;
    assign cout = cout_wire;
    
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.516665  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  95.0
Iteration TIME (sec):  22.08466687500004
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01990134 -0.02449908 -0.49765139 -0.04830836 -0.49868361 -0.04883735
 -0.24956785 -0.04970832 -0.04972168 -0.04978827]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01799539  0.01186468  0.0049431   0.01747555  0.01439467 -0.01061143
  0.00285003 -0.4554958  -0.02258176 -0.47691154]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08485998  0.07587717  0.08174964  0.06706135 -0.22649756 -0.17548662
 -0.2767738   0.00556539  0.00513298 -0.44739175]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.14884117 0.12987112 0.11739472 0.13165942 0.0904881  0.0211596
 0.01809876 0.01031236 0.00917201 0.00490942]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.33318263 0.08371884 0.04623393 0.02893246 0.02513695 0.02474724
 0.0129394  0.00841983 0.00676552 0.00616008]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.357531   0.12710162 0.08335528 0.03641522 0.01979861 0.01011214
 0.00906447 0.00892393 0.00441767 0.00225632]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.3756612  0.27829063 0.11365206 0.064757   0.01255372 0.00307642
 0.00289003 0.00267284 0.00090939 0.00069725]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.7159576e-01 1.4829478e-03 3.7494791e-04 5.9325372e-05 3.8303344e-05
 2.5715646e-05 1.6997004e-05 1.2052680e-05 1.0228978e-05 3.7925442e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.2218586e-01 1.5319029e-02 1.5649372e-03 6.4224890e-04 2.8057778e-04
 8.4905463e-05 4.4393852e-05 2.3948687e-05 1.7936740e-05 1.6459675e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.95909894e-01 5.97424456e-04 4.46510567e-05 1.84684795e-05
 1.23026584e-05 1.06887355e-05 1.01198912e-05 9.50675803e-06
 7.40387077e-06 5.81136464e-06]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.17256969 0.1576891  0.22939363 0.19468385 0.12183002 0.11444873
 0.11006426 0.0963755  0.08052474 0.07623929]  taking action:  2
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29936

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] carry;
    wire [31:0] sum_wire;

    assign carry[0] = cin;
    assign sum_wire[0] = in1[0] ^ in2[0] ^ carry[0];

    genvar i;
    generate
        for(i = 1; i < 32; i = i + 1) begin
            assign carry[i] = (in1[i-1] & in2[i-1]) | (in1[i-1] & carry[i-1]) | (in2[i-1] & carry[i-1]);
            assign sum_wire[i] = in1[i] ^ in2[i] ^ carry[i];
        end
    endgenerate

    assign sum = sum_wire;
    assign cout = carry[31];

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 passed\nTest 4 passed\nTest 5 passed\nTest 6 passed\nTest 7 passed\nTest 8 passed\nTest 9 passed\nTest 10 passed\nall tests passed\n'

All testbench tests passed!
LLM generates return in:  43.441029  seconds
Running getPromptScore: 
adder_32
/mnt/shared-scratch/Rajendran_J/matthewdelorenzo/research/mcts_old/verigen16b_ppo_1_dump/1862313_adder_32/synth_script.sh
Running bash in x seconds:  0.714175

Currently displaying area/delay scores for  adder_32  module.
Area of the chip design is:  288.344
Delay value for the chip design is:  1209.61
Product:  348783.78583999997
Score (1/chip area):  0.15436016161170477
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  96.0
Iteration TIME (sec):  43.90308533499956
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01715277 -0.02436661 -0.49763919 -0.04829957 -0.49867677 -0.04883131
 -0.24696818 -0.04970681 -0.04972024 -0.04978717]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02169321  0.01246923  0.00549997  0.01808796  0.0149252  -0.0102293
  0.00316368 -0.4552317  -0.02241904 -0.4767745 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08942487  0.07752772  0.08339228  0.06822617 -0.22377607 -0.17424765
 -0.27455258  0.00611829  0.00568157 -0.44686827]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.1539095  0.1340742  0.12171873 0.13461843 0.09252179 0.02163515
 0.01850552 0.01054413 0.00937814 0.00501976]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.33347407 0.08713733 0.0481218  0.03011386 0.02616337 0.02575774
 0.01346775 0.00876363 0.00704178 0.00641161]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.3563432  0.1327533  0.08706174 0.03803446 0.02067898 0.01056179
 0.00946753 0.00932074 0.0046141  0.00235665]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.37116677 0.28943324 0.11919929 0.06791771 0.01316645 0.00322658
 0.00303109 0.0028033  0.00095377 0.00073128]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.61522013e-01 1.57290359e-03 3.97692318e-04 6.29240531e-05
 4.06268300e-05 2.72755606e-05 1.80280440e-05 1.27837975e-05
 1.08494687e-05 4.02260048e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [5.0547475e-01 1.6376730e-02 1.6729883e-03 6.8659295e-04 2.9995025e-04
 9.0767760e-05 4.7459023e-05 2.5602223e-05 1.9175181e-05 1.7596134e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.67448437e-01 6.45292166e-04 4.82286523e-05 1.99482383e-05
 1.32883906e-05 1.15451548e-05 1.09307321e-05 1.02684735e-05
 7.99709505e-06 6.27699183e-06]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.19540367 0.17751202 0.20282415 0.21326546 0.13345811 0.12537229
 0.12056936 0.10557406 0.08821043 0.08351596]  taking action:  3
Adding child.
Leaf selection - depth:  11
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29936

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] s;
    wire c;

    assign s = in1 + in2 + cin;
    assign cout = s[32];
    assign sum = s[31:0];

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 failed\n'

LLM generates return in:  9.808791  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  97.0
Iteration TIME (sec):  10.438895701000547
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01742933 -0.02423482 -0.49762705 -0.04829083 -0.49866997 -0.0488253
 -0.24438188 -0.0497053  -0.0497188  -0.04978607]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02035141  0.01307023  0.00605357  0.01869677  0.01545263 -0.00984941
  0.00347549 -0.4549691  -0.02225728 -0.4766383 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.0829966   0.07916217  0.08501891  0.06937961 -0.22108114 -0.17302077
 -0.27235305  0.0066658   0.00622483 -0.4463499 ]  taking action:  2
Leaf selection - depth:  3
Leaf selection - action scores:  [0.58392143 0.00803787 0.0076101  0.00726161 0.00556767 0.00476228
 0.00468845 0.00211325 0.0020643  0.00159516]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.68060285 0.02167827 0.01466825 0.00961967 0.00574417 0.00539615
 0.00317223 0.00113109 0.00109629 0.00073029]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [8.12265515e-01 8.88273790e-02 1.86192319e-02 9.50977392e-03
 4.09010239e-03 7.92902487e-04 7.10753200e-04 2.34381543e-04
 1.66201396e-04 1.07307686e-04]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [1.1448089e+00 4.2242795e-04 1.1915128e-04 2.5768271e-05 8.3657333e-06
 8.3657333e-06 7.4989953e-06 4.1738194e-06 3.6833824e-06 9.9914428e-07]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [1.9493902e+00 1.5934426e-03 5.3373637e-04 3.5479839e-05 3.4120629e-05
 8.2965489e-06 5.7021293e-06 3.4585159e-06 2.3956441e-06 2.1141484e-06]  taking action:  0
Adding child.
Leaf selection - depth:  8
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29962

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

reg [31:0] sum_reg;
reg cout_reg;

always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
end

assign sum = sum_reg;
assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.037722  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  98.0
Iteration TIME (sec):  21.616532983999605
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01770299 -0.0241037  -0.49761497 -0.04828213 -0.4986632  -0.04881933
 -0.24180875 -0.0497038  -0.04971737 -0.04978498]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01905453  0.01366774  0.00660397  0.01930206  0.015977   -0.00947172
  0.00378551 -0.45470807 -0.02209645 -0.47650287]  taking action:  3
Leaf selection - depth:  2
Leaf selection - action scores:  [0.3635437  0.23477863 0.32963443 0.22304182 0.06802391 0.02748415
 0.00594386 0.00562754 0.00462908 0.00405336]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.5894889  0.17807192 0.12431424 0.01735816 0.0126995  0.01174512
 0.01120727 0.00770264 0.00685087 0.0050122 ]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.45546973 0.24715032 0.3719039  0.07097909 0.04511706 0.01535031
 0.00923798 0.00725097 0.00316771 0.00281742]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [1.8210477  0.03606389 0.01915339 0.01337122 0.01041352 0.00779936
 0.0042737  0.00315123 0.0026536  0.00247343]  taking action:  0
Adding child.
Leaf selection - depth:  6
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);
  
  wire [31:0] sum_wire;
  wire cout_wire;
  
  assign sum_wire = in1 + in2 + cin;
  assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  
  assign sum = sum_wire;
  assign cout = cout_wire;
  
endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  21.856599  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  99.0
Iteration TIME (sec):  22.428223679999974
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.0179738  -0.02397324 -0.49760296 -0.04827348 -0.49865647 -0.04881338
 -0.23924857 -0.04970231 -0.04971594 -0.0497839 ]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.02002285  0.01426183  0.00715121  0.00491589  0.01649836 -0.0090962
  0.00409373 -0.45444852 -0.02193654 -0.4763682 ]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.08444702  0.08078099  0.05996855  0.07052204 -0.21841201 -0.17180562
 -0.27017456  0.00720807  0.00676287 -0.44583648]  taking action:  0
Leaf selection - depth:  3
Leaf selection - action scores:  [0.13999242 0.13818686 0.12594973 0.13751377 0.09451174 0.02210048
 0.01890354 0.01077091 0.00957985 0.00512772]  taking action:  0
Leaf selection - depth:  4
Leaf selection - action scores:  [0.31362465 0.09042668 0.04993835 0.03125062 0.02715101 0.02673007
 0.01397614 0.00909445 0.0073076  0.00665364]  taking action:  0
Leaf selection - depth:  5
Leaf selection - action scores:  [0.3335093  0.13817401 0.09061673 0.03958752 0.02152336 0.01099306
 0.00985411 0.00970134 0.00480251 0.00245288]  taking action:  0
Leaf selection - depth:  6
Leaf selection - action scores:  [0.34133014 0.30007988 0.1244996  0.07093774 0.01375191 0.00337005
 0.00316587 0.00292795 0.00099618 0.0007638 ]  taking action:  0
Leaf selection - depth:  7
Leaf selection - action scores:  [4.2400011e-01 1.6579860e-03 4.1920450e-04 6.6327782e-05 4.2824438e-05
 2.8750967e-05 1.9003228e-05 1.3475306e-05 1.1436344e-05 4.2401930e-06]  taking action:  0
Leaf selection - depth:  8
Leaf selection - action scores:  [4.5924065e-01 1.7370146e-02 1.7744720e-03 7.2824175e-04 3.1814526e-04
 9.6273739e-05 5.0337894e-05 2.7155258e-05 2.0338350e-05 1.8663517e-05]  taking action:  0
Leaf selection - depth:  9
Leaf selection - action scores:  [5.0810397e-01 6.8984635e-04 5.1558600e-05 2.1325563e-05 1.4205887e-05
 1.2342290e-05 1.1685444e-05 1.0977459e-05 8.5492538e-06 6.7103865e-06]  taking action:  0
Leaf selection - depth:  10
Leaf selection - action scores:  [0.21640167 0.19574107 0.21289119 0.06517652 0.14415124 0.13541757
 0.1302298  0.11403303 0.09527815 0.09020755]  taking action:  0
Leaf selection - depth:  11
Leaf selection - action scores:  [0.94372654 0.18199593 0.10369816 0.03138003 0.00878226 0.00864611
 0.00818597 0.00769001 0.00733786 0.0036325 ]  taking action:  0
Leaf selection - depth:  12
Leaf selection - action scores:  [0.6665455  0.30997247 0.24140678 0.13331749 0.07537088 0.04261083
 0.04002917 0.03069143 0.02708509 0.02245433]  taking action:  0
Adding child.
Leaf selection - depth:  13
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29936

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  19.353067  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  100.0
Iteration TIME (sec):  19.939199980000012
ROBUST FINAL VALUE, ITERATION:  1.0
Adding child.
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  18.979372  seconds
Running getPromptScore: 
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  18.965147  seconds
Running getPromptScore: 
MCTS Stage 1 - Selection: finding leaf node.

Leaf selection - depth:  0
Leaf selection - action scores:  [-0.01824179 -0.02384343 -0.497591   -0.04826486 -0.49864977 -0.04880746
 -0.23670117 -0.04970083 -0.04971453 -0.04978282]  taking action:  0
Leaf selection - depth:  1
Leaf selection - action scores:  [ 0.01874523  0.01485256  0.00769535  0.0054395   0.01701678 -0.0087228
  0.00440022 -0.45419043 -0.02177754 -0.47623432]  taking action:  0
Leaf selection - depth:  2
Leaf selection - action scores:  [ 0.07844846  0.08238459  0.06133649  0.07165371 -0.21576795 -0.1706019
 -0.26801652  0.00774524  0.00729587 -0.4453279 ]  taking action:  1
Leaf selection - depth:  3
Leaf selection - action scores:  [0.24110956 0.16845348 0.24532403 0.15897076 0.0632342  0.01649563
 0.01537562 0.01490256 0.00621231 0.00543968]  taking action:  2
Leaf selection - depth:  4
Leaf selection - action scores:  [1.9085864e+00 7.5011444e-03 5.4879552e-03 4.5142681e-03 3.2770075e-03
 3.1026083e-03 2.8471136e-03 1.5359025e-03 1.4886479e-03 1.1684530e-03]  taking action:  0
Adding child.
Leaf selection - depth:  5
Getting LLM token estimates (probs/ids).
MCTS Stage 2 - Expansion: next action:  0  corresponding to state:  29941

MCTS Stage 3 - Rollout: Getting rollout return of leaf.

//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

  reg [31:0] sum_reg;
  reg cout_reg;

  always @(*) begin
    sum_reg = in1 + in2 + cin;
    cout_reg = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);
  end

  assign sum = sum_reg;
  assign cout = cout_reg;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  22.680024  seconds
Running getPromptScore: 
MCTS Stage 4 - Backpropogation: incorporating estimates.

-------------------------------------------------------
MCTS Iteration:  101.0
Iteration TIME (sec):  23.249238312999296
----
 Tree depth: 0
 Node: action=None
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416]]
• Child Action scores:[-0.01850704 -0.02371426 -0.4975791  -0.0482563  -0.4986431  -0.04880157
 -0.23416634 -0.04969935 -0.04971312 -0.04978175]
• Child averaged monte carlo:-0.18770235135674804
• Child probablities:[8.45213830e-01 3.77199491e-03 3.47397581e-04 2.50221114e-04
 1.94714856e-04 1.71974287e-04 1.48043892e-01 4.31435292e-05
 4.11678411e-05 3.13188900e-05]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=101.0,Q=-0.18770235135674804,M=-0.18770235135674804
----
 Tree depth: 1
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13]]
• Child Action scores:[ 0.01750883  0.01543996  0.00823645  0.00596017  0.01753227 -0.0083515
  0.00470498 -0.45393378 -0.02161943 -0.47610116]
• Child averaged monte carlo:-0.1493960698445638
• Child probablities:[0.69574875 0.08053876 0.06676898 0.05711054 0.02827176 0.02036339
 0.00835712 0.0070374  0.00433562 0.00365095]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=89.0,Q=-0.1493960698445638,M=-0.1493960698445638
----
 Tree depth: 1
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416 29871]]
• Child Action scores:[1.8000131e+00 8.5154682e-04 6.6179244e-05 5.8861038e-05 3.3801058e-05
 1.4651671e-05 1.4090377e-05 1.3656860e-05 1.0148917e-05 9.4598299e-06]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.2231989e-01 4.3632937e-04 3.3909993e-05 3.0160174e-05 1.7319533e-05
 7.5074609e-06 7.2198554e-06 6.9977232e-06 5.2002665e-06 4.8471811e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 1
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   259]]
• Child Action scores:[1.7170485e+00 9.6462789e-04 1.3054819e-04 6.6158595e-05 5.4847405e-05
 4.1400996e-05 2.4148987e-05 2.3589573e-05 2.2334159e-05 1.7258501e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[8.7980914e-01 4.9427169e-04 6.6892397e-05 3.3899414e-05 2.8103603e-05
 2.1213713e-05 1.2373849e-05 1.2087208e-05 1.1443939e-05 8.8431907e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 1
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   268]]
• Child Action scores:[1.75534272e+00 1.55141822e-03 1.58487353e-04 5.92223878e-05
 3.50881055e-05 2.04667122e-05 1.98370180e-05 1.79212511e-05
 1.46268985e-05 1.25110500e-05]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[8.9943099e-01 7.9494080e-04 8.1208316e-05 3.0345327e-05 1.7979013e-05
 1.0487066e-05 1.0164413e-05 9.1827815e-06 7.4947675e-06 6.4106148e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 1
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416  1678]]
• Child Action scores:[1.5147144e+00 1.1098582e-03 1.1975224e-04 1.0323288e-04 7.0398710e-05
 5.9281658e-05 5.6126741e-05 5.4399909e-05 4.5809313e-05 4.0743649e-05]
• Child averaged monte carlo:-0.5
• Child probablities:[7.7613389e-01 5.6868710e-04 6.1360595e-05 5.2896135e-05 3.6072033e-05
 3.0375697e-05 2.8759130e-05 2.7874306e-05 2.3472518e-05 2.0876891e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 1
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   462]]
• Child Action scores:[0.487835   0.22686435 0.20981523 0.20335989 0.13760018 0.1252864
 0.12334401 0.07599004 0.07365207 0.06499773]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.2499648  0.11624444 0.10750853 0.10420083 0.07050581 0.06419627
 0.063201   0.03893701 0.03773904 0.03330459]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 1
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12]]
• Child Action scores:[ 0.22517139 -0.02442101  0.09716691  0.04448625  0.01854463  0.01611185
  0.00918026  0.003075    0.00254927  0.00175208]
• Child averaged monte carlo:-0.75
• Child probablities:[0.5254865  0.34462246 0.0352054  0.01611821 0.00671907 0.00583763
 0.00332618 0.00111413 0.00092365 0.00063481]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.75,M=-0.75
----
 Tree depth: 1
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   418]]
• Child Action scores:[1.5195378e+00 1.5701348e-03 1.7343307e-04 6.7917361e-05 4.7413963e-05
 4.7413963e-05 4.7413963e-05 4.4541295e-05 3.3359891e-05 3.2587108e-05]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.7860540e-01 8.0453110e-04 8.8866451e-05 3.4800600e-05 2.4294735e-05
 2.4294735e-05 2.4294735e-05 2.2822791e-05 1.7093482e-05 1.6697511e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 1
 Node: action=8
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   308]]
• Child Action scores:[1.6824155e+00 1.6588273e-03 1.1738141e-04 8.5209773e-05 4.7798352e-05
 4.2512733e-05 4.0250245e-05 3.0860934e-05 2.2933898e-05 1.6010441e-05]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[8.6206335e-01 8.4997684e-04 6.0145790e-05 4.3661166e-05 2.4491694e-05
 2.1783364e-05 2.0624073e-05 1.5813026e-05 1.1751243e-05 8.2036895e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 1
 Node: action=9
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416   539]]
• Child Action scores:[1.5502388e+00 1.5285038e-03 1.3460670e-04 7.6696575e-05 5.3962784e-05
 5.0693336e-05 4.3700391e-05 3.6513047e-05 3.5114248e-05 3.3245506e-05]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.9433650e-01 7.8319956e-04 6.8971960e-05 3.9299033e-05 2.7650325e-05
 2.5975074e-05 2.2391914e-05 1.8709146e-05 1.7992408e-05 1.7034870e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13]]
• Child Action scores:[ 0.07981507  0.06724859  0.06269184  0.07277498 -0.21314824 -0.16940926
 -0.26587838  0.00827747  0.00782396 -0.444824  ]
• Child averaged monte carlo:-0.14810250022194602
• Child probablities:[0.36553523 0.16998968 0.10150547 0.07197815 0.05605664 0.05104015
 0.0457521  0.0113886  0.01129997 0.01078251]
• Child visitation:[1 1 1 1 1 1 1 1 1 1]
• N=54.0,Q=-0.14810250022194602,M=-0.14810250022194602
----
 Tree depth: 2
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678]]
• Child Action scores:[0.2628278  0.2333892  0.19813165 0.21459056 0.09788868 0.06030746
 0.0170105  0.01432428 0.01056206 0.01031739]
• Child averaged monte carlo:-0.09000000953674317
• Child probablities:[0.30965376 0.2062739  0.18203606 0.12126216 0.02243125 0.01381949
 0.00389797 0.00328242 0.0024203  0.00236424]
• Child visitation:[1 1 1 1 0 0 0 0 0 0]
• N=9.0,Q=-0.09000000953674317,M=-0.09000000953674317
----
 Tree depth: 2
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268]]
• Child Action scores:[4.2379591e-01 1.6716396e-02 8.2752155e-03 5.2600470e-03 5.0982130e-03
 5.0982130e-03 5.2490004e-04 5.0086313e-04 3.4423784e-04 3.4423784e-04]
• Child averaged monte carlo:-0.08888889683617486
• Child probablities:[9.88011420e-01 4.03777696e-03 1.99884432e-03 1.27054285e-03
 1.23145245e-03 1.23145245e-03 1.26787447e-04 1.20981436e-04
 8.31492362e-05 8.31492362e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=8.0,Q=-0.08888889683617486,M=-0.08888889683617486
----
 Tree depth: 2
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259]]
• Child Action scores:[0.31180674 0.25444114 0.352394   0.23844174 0.07272062 0.02938179
 0.00635426 0.00601609 0.0049487  0.00433323]
• Child averaged monte carlo:-0.08750000596046448
• Child probablities:[0.6074049  0.15599449 0.09028268 0.06108832 0.01863088 0.00752756
 0.00162795 0.00154131 0.00126785 0.00111016]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=7.0,Q=-0.08750000596046448,M=-0.08750000596046448
----
 Tree depth: 2
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871]]
• Child Action scores:[0.34326512 0.22454329 0.49994904 0.43436325 0.06872625 0.04040208
 0.0142937  0.01291328 0.01062217 0.00952166]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[0.28497472 0.19894442 0.18114096 0.15737799 0.02490081 0.01463843
 0.00517888 0.00467872 0.00384861 0.00344988]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 2
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462]]
• Child Action scores:[0.7480413  0.07496842 0.06412388 0.05152499 0.02049523 0.01808697
 0.01753049 0.01672772 0.0159617  0.01386776]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[0.88555205 0.02716247 0.02323329 0.01866847 0.00742581 0.00655325
 0.00635163 0.00606077 0.00578322 0.00502455]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 2
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 22376]]
• Child Action scores:[1.8356014  0.02659578 0.01539246 0.01161883 0.00836873 0.0079855
 0.00354354 0.00335496 0.00300737 0.00284732]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.9405552  0.01362758 0.00788704 0.00595345 0.00428811 0.00409174
 0.0018157  0.00171907 0.00154096 0.00145895]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 2
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    12]]
• Child Action scores:[0.69533724 0.6331118  0.1900946  0.18138957 0.07561442 0.02675134
 0.01334674 0.01273555 0.00882166 0.00650468]
• Child averaged monte carlo:-0.5
• Child probablities:[0.35628816 0.32440406 0.09740376 0.09294333 0.03874454 0.01370728
 0.00683882 0.00652565 0.00452018 0.00333297]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=8
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1727]]
• Child Action scores:[1.8981947e+00 6.2822052e-03 5.8556590e-03 4.7792499e-03 4.3856855e-03
 4.2176726e-03 3.6931175e-03 2.5382400e-03 2.3659002e-03 1.5395207e-03]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.7262776e-01 3.2189782e-03 3.0004175e-03 2.4488696e-03 2.2472087e-03
 2.1611196e-03 1.8923394e-03 1.3005846e-03 1.2122783e-03 7.8884454e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 2
 Node: action=9
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 21936]]
• Child Action scores:[1.7604581e+00 1.0408463e-01 4.4072207e-02 2.3224421e-02 1.1143199e-02
 2.9991516e-03 2.2816339e-03 4.3545745e-04 3.7538781e-04 3.2870055e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.02052045e-01 5.33325709e-02 2.25824323e-02 1.19001055e-02
 5.70973288e-03 1.53675396e-03 1.16910052e-03 2.23126743e-04
 1.92347288e-04 1.68424915e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12    13]]
• Child Action scores:[0.9515341  0.39665845 0.15055458 0.14143291 0.12097398 0.05452725
 0.05122361 0.01107788 0.00947541 0.00499319]
• Child averaged monte carlo:-0.5
• Child probablities:[0.48756248 0.20324628 0.07714359 0.07246969 0.06198661 0.02793956
 0.02624678 0.00567627 0.00485517 0.00255849]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 2
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    12    12]]
• Child Action scores:[1.3638651  0.26029822 0.10353948 0.05206292 0.02577301 0.02498006
 0.02204483 0.00786033 0.00298344 0.00298344]
• Child averaged monte carlo:-0.5
• Child probablities:[0.6988393  0.13337582 0.05305324 0.02667684 0.01320599 0.01279969
 0.01129569 0.0040276  0.0015287  0.0015287 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678]]
• Child Action scores:[0.12784976 0.1422147  0.13009347 0.14034942 0.09646064 0.02255621
 0.01929334 0.01099302 0.00977739 0.00523346]
• Child averaged monte carlo:-0.06982560634613037
• Child probablities:[0.41498348 0.2022468  0.11889476 0.02034049 0.0139798  0.00326902
 0.00279614 0.00159319 0.00141701 0.00075847]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=24.0,Q=-0.06982560634613037,M=-0.06982560634613037
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871]]
• Child Action scores:[0.2567826  0.18033619 0.13982564 0.16672996 0.06632059 0.01730076
 0.01612608 0.01562994 0.00651553 0.00570519]
• Child averaged monte carlo:-0.09090910174629906
• Child probablities:[0.36791217 0.22315001 0.13534734 0.03642824 0.01449015 0.00377998
 0.00352333 0.00341493 0.00142355 0.00124651]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=10.0,Q=-0.09090910174629906,M=-0.09090910174629906
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727]]
• Child Action scores:[0.5142643  0.00868189 0.00821985 0.00784344 0.00601377 0.00514385
 0.0050641  0.00228257 0.00222969 0.00172297]
• Child averaged monte carlo:-0.08571428912026542
• Child probablities:[9.8204631e-01 2.3778602e-03 2.2513126e-03 2.1482175e-03 1.6470955e-03
 1.4088355e-03 1.3869936e-03 6.2516693e-04 6.1068498e-04 4.7190080e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=6.0,Q=-0.08571428912026542,M=-0.08571428912026542
----
 Tree depth: 3
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 16645]]
• Child Action scores:[0.54159    0.43803728 0.10668426 0.00822661 0.00597188 0.00212934
 0.00110469 0.00085364 0.00071883 0.00071324]
• Child averaged monte carlo:-0.050000001986821495
• Child probablities:[7.2962844e-01 2.2958776e-01 3.1560630e-02 2.4336942e-03 1.7666727e-03
 6.2992651e-04 3.2680159e-04 2.5253266e-04 2.1265385e-04 2.1099896e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=5.0,Q=-0.050000001986821495,M=-0.050000001986821495
----
 Tree depth: 3
 Node: action=4
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 22376]]
• Child Action scores:[1.8532997  0.02562255 0.01329281 0.00972522 0.00864979 0.00745659
 0.00259714 0.00245892 0.00203852 0.00187065]
• Child averaged monte carlo:-0.5
• Child probablities:[0.94962376 0.0131289  0.00681118 0.00498317 0.00443212 0.00382073
 0.00133076 0.00125994 0.00104453 0.00095851]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=5
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13   259]]
• Child Action scores:[ 0.37903336 -0.09061348  0.25364405  0.15626556  0.05931172  0.050732
  0.01080147  0.00556012  0.00361804  0.00353423]
• Child averaged monte carlo:-0.30000001192092896
• Child probablities:[0.31089374 0.2966569  0.09190001 0.05661796 0.02148975 0.01838116
 0.00391357 0.00201454 0.00131088 0.00128052]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.30000001192092896,M=-0.30000001192092896
----
 Tree depth: 3
 Node: action=6
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 21936]]
• Child Action scores:[1.7823868e+00 1.0538113e-01 4.9778525e-02 7.8761065e-03 2.1871156e-03
 9.1172545e-04 6.5669121e-04 5.9792417e-04 5.2766624e-04 1.8814518e-04]
• Child averaged monte carlo:-0.5
• Child probablities:[9.1328824e-01 5.3996891e-02 2.5506327e-02 4.0356871e-03 1.1206698e-03
 4.6716467e-04 3.3648609e-04 3.0637407e-04 2.7037418e-04 9.6404874e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=7
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13   268]]
• Child Action scores:[1.029162   0.36126986 0.16283709 0.10032102 0.09278177 0.01198164
 0.00985583 0.00715456 0.00348685 0.00261153]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.52733874 0.18511331 0.08343711 0.05140411 0.04754103 0.00613935
 0.00505009 0.00366597 0.00178665 0.00133814]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=8
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13    13]]
• Child Action scores:[0.6530248  0.17303436 0.17303436 0.14122652 0.13903698 0.10998732
 0.08565821 0.07618599 0.03952477 0.02780915]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.33460742 0.08866215 0.08866215 0.07236393 0.07124203 0.05635709
 0.04389094 0.03903741 0.02025234 0.0142493 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=9
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13    12]]
• Child Action scores:[0.6336302  0.3610316  0.29009706 0.13075699 0.05580023 0.0383509
 0.02917583 0.00939829 0.0073194  0.00720592]
• Child averaged monte carlo:-0.5
• Child probablities:[0.32466972 0.18499123 0.14864464 0.06699938 0.02859183 0.01965086
 0.01494959 0.00481565 0.00375043 0.00369229]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  8014]]
• Child Action scores:[0.7905759  0.04459607 0.02683839 0.0162783  0.01590122 0.01553287
 0.0066806  0.00545255 0.00508233 0.00424645]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[0.9317854  0.016158   0.00972405 0.00589794 0.00576131 0.00562785
 0.00242051 0.00197556 0.00184143 0.00153857]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  3566]]
• Child Action scores:[8.3404374e-01 4.8336822e-01 1.1845447e-01 6.3767191e-03 1.5384551e-03
 1.4680040e-03 9.7790151e-04 6.3138065e-04 6.2646717e-04 5.3584581e-04]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[7.3971432e-01 2.0222664e-01 4.9557768e-02 2.6678264e-03 6.4364308e-04
 6.1416847e-04 4.0912442e-04 2.6415056e-04 2.6209492e-04 2.2418168e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 3
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  1072]]
• Child Action scores:[1.1135924  0.01240425 0.00746501 0.00559104 0.00485758 0.00481977
 0.0043543  0.00262047 0.00167873 0.00145851]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.7362363e-01 5.1895645e-03 3.1231351e-03 2.3391203e-03 2.0322627e-03
 2.0164477e-03 1.8217086e-03 1.0963236e-03 7.0233119e-04 6.1019592e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 3
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678    13]]
• Child Action scores:[1.6364359  0.17247906 0.07189997 0.01404777 0.0059482  0.0054159
 0.00524927 0.00504817 0.00357969 0.00323398]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.83850354 0.08837762 0.03684127 0.00719802 0.00304783 0.00277508
 0.0026897  0.00258666 0.00183422 0.00165708]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13]]
• Child Action scores:[0.41713506 0.13023308 0.05514415 0.02951654 0.0240907  0.01668714
 0.01484185 0.01340849 0.0098868  0.00973352]
• Child averaged monte carlo:-0.08750000596046448
• Child probablities:[0.9018033  0.03336547 0.01412783 0.00756208 0.00617199 0.00427521
 0.00380245 0.00343523 0.00253298 0.00249371]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=7.0,Q=-0.08750000596046448,M=-0.08750000596046448
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259    13]]
• Child Action scores:[0.50232893 0.19506802 0.13617943 0.01901491 0.0139116  0.01286613
 0.01227695 0.00843781 0.00750475 0.00549059]
• Child averaged monte carlo:-0.08333333333333333
• Child probablities:[0.8613579  0.05770738 0.04028625 0.00562522 0.0041155  0.00380621
 0.00363192 0.00249618 0.00222015 0.00162429]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=5.0,Q=-0.08333333333333333,M=-0.08333333333333333
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259  3566]]
• Child Action scores:[1.4619973e+00 3.8739073e-01 8.9182399e-02 4.1711163e-03 1.3227941e-03
 1.0796331e-03 4.4308053e-04 4.1299645e-04 3.6732669e-04 3.6446814e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.4912184e-01 1.9849755e-01 4.5696724e-02 2.1372642e-03 6.7779468e-04
 5.5319990e-04 2.2703278e-04 2.1161782e-04 1.8821680e-04 1.8675209e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871  8014]]
• Child Action scores:[1.8152207  0.03324693 0.02146583 0.01223086 0.01006083 0.00990485
 0.00498047 0.00400192 0.00306838 0.0028157 ]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.93011224 0.0170356  0.01099901 0.00626705 0.00515513 0.00507521
 0.00255198 0.00205057 0.00157223 0.00144276]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13 29871  1072]]
• Child Action scores:[1.9072845e+00 6.7720972e-03 5.9298459e-03 4.6543893e-03 4.0755197e-03
 3.5408728e-03 3.2240015e-03 1.4418627e-03 1.3335050e-03 1.1768139e-03]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.7728533e-01 3.4699969e-03 3.0384306e-03 2.3848915e-03 2.0882809e-03
 1.8143299e-03 1.6519661e-03 7.3880499e-04 6.8328291e-04 6.0299499e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 3
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462   539]]
• Child Action scores:[1.1447694e+00 5.3398137e-04 5.3703920e-05 5.9785225e-06 2.8020772e-06
 2.7586350e-06 2.7586350e-06 1.9869701e-06 1.8812254e-06 1.7263096e-06]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.9971074e-01 2.2340164e-04 2.2468095e-05 2.5012330e-06 1.1723043e-06
 1.1541294e-06 1.1541294e-06 8.3128822e-07 7.8704784e-07 7.2223571e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014]]
• Child Action scores:[0.29617083 0.0936005  0.05169111 0.03234747 0.02810397 0.02766825
 0.01446668 0.00941365 0.00756408 0.00688717]
• Child averaged monte carlo:-0.06304266452789306
• Child probablities:[0.93401235 0.01751271 0.00967144 0.00605223 0.00525827 0.00517675
 0.00270673 0.0017613  0.00141524 0.00128859]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=14.0,Q=-0.06304266452789306,M=-0.06304266452789306
----
 Tree depth: 4
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  3566]]
• Child Action scores:[0.4761588  0.39073145 0.16441056 0.00757037 0.00178413 0.00178413
 0.00138948 0.00103257 0.00082324 0.00067718]
• Child averaged monte carlo:-0.05714285799435207
• Child probablities:[7.6162410e-01 1.8664402e-01 4.5029964e-02 2.0734277e-03 4.8864976e-04
 4.8864976e-04 3.8056081e-04 2.8280876e-04 2.2547483e-04 1.8547050e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=6.0,Q=-0.05714285799435207,M=-0.05714285799435207
----
 Tree depth: 4
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  1072]]
• Child Action scores:[0.8346168  0.01176268 0.00741863 0.00547016 0.00464246 0.00432725
 0.00314125 0.0017759  0.00140485 0.00139392]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[9.7965586e-01 4.2618415e-03 2.6879099e-03 1.9819404e-03 1.6820509e-03
 1.5678440e-03 1.1381326e-03 6.4344186e-04 5.0900440e-04 5.0504331e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014]]
• Child Action scores:[0.6438519  0.05562524 0.03024292 0.01983379 0.0170978  0.01439779
 0.00741135 0.00600189 0.00453047 0.00412504]
• Child averaged monte carlo:-0.0800000011920929
• Child probablities:[0.93182707 0.01802635 0.00980076 0.00642749 0.00554085 0.00466586
 0.00240178 0.00194502 0.00146818 0.00133679]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.0800000011920929,M=-0.0800000011920929
----
 Tree depth: 4
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  3566]]
• Child Action scores:[6.1274934e-01 6.0250497e-01 1.0147840e-01 4.7092722e-03 1.6274811e-03
 1.3704763e-03 1.0507808e-03 7.3931663e-04 6.5756182e-04 4.9635360e-04]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[7.3849571e-01 2.1829891e-01 3.6767535e-02 1.7062580e-03 5.8966706e-04
 4.9654942e-04 3.8071768e-04 2.6786834e-04 2.3824704e-04 1.7983827e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 4
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  1072]]
• Child Action scores:[1.1187657  0.00918699 0.00672135 0.00552883 0.0040135  0.0037999
 0.00348699 0.00188109 0.00182321 0.00143106]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.7795242e-01 3.8435580e-03 2.8120074e-03 2.3130940e-03 1.6791262e-03
 1.5897647e-03 1.4588502e-03 7.8699063e-04 7.6277752e-04 5.9871090e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727   518]]
• Child Action scores:[0.5821772  0.02374735 0.01606826 0.01053782 0.00629242 0.00591118
 0.00347501 0.00123905 0.00120093 0.00079999]
• Child averaged monte carlo:-0.08333333333333333
• Child probablities:[9.7946632e-01 7.0252288e-03 4.7535081e-03 3.1174268e-03 1.8615004e-03
 1.7487179e-03 1.0280182e-03 3.6655119e-04 3.5527357e-04 2.3666323e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=5.0,Q=-0.08333333333333333,M=-0.08333333333333333
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 16645  2533]]
• Child Action scores:[8.3188272e-01 5.0939769e-02 5.5394433e-03 4.1813911e-03 9.7776984e-04
 7.4968213e-04 4.6913908e-04 4.5470518e-04 1.7806509e-04 1.5714190e-04]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[9.7668409e-01 1.8456439e-02 2.0070446e-03 1.5149968e-03 3.5426443e-04
 2.7162395e-04 1.6997792e-04 1.6474826e-04 6.4516338e-05 5.6935471e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 4
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 16645   426]]
• Child Action scores:[1.1983893e+00 6.8282163e-01 2.3183046e-02 1.2312423e-02 1.1566451e-02
 3.6680903e-03 3.4190360e-03 1.8017055e-03 1.6925457e-03 1.0106652e-03]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[6.1405015e-01 3.4987521e-01 1.1878905e-02 6.3088392e-03 5.9266058e-03
 1.8795156e-03 1.7519011e-03 9.2318706e-04 8.6725404e-04 5.1786104e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13   259  3566]]
• Child Action scores:[1.4850271e+00 3.6965251e-01 8.2480617e-02 4.1711358e-03 1.5344750e-03
 1.0546283e-03 7.8988011e-04 6.8091915e-04 4.1623754e-04 4.0659538e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.6092225e-01 1.8940854e-01 4.2262755e-02 2.1372742e-03 7.8625919e-04
 5.4038753e-04 4.0473157e-04 3.4890039e-04 2.1327854e-04 2.0833794e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 4
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13   259  8014]]
• Child Action scores:[1.8214662  0.0323349  0.02292888 0.01306448 0.01083083 0.00721489
 0.00430821 0.00357163 0.00269601 0.00221768]
• Child averaged monte carlo:-0.5
• Child probablities:[0.9333124  0.01656828 0.01174867 0.00669419 0.00554968 0.00369688
 0.00220751 0.00183009 0.00138142 0.00113633]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.5,M=-0.5
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  8014   518]]
• Child Action scores:[1.0575465  0.06283735 0.05811504 0.02385037 0.01126612 0.00612528
 0.00549067 0.00317775 0.00280436 0.00134555]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.2672783e-01 2.6289247e-02 2.4313577e-02 9.9782730e-03 4.7134017e-03
 2.5626321e-03 2.2971288e-03 1.3294761e-03 1.1732585e-03 5.6293554e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  3566  2533]]
• Child Action scores:[1.9000311e+00 4.0685654e-02 4.6366891e-03 3.2369308e-03 8.8492758e-04
 5.6249421e-04 4.0514939e-04 3.7470192e-04 1.5619899e-04 1.2260200e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.7356874e-01 2.0847175e-02 2.3758218e-03 1.6585911e-03 4.5343355e-04
 2.8821992e-04 2.0759701e-04 1.9199584e-04 8.0035774e-05 6.2820800e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  1072   518]]
• Child Action scores:[1.9012538e+00 1.6708104e-02 1.3851504e-02 9.2270914e-03 3.0906883e-03
 2.8141036e-03 2.7704749e-03 6.7893410e-04 6.5804546e-04 4.8901793e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.7419524e-01 8.5611688e-03 7.0974580e-03 4.7279266e-03 1.5836570e-03
 1.4419360e-03 1.4195809e-03 3.4788327e-04 3.3718001e-04 2.5057094e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678]]
• Child Action scores:[0.2593698  0.36848658 0.1847497  0.08684865 0.05695674 0.01005346
 0.0098976  0.00489967 0.00478616 0.00439203]
• Child averaged monte carlo:-0.08571428912026542
• Child probablities:[0.36631855 0.22923632 0.12858991 0.02378674 0.01559973 0.00275352
 0.00271083 0.00134196 0.00131087 0.00120292]
• Child visitation:[1 1 1 0 0 0 0 0 0 0]
• N=6.0,Q=-0.08571428912026542,M=-0.08571428912026542
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259    13 29871]]
• Child Action scores:[0.31008822 0.28222412 0.41580117 0.07935703 0.0504424  0.01716216
 0.01032837 0.00810683 0.00354161 0.00314998]
• Child averaged monte carlo:-0.0800000011920929
• Child probablities:[0.3662824  0.21532631 0.13474779 0.02571706 0.01634676 0.0055617
 0.00334709 0.00262716 0.00114772 0.00102081]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.0800000011920929,M=-0.0800000011920929
----
 Tree depth: 4
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   462   539    13]]
• Child Action scores:[0.67413473 0.31350178 0.15519463 0.15278856 0.12666616 0.08051391
 0.07803676 0.05280231 0.05117776 0.03104088]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.3454241  0.16063713 0.07952114 0.07828828 0.06490326 0.04125502
 0.03998574 0.0270557  0.02622329 0.01590523]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518]]
• Child Action scores:[0.31365842 0.14338994 0.09403742 0.04108191 0.02233585 0.01140803
 0.0102261  0.01006755 0.0049838  0.00254548]
• Child averaged monte carlo:-0.06040285314832415
• Child probablities:[9.3409735e-01 2.7769983e-02 1.8212000e-02 7.9562329e-03 4.3257293e-03
 2.2093661e-03 1.9804630e-03 1.9497587e-03 9.6520060e-04 4.9297622e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=13.0,Q=-0.06040285314832415,M=-0.06040285314832415
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  3566  2533]]
• Child Action scores:[6.7602462e-01 6.5340221e-02 6.4695580e-03 4.6598478e-03 1.7412578e-03
 8.4862136e-04 7.8484637e-04 5.1471486e-04 3.2210033e-04 2.0156521e-04]
• Child averaged monte carlo:-0.0800000011920929
• Child probablities:[9.7353166e-01 2.1174664e-02 2.0965757e-03 1.5101068e-03 5.6428567e-04
 2.7501088e-04 2.5434347e-04 1.6680252e-04 1.0438236e-04 6.5320804e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.0800000011920929,M=-0.0800000011920929
----
 Tree depth: 5
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  3566   426]]
• Child Action scores:[1.1615430e+00 7.4994856e-01 1.8055351e-02 6.8530380e-03 4.9360585e-03
 1.9329881e-03 1.5653817e-03 1.0758700e-03 6.8386452e-04 4.9256918e-04]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[5.9517026e-01 3.8427079e-01 9.2514940e-03 3.5114707e-03 2.5292176e-03
 9.9045574e-04 8.0209563e-04 5.5127172e-04 3.5040959e-04 2.5239057e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  1072   518]]
• Child Action scores:[1.1159900e+00 2.3587644e-02 1.2824379e-02 9.0938453e-03 4.0353700e-03
 3.7321071e-03 2.6881360e-03 8.0712471e-04 7.2350196e-04 6.6912983e-04]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.7562987e-01 9.8683564e-03 5.3653321e-03 3.8045899e-03 1.6882768e-03
 1.5614007e-03 1.1246348e-03 3.3767655e-04 3.0269133e-04 2.7994369e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518]]
• Child Action scores:[0.790817   0.07297482 0.05595173 0.02406454 0.01229097 0.00733927
 0.00599014 0.00431453 0.0028741  0.00161222]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[9.3204749e-01 2.6440153e-02 2.0272367e-02 8.7190364e-03 4.4532483e-03
 2.6591558e-03 2.1703397e-03 1.5632372e-03 1.0413404e-03 5.8413896e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  3566  2533]]
• Child Action scores:[1.1193805e+00 3.9002527e-02 4.8060543e-03 4.0471042e-03 1.1963217e-03
 5.3086446e-04 5.3086446e-04 4.4010213e-04 2.0466649e-04 1.2908153e-04]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.7846675e-01 1.6317477e-02 2.0107077e-03 1.6931859e-03 5.0050480e-04
 2.2209763e-04 2.2209763e-04 1.8412541e-04 8.5626270e-05 5.4003809e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  1072   518]]
• Child Action scores:[1.9031674e+00 1.8083951e-02 1.0466187e-02 8.0247046e-03 3.7906021e-03
 3.5057336e-03 2.4094530e-03 7.9455326e-04 7.2344905e-04 5.6342268e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.7517574e-01 9.2661474e-03 5.3628348e-03 4.1118283e-03 1.9422901e-03
 1.7963246e-03 1.2345946e-03 4.0712609e-04 3.7069255e-04 2.8869565e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727   518 29941]]
• Child Action scores:[6.62007034e-01 9.93120298e-02 2.08169352e-02 1.06322495e-02
 4.57287347e-03 8.86491907e-04 7.94646214e-04 2.62046524e-04
 1.85818804e-04 1.19973636e-04]
• Child averaged monte carlo:-0.0800000011920929
• Child probablities:[9.5536107e-01 3.2183833e-02 6.7460989e-03 3.4455701e-03 1.4819212e-03
 2.8728350e-04 2.5751928e-04 8.4920852e-05 6.0217899e-05 3.8879596e-05]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=4.0,Q=-0.0800000011920929,M=-0.0800000011920929
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 16645  2533   353]]
• Child Action scores:[9.3159622e-01 2.9639772e-01 7.2635390e-02 3.5399657e-02 7.3051327e-03
 3.1665403e-03 2.9285715e-03 2.8384686e-03 1.9971121e-03 3.9633902e-04]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[8.21340322e-01 1.24003835e-01 3.03884503e-02 1.48101458e-02
 3.05624655e-03 1.32478471e-03 1.22522574e-03 1.18752941e-03
 8.35531275e-04 1.65816251e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13  1678  8014   518 29941]]
• Child Action scores:[1.5196129e+00 3.2863933e-01 4.5888338e-02 4.4476502e-02 5.1485286e-03
 2.2143545e-03 2.0161925e-03 1.8940379e-03 6.8597501e-04 4.6415391e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.7864391e-01 1.6839355e-01 2.3513010e-02 2.2789590e-02 2.6380864e-03
 1.1346268e-03 1.0330895e-03 9.7049784e-04 3.5149101e-04 2.3783071e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678  8014]]
• Child Action scores:[0.797583   0.04323818 0.02643097 0.01641136 0.01448298 0.01392814
 0.00627791 0.00369059 0.00318149 0.0030836 ]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[0.9394018  0.01566601 0.00957644 0.00594615 0.00524746 0.00504643
 0.0022746  0.00133717 0.00115271 0.00111725]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 5
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678  3566]]
• Child Action scores:[1.4855226e+00 3.7559894e-01 7.7509224e-02 4.1725277e-03 1.0467703e-03
 9.2377147e-04 7.7789358e-04 5.8718486e-04 3.9421726e-04 3.3196423e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.6117617e-01 1.9245547e-01 3.9715432e-02 2.1379874e-03 5.3636113e-04
 4.7333702e-04 3.9858973e-04 3.0087130e-04 2.0199543e-04 1.7009721e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 5
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678  1072]]
• Child Action scores:[1.9037536e+00 8.0901338e-03 6.8660080e-03 4.7932463e-03 4.6822103e-03
 3.8514812e-03 2.9761943e-03 1.8770621e-03 1.2214276e-03 9.9690026e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.7547615e-01 4.1453540e-03 3.5181164e-03 2.4560413e-03 2.3991468e-03
 1.9734844e-03 1.5249907e-03 9.6179952e-04 6.2585488e-04 5.1080791e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 5
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259    13 29871  8014]]
• Child Action scores:[1.0651594  0.04416907 0.02345802 0.01637634 0.0127539  0.00955223
 0.00523419 0.00385945 0.00324998 0.00302932]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[0.9330979  0.018479   0.00981413 0.00685136 0.00533585 0.00399636
 0.00218983 0.00161468 0.00135969 0.00126737]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 5
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259    13 29871  3566]]
• Child Action scores:[1.5257660e+00 3.4580564e-01 6.8093166e-02 3.5528562e-03 9.7891490e-04
 8.9131208e-04 8.5716654e-04 4.6968847e-04 3.4904285e-04 3.3046710e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[7.8179675e-01 1.7718950e-01 3.4890682e-02 1.8204701e-03 5.0159229e-04
 4.5670493e-04 4.3920887e-04 2.4066659e-04 1.7884823e-04 1.6933009e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941]]
• Child Action scores:[0.3162764  0.31029138 0.12958328 0.07383434 0.01431344 0.00350766
 0.00329514 0.00304751 0.00103686 0.00079499]
• Child averaged monte carlo:-0.057356916941129245
• Child probablities:[8.4906918e-01 1.0462585e-01 2.6043432e-02 1.4839102e-02 2.8766911e-03
 7.0496340e-04 6.6225190e-04 6.1248284e-04 2.0838680e-04 1.5977569e-04]
• Child visitation:[1 1 0 0 0 0 0 0 0 0]
• N=12.0,Q=-0.057356916941129245,M=-0.057356916941129245
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  3566  2533   353]]
• Child Action scores:[6.9672960e-01 3.3512864e-01 6.5990746e-02 4.2606827e-02 8.7924162e-03
 5.1687947e-03 2.5190692e-03 2.4994656e-03 2.3116278e-03 5.4905977e-04]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[8.2977855e-01 1.2142342e-01 2.3909692e-02 1.5437257e-02 3.1856580e-03
 1.8727517e-03 9.1270625e-04 9.0560352e-04 8.3754631e-04 1.9893469e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  1072   518 29941]]
• Child Action scores:[1.82086098e+00 9.95654091e-02 1.50321275e-02 1.18913921e-02
 2.16558343e-03 7.96673587e-04 6.70866400e-04 2.46797979e-04
 1.59344752e-04 1.06146486e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.3300229e-01 5.1016938e-02 7.7024051e-03 6.0931044e-03 1.1096367e-03
 4.0821254e-04 3.4374942e-04 1.2645836e-04 8.1647646e-05 5.4389056e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518 29941]]
• Child Action scores:[9.6205992e-01 2.6550677e-01 5.2281383e-02 3.2716852e-02 8.9442898e-03
 1.7612351e-03 1.7339296e-03 1.6036228e-03 5.7178934e-04 4.3840604e-04]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[8.4683055e-01 1.1108000e-01 2.1872949e-02 1.3687741e-02 3.7420203e-03
 7.3684746e-04 7.2542368e-04 6.7090726e-04 2.3921936e-04 1.8341583e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  3566  2533   353]]
• Child Action scores:[1.6058547e+00 2.4244779e-01 5.4097414e-02 3.0345902e-02 5.7916166e-03
 3.6813754e-03 2.4523246e-03 1.8082309e-03 1.6593259e-03 4.2283378e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[8.22833896e-01 1.24229334e-01 2.77193096e-02 1.55491251e-02
 2.96760234e-03 1.88632286e-03 1.25656184e-03 9.26530629e-04
 8.50232318e-04 2.16658431e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727   518 29941 29896]]
• Child Action scores:[8.5309762e-01 4.8777775e-04 1.3758405e-04 2.9754636e-05 9.6599169e-06
 9.6599169e-06 8.6590935e-06 4.8195111e-06 4.2532033e-06 1.1537124e-06]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[9.9974376e-01 1.7673108e-04 4.9849292e-05 1.0780665e-05 3.4999698e-06
 3.4999698e-06 3.1373527e-06 1.7461997e-06 1.5410158e-06 4.1801175e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 16645  2533   353   297]]
• Child Action scores:[1.9498538e+00 1.6966143e-03 2.2734645e-05 1.0993756e-05 1.0572591e-05
 6.7203482e-06 2.1647988e-06 2.1312367e-06 1.6991701e-06 1.5838006e-06]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.9909770e-01 8.6933875e-04 1.1649146e-05 5.6331592e-06 5.4173556e-06
 3.4434809e-06 1.1092347e-06 1.0920376e-06 8.7064831e-07 8.1153343e-07]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678  8014   518]]
• Child Action scores:[1.0781754e+00 5.1431667e-02 4.2638350e-02 1.7227449e-02 8.1376713e-03
 4.0918780e-03 3.9044975e-03 3.4999689e-03 1.9029001e-03 9.5683819e-04]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.4398886e-01 2.1517454e-02 1.7838595e-02 7.2074435e-03 3.4045556e-03
 1.7119179e-03 1.6335236e-03 1.4642811e-03 7.9611584e-04 4.0031216e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 6
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   259    13 29871  8014   518]]
• Child Action scores:[1.8287630e+00 4.8734881e-02 3.7366331e-02 1.3746304e-02 7.3578660e-03
 4.9785813e-03 3.9383820e-03 3.8773231e-03 1.7476467e-03 1.0114602e-03]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.3705124e-01 2.4971569e-02 1.9146366e-02 7.0435544e-03 3.7701428e-03
 2.5510062e-03 2.0180121e-03 1.9867257e-03 8.9548755e-04 5.1826838e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 7
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896]]
• Child Action scores:[3.9288878e-01 1.7389104e-03 4.3966543e-04 6.9565169e-05 4.4914654e-05
 3.0154270e-05 1.9930754e-05 1.4133021e-05 1.1994540e-05 4.4471526e-06]
• Child averaged monte carlo:-0.06778544729406183
• Child probablities:[9.9947244e-01 3.7992842e-04 9.6060947e-05 1.5199048e-05 9.8132441e-06
 6.5883000e-06 4.3546002e-06 3.0878739e-06 2.6206446e-06 9.7164263e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=10.0,Q=-0.06778544729406183,M=-0.06778544729406183
----
 Tree depth: 7
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29906]]
• Child Action scores:[1.9005691e+00 2.5072802e-02 2.0463826e-02 2.1234318e-03 1.9638536e-03
 4.2471310e-04 4.0526409e-04 2.0698865e-04 7.3804076e-05 3.6822221e-05]
• Child averaged monte carlo:0.05000000074505806
• Child probablities:[9.7384441e-01 1.2847208e-02 1.0485587e-02 1.0880384e-03 1.0062711e-03
 2.1762139e-04 2.0765579e-04 1.0606020e-04 3.7816928e-05 1.8867566e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.05000000074505806,M=0.05000000074505806
----
 Tree depth: 7
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  3566  2533   353   297]]
• Child Action scores:[1.1441212e+00 1.9218973e-03 1.8989396e-05 1.2949642e-05 1.1428019e-05
 7.4946779e-06 2.8446591e-06 2.7356816e-06 1.6463622e-06 1.4192531e-06]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.9916828e-01 8.0406369e-04 7.9445890e-06 5.4177385e-06 4.7811377e-06
 3.1355464e-06 1.1901193e-06 1.1445264e-06 6.8878813e-07 5.9377254e-07]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 7
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13 29871  8014   518 29941 29896]]
• Child Action scores:[1.9506530e+00 6.0519442e-04 2.4452063e-04 3.3092274e-05 1.8563082e-05
 1.6127884e-05 9.3341032e-06 7.9217516e-06 5.8869455e-06 2.5919867e-06]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.9950719e-01 3.1009933e-04 1.2529145e-04 1.6956355e-05 9.5116529e-06
 8.2638671e-06 4.7827593e-06 4.0590753e-06 3.0164485e-06 1.3281242e-06]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 7
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727   518 29941 29896 29901]]
• Child Action scores:[1.1437528e+00 1.9515607e-03 6.5369089e-04 4.3453751e-05 4.1789066e-05
 1.0161156e-05 6.9836537e-06 4.2357997e-06 2.9340529e-06 2.5892925e-06]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[9.9886012e-01 8.1647397e-04 2.7348450e-04 1.8179735e-05 1.7483280e-05
 4.2511201e-06 2.9217495e-06 1.7721304e-06 1.2275190e-06 1.0832816e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 7
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13   268    13  1678  8014   518 29941]]
• Child Action scores:[1.6956797e+00 1.8730043e-01 3.6881644e-02 2.1345457e-02 5.7450519e-03
 1.3225861e-03 1.2042283e-03 1.0794632e-03 3.9095565e-04 3.0447656e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[8.6885983e-01 9.5972031e-02 1.8898014e-02 1.0937331e-02 2.9437428e-03
 6.7768811e-04 6.1704201e-04 5.5311283e-04 2.0032420e-04 1.5601264e-04]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 8
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901]]
• Child Action scores:[4.2186257e-01 1.8309740e-02 1.8704577e-03 7.6763425e-04 3.3535456e-04
 1.0148144e-04 5.3060801e-05 2.8624156e-05 2.1438504e-05 1.9673074e-05]
• Child averaged monte carlo:-0.06456398963928223
• Child probablities:[9.9506408e-01 4.1956874e-03 4.2861642e-04 1.7590381e-04 7.6846685e-05
 2.3254528e-05 1.2158912e-05 6.5592412e-06 4.9126452e-06 4.5080960e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=9.0,Q=-0.06456398963928223,M=-0.06456398963928223
----
 Tree depth: 8
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  3566  2533   353   297 29896]]
• Child Action scores:[1.8841562e+00 4.2281955e-02 1.6301144e-02 5.2101584e-03 1.3380795e-03
 1.1093068e-03 4.6242794e-04 1.8108936e-04 1.6488375e-04 1.2253120e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.6543449e-01 2.1665113e-02 8.3526447e-03 2.6696655e-03 6.8562682e-04
 5.6840462e-04 2.3694632e-04 9.2789502e-05 8.4485808e-05 6.2784522e-05]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 8
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1727   518 29941 29896 29901 29900]]
• Child Action scores:[1.9515074e+00 3.9315259e-05 2.6189608e-05 1.0581558e-05 5.0375770e-06
 4.9208820e-06 4.1437979e-06 2.6339583e-06 2.2354111e-06 1.5484239e-06]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.9994504e-01 2.0144989e-05 1.3419456e-05 5.4219504e-06 2.5812353e-06
 2.5214413e-06 2.1232663e-06 1.3496302e-06 1.1454161e-06 7.9340657e-07]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 9
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900]]
• Child Action scores:[4.6168074e-01 7.3169253e-04 5.4686152e-05 2.2619175e-05 1.5067618e-05
 1.3090974e-05 1.2394285e-05 1.1643354e-05 9.0678532e-06 7.1174391e-06]
• Child averaged monte carlo:-0.0606266458829244
• Child probablities:[9.99779165e-01 1.76737332e-04 1.32092155e-05 5.46356887e-06
 3.63952131e-06 3.16207115e-06 2.99378871e-06 2.81240432e-06
 2.19030267e-06 1.71918828e-06]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=8.0,Q=-0.0606266458829244,M=-0.0606266458829244
----
 Tree depth: 10
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962]]
• Child Action scores:[0.15195957 0.21270825 0.22226137 0.07312888 0.15410416 0.14476746
 0.1392215  0.12190643 0.10185663 0.09643592]
• Child averaged monte carlo:-0.055704981088638306
• Child probablities:[0.23258644 0.13461071 0.0743391  0.06309077 0.03948119 0.03708915
 0.03566829 0.0312322  0.02609548 0.0247067 ]
• Child visitation:[1 1 1 1 0 0 0 0 0 0]
• N=7.0,Q=-0.055704981088638306,M=-0.055704981088638306
----
 Tree depth: 11
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   2533]]
• Child Action scores:[0.69830436 0.21015078 0.11974031 0.03623454 0.01014089 0.00998367
 0.00945234 0.00887966 0.00847303 0.00419445]
• Child averaged monte carlo:-0.07500000298023224
• Child probablities:[0.8314903  0.07614159 0.04338417 0.01312846 0.00367423 0.00361727
 0.00342476 0.00321727 0.00306994 0.00151973]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=3.0,Q=-0.07500000298023224,M=-0.07500000298023224
----
 Tree depth: 11
 Node: action=1
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   5694]]
• Child Action scores:[0.8848499  0.7221934  0.17976815 0.07150684 0.02016943 0.01711757
 0.01595533 0.01030154 0.00610346 0.00551401]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.45339373 0.37004918 0.09211252 0.03663983 0.01033474 0.00877098
 0.00817545 0.00527847 0.00312739 0.00282536]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 11
 Node: action=2
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   8677]]
• Child Action scores:[1.1131016  0.6442138  0.04215984 0.03929729 0.02421036 0.01960615
 0.01275796 0.00798373 0.00785995 0.00715657]
• Child averaged monte carlo:0.07718008011579514
• Child probablities:[0.57034904 0.3300927  0.02160254 0.02013578 0.0124053  0.01004612
 0.00653713 0.00409083 0.00402741 0.003667  ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=0.07718008011579514,M=0.07718008011579514
----
 Tree depth: 11
 Node: action=3
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
    269]]
• Child Action scores:[0.7805135  0.49612457 0.38039193 0.09845895 0.09035101 0.03885948
 0.01607298 0.00833855 0.00490198 0.00416026]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[0.39993218 0.25421235 0.19491138 0.05044999 0.04629551 0.01991145
 0.00823573 0.00427264 0.00251176 0.0021317 ]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 12
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   2533 29918]]
• Child Action scores:[0.3581741  0.3796372  0.29566175 0.16327992 0.0923101  0.05218739
 0.04902552 0.03758917 0.03317233 0.02750082]
• Child averaged monte carlo:-0.06666666766007741
• Child probablities:[0.3415354  0.15882872 0.12369592 0.06831138 0.03861975 0.02183363
 0.02051079 0.01572617 0.0138783  0.01150551]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=2.0,Q=-0.06666666766007741,M=-0.06666666766007741
----
 Tree depth: 13
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   2533 29918 22376]]
• Child Action scores:[1.8645122e+00 3.8096778e-02 1.1438726e-02 9.1912756e-03 9.0487786e-03
 8.6344052e-03 5.5747908e-03 1.7002150e-03 1.1685395e-03 5.4768356e-04]
• Child averaged monte carlo:-0.05000000074505806
• Child probablities:[9.5536900e-01 1.9520644e-02 5.8611603e-03 4.7095749e-03 4.6365601e-03
 4.4242367e-03 2.8565016e-03 8.7118376e-04 5.9875520e-04 2.8063098e-04]
• Child visitation:[1 0 0 0 0 0 0 0 0 0]
• N=1.0,Q=-0.05000000074505806,M=-0.05000000074505806
----
 Tree depth: 14
 Node: action=0
• state:[[    1   849  4002   647   263 29871 29941 29906 29899  2966   594   672
  29889    13   458  8439   526  1023 29871 29941 29906  2586 10970   313
    262 29896   322   297 29906 29897   322   263  2323  8677 29899   262
   1881  2586 29892  4670 29889    13   458  1576 14391   526   263 29871
  29941 29906  2586   995 29892   518 29941 29896 29901 29900 29962  2533
  29892   322   263  2323  8677 29899   449  1962  2586 29892 11196 29889
     13   458  1576  3883   881  3667   675   278 10970   313   262 29896
    322   297 29906 29897   322   278  4670  2586   304  4017   278  1962
   2533   322 11196  1819 29889    13  5453   594   672 29918 29941 29906
  29898  4905   518 29941 29896 29901 29900 29962  2533 29892    13   462
    418  1962 11196 29892    13   462   418  1881   518 29941 29896 29901
  29900 29962   297 29896 29892   297 29906 29892    13   462   418  1881
   4670   416    13    13  1678  8014   518 29941 29896 29901 29900 29962
   2533 29918 22376 29936]]
• Child Action scores:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child averaged monte carlo:0.0
• Child probablities:[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
• Child visitation:[0 0 0 0 0 0 0 0 0 0]
• N=0.0,Q=0.0,M=0.0
END ROBUST/MAX VALUES:
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  18.962452  seconds
Running getPromptScore: 
//Design a 32-bit adder.
//There are two 32 bit inputs (in1 and in2) and a single carry-in input bit, cin.
//The outputs are a 32 bit value, [31:0] sum, and a single carry-out output bit, cout.
//The module should utilize the inputs (in1 and in2) and the cin bit to obtain the output sum and cout values.
module adder_32(output [31:0] sum,
                      output cout,
                      input [31:0] in1, in2,
                      input cin);

    wire [31:0] sum_wire;
    wire cout_wire;

    assign sum_wire = in1 + in2 + cin;
    assign cout_wire = (in1[31] & in2[31]) | (in1[31] & cin) | (in2[31] & cin);

    assign sum = sum_wire;
    assign cout = cout_wire;

endmodule
Output Verilog module compiles successfully.
Verilog testbench simulation ran successfully.
Some testbench tests failed.
Simulation output:  b'Test 1 passed\nTest 2 passed\nTest 3 failed\n'

LLM generates return in:  18.946999  seconds
Running getPromptScore: 
MCTS Total Time:  4855.916379
